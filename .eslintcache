[{"/var/www/html/Mazars_Pannel/src/index.js":"1","/var/www/html/Mazars_Pannel/src/reportWebVitals.js":"2","/var/www/html/Mazars_Pannel/src/App.js":"3","/var/www/html/Mazars_Pannel/src/Service/PrivateRouteAdmin.js":"4","/var/www/html/Mazars_Pannel/src/Service/PrivateRouteTP.js":"5","/var/www/html/Mazars_Pannel/src/Service/PrivateRouteTL.js":"6","/var/www/html/Mazars_Pannel/src/views/SignUpForm/SignUp.js":"7","/var/www/html/Mazars_Pannel/src/views/VrerifyOtpLogin/VerifyOtpLogin.js":"8","/var/www/html/Mazars_Pannel/src/views/VerifyOtp/VerifyOtp.js":"9","/var/www/html/Mazars_Pannel/src/views/SignInForm/SignIn.js":"10","/var/www/html/Mazars_Pannel/src/views/RegisterYourSelf/RegisterYourSelf.js":"11","/var/www/html/Mazars_Pannel/src/views/Start/Start.js":"12","/var/www/html/Mazars_Pannel/src/views/Dashboard/Dashboard.js":"13","/var/www/html/Mazars_Pannel/src/views/MyAssingment/MyAssingment.js":"14","/var/www/html/Mazars_Pannel/src/views/AddFressAssignment/AddFreshAssingment.js":"15","/var/www/html/Mazars_Pannel/src/views/QuestionnairePage/QuestionnairePage.js":"16","/var/www/html/Mazars_Pannel/src/views/Feedback/Feedback.js":"17","/var/www/html/Mazars_Pannel/src/views/SelectCategoryPage/SelectCategoryPage.js":"18","/var/www/html/Mazars_Pannel/src/views/Quesionnaire/Questionnaire.js":"19","/var/www/html/Mazars_Pannel/src/views/ProposalTab/ProposalTab.js":"20","/var/www/html/Mazars_Pannel/src/views/AssignmentTab/AssignmentTab.js":"21","/var/www/html/Mazars_Pannel/src/views/QueriesTab/QueriesTab.js":"22","/var/www/html/Mazars_Pannel/src/components/Layout/Layout.js":"23","/var/www/html/Mazars_Pannel/src/pages/Admin/Start/Start.js":"24","/var/www/html/Mazars_Pannel/src/pages/Admin/Dashboard/Dashboard.js":"25","/var/www/html/Mazars_Pannel/src/pages/Admin/Login/Login.js":"26","/var/www/html/Mazars_Pannel/src/pages/Admin/AddNewTeamLeader/AddNewTeamLeader.js":"27","/var/www/html/Mazars_Pannel/src/pages/Admin/AddNewTaxProf/AddNewTaxProf.js":"28","/var/www/html/Mazars_Pannel/src/pages/Admin/QueriesRecevied/QueriesRecevied.js":"29","/var/www/html/Mazars_Pannel/src/pages/Admin/Proposal/Proposal.js":"30","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTP/EditTP.js":"31","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/EditTL.js":"32","/var/www/html/Mazars_Pannel/src/pages/Admin/PaymentStatusTab/PaymentStatusTab.js":"33","/var/www/html/Mazars_Pannel/src/pages/Admin/QueryAssingment/QueryAssingment.js":"34","/var/www/html/Mazars_Pannel/src/pages/Admin/QueriesTab/QueriesTab.js":"35","/var/www/html/Mazars_Pannel/src/pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab.js":"36","/var/www/html/Mazars_Pannel/src/pages/Admin/AssignmentTab/AssignmentTab.js":"37","/var/www/html/Mazars_Pannel/src/pages/TL/Start/Start.js":"38","/var/www/html/Mazars_Pannel/src/pages/Admin/TeamLeaderTab/TeamLeaderTab.js":"39","/var/www/html/Mazars_Pannel/src/pages/Admin/FeedbackTab/FeedbackTab.js":"40","/var/www/html/Mazars_Pannel/src/pages/TL/Dashboard/Dashboard.js":"41","/var/www/html/Mazars_Pannel/src/pages/TL/Login/Login.js":"42","/var/www/html/Mazars_Pannel/src/pages/TL/AddTeamProf/AddTeamProf.js":"43","/var/www/html/Mazars_Pannel/src/pages/TL/AddAssingmentStages/AddAssingmentStages.js":"44","/var/www/html/Mazars_Pannel/src/pages/TL/QueryAssingment/QueryAssingment.js":"45","/var/www/html/Mazars_Pannel/src/pages/TL/AddNew/AddNew.js":"46","/var/www/html/Mazars_Pannel/src/pages/TL/Proposal/Proposal.js":"47","/var/www/html/Mazars_Pannel/src/pages/TL/EditTP/EditTP.js":"48","/var/www/html/Mazars_Pannel/src/pages/TP/Start/Start.js":"49","/var/www/html/Mazars_Pannel/src/pages/TL/QueriesRecevied/QueriesRecevied.js":"50","/var/www/html/Mazars_Pannel/src/pages/TP/Proposal/Proposal.js":"51","/var/www/html/Mazars_Pannel/src/pages/TP/Dashboard/Dashboard.js":"52","/var/www/html/Mazars_Pannel/src/pages/TP/QueriesRecevied/QueriesRecevied.js":"53","/var/www/html/Mazars_Pannel/src/pages/TP/Login/Login.js":"54","/var/www/html/Mazars_Pannel/src/components/Footer/Footer.js":"55","/var/www/html/Mazars_Pannel/src/components/Header/Header.js":"56","/var/www/html/Mazars_Pannel/src/config/config.js":"57","/var/www/html/Mazars_Pannel/src/components/Admin-Header/Admin-Header.js":"58","/var/www/html/Mazars_Pannel/src/components/Admin-Sidebar/Admin-Sidebar.js":"59","/var/www/html/Mazars_Pannel/src/components/CategorySelect/CategorySelect.js":"60","/var/www/html/Mazars_Pannel/src/pages/TP/Proposal/ProposalComponent.js":"61","/var/www/html/Mazars_Pannel/src/pages/TL/Proposal/ProposalComponent.js":"62","/var/www/html/Mazars_Pannel/src/pages/TL/CompleteData/CompleteData.js":"63","/var/www/html/Mazars_Pannel/src/pages/TL/InCompleteData/InCompleteData.js":"64","/var/www/html/Mazars_Pannel/src/pages/TL/PendingForAcceptence/PendingForAcceptence.js":"65","/var/www/html/Mazars_Pannel/src/components/PendingForNonPayment/PendingForNonPayment.js":"66","/var/www/html/Mazars_Pannel/src/components/AllQueriesData/AllQueriesData.js":"67","/var/www/html/Mazars_Pannel/src/components/PendingForProposals/PendingForProposals.js":"68","/var/www/html/Mazars_Pannel/src/components/PendingForAllocation/PendingForAllocation.js":"69","/var/www/html/Mazars_Pannel/src/pages/Admin/DeclinedProposal/DeclinedPropoal.js":"70","/var/www/html/Mazars_Pannel/src/pages/Admin/AcceptedProposal/AcceptedProposal.js":"71","/var/www/html/Mazars_Pannel/src/pages/Admin/AllProposalComponent/AllProposalComponent.js":"72","/var/www/html/Mazars_Pannel/src/components/PendingForPayment/PendingForPayment.js":"73","/var/www/html/Mazars_Pannel/src/components/PaidComponent/PaidComponent.js":"74","/var/www/html/Mazars_Pannel/src/pages/TL/FeedbackTab/FeedbackTab.js":"75","/var/www/html/Mazars_Pannel/src/components/PendingForAcceptence/PendingForAcceptence.js":"76","/var/www/html/Mazars_Pannel/src/pages/TL/PaymentStatus/PaymentStatus.js":"77","/var/www/html/Mazars_Pannel/src/views/ProposalTab/PaymentModal.js":"78","/var/www/html/Mazars_Pannel/src/views/ProposalTab/AcceptModal.js":"79","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/AssignmentTab.js":"80","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/DraftReportUpload.js":"81","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/FinalReportUpload.js":"82","/var/www/html/Mazars_Pannel/src/pages/Admin/PendingForPaymentProposal/PendingForPaymentProposal.js":"83","/var/www/html/Mazars_Pannel/src/pages/TL/SendProposal/SendProposal.js":"84","/var/www/html/Mazars_Pannel/src/views/ProposalReceived/ProposalReceived.js":"85","/var/www/html/Mazars_Pannel/src/pages/TL/QueriesTab/QueriesTab.js":"86","/var/www/html/Mazars_Pannel/src/pages/TP/SendProposal/SendProposal.js":"87","/var/www/html/Mazars_Pannel/src/pages/TL/EditProposal/EditProposal.js":"88","/var/www/html/Mazars_Pannel/src/pages/Admin/PendingReceived/PendingRecevived.js":"89","/var/www/html/Mazars_Pannel/src/pages/TL/PendingReceived/PendingReceived.js":"90","/var/www/html/Mazars_Pannel/src/components/Search-Filter/SearchFilter.js":"91","/var/www/html/Mazars_Pannel/src/components/Admin-Header/NavWrapper.js":"92","/var/www/html/Mazars_Pannel/src/components/Search-Filter/CustomerFilter.js":"93","/var/www/html/Mazars_Pannel/src/views/ForgetPassword/ForgetPassword.js":"94","/var/www/html/Mazars_Pannel/src/views/NewPassword/NewPassword.js":"95","/var/www/html/Mazars_Pannel/src/views/ChangePassword/ChangePassword.js":"96","/var/www/html/Mazars_Pannel/src/pages/Admin/TeamLeaderTab/Header/index.js":"97","/var/www/html/Mazars_Pannel/src/components/FontawsomeIcons/index.js":"98","/var/www/html/Mazars_Pannel/src/components/DataTable/Header/index.js":"99"},{"size":478,"mtime":1614851778950,"results":"100","hashOfConfig":"101"},{"size":362,"mtime":1614851778954,"results":"102","hashOfConfig":"101"},{"size":10841,"mtime":1617185458576,"results":"103","hashOfConfig":"101"},{"size":478,"mtime":1614851778946,"results":"104","hashOfConfig":"101"},{"size":477,"mtime":1614851778946,"results":"105","hashOfConfig":"101"},{"size":474,"mtime":1614851778946,"results":"106","hashOfConfig":"101"},{"size":8362,"mtime":1616562607848,"results":"107","hashOfConfig":"101"},{"size":2878,"mtime":1614851778974,"results":"108","hashOfConfig":"101"},{"size":2941,"mtime":1614851778974,"results":"109","hashOfConfig":"101"},{"size":4171,"mtime":1617092383473,"results":"110","hashOfConfig":"101"},{"size":565,"mtime":1614851778974,"results":"111","hashOfConfig":"101"},{"size":428,"mtime":1614851778974,"results":"112","hashOfConfig":"101"},{"size":6233,"mtime":1616478359902,"results":"113","hashOfConfig":"101"},{"size":19167,"mtime":1617194505465,"results":"114","hashOfConfig":"101"},{"size":10207,"mtime":1617190271348,"results":"115","hashOfConfig":"101"},{"size":15324,"mtime":1617194495725,"results":"116","hashOfConfig":"101"},{"size":4731,"mtime":1615182948175,"results":"117","hashOfConfig":"101"},{"size":449,"mtime":1614851778974,"results":"118","hashOfConfig":"101"},{"size":9452,"mtime":1614851778974,"results":"119","hashOfConfig":"101"},{"size":9518,"mtime":1617185175541,"results":"120","hashOfConfig":"101"},{"size":4939,"mtime":1616595801273,"results":"121","hashOfConfig":"101"},{"size":6125,"mtime":1617189081710,"results":"122","hashOfConfig":"101"},{"size":964,"mtime":1614851778950,"results":"123","hashOfConfig":"101"},{"size":441,"mtime":1614851778954,"results":"124","hashOfConfig":"101"},{"size":12434,"mtime":1617180122385,"results":"125","hashOfConfig":"101"},{"size":3140,"mtime":1614851778950,"results":"126","hashOfConfig":"101"},{"size":6744,"mtime":1616502315291,"results":"127","hashOfConfig":"101"},{"size":5257,"mtime":1616501710410,"results":"128","hashOfConfig":"101"},{"size":7157,"mtime":1615947536613,"results":"129","hashOfConfig":"101"},{"size":5152,"mtime":1616593592495,"results":"130","hashOfConfig":"101"},{"size":5585,"mtime":1616501912273,"results":"131","hashOfConfig":"101"},{"size":7216,"mtime":1616736998637,"results":"132","hashOfConfig":"101"},{"size":1771,"mtime":1616490776680,"results":"133","hashOfConfig":"101"},{"size":8459,"mtime":1616059854554,"results":"134","hashOfConfig":"101"},{"size":5525,"mtime":1617174960790,"results":"135","hashOfConfig":"101"},{"size":3304,"mtime":1616503781512,"results":"136","hashOfConfig":"101"},{"size":14303,"mtime":1617097213605,"results":"137","hashOfConfig":"101"},{"size":441,"mtime":1614851778954,"results":"138","hashOfConfig":"101"},{"size":4693,"mtime":1617177987323,"results":"139","hashOfConfig":"101"},{"size":2022,"mtime":1615453897767,"results":"140","hashOfConfig":"101"},{"size":5279,"mtime":1616567789904,"results":"141","hashOfConfig":"101"},{"size":3172,"mtime":1614851778954,"results":"142","hashOfConfig":"101"},{"size":2319,"mtime":1616664293206,"results":"143","hashOfConfig":"101"},{"size":13179,"mtime":1617167330553,"results":"144","hashOfConfig":"101"},{"size":8290,"mtime":1616059746094,"results":"145","hashOfConfig":"101"},{"size":3551,"mtime":1615879752967,"results":"146","hashOfConfig":"101"},{"size":10358,"mtime":1616741197952,"results":"147","hashOfConfig":"101"},{"size":3762,"mtime":1615970498309,"results":"148","hashOfConfig":"101"},{"size":467,"mtime":1614851778954,"results":"149","hashOfConfig":"101"},{"size":11923,"mtime":1615948633715,"results":"150","hashOfConfig":"101"},{"size":2666,"mtime":1615789547900,"results":"151","hashOfConfig":"101"},{"size":8798,"mtime":1615788771681,"results":"152","hashOfConfig":"101"},{"size":12059,"mtime":1615897521684,"results":"153","hashOfConfig":"101"},{"size":3179,"mtime":1614851778954,"results":"154","hashOfConfig":"101"},{"size":277,"mtime":1614851778950,"results":"155","hashOfConfig":"101"},{"size":3067,"mtime":1616648470093,"results":"156","hashOfConfig":"101"},{"size":127,"mtime":1614851778950,"results":"157","hashOfConfig":"101"},{"size":8931,"mtime":1617087617212,"results":"158","hashOfConfig":"101"},{"size":9169,"mtime":1616585526097,"results":"159","hashOfConfig":"101"},{"size":4456,"mtime":1616228161004,"results":"160","hashOfConfig":"101"},{"size":6623,"mtime":1615956915389,"results":"161","hashOfConfig":"101"},{"size":8667,"mtime":1616157835811,"results":"162","hashOfConfig":"101"},{"size":9635,"mtime":1616568187538,"results":"163","hashOfConfig":"101"},{"size":9257,"mtime":1616567705156,"results":"164","hashOfConfig":"101"},{"size":10926,"mtime":1616566888441,"results":"165","hashOfConfig":"101"},{"size":1762,"mtime":1615185928333,"results":"166","hashOfConfig":"101"},{"size":7821,"mtime":1616665829479,"results":"167","hashOfConfig":"101"},{"size":10004,"mtime":1616484960615,"results":"168","hashOfConfig":"101"},{"size":12344,"mtime":1616485201898,"results":"169","hashOfConfig":"101"},{"size":8012,"mtime":1617090962775,"results":"170","hashOfConfig":"101"},{"size":8019,"mtime":1617090955823,"results":"171","hashOfConfig":"101"},{"size":8056,"mtime":1617090925943,"results":"172","hashOfConfig":"101"},{"size":7907,"mtime":1616655706317,"results":"173","hashOfConfig":"101"},{"size":9845,"mtime":1617091609793,"results":"174","hashOfConfig":"101"},{"size":2046,"mtime":1616066569732,"results":"175","hashOfConfig":"101"},{"size":8054,"mtime":1617091109308,"results":"176","hashOfConfig":"101"},{"size":14341,"mtime":1616755207411,"results":"177","hashOfConfig":"101"},{"size":2064,"mtime":1616245748595,"results":"178","hashOfConfig":"101"},{"size":2162,"mtime":1616481101031,"results":"179","hashOfConfig":"101"},{"size":16083,"mtime":1616756179933,"results":"180","hashOfConfig":"101"},{"size":3246,"mtime":1615957251070,"results":"181","hashOfConfig":"101"},{"size":1912,"mtime":1616047169459,"results":"182","hashOfConfig":"101"},{"size":1708,"mtime":1615525987064,"results":"183","hashOfConfig":"101"},{"size":508,"mtime":1615810456143,"results":"184","hashOfConfig":"101"},{"size":5034,"mtime":1616230814405,"results":"185","hashOfConfig":"101"},{"size":3732,"mtime":1616131354248,"results":"186","hashOfConfig":"101"},{"size":473,"mtime":1615789247602,"results":"187","hashOfConfig":"101"},{"size":7565,"mtime":1616057673758,"results":"188","hashOfConfig":"101"},{"size":7518,"mtime":1616053851120,"results":"189","hashOfConfig":"101"},{"size":9598,"mtime":1616133805768,"results":"190","hashOfConfig":"101"},{"size":5607,"mtime":1616317663631,"results":"191","hashOfConfig":"101"},{"size":3272,"mtime":1617087920959,"results":"192","hashOfConfig":"101"},{"size":8276,"mtime":1616666897421,"results":"193","hashOfConfig":"101"},{"size":2952,"mtime":1617094074938,"results":"194","hashOfConfig":"101"},{"size":4907,"mtime":1617093775743,"results":"195","hashOfConfig":"101"},{"size":3905,"mtime":1617094007148,"results":"196","hashOfConfig":"101"},{"size":1402,"mtime":1617189136106,"results":"197","hashOfConfig":"101"},{"size":580,"mtime":1617173766607,"results":"198","hashOfConfig":"101"},{"size":1402,"mtime":1617182966648,"results":"199","hashOfConfig":"101"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},"1lex05f",{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"202"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"202"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"202"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"202"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"202"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"202"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"202"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"202"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"202"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"202"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"202"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"202"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"202"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"202"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"202"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"202"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"202"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"202"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"202"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"202"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"202"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"202"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"202"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"202"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"202"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"202"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"202"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"202"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"202"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"202"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"202"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"202"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"202"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"202"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"202"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"202"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"202"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"202"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"202"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"202"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"373","messages":"374","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"202"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"202"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"202"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"202"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"202"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"202"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"202"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"202"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"202"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"202"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"202"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"202"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"202"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"202"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"202"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"202"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"202"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"202"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"202"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"202"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"202"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"202"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"202"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"202"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"202"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"202"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"202"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"202"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/html/Mazars_Pannel/src/index.js",[],["467","468"],"/var/www/html/Mazars_Pannel/src/reportWebVitals.js",[],"/var/www/html/Mazars_Pannel/src/App.js",["469","470","471","472","473","474"],"import React, { useEffect } from \"react\";\nimport {HashRouter  as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { positions, Provider, transitions } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport \"./components/FontawsomeIcons/index\";\n\n\n//user routes\nimport Signin from './views/SignInForm/SignIn'\nimport SignUp from './views/SignUpForm/SignUp'\nimport VerifyOtp from './views/VerifyOtp/VerifyOtp'\nimport VerifyOtpLogin from './views/VrerifyOtpLogin/VerifyOtpLogin'\nimport RegisterYourSelf from './views/RegisterYourSelf/RegisterYourSelf'\nimport Start from './views/Start/Start'\nimport Dashboard from './views/Dashboard/Dashboard'\nimport MyAssingment from './views/MyAssingment/MyAssingment'\nimport AddFreshAssingment from './views/AddFressAssignment/AddFreshAssingment'\nimport QuestionnairePage from './views/QuestionnairePage/QuestionnairePage'\nimport Questionnaire from './views/Quesionnaire/Questionnaire'\nimport Feedback from './views/Feedback/Feedback'\nimport Layout from './components/Layout/Layout'\nimport SelectCategoryPage from './views/SelectCategoryPage/SelectCategoryPage'\nimport QueriesTab from './views/QueriesTab/QueriesTab'\nimport ProposalTab from './views/ProposalTab/ProposalTab'\nimport AssignmentTab from './views/AssignmentTab/AssignmentTab'\nimport ProposalReceived from './views/ProposalReceived/ProposalReceived'\nimport ForgetPassword from './views/ForgetPassword/ForgetPassword'\nimport NewPassword from './views/NewPassword/NewPassword'\nimport ChangePassword from './views/ChangePassword/ChangePassword'\n\n\n\n\n\n\n//admin routes\nimport AdminStart from './pages/Admin/Start/Start'\nimport AdminLogin from './pages/Admin/Login/Login'\nimport AdminDashboard from './pages/Admin/Dashboard/Dashboard'\nimport AdminNewTeamLeader from './pages/Admin/AddNewTeamLeader/AddNewTeamLeader'\nimport AdminNewTaxProf from './pages/Admin/AddNewTaxProf/AddNewTaxProf'\nimport AdminProposal from './pages/Admin/Proposal/Proposal'\nimport AdminQueriesRecevied from './pages/Admin/QueriesRecevied/QueriesRecevied'\nimport AdminQueryAssingment from './pages/Admin/QueryAssingment/QueryAssingment'\nimport AdminEditTL from './pages/Admin/EditTL/EditTL'\nimport AdminEditTP from './pages/Admin/EditTP/EditTP'\nimport AdminQueriesTab from './pages/Admin/QueriesTab/QueriesTab'\nimport AdminAssignmentTab from './pages/Admin/AssignmentTab/AssignmentTab'\nimport AdminPaymentStatusTab from './pages/Admin/PaymentStatusTab/PaymentStatusTab'\nimport AdminTeamLeaderTab from './pages/Admin/TeamLeaderTab/TeamLeaderTab'\nimport AdminTaxProfessionalsTab from './pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab'\nimport AdminFeedbackTab from './pages/Admin/FeedbackTab/FeedbackTab'\nimport AdminPendingRecevived from './pages/Admin/PendingReceived/PendingRecevived'\n\n\n\n\n\n//TL routes\nimport TlStart from './pages/TL/Start/Start'\nimport TlLogin from './pages/TL/Login/Login'\nimport TlDashboard from './pages/TL/Dashboard/Dashboard'\nimport TlAddAssingmentStages from './pages/TL/AddAssingmentStages/AddAssingmentStages'\nimport TlAddNew from './pages/TL/AddNew/AddNew'\nimport TlAddTeamProf from './pages/TL/AddTeamProf/AddTeamProf'\nimport TlProposal from './pages/TL/Proposal/Proposal'\nimport TlQueriesRecevied from './pages/TL/QueriesRecevied/QueriesRecevied'\nimport TlQueryAssingment from './pages/TL/QueryAssingment/QueryAssingment'\nimport TlEditTP from './pages/TL/EditTP/EditTP'\nimport TlFeedbackTab from './pages/TL/FeedbackTab/FeedbackTab'\nimport TlPaymentStatus from './pages/TL/PaymentStatus/PaymentStatus'\nimport TlAssignmentTab from './pages/TL/AssignmentTab/AssignmentTab'\nimport TlSendProposal from './pages/TL/SendProposal/SendProposal'\nimport TlQueriesTab from './pages/TL/QueriesTab/QueriesTab'\nimport TlEditProposal from './pages/TL/EditProposal/EditProposal'\nimport TlPendingReceived from './pages/TL//PendingReceived/PendingReceived'\n\n\n\n\n\n// TP routes\nimport TpStart from './pages/TP/Start/Start'\nimport TpLogin from './pages/TP/Login/Login'\nimport TpDashboard from './pages/TP/Dashboard/Dashboard'\nimport TpProposal from './pages/TP/Proposal/Proposal'\nimport TpQueriesRecevied from './pages/TP/QueriesRecevied/QueriesRecevied'\nimport TpSendProposal from './pages/TP/SendProposal/SendProposal'\n\n\n\n//private routes\n// import PrivateRouteUser from './Service/PrivateRouteUser'\nimport PrivateRouteAdmin from './Service/PrivateRouteAdmin'\nimport PrivateRouteTL from './Service/PrivateRouteTL'\nimport PrivateRouteTP from './Service/PrivateRouteTP'\n\n\n\n\nconst options = {\n  timeout: 4000,\n  position: positions.TOP_CENTER,\n  offset: \"80px\",\n  transition: transitions.SCALE,\n};\n\n\nfunction App() {\n  return (\n    <div>\n        <Provider template={AlertTemplate} {...options}>\n        <Router>\n        <Switch>\n\n        <Route exact path=\"/\" component={Start} />\n        <Route exact path=\"/customer/signin\" component={Signin} />\n        <Route exact path=\"/customer/signup\" component={SignUp} />\n        <Route exact path=\"/customer/register-yourself\" component={RegisterYourSelf} />\n        <Route exact path=\"/customer/verify-otp\" component={VerifyOtp} />\n        <Route exact path=\"/customer/otp\" component={VerifyOtpLogin} />\n        <Route exact path=\"/customer/questionnaire-page\" component={QuestionnairePage} />\n        <Route exact path=\"/customer/questionnaire\" component={Questionnaire} />\n        <Route exact path=\"/customer/feedback\" component={Feedback} />\n        <Route exact path=\"/customer/dashboard\" component={Dashboard} />\n        <Route exact path=\"/customer/my-assingment/:id\" component={MyAssingment} />\n        <Route exact path=\"/customer/addfresh\" component={AddFreshAssingment} />\n        <Route exact path=\"/customer/select-category\" component={SelectCategoryPage} />\n        <Route exact path=\"/customer/dashboard\" component={Layout} />\n        <Route exact path=\"/customer/queries\" component={QueriesTab} />\n        <Route exact path=\"/customer/proposal\" component={ProposalTab} />\n        <Route exact path=\"/customer/assignment\" component={AssignmentTab} />\n        <Route exact path=\"/customer/proposal-received/:id\" component={ProposalReceived} />\n        <Route exact path=\"/customer/forget-password\" component={ForgetPassword} />\n        <Route exact path=\"/customer/new-password\" component={NewPassword} />\n        <Route exact path=\"/customer/change-password\" component={ChangePassword} />\n\n\n\n\n\n\n        <Route exact path=\"/admin/start\" component={AdminStart} />\n        <Route exact path=\"/admin/login\" component={AdminLogin} />\n        <Route exact path=\"/admin/dashboard\" component={AdminDashboard} />\n        <Route exact path=\"/admin/addnewtl\" component={AdminNewTeamLeader} />\n        <Route exact path=\"/admin/addnewtp\" component={AdminNewTaxProf} />\n        <Route exact path=\"/admin/teamleaders\" component={AdminTeamLeaderTab} />\n        <Route exact path=\"/admin/taxprofessionals\" component={AdminTaxProfessionalsTab} />\n        <Route exact path=\"/admin/proposal\" component={AdminProposal} />\n        <Route exact path=\"/admin/queries/:id\" component={AdminQueriesRecevied} />\n        <Route exact path=\"/admin/queryassing/:id\" component={AdminQueryAssingment} />\n        <Route exact path=\"/admin/queriestab\" component={AdminQueriesTab} />\n        <Route exact path=\"/admin/feedback\" component={AdminFeedbackTab} />\n        <Route exact path=\"/admin/paymentstatus\" component={AdminPaymentStatusTab} />\n        <Route exact path=\"/admin/assignment\" component={AdminAssignmentTab} />\n        <Route exact path=\"/admin/edittl/:id\" component={AdminEditTL} />\n        <Route exact path=\"/admin/edittp/:id\" component={AdminEditTP} />\n        <Route exact path=\"/admin/pending/:id\" component={AdminPendingRecevived} />\n\n\n\n        <Route exact path=\"/teamleader/start\" component={TlStart} />\n        <Route exact path=\"/teamleader/login\" component={TlLogin} />\n        <Route exact path=\"/teamleader/dashboard\" component={TlDashboard} />\n        <Route exact path=\"/teamleader/addnew\" component={TlAddNew} />\n        <Route exact path=\"/teamleader/addteamprof\" component={TlAddTeamProf} />\n        <Route exact path=\"/teamleader/proposal\" component={TlProposal} />\n        <Route exact path=\"/teamleader/addassingment/:id\" component={TlAddAssingmentStages} />\n        <Route exact path=\"/teamleader/queries/:id\" component={TlQueriesRecevied} />\n        <Route exact path=\"/teamleader/queryassing/:id\" component={TlQueryAssingment} />\n        <Route exact path=\"/teamleader/edittp/:id\" component={TlEditTP} />\n        <Route exact path=\"/teamleader/feedback\" component={TlFeedbackTab} />\n        <Route exact path=\"/teamleader/paymentstatus\" component={TlPaymentStatus} />\n        <Route exact path=\"/teamleader/assignment\" component={TlAssignmentTab} />\n        <Route exact path=\"/teamleader/sendproposal/:id\" component={TlSendProposal} />\n        <Route exact path=\"/teamleader/queriestab\" component={TlQueriesTab} />\n        <Route exact path=\"/teamleader/edit-proposal/:id\" component={TlEditProposal} />\n        <Route exact path=\"/teamleader/pending/:id\" component={TlPendingReceived} />\n\n\n\n        <Route exact path=\"/taxprofessional/start\" component={TpStart} />\n        <Route exact path=\"/taxprofessional/login\" component={TpLogin} />\n        <Route exact path=\"/taxprofessional/dashboard\" component={TpDashboard} />\n        <Route exact path=\"/taxprofessional/proposal\" component={TpProposal} />\n        <Route exact path=\"/taxprofessional/queries/:id\" component={TpQueriesRecevied} />\n        <Route exact path=\"/taxprofessional/sendproposal/:id\" component={TpSendProposal} />\n\n      \n    \n        </Switch>\n      </Router>\n      </Provider>\n    </div>\n  );\n}\n\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n          {/* <Route exact path=\"/\" component={Start} />\n          <Route exact path=\"/abc\" component={Layout} />\n\n          <Route exact path=\"/signin\" component={Signin} />\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route exact path=\"/register-yourself\" component={RegisterYourSelf} />\n          <Route exact path=\"/verify-otp\" component={VerifyOtp} />\n          <Route exact path=\"/otp\" component={VerifyOtpLogin} />\n          <Route exact path=\"/questionnaire-page\" component={QuestionnairePage} />\n             \n          <Route exact path=\"/questionnaire\" component={Questionnaire} />    \n          <Route exact path=\"/feedback\" component={Feedback} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/my-assingment/:id\" component={MyAssingment} />\n          <Route exact path=\"/addfresh\" component={AddFreshAssingment} /> */}\n          {/*  */}\n\n  // <Switch>\n      //   <Route exact path=\"/\" component={Login} />\n      //   <PrivateRoute\n      //     path=\"/admin\"\n      //     render={(props) => <AdminLayout {...props} />}\n      //   />\n\n        \n      // </Switch>","/var/www/html/Mazars_Pannel/src/Service/PrivateRouteAdmin.js",[],"/var/www/html/Mazars_Pannel/src/Service/PrivateRouteTP.js",[],"/var/www/html/Mazars_Pannel/src/Service/PrivateRouteTL.js",[],"/var/www/html/Mazars_Pannel/src/views/SignUpForm/SignUp.js",["475","476","477","478","479"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required name\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_profession: yup.string().required(\"required proffesion\"),\n//   p_state: yup.string().required(\"required state\"),\n//   p_city: yup.string().required(\"required city\"),\n//   p_phone: yup\n//     .string()\n//     .required(\"required phone no\")\n//     .matches(/^[0-9]+$/, \"Must be only digits\")\n//     .min(10, \"Must be exactly 10 digits\")\n//     .max(20, \"max 20 digits\"),\n//   p_password: yup\n//     .string()\n//     .required(\"required password\")\n//     .min(5, \"at least 5 digits\")\n//     .max(20, \"max 20 digits\"),\n// });\n\nfunction SignUp(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const [error, setError] = useState(\"\");\n  const [states, setStates] = useState([]);\n  const [city, setCity] = useState([]);\n  const [name, setName] = useState('');\n\n  const [store, setStore] = useState(0);\n\n  useEffect(() => {\n    const getStates = () => {\n      // console.log(`${baseUrl}/customers/getState`)\n      axios.get(`${baseUrl}/customers/getState`).then((res) => {\n        \n        console.log(res);\n        if (res.data.code === 1) {\n          setStates(res.data.result);\n        }\n      });\n    };\n    getStates();\n  }, []);\n\n  \n  useEffect(() => {\n    const getCity = () => {\n      axios.get(`${baseUrl}/customers/getCity?state_id=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setCity(res.data.result);\n        }\n      });\n    };\n\n    getCity();\n  }, [store]);\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    console.log(\"value :\", value.p_state);\n\n    let formData = new FormData();\n    formData.append(\"name\", value.p_name);\n    formData.append(\"email\", value.p_email);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"occupation\", value.p_profession);\n    formData.append(\"state\", name);\n    formData.append(\"city\", value.p_city);\n    formData.append(\"password\", value.p_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/signup`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n\n        if (response.data.code === 1) {\n          alert.success(\"signup successfully !\");\n          localStorage.setItem(\"userid\", JSON.stringify(response.data.id));\n          localStorage.setItem(\"userNameId\", JSON.stringify(response.data.user_id));\n          localStorage.setItem(\"name\", JSON.stringify(response.data.name));\n          props.history.push(\"/customer/questionnaire-page\");\n          reset();\n        } else if (response.data.code === 0) {\n          console.log(\"res -\",response.data.result);\n          setError(response.data.result);\n          reset();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\nconst getID = (key) =>{\n  setStore(key)\n\n  states.filter((data)=>{\n    if(data.Id == key){\n      console.log('Name', data.name);\n      setName(data.name)\n      // document.getElementById('state').value=data.Name;\n    }\n  })\n}\n\nconsole.log(\"error\",error)\n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Customer Register</h2>\n          </div>\n          \n            {error && <p style={{color:\"red\"}}>{error}</p>}\n            \n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"p_name\"\n                    ref={register}\n                    placeholder=\"Enter Name\"\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Phone number</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"p_phone\"\n                    ref={register}\n                    placeholder=\"Phone number\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"col-md-6\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Occupation/ Profession</label>\n                  <br />\n                  <select\n                    className=\"form-select form-control\"\n                    name=\"p_profession\"\n                    aria-label=\"Default select example\"\n                    ref={register}\n                  >\n                    <option value=\"\">--select--</option>\n                    {professionName.map((p, index) => (\n                      <option key={index} value={p.city}>\n                        {p.city}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"col-md-6\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">State</label>\n                  <select\n                    id=\"state\"\n                    name=\"p_state\"\n                    className=\"form-control\"\n                    ref={register}\n                    // onClick={(e) => storeValue(e.target.value)}\n                    onChange={(e) =>getID(e.target.value)}                         \n                  >\n                    <option value=\"\">--select--</option>\n                    {states.map((p) => (\n                      <option key={p.Id} value={p.id}>\n                        {p.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">City</label>\n\n                  <select className=\"form-control\" name=\"p_city\" ref={register}>\n                    <option value=\"\">--select--</option>\n                    {city.map((p, index) => (\n                      <option key={index} value={p.city}>\n                        {p.city}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"p_password\"\n                    ref={register}\n                    placeholder=\"Enter Password\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default SignUp;\n\nconst professionName = [\n  { city: \"CA\" },\n  { city: \"NON-CA\" },\n  { city: \"CFO\" },\n  { city: \"CEO\" },\n  { city: \"FINANCE HEAD\" },\n  { city: \"ACCOUNTS MANAGER\" },\n  { city: \"ACCOUNTANT\" },\n  { city: \"TAX PROFESSIONAL\" },\n  { city: \"OTHERS\" },\n];\n","/var/www/html/Mazars_Pannel/src/views/VrerifyOtpLogin/VerifyOtpLogin.js",["480","481","482"],"import React , {useEffect , useState} from 'react'\nimport Header from \"../../components/Header/Header\";\nimport Footer from '../../components/Footer/Footer'\nimport axios from 'axios'\nimport { baseUrl } from \"../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\n\n// const Schema = yup.object().shape({\n//   p_otp: yup.string().required(\"required otp\"),\n// });\n\n\nfunction VerifyOtp(props) {\n\n  const { handleSubmit, register,  errors  } = useForm();\n\n  const[time, setTime] = useState('')\n  const[disabled, setDisabled] = useState(false)\n\n  \n  useEffect(() => {\n    console.log(\"call useEffect\")\n\n    var timerOn = true;\n\n    function timer(remaining) {\n    // var m = Math.floor(remaining / 60);\n    var s = remaining % 60;\n    \n    // m = m < 10 ? '0' + m : m;\n    s = s < 10 ? '0' + s : s;\n      setTime(s)\n\n      remaining -= 1;\n  \n    if(remaining >= 0 && timerOn) {\n      setTimeout(function() {\n          timer(remaining);\n      }, 1000);\n      return;\n    }\n    setDisabled(true)\n    }\n  \n    timer(60);\n  }, []);\n \n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n  \n    let formData = new FormData();\n    formData.append(\"otp\", value.p_otp);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/auth/validateOTP`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);   \n        if (response.data.code === 1) {\n          props.history.push(\"/customer/dashboard\");\n          } \n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  }\n\n\n  const resendOtp = () => {\n    props.history.push(\"/customer/signin\");\n  }\n\n\n\n  return (\n    <>\n    <Header cust_sign=\"cust_sign\"/>\n    <div class=\"container\">\n      <div class=\"otp\">\n        <div class=\"heading text-center\">\n          <h2>Verify Your OTP</h2>\n        </div>\n        <form onSubmit={handleSubmit(onSubmit)}>\n        { \n              disabled ? \n              null\n            : \n            <div class=\"form-group\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"otp\"\n              placeholder=\"Enter Your OTP Here\"\n              ref={register}\n              name=\"p_otp\"\n            />\n         \n            <small class=\"text-center\">           \n              Note: OTP is valid for {time} seconds.\n            </small>\n          </div>\n            }\n\n          <div class=\"text-center\">\n\n          { \n              disabled ?\n              <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>RESEND OTP</button>           \n              :\n              <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button> \n            }\n          </div>\n        </form>\n      </div>\n    </div>\n    <Footer />\n    </>\n  );\n}\n\nexport default VerifyOtp;\n","/var/www/html/Mazars_Pannel/src/views/VerifyOtp/VerifyOtp.js",["483","484","485"],"import React , {useEffect , useState} from 'react'\nimport { useForm } from \"react-hook-form\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from '../../components/Footer/Footer'\nimport axios from 'axios'\nimport { baseUrl } from \"../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\n\n// const Schema = yup.object().shape({\n//   p_otp: yup.string().required(\"required otp\"),\n// });\n\n\nfunction VerifyOtp(props) {\n\n  const { handleSubmit, register,  errors  } = useForm();\n\n  const[time, setTime] = useState('')\n  const[disabled, setDisabled] = useState(false)\n\n\n  useEffect(() => {\n    console.log(\"call useEffect\")\n\n    var timerOn = true;\n\n    function timer(remaining) {\n    // var m = Math.floor(remaining / 60);\n    var s = remaining % 60;\n    \n    // m = m < 10 ? '0' + m : m;\n    s = s < 10 ? '0' + s : s;\n      setTime(s)\n\n      remaining -= 1;\n  \n    if(remaining >= 0 && timerOn) {\n      setTimeout(function() {\n          timer(remaining);\n      }, 1000);\n      return;\n    }\n\n    setDisabled(true)\n    \n    }\n    \n\n    timer(60);\n  }, []);\n \n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n  \n    let formData = new FormData();\n    formData.append(\"otp\", value.p_otp);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/auth/validateOTP`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);   \n        if (response.data.code === 1) {\n          props.history.push(\"/customer/questionnaire-page\");\n          } \n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  }\n\n    const resendOtp = () => {\n      \n      props.history.push(\"/customer/signup\");\n    }\n\n  return (\n    <>\n<Header cust_sign=\"cust_sign\"/>\n    <div class=\"container\">\n      <div class=\"otp\">\n        <div class=\"heading text-center\">\n          <h2>Verify Your OTP</h2>\n        </div>\n        <form onSubmit={handleSubmit(onSubmit)}>\n        { \n              disabled ? \n              null\n            : \n            <div class=\"form-group\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"otp\"\n              placeholder=\"Enter Your OTP Here\"\n              ref={register}\n              name=\"p_otp\"\n            />\n          \n            <small class=\"text-center\">           \n              Note: OTP is valid for {time} seconds.\n            </small>\n          </div>\n            }\n         \n\n          <div class=\"text-center\">\n\n            { \n              disabled ?\n              <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>RESEND OTP</button>           \n              :\n              <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button> \n            }\n            \n\n            \n          </div>\n        </form>\n      </div>\n    </div>\n    <Footer />\n    </>\n  );\n}\n\nexport default VerifyOtp;\n","/var/www/html/Mazars_Pannel/src/views/SignInForm/SignIn.js",["486","487","488"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Link } from \"react-router-dom\";\n\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required user id\"),\n  p_password: yup.string().required(\"required password\"),\n});\n\nfunction SignIn(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [error, setError] = useState(\"\");\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"user_id\", value.p_name);\n    formData.append(\"password\", value.p_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/login`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Login successfully !\");\n          localStorage.setItem(\"userid\", JSON.stringify(response.data.user_id));\n          localStorage.setItem(\"name\", JSON.stringify(response.data.name));\n          props.history.push(\"/customer/dashboard\");\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          setError(response.data.result);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Customer Login</h2>\n          </div>\n          <p className=\"error\">\n            {error && error}</p>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">User Id</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"p_name\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                  />\n                  <p className=\"error\">\n                    {errors.p_name && errors.p_name.message}\n                  </p>\n                </div>\n              </div>\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"p_password\"\n                    placeholder=\"Enter Password\"\n                    ref={register}\n                  />\n                  <p className=\"error\">\n                    {errors.p_password && errors.p_password.message}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n\n            <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n              <Link to={`/customer/forget-password`}>Forget Password</Link>\n            </div>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default SignIn;\n\n{\n  /* <div className=\"mb-3\">\n                <label className=\"form-label\">\n                  Phone Number\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"phone_no\"\n                  placeholder=\"Phone Number\"\n                  ref={register}\n                />\n                <p className=\"error\">\n                  {errors.phone_no && errors.phone_no.message}\n                </p>\n              </div> */\n}\n","/var/www/html/Mazars_Pannel/src/views/RegisterYourSelf/RegisterYourSelf.js",[],"/var/www/html/Mazars_Pannel/src/views/Start/Start.js",[],"/var/www/html/Mazars_Pannel/src/views/Dashboard/Dashboard.js",["489"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport \"./index.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\n\n\nfunction Dashboard() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const [queries, setQueries] = useState(\"\");\n  const [proposal, setProposal] = useState(\"\");\n  const [assignment, setAssignment] = useState(\"\");\n\n  useEffect(() => {\n    const getQueries = () => {\n      axios\n        .get(\n          `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(\n            userId\n          )}`\n        )\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setQueries(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getProposal = () => {\n      axios\n        .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setProposal(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getAssignment = () => {\n      axios\n        .get(\n          `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}`\n        )\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setAssignment(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    getQueries();\n    getProposal();\n    getAssignment();\n  }, []);\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div class=\"row mt-3\">\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-180\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">Queries</h5>\n                </div>\n                <div>\n                  <Link to={`/customer/queries/`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{queries === \"0\" ? \"0\" : queries}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-180\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Proposal\n                  </h5>\n                </div>\n                <div>\n                  <Link to={`/customer/proposal/`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{proposal === \"0\" ? \"0\" : proposal}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-180\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Assignment\n                  </h5>\n                </div>\n                <div>\n                  <Link to={`/customer/assignment/`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{assignment === \"\" ? \"0\" : assignment}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Dashboard;\n\n// <div class=\"row\">\n// <div class=\"col-sm-4\">\n//   <div class=\"card\">\n//     <div class=\"card-body\">\n//       <p style={{ fontSize: \"24px\" }}>Queries</p>\n//       <div\n//         style={{\n//           display: \"flex\",\n//           flexDirection: \"row\",\n//           justifyContent: \"flex-end\",\n//         }}\n//       >\n//         <h2>{queries === \"0\" ? \"0\" : queries}</h2>\n//       </div>\n//     </div>\n//   </div>\n// </div>\n\n// <div class=\"col-sm-4\">\n//   <div class=\"card\">\n//     <div class=\"card-body\">\n//       <p style={{ fontSize: \"24px\" }}>Proposal</p>\n\n//       <div\n//         style={{\n//           display: \"flex\",\n//           flexDirection: \"row\",\n//           justifyContent: \"flex-end\",\n//         }}\n//       >\n//         <h2>{proposal === \"0\" ? \"0\" : proposal}</h2>\n//       </div>\n//     </div>\n//   </div>\n// </div>\n\n// <div class=\"col-sm-4\">\n//   <div class=\"card\">\n//     <div class=\"card-body\">\n//       <p style={{ fontSize: \"24px\" }}>Assignment</p>\n\n//       <div\n//         style={{\n//           display: \"flex\",\n//           flexDirection: \"row\",\n//           justifyContent: \"flex-end\",\n//         }}\n//       >\n//         <h2>{assignment === \"\" ? \"0\" : assignment}</h2>\n//       </div>\n//     </div>\n//   </div>\n// </div>\n// </div>\n","/var/www/html/Mazars_Pannel/src/views/MyAssingment/MyAssingment.js",["490","491","492","493"],"/var/www/html/Mazars_Pannel/src/views/AddFressAssignment/AddFreshAssingment.js",["494","495","496"],"/var/www/html/Mazars_Pannel/src/views/QuestionnairePage/QuestionnairePage.js",["497","498","499","500","501","502","503"],"/var/www/html/Mazars_Pannel/src/views/Feedback/Feedback.js",["504","505","506","507"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\n\n\n// const Schema = yup.object().shape({\n//   p_feedback: yup.string().required(\"required feedback\"),\n//   p_assignment: yup.string().required(\"required assignment\"),\n// });\n\n\nfunction Feedback() {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm(); \n\n\n  const [assignment, setAssingment] = useState([]);\n  const [teamLeader, setTeamLeader] = useState([]);\n\n  const userId = window.localStorage.getItem(\"userid\");\n\n  useEffect(() => {\n    const getAssingment = () => {\n      axios.get(`${baseUrl}/customers/getAssignedAssignments?user=${JSON.parse(userId)}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setAssingment(res.data.result);\n        }\n      });\n    };\n\n    getAssingment();\n  }, []);\n\n\n  useEffect(() => {\n    getTeamLeader();\n  }, []);\n\n  const getTeamLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setTeamLeader(res.data.result);\n      }\n    });\n  };\n\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"assign_no\", value.p_assignment);\n    formData.append(\"feedback\", value.p_feedback);\n    formData.append(\"user_id\", JSON.parse(userId));\n    formData.append(\"tl_id\", value.p_teamleader);\n\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostUserFeedback`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          reset();   \n          alert.success(\" feedback successfully added!\");      \n          } \n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"text-center\">\n            <h3>Feedback!!!</h3>\n          </div>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Assignment No.</label>\n                    <select\n                      class=\"form-control\"\n                      name=\"p_assignment\"\n                      ref={register}\n                    >\n                      <option value=\"\">--select--</option>\n\n                      {assignment.map((p, i) => (\n                        <option key={i} value={p.assign_no}>\n                          {p.assign_no}\n                        </option>\n                      ))}\n                    </select>\n                   \n                  </div>\n                </div>\n\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Select Team Leader</label>\n                    <select\n                      class=\"form-control\"\n                      name=\"p_teamleader\"\n                      ref={register}\n                    >\n                      <option value=\"\">--select--</option>\n\n                      {teamLeader.map((p, i) => (\n                        <option key={i} value={p.id}>\n                          {p.name}\n                        </option>\n                      ))}\n                    </select>\n                   \n                  </div>\n                </div>\n\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Feedback</label>\n                    <textarea\n                      class=\"form-control\"\n                      placeholder=\"Feedback text here\"\n                      rows=\"5\"\n                      ref={register}\n                      name=\"p_feedback\"\n                    ></textarea>\n                   \n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Feedback;\n","/var/www/html/Mazars_Pannel/src/views/SelectCategoryPage/SelectCategoryPage.js",[],"/var/www/html/Mazars_Pannel/src/views/Quesionnaire/Questionnaire.js",["508","509","510"],"import React from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport \"./index.css\";\n\n\nfunction Questionnaire() {\n  const userId = window.localStorage.getItem(\"userid\");\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"schedule\">\n            <h3>My Assignment</h3>\n            <a href=\"new-query.html\" class=\"btn btn-primary\">\n              Fresh Assignment\n            </a>\n          </div>\n          <br />\n        </div>\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          <div class=\"accordion\" id=\"accordionExample\">\n            \n            <div class=\"card\">\n              <div\n                class=\"card-header\"\n                id=\"headingOne\"\n                style={{padding:\".5rem .1rem\"}}\n              >\n                <h2 class=\"mb-0 query\">\n                  <button\n                    class=\"btn btn-link btn-block text-left\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#collapseOne\"\n                    aria-expanded=\"true\"\n                    aria-controls=\"collapseOne\"\n                  >\n                    20210115-34570\n                  </button>\n                  <div>\n                    <p class=\"m-0\">Submitted on</p>\n                  </div>\n                  <div class=\"d-flex\">\n                    <div class=\"additional\">\n                      <button\n                        class=\"btn\"\n                        data-toggle=\"modal\"\n                        data-target=\"#staticBackdrop\"\n                      >\n                        Add. Query\n                      </button>\n                    </div>\n                    <div class=\"complete\">\n                      <p>Pending</p>\n                    </div>\n                  </div>\n                </h2>\n              </div>\n\n              <div\n                id=\"collapseOne\"\n                class=\"collapse\"\n                aria-labelledby=\"headingOne\"\n                data-parent=\"#accordionExample\"\n              >\n                <div class=\"card-body\">\n                  <table class=\"table table-bordered\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Titles</th>\n                        <th scope=\"col\">Data</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <th scope=\"row\">Nature of Issue</th>\n                        <td>\n                          Lorem ipsum dolor sit amet consectetur adipisicing\n                          elit. Totam eum nihil voluptatum esse fuga et.\n                        </td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\">Facts of the case</th>\n                        <td>\n                          Lorem ipsum dolor sit amet consectetur adipisicing\n                          elit. Totam eum nihil voluptatum esse fuga et.\n                        </td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\">Specific Query (ies) for advisory</th>\n                        <td colspan=\"1\">\n                          Lorem ipsum dolor sit amet consectetur adipisicing\n                          elit. Totam eum nihil voluptatum esse fuga et.\n                        </td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\">Relevant Section of the Statue</th>\n                        <td colspan=\"1\">\n                          Lorem ipsum dolor sit amet consectetur adipisicing\n                          elit. Totam eum nihil voluptatum esse fuga et.\n                        </td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\">Industry</th>\n                        <td colspan=\"1\">\n                          Lorem ipsum dolor sit amet consectetur adipisicing\n                          elit. Totam eum nihil voluptatum esse fuga et.\n                        </td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\">Purpose for which Opinion is sought</th>\n                        <td colspan=\"1\">\n                          Lorem ipsum dolor sit amet consectetur adipisicing\n                          elit. Totam eum nihil voluptatum esse fuga et.\n                        </td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\">Opinion Expert</th>\n                        <td colspan=\"1\">\n                          Lorem ipsum dolor sit amet consectetur adipisicing\n                          elit. Totam eum nihil voluptatum esse fuga et.\n                        </td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\">Format in which Opinion is required</th>\n                        <td colspan=\"1\">\n                          Lorem ipsum dolor sit amet consectetur adipisicing\n                          elit. Totam eum nihil voluptatum esse fuga et.\n                        </td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\">\n                          Timelines within which Opinion is Required\n                        </th>\n                        <td colspan=\"1\">\n                          Lorem ipsum dolor sit amet consectetur adipisicing\n                          elit. Totam eum nihil voluptatum esse fuga et.\n                        </td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\">Documents</th>\n                        <td>\n                          <a href=\"#\">Document1</a>, <a href=\"#\">Document2</a>\n                          <a href=\"#\">Document3</a>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                  <table class=\"table table-bordered\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                          Additional Queries\n                        </th>\n                        <th scope=\"col\">Date Submission</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>Additional Queries#1</td>\n                        <td>14-02-2021</td>\n                      </tr>\n                      <tr>\n                        <td>Additional Queries#2</td>\n                        <td>17-02-2021</td>\n                      </tr>\n                      <tr>\n                        <td>Additional Queries#3</td>\n                        <td>20-02-2021</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n            <div class=\"card\">\n              <div\n                class=\"card-header disabled\"\n                id=\"headingTwo\"\n                style={{padding:\".5rem .1rem\"}}\n              >\n                <h2 class=\"mb-0 query\">\n                  <button\n                    class=\"btn btn-link btn-block text-left\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#collapseTwo\"\n                    aria-expanded=\"true\"\n                    aria-controls=\"collapseTwo\"\n                  >\n                    20210115-34570\n                  </button>\n                  <div>\n                    <p class=\"m-0\">Completed on</p>\n                  </div>\n                  <div class=\"d-flex\">\n                    <div class=\"additional\">\n                      <button class=\"btn\" style={{background:\"green\"}}>\n                        Add. Query\n                      </button>\n                    </div>\n                    <div class=\"complete\">\n                      <p>Completed</p>\n                    </div>\n                  </div>\n                </h2>\n              </div>\n              <div\n                id=\"collapseTwo\"\n                class=\"collapse\"\n                aria-labelledby=\"headingTwo\"\n                data-parent=\"#accordionExample\"\n              >\n                <div class=\"card-body\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"\">\n                        <p>Facts of the Case</p>\n                      </div>\n                      <div>\n                        <ol class=\"pl-1\">\n                          <li>Facts of the Case1</li>\n                          <li>Facts of the Case2</li>\n                          <li>Facts of the Case3</li>\n                        </ol>\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div>\n                        <p>Final Report</p>\n                      </div>\n                      <div>\n                        <img\n                          src=\"https://img.icons8.com/cotton/2x/regular-document.png\"\n                          class=\"w-25\"\n                          alt=\"\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Questionnaire;\n","/var/www/html/Mazars_Pannel/src/views/ProposalTab/ProposalTab.js",["511","512","513","514","515","516","517"],"/var/www/html/Mazars_Pannel/src/views/AssignmentTab/AssignmentTab.js",["518","519"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport { Link } from \"react-router-dom\";\n\nfunction AssignmentTab() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const [assignmentCount, setAssignmentQueries] = useState(\"\");\n\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n  const getAssignmentData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setAssignmentDisplay(res.data.result);\n          setAssignmentQueries(res.data.result.length);\n        }\n      });\n  };\n\n  //change date format\n  function ChangeFormateDate(oldDate) {\n    console.log(\"date\", oldDate);\n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"7\">\n              <CardTitle tag=\"h4\">Assignment ({assignmentCount})</CardTitle>\n            </Col>\n            <Col md=\"5\"></Col>\n          </Row>\n        </CardHeader>\n\n        <CardHeader>\n          <CustomerFilter\n            setData={setAssignmentDisplay}\n            getData={getAssignmentData}\n            id={userId}\n            assignment=\"assignment\"\n          />\n        </CardHeader>\n\n        <CardBody>\n          <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th>S.No</th>\n                <th>Date of Assignment</th>\n                <th>Query No</th>\n                <th>Assignment No</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th>Status</th>\n                <th>Expected date of delivery</th>\n                <th>Actual date of delivery</th>\n                <th>Deliverable</th>\n                <th>Team Leader name and contact number, email</th>\n              </tr>\n            </thead>\n            {assignmentDisplay.length > 0 ? (\n              assignmentDisplay.map((p, i) => (\n                <tbody>\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.assignment_date)}</td>\n                    <th>\n                      <Link to={`/customer/my-assingment/${p.id}`}>\n                        {p.assign_no}\n                      </Link>\n                    </th>\n                    <td>{p.assign_no}</td>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n                    <td>{p.status}</td>\n                    {/* <td>{p.status <= 9 ? \"In Process\" : \"Complete\"} </td> */}\n                    <td>{ChangeFormateDate(p.Exp_Delivery_Date)}</td>\n                    <td>{ChangeFormateDate(p.date_of_delivery)}</td>\n\n                    <td style={{ textAlign: \"center\" }}>\n                      {!p.final_report == \"\" ? (\n                        <div>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/upload/report/${p.final_report}`}\n                          >\n                            <i\n                              class=\"fa fa-file-text\"\n                              style={{ fontSize: \"16px\" }}\n                            ></i>{\" \"}\n                            final\n                          </a>\n                        </div>\n                      ) : p.assignment_draft_report ? (\n                        <div>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/upload/report/${p.assignment_draft_report}`}\n                          >\n                            <i\n                              class=\"fa fa-file-text\"\n                              style={{ fontSize: \"16px\" }}\n                            ></i>{\" \"}\n                            draft\n                          </a>\n                        </div>\n                      ) : null}\n                    </td>\n\n                    <td>\n                      <p style={{ fontSize: \"10px\" }}>{p.tname} </p>\n                      <p style={{ fontSize: \"10px\" }}>{p.phone}</p>\n                      <p style={{ fontSize: \"10px\" }}>{p.email}</p>\n                    </td>\n                  </tr>\n                </tbody>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"11\">No Records</td>\n              </tr>\n            )}\n          </Table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AssignmentTab;\n","/var/www/html/Mazars_Pannel/src/views/QueriesTab/QueriesTab.js",["520","521","522","523"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport TableHeader from \"../../components/DataTable/Header/index\";\n\n\nfunction QueriesTab() {\n  // const [queriesData, setQueriesData] = useState([]);\n  const [queriesCount, setCountQueries] = useState(\"\");\n  const [query, setQuery] = useState([]);\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const [sorting, setSorting] = useState({ field: \"\", order: \"\" });\n  const headers = [\n    { name: \"S.no\", sortable: true },\n    { name: \"Date\", field: \"created\", sortable: true },\n    { name: \"Query No\", field: \"assign_no\", sortable: true },\n    { name: \"Category\", field: \"parent_id\", sortable: true },\n    { name: \"Sub Category\", field: \"cat_name\", sortable: true },\n    { name: \"Status\", field: \"status\", sortable: true },\n    {\n      name: \"Expected Delivery Date\",\n      field: \"exp_delivery_date\",\n    },\n  ];\n\n  useEffect(() => {\n    getQueriesData();\n  }, []);\n\n  const getQueriesData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setQuery(res.data.result);\n          setCountQueries(res.data.result.length);\n        }\n      });\n  };\n\n  const queryData = useMemo(() => {\n    let computedData = query;\n\n    //Sorting comments\n    if (sorting.field) {\n      const reversed = sorting.order === \"asc\" ? 1 : -1;\n      computedData = computedData.sort(\n        (a, b) => reversed * a[sorting.field].localeCompare(b[sorting.field])\n      );\n    }\n    return computedData;\n  }, [query, sorting]);\n\n\n  //change date format\n  function ChangeFormateDate(oldDate) {\n    console.log(\"date\", oldDate);\n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  //show status by spinner\n  function showStatus(status) {\n    console.log(\"status\", status);\n    if (status == null) {\n      return null;\n    }\n  }\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"9\">\n              <CardTitle tag=\"h4\">Queries ({queriesCount})</CardTitle>\n            </Col>\n            <Col md=\"3\">\n              <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                <Link to=\"/customer/select-category\" class=\"btn btn-primary\">\n                  Fresh Query\n                </Link>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <CustomerFilter\n            setData={setQuery}\n            getData={getQueriesData}\n            id={userId}\n            query=\"query\"\n          />\n        </CardHeader>\n        <CardBody>\n        <Table responsive=\"sm\" bordered>\n            <TableHeader\n              headers={headers}\n              onSorting={(field, order) => setSorting({ field, order })}\n            />\n            <tbody>\n              {queryData.map((p, i) => (\n                <tr>\n                  <td>{i + 1}</td>\n                  <td>{ChangeFormateDate(p.created)}</td>\n                  <th>\n                    <Link to={`/customer/my-assingment/${p.id}`}>\n                      {p.assign_no}\n                    </Link>\n                  </th>\n                  <td>{p.parent_id}</td>\n                  <td>{p.cat_name}</td>\n                  <td>{p.status}</td>\n                  <td>{ChangeFormateDate(p.exp_delivery_date)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n// function ChangeFormateDate2(date) {\n//   var month = (1 + date.getMonth()).toString();\n//   month = month.length > 1 ? month : '0' + month;\n\n//   var day = date.getDate().toString();\n//   day = day.length > 1 ? day : '0' + day;\n\n//   return month + '/' + day + '/' + year;\n// }\n\n{\n  /* <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th>S.No</th>\n                <th>Date</th>\n                <th>Query No</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th>Status</th>\n                <th>Expected Delivery Date</th>\n              </tr>\n            </thead>\n            <tbody style={{ height: \"400px\", overflowY: \"scroll\" }}>\n              {queriesData.length > 0 ? (\n                queriesData.map((p, i) => (\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.created)}</td>\n                    <th>\n                      <Link to={`/customer/my-assingment/${p.id}`}>\n                        {p.assign_no}\n                      </Link>\n                    </th>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n                    <td>{p.status}</td>\n                    <td>{ChangeFormateDate(p.exp_delivery_date)}</td>               \n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"9\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </Table> */\n}\n\n//   <MaterialTable\n//   title={false}\n//   columns={columns}\n//   data={queriesData}\n//   options={{\n//     sorting: true,\n//     search: false,\n//   }}\n\n// />\n\n// const columns = [\n//   { title: \"S.No\", field: \"s_no\" },\n//   { title: \"Date\", field: \"created\" },\n//   { title: \"Query No\", field: \"assign_no\" },\n//   { title: \"Category\", field: \"parent_id\" },\n//   { title: \"Sub Category\", field: \"cat_name\" },\n//   { title: \"Status\", field: \"status\" },\n//   { title: \"Expected Delivery Date\", field: \"exp_delivery_date\" },\n// ];\n","/var/www/html/Mazars_Pannel/src/components/Layout/Layout.js",[],"/var/www/html/Mazars_Pannel/src/pages/Admin/Start/Start.js",[],"/var/www/html/Mazars_Pannel/src/pages/Admin/Dashboard/Dashboard.js",["524"],"/var/www/html/Mazars_Pannel/src/pages/Admin/Login/Login.js",["525","526","527","528","529"],"import React,{useState} from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\n\n// const Schema = yup.object().shape({\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   password: yup\n//     .string()\n//     .required(\"required password\")\n//     .min(5, \"at least 5 digits\")\n//     .max(20, \"max 20 digits\"),\n// });\n\n\n\n\nfunction Login(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n  const [error, setError] = useState('');\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n\n    let formData = new FormData();\n    formData.append(\"userid\", value.p_email);\n    formData.append(\"password\", value.password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/login`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);     \n        if (response.data.code === 1) {\n          alert.success(\"Login successfully !\");\n          localStorage.setItem(\n            \"adminkey\",\n            JSON.stringify(response.data[\"user id\"])\n          );\n          props.history.push(\"/admin/dashboard\");  \n        } else\n         if (response.data.code === 0) {\n          console.log(response.data.result)\n          setError(response.data.result)\n          }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n  return (\n    <>\n      <Header admin=\"admin\"/>\n      <div class=\"container\">\n        <div class=\"form\">\n          <div class=\"heading\">\n            <h2>ADMIN LOGIN</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>   \n             \n            <div className=\"row\">\n              <div className=\"col-md-12\">\n              <div className=\"mb-3\">\n                  <label className=\"form-label\">User Id</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                  />\n               \n                </div>\n                \n              </div>\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    placeholder=\"Enter Password\"\n                    ref={register}\n                  />\n               \n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Login;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AddNewTeamLeader/AddNewTeamLeader.js",["530","531","532","533","534","535","536","537","538","539"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction AddNew() {\n  const alert = useAlert();\n  const history = useHistory();\n\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  console.log(\"store2\", store2);\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"cat_id\", store2);\n    formData.append(\"type\", \"tl\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AddTeamLead`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"TL created  !\");\n          // reset();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Add New Team Leader</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardHeader>\n          <div class=\"row mt-3\">\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\n              <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Name</label>\n                        <input\n                          type=\"text\"\n                          class=\"form-control\"\n                          name=\"p_name\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Email</label>\n                        <input\n                          type=\"email\"\n                          class=\"form-control\"\n                          name=\"p_email\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Category</label>\n                        <select\n                          className=\"form-control\"\n                          name=\"p_tax\"\n                          ref={register}\n                          onChange={(e) => setStore(e.target.value)}\n                        >\n                          <option value=\"\">--Select Category--</option>\n                          {tax.map((p, index) => (\n                            <option key={index} value={p.id}>\n                              {p.details}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Sub Category</label>\n                        <select\n                          className=\"form-select form-control\"\n                          name=\"p_tax2\"\n                          ref={register}\n                          onChange={(e) => setStore2(e.target.value)}\n                        >\n                          <option value=\"\">--Select Sub-Category--</option>\n                          {tax2.map((p, index) => (\n                            <option key={index} value={p.id}>\n                              {p.details}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group\">\n                        <label>Phone Number</label>\n                        <input\n                          type=\"text\"\n                          class=\"form-control\"\n                          name=\"p_phone\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n                </form>\n              </div>\n            </div>\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddNew;\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required name\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_phone: yup\n//   .string()\n//   .required(\"required phone no\")\n//   .matches(/^[0-9]+$/, \"Must be only digits\")\n//   .min(10, \"Must be exactly 10 digits\")\n//   .max(20, \"max 20 digits\"),\n// });\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AddNewTaxProf/AddNewTaxProf.js",["540","541","542","543","544","545","546","547","548"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction AddNew() {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n  const [teamleader, setTeamLeader] = useState([]);\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTeamLeader(res.data.result);\n        }\n      });\n    };\n    getTeamLeader();\n  }, []);\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"type\", \"tp\");\n    formData.append(\"tp_id\", value.p_teamleader);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/AddTaxProfessional`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"TP created  !\");\n          reset();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Add New Tax Professionals</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardHeader>\n          <div class=\"row mt-3\">\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\n              <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Name</label>\n                        <input\n                          type=\"text\"\n                          class=\"form-control\"\n                          name=\"p_name\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Email</label>\n                        <input\n                          type=\"email\"\n                          class=\"form-control\"\n                          name=\"p_email\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Phone Number</label>\n                        <input\n                          type=\"text\"\n                          class=\"form-control\"\n                          name=\"p_phone\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Select teamleader</label>\n                        <select\n                          name=\"p_teamleader\"\n                          class=\"form-control\"\n                          ref={register}\n                        >\n                          <option value=\"\">--select--</option>\n                          {teamleader.map((p) => (\n                            <option key={p.Id} value={p.id}>\n                              {p.name}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddNew;\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required name\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_phone: yup\n//   .string()\n//   .required(\"required phone no\")\n//   .matches(/^[0-9]+$/, \"Must be only digits\")\n//   .min(10, \"Must be exactly 10 digits\")\n//   .max(20, \"max 20 digits\"),\n// });\n","/var/www/html/Mazars_Pannel/src/pages/Admin/QueriesRecevied/QueriesRecevied.js",["549","550","551","552","553"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\n\nfunction QueriesRecevied() {\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setAssingmentNo(res.data.result[0].assign_no);\n        }\n      });\n    };\n\n    getSubmittedAssingment();\n    getQuery();\n  }, [assingNo]);\n\n  console.log(assingNo);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setDisplayQuery(res.data.result);\n        }\n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{fontSize:\"20px\"}}>Query Details</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <p>{assingNo}</p>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {submitData.map((p, i) => (\n            <div class=\"card-body\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Titles</th>\n                    <th scope=\"col\">Data</th>\n                  </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope=\"row\">Query Status</th>\n                    <td>{p.status}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facts of the case</th>\n                    <td>{p.fact_case}</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      Timelines within which Opinion is Required\n                    </th>\n                    <td colspan=\"1\">{p.Timelines}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">specific questions</th>\n                    <td colspan=\"1\">\n                      {diaplaySpecific.map((p, i) => (\n                        <p>{p.text}</p>\n                      ))}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Documents</th>\n                    <td>\n                      {p.upload_doc_1 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_2 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_3 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Format in which Opinion is required</th>\n                    <td colspan=\"1\">\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                      <p>\n                        {p.softcopy_digitally_assigned === \"1\" &&\n                          \"SoftCopy- Digitally Signed\"}\n                      </p>\n\n                      <p>\n                        {p.printout_physically_assigned === \"1\" &&\n                          \"Printout- Physically Signed\"}\n                      </p>\n                    </td>\n                  </tr>\n                  \n                </tbody>\n              </table>\n\n              <table class=\"table table-bordered\">\n                {displayQuery.length > 0 && (\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                        Additional Queries\n                      </th>\n                      <th scope=\"col\">Date Submission</th>\n                      <th scope=\"col\">Documents</th>\n                    </tr>\n                  </thead>\n                )}\n\n                {displayQuery.map((p, i) => (\n                  <tbody>\n                    <tr key={i}>\n                      <td>{p.additional_queries}</td>\n                      <td>{p.created}</td>\n                      <td>\n                          {p.upload_doc == \"\" ? (\n                            \"\"\n                          ) : (\n                            <p>\n                              <a\n                                href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc}`}\n                              >\n                                <i class=\"fa fa-photo\"></i>\n                              </a>\n                            </p>\n                          )}\n                        </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          ))}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n\n// <div class=\"row mt-3\">\n// <div class=\"col-xl-12 col-lg-12 col-md-12\">\n\n// </div>\n// </div>\n","/var/www/html/Mazars_Pannel/src/pages/Admin/Proposal/Proposal.js",["554","555","556"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport AllProposalComponent from \"../AllProposalComponent/AllProposalComponent\";\nimport PendingForAcceptence from \"../../../components/PendingForAcceptence/PendingForAcceptence\";\nimport AcceptedProposal from \"../AcceptedProposal/AcceptedProposal\";\nimport DeclinedPropoal from \"../DeclinedProposal/DeclinedPropoal\";\n// import PendingForPaymentProposal from \"../PendingForPaymentProposal/PendingForPaymentProposal\";\n\nfunction Proposal() {\n  const [allProposalCount, setAllProposalCount] = useState(\"\");\n  const [pendingProposalCount, setPendingProposalCount] = useState(\"\");\n  const [acceptedProposalCount, setAcceptedProposalCount] = useState(\"\");\n  const [declinedProposalCount, setDeclinedProposalCount] = useState(\"\");\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const allProposal = (data) => {\n    setAllProposalCount(data);\n  };\n\n  const pendingProposal = (data) => {\n    setPendingProposalCount(data);\n  };\n\n  const acceptedProposal = (data) => {\n    setAcceptedProposalCount(data);\n  };\n\n  const declinedProposal = (data) => {\n    setDeclinedProposalCount(data);\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\" style={{ top: \"-12px\" }}>\n          <div class=\"tab-content\" id=\"pills-tabContent\">\n            <div\n              class=\"tab-pane fade show active\"\n              id=\"query\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-query-tab\"\n            >\n              <ul\n                class=\"nav nav-pills mb-3 col-sm-12\"\n                style={{ justifyContent: \"space-around\" }}\n                id=\"pills-tab\"\n                role=\"tablist\"\n              >\n                <li class=\"nav-item\" role=\"presentation\">\n                  <a\n                    class=\"nav-link text-white active\"\n                    id=\"pills-d-tab\"\n                    data-toggle=\"pill\"\n                    href=\"#d\"\n                    role=\"tab\"\n                    aria-controls=\"pills-d\"\n                    aria-selected=\"true\"\n                  >\n                    All Proposal ({allProposalCount})\n                  </a>\n                </li>\n\n                <li class=\"nav-item\" role=\"presentation\">\n                  <a\n                    class=\"nav-link text-white\"\n                    id=\"pills-a-tab\"\n                    data-toggle=\"pill\"\n                    href=\"#a\"\n                    role=\"tab\"\n                    aria-controls=\"pills-a\"\n                    aria-selected=\"false\"\n                  >\n                    Pending For Acceptence ({pendingProposalCount})\n                  </a>\n                </li>\n\n                <li class=\"nav-item\" role=\"presentation\">\n                  <a\n                    class=\"nav-link text-white\"\n                    id=\"pills-b-tab\"\n                    data-toggle=\"pill\"\n                    href=\"#b\"\n                    role=\"tab\"\n                    aria-controls=\"pills-b\"\n                    aria-selected=\"false\"\n                  >\n                    Accepted ({acceptedProposalCount})\n                  </a>\n                </li>\n\n                <li class=\"nav-item\" role=\"presentation\">\n                  <a\n                    class=\"nav-link text-white\"\n                    id=\"pills-c-tab\"\n                    data-toggle=\"pill\"\n                    href=\"#c\"\n                    role=\"tab\"\n                    aria-controls=\"pills-c\"\n                    aria-selected=\"false\"\n                  >\n                    Declined ({declinedProposalCount})\n                  </a>\n                </li>\n              </ul>\n\n              <div class=\"tab-content\" id=\"pills-tabContent\">\n                <div\n                  class=\"tab-pane fade show active\"\n                  id=\"d\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"pills-d-tab\"\n                >\n                  <AllProposalComponent allProposal={allProposal} />\n                </div>\n\n                <div\n                  class=\"tab-pane fade\"\n                  id=\"a\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"pills-a-tab\"\n                >\n                  <PendingForAcceptence pendingProposal={pendingProposal} />\n                </div>\n\n                <div\n                  class=\"tab-pane fade\"\n                  id=\"b\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"pills-b-tab\"\n                >\n                  <AcceptedProposal acceptedProposal={acceptedProposal} />\n                </div>\n\n                <div\n                  class=\"tab-pane fade\"\n                  id=\"c\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"pills-c-tab\"\n                >\n                  <DeclinedPropoal declinedProposal={declinedProposal} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Proposal;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTP/EditTP.js",["557","558","559","560","561","562","563","564","565","566"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useParams ,useHistory} from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\n\n\nfunction EditTP() {\n  const { id } = useParams();\n  const history = useHistory();\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [teamleader, setTeamLeader] = useState([]);\n\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n  });\n  const { name, email, phone } = user;\n\n  useEffect(() => {\n    const getTaxProfessional = () => {\n      axios.get(`${baseUrl}/tp/getTaxProfessional?id=${id}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setUser({\n            name: res.data.result[0].name,\n            email: res.data.result[0].email,\n            phone: res.data.result[0].phone,\n          });\n        }\n      });\n    };\n\n    getTaxProfessional();\n  }, [id]);\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTeamLeader(res.data.result);\n        }\n      });\n    };\n    getTeamLeader();\n  }, []);\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"id\", id);\n    formData.append(\"tp_id\", value.p_teamleader);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/updateTP`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"TL updated  !\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Edit Tax Professional</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardHeader>\n          <div class=\"row mt-3\">\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\n              <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Name</label>\n                        <input\n                          type=\"text\"\n                          class=\"form-control\"\n                          name=\"p_name\"\n                          defaultValue={name}\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Email</label>\n                        <input\n                          type=\"email\"\n                          class=\"form-control\"\n                          name=\"p_email\"\n                          defaultValue={email}\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Phone Number</label>\n                        <input\n                          type=\"text\"\n                          class=\"form-control\"\n                          name=\"p_phone\"\n                          defaultValue={phone}\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Select teamleader</label>\n                        <select\n                          name=\"p_teamleader\"\n                          class=\"form-control\"\n                          ref={register}\n                        >\n                          <option value=\"\">--select--</option>\n                          {teamleader.map((p) => (\n                            <option key={p.Id} value={p.id}>\n                              {p.name}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditTP;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/EditTL.js",["567","568","569","570","571","572","573","574","575","576","577","578"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\n\nfunction EditTL() {\n  const { id } = useParams();\n  const history = useHistory();\n\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    category: \"\",\n    sub_category: \"\",\n  });\n  const { name, email, phone, category ,sub_category } = user;\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tl/getTeamLeader?id=${id}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setUser({\n            name: res.data.result[0].name,\n            email: res.data.result[0].email,\n            phone: res.data.result[0].phone,\n            category: res.data.result[0].parent_id,\n            sub_category: res.data.result[0].cat_name,\n          });\n        }\n      });\n    };\n\n    getTeamLeader();\n  }, [id]);\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n\n  \n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"cat_id\", store2);\n    formData.append(\"id\", id);\n    \n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/updateTeamLeader`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"TL updated  !\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  // console.log(category)\n  // console.log(sub_category)\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Edit Team Leader</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardHeader>\n          <div class=\"row mt-3\">\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\n              <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Name</label>\n                        <input\n                          type=\"text\"\n                          class=\"form-control\"\n                          name=\"p_name\"\n                          defaultValue={name}\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Email</label>\n                        <input\n                          type=\"email\"\n                          class=\"form-control\"\n                          name=\"p_email\"\n                          defaultValue={email}\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Category</label>\n                        <select\n                          className=\"form-control\"\n                          name=\"p_tax\"\n                          ref={register}\n                          onChange={(e) => setStore(e.target.value)}\n                        >\n                          <option value=\"\">--Select Category--</option>\n                          {tax.map((p, index) => (\n                            <option key={index} value={p.id}>\n                              {p.details}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Sub Category</label>\n                        <select\n                          className=\"form-select form-control\"\n                          name=\"p_tax2\"\n                          ref={register}\n                          onChange={(e) => setStore2(e.target.value)}\n                        >\n                          <option value=\"\">--Select Sub-Category--</option>\n                          {tax2.map((p, index) => (\n                            <option key={index} value={p.id}>\n                              {p.details}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group\">\n                        <label>Phone Number</label>\n                        <input\n                          type=\"text\"\n                          class=\"form-control\"\n                          name=\"p_phone\"\n                          defaultValue={phone}\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditTL;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/PaymentStatusTab/PaymentStatusTab.js",[],"/var/www/html/Mazars_Pannel/src/pages/Admin/QueryAssingment/QueryAssingment.js",["579","580","581","582","583","584","585"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\n\nfunction QueryAssingment() {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { id } = useParams();\n  const history = useHistory();\n\n  const [taxLeaderDisplay, setTaxLeaderDisplay] = useState([]);\n  const [query, setQuery] = useState(true);\n\n  const [hideQuery, setHideQuery] = useState({\n    name: \"\",\n    timeline: \"\",\n    date_allocation: \"\",\n    expdeliverydate: \"\",\n  });\n\n  const userId = window.localStorage.getItem(\"adminkey\");\n  const tlkey = window.localStorage.getItem(\"tlkey\");\n\n  const [queryData, setQuerData] = useState({\n    queryNo: \"\",\n    timelines: \"\",\n    custId: \"\",\n  });\n\n  const { queryNo, timelines, custId } = queryData;\n\n  useEffect(() => {\n    getTaxLeader();\n    getQueryData();\n  }, []);\n\n  const getTaxLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setTaxLeaderDisplay(res.data.result);\n      }\n    });\n  };\n\n  const getQueryData = () => {\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setQuerData({\n          queryNo: res.data.result[0].assign_no,\n          timelines: res.data.result[0].Timelines,\n          custId: res.data.result[0].customer_id,\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getQuery();\n  }, [queryNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/CheckIfAssigned?assignno=${queryNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setQuery(false);\n          setHideQuery({\n            name: res.data.meta[0].name,\n            timeline: res.data.meta[0].timeline,\n            date_allocation: res.data.meta[0].date_allocation,\n            expdeliverydate: res.data.meta[0].expdeliverydate,\n          });\n        }\n      });\n  };\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    // var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n    var expdeliverydate = value.p_expdeldate.replace(\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\n      \"$3-$1-$2\"\n    );\n\n    let formData = new FormData();\n    formData.append(\"who\", JSON.parse(tlkey));\n    formData.append(\"id\", id);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"type\", \"admin\");\n    formData.append(\"types\", \"tl\");\n    formData.append(\"name\", value.p_taxprof);\n    // formData.append(\"date\", date);\n    formData.append(\"timeline\", value.p_timelines);\n    formData.append(\"expdeliverydate\", expdeliverydate);\n    formData.append(\"assignNo\", queryNo);\n    formData.append(\"customer_id\", custId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AddQueryAssignment`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"assigned!\");\n          getQuery();\n          reset();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\">\n              <div style={{ textAlign: \"center\" }}>\n                <h2>Query Allocation</h2>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <div class=\"row mt-3\">\n            <div class=\"col-md-12\">\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Query No.</th>\n                      <th scope=\"col\">Team Leaders</th>\n                      <th scope=\"col\">Expected Timeline</th>\n                      <th scope=\"col\">Exp. Delivery Date</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {query ? (\n                      <tr>\n                        <th scope=\"row\">{queryNo}</th>\n                        <td>\n                          <select\n                            class=\"form-control\"\n                            name=\"p_taxprof\"\n                            ref={register}\n                          >\n                            <option value=\"\">-select-</option>\n                            {taxLeaderDisplay.map((p, index) => (\n                              <option key={index} value={p.name}>\n                                {p.name}\n                              </option>\n                            ))}\n                          </select>\n                        </td>\n\n                        <td>\n                          <input\n                            type=\"text\"\n                            ref={register}\n                            name=\"p_timelines\"\n                            value={timelines}\n                            class=\"form-control\"\n                          />\n                        </td>\n                        <td>\n                          <input\n                            type=\"date\"\n                            ref={register}\n                            name=\"p_expdeldate\"\n                            class=\"form-control\"\n                          />\n                        </td>\n\n                        <td>\n                          <button type=\"submit\" class=\"btn btn-success\">\n                            Assign\n                          </button>\n                        </td>\n                      </tr>\n                    ) : (\n                      <tr>\n                        <th scope=\"row\">{queryNo}</th>\n                        <td>\n                          <select class=\"form-control w-75 p-0\" disabled>\n                            <option>{hideQuery.name}</option>\n                          </select>\n                        </td>\n\n                        <td>\n                          <input\n                            type=\"text\"\n                            ref={register}\n                            name=\"p_timelines\"\n                            class=\"form-control\"\n                            value={hideQuery.timeline}\n                            disabled\n                          />\n                        </td>\n                        <td>\n                          <input\n                            type=\"date\"\n                            ref={register}\n                            name=\"p_expdeldate\"\n                            class=\"form-control\"\n                            value={hideQuery.expdeliverydate}\n                            disabled\n                          />\n                        </td>\n                        <td>\n                          <button class=\"btn btn-success\" disabled>\n                            Assigned\n                          </button>\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </form>\n            </div>\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default QueryAssingment;\n\n// <Card>\n//         <CardHeader>\n//           <Row>\n//             <Col md=\"4\">\n//               <button\n//                 class=\"btn btn-success ml-3\"\n//                 onClick={() => history.goBack()}\n//               >\n//                 <i class=\"fas fa-arrow-left mr-2\"></i>\n//                 Go Back\n//               </button>\n//             </Col>\n//             <Col md=\"8\">\n//               <h4>Add Assignment Stages (Max 5)</h4>\n//             </Col>\n//           </Row>\n//         </CardHeader>\n//         <CardHeader></CardHeader>\n//       </Card>\n","/var/www/html/Mazars_Pannel/src/pages/Admin/QueriesTab/QueriesTab.js",["586","587","588","589","590","591","592","593","594","595","596","597"],"/var/www/html/Mazars_Pannel/src/pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab.js",[],"/var/www/html/Mazars_Pannel/src/pages/Admin/AssignmentTab/AssignmentTab.js",["598","599","600","601"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport \"./index.css\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nfunction AssignmentTab() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n  const [assignmentCount, setCountAssignment] = useState(\"\");\n\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n  const getAssignmentData = () => {\n    axios.get(`${baseUrl}/tl/getAssignments`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setAssignmentDisplay(res.data.result);\n        setCountAssignment(res.data.result.length);\n      }\n    });\n  };\n\n  //change date format\n  function ChangeFormateDate(oldDate) {\n    console.log(\"date\", oldDate);\n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getAssignmentData();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getAssignmentData();\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetData ..\");\n    setSelectedData([]);\n    getAssignmentData();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/tl/getAssignments?cat_id=${selectedData}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignmentDisplay(res.data.result);\n          }\n        }\n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"7\">\n              <CardTitle tag=\"h4\">Assignment ({assignmentCount})</CardTitle>\n            </Col>\n            <Col md=\"5\"></Col>\n          </Row>\n        </CardHeader>\n\n        <CardHeader>\n          <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                  style={{ padding: \"4px 9px\" }}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-sm-9 d-flex p-0\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mb-2 ml-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mb-2 ml-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mb-2 ml-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mb-2 ml-2\">\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">InProgress</option>\n                      <option value=\"2\">Complete</option>\n                    </select>\n                  </div>\n\n                  <button type=\"submit\" class=\"btn btn-primary mb-2 ml-2\">\n                    <i class=\"fa fa-search\"></i>\n                  </button>\n                </form>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardBody>\n          <table class=\"table table-bordered\">\n            <thead class=\"table_head\">\n              <tr>\n                <th>S.No</th>\n                <th>Date of Query</th>\n                <th>Query No</th>\n                <th>Assignment No</th>\n                <th>Assignment Date</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th>Proposed date of Completion</th>\n                <th>Assignment Stage</th>\n                <th>Status</th>\n                <th>Time taken for Completion</th>\n                <th> Report</th>\n                <th>TL name</th>\n              </tr>\n            </thead>\n            {assignmentDisplay.map((p, i) => (\n              <tbody class=\"table_bdy\">\n                <tr key={i}>\n                  <td>{i + 1}</td>\n                  <td>{ChangeFormateDate(p.date_of_query)}</td>\n                  <th>\n                    <Link to={`/admin/queries/${p.q_id}`}>{p.assign_no}</Link>\n                  </th>\n                  <td>{p.assignment_label_number}</td>\n                  <td>{p.assignment_date}</td>\n                  <td>{p.parent_id}</td>\n                  <td>{p.cat_name}</td>\n                  <td>{ChangeFormateDate(p.Exp_Delivery_Date)}</td>\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>\n                      Client Discussion\n                    </span>\n                  </td>\n                  <td> {p.client_discussion}</td>\n                  <td>{p.time_taken_for_delivery}</td>\n                  <td style={{ textAlign: \"center\" }}>\n                    {!p.final_report == \"\" ? (\n                      <div>\n                        <a\n                          href={`http://13.232.121.233/mazarapi/assets/upload/report/${p.final_report}`}\n                        >\n                          <i\n                            class=\"fa fa-file-text\"\n                            style={{ fontSize: \"16px\" }}\n                          ></i>{\" \"}\n                          final\n                        </a>\n                      </div>\n                    ) : p.assignement_draft_report ? (\n                      <div>\n                        <a\n                          href={`http://13.232.121.233/mazarapi/assets/upload/report/${p.assignment_draft_report}`}\n                        >\n                          <i\n                            class=\"fa fa-file-text\"\n                            style={{ fontSize: \"16px\" }}\n                          ></i>{\" \"}\n                          draft\n                        </a>\n                      </div>\n                    ) : null}\n                  </td>\n                  <td>{p.tl_name}</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>Draft report</span>\n                  </td>\n                  <td> {p.draft_report}</td>\n\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                </tr>\n\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>Final Discussion</span>\n                  </td>\n                  <td> {p.final_discussion}</td>\n\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                </tr>\n\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>\n                      Delivery of report\n                    </span>\n                  </td>\n                  <td> {p.delivery_report}</td>\n\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>Complete</span>\n                  </td>\n                  <td> {p.other_stage}</td>\n\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                </tr>\n              </tbody>\n            ))}\n          </table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AssignmentTab;\n\n{\n  /* <div>\n                      <p>\n                        <span style={{ fontWeight: \"bold\" }}>\n                          Client Discussion :\n                        </span>\n                        {p.client_discussion}\n                      </p>\n                      <p>\n                        <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                        {p.draft_report}\n                      </p>\n                      <p>\n                        <span style={{ fontWeight: \"bold\" }}>\n                          Final Discussion :\n                        </span>\n                        {p.final_discussion}\n                      </p>\n                      <p>\n                        <span style={{ fontWeight: \"bold\" }}>\n                          Delivery of report :\n                        </span> \n                        {p.delivery_report}\n                      </p>\n                    </div> */\n}\n\n/* <div className=\"mb-3\">                     \n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_purpose\"                     \n                      >                  \n                        <option >status</option>                                         \n                        <option >Client Discussion : {p.client_discussion}</option>                                         \n                        <option >Draft report : {p.draft_report}</option>                                         \n                        <option >Final Discussion : {p.final_discussion}</option>                                         \n                        <option >Delivery of report : {p.delivery_report}</option>                                         \n                      </select>\n                    </div> */\n","/var/www/html/Mazars_Pannel/src/pages/TL/Start/Start.js",[],"/var/www/html/Mazars_Pannel/src/pages/Admin/TeamLeaderTab/TeamLeaderTab.js",[],"/var/www/html/Mazars_Pannel/src/pages/Admin/FeedbackTab/FeedbackTab.js",["602"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\nfunction FeedbackTab() {\n    const userid = window.localStorage.getItem(\"adminkey\");\n\n\n    const [feedbackData, setFeedBackData] = useState([]);\n\n    useEffect(() => {\n      const getFeedback = () => {\n        axios.get(`${baseUrl}/customers/getFeedback`).then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setFeedBackData(res.data.result);\n          }\n        });\n      };\n      getFeedback();\n    }, []);\n\n  return (\n    <>\n      <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"7\">\n                <CardTitle tag=\"h4\">List of Feedback</CardTitle>\n              </Col>\n              <Col md=\"5\"></Col>\n            </Row>\n          </CardHeader>\n          <CardBody>\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th>Sr. No.</th>\n                  <th>Query No</th>\n                  <th>Details of feedback</th>\n                </tr>\n              </thead>\n              <tbody>\n                {feedbackData.length > 0 ? (\n                  feedbackData.map((p, i) => (\n                    <tr key={i}>\n                      <td>{i+1}</td>                 \n                      <td>{p.assign_no}</td>\n                      <td>{p.feedback}</td>                   \n                                        \n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"3\">No Records</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </CardBody>\n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default FeedbackTab;\n","/var/www/html/Mazars_Pannel/src/pages/TL/Dashboard/Dashboard.js",["603"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\n\nfunction Dashboard() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [pendindForAccepttence, setPendingForAcceptence] = useState(\"\");\n  const [incomplete, setIncomplete] = useState(\"\");\n  const [complete, setcomplete] = useState(\"\");\n\n  useEffect(() => {\n    const getPendindForAccepttence = () => {\n      axios\n        .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setPendingForAcceptence(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getIncomplete = () => {\n      axios\n        .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setIncomplete(res.data.result.length);\n          }\n        });\n    };\n\n    const getComplete = () => {\n      axios\n        .get(`${baseUrl}/tl/getCompleteQues?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setcomplete(res.data.result.length);\n          }\n        });\n    };\n\n\n    getPendindForAccepttence();\n    getIncomplete();\n    getComplete();\n\n  }, []);\n\n  var todaysDate = new Date();\n  console.log(todaysDate);\n\n \n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-150\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Pending for Acceptance\n                  </h5>\n                </div>\n                <div>\n                <Link to={`/teamleader/queriestab`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{pendindForAccepttence}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-150\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Incomplete\n                  </h5>\n                </div>\n                <div>\n                <Link to={`/teamleader/queriestab`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{incomplete}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-150\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Complete\n                  </h5>\n                </div>\n                <div>\n                <Link to={`/teamleader/queriestab`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{complete}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Dashboard;\n\n// var todaysDate = new Date();\n//   console.log(todaysDate);\n// function convertDate(date) {\n//   var yyyy = date.getFullYear().toString();\n//   var mm = (date.getMonth() + 1).toString();\n//   var dd = date.getDate().toString();\n\n//   var mmChars = mm.split(\"\");\n//   var ddChars = dd.split(\"\");\n\n//   return (\n//     yyyy +\n//     \"-\" +\n//     (mmChars[1] ? mm : \"0\" + mmChars[0]) +\n//     \"-\" +\n//     (ddChars[1] ? dd : \"0\" + ddChars[0])\n//   );\n// }\n\n// console.log(convertDate(todaysDate));","/var/www/html/Mazars_Pannel/src/pages/TL/Login/Login.js",["604","605","606","607","608"],"import React,{useState} from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\n\n// const Schema = yup.object().shape({\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   password: yup\n//     .string()\n//     .required(\"required password\")\n//     .min(5, \"at least 5 digits\")\n//     .max(20, \"max 20 digits\"),\n// });\n\n\nfunction Login(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const [error, setError] = useState('');\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"type\", \"tl\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/login`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);     \n        if (response.data.code === 1) {\n          alert.success(\"Login successfully !\");\n          localStorage.setItem(\n            \"tlkey\",\n            JSON.stringify(response.data[\"user id\"])\n          );\n          props.history.push(\"/teamleader/dashboard\");  \n        } else\n         if (response.data.code === 0) {\n          console.log(response.data.result)\n          setError(response.data.result)\n          }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n      <Header mtl=\"mtl\"/>\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>MTL Login</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>    \n         \n            <div className=\"row\">\n              <div className=\"col-md-12\">\n              <div className=\"mb-3\">\n                  <label className=\"form-label\">User Id</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                  />\n                 \n                </div>\n                \n              </div>\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    placeholder=\"Enter Password\"\n                    ref={register}\n                  />\n                \n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Login;\n","/var/www/html/Mazars_Pannel/src/pages/TL/AddTeamProf/AddTeamProf.js",["609","610","611"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\n\nfunction AddTeamProf() {\n  const alert = useAlert();\n  const [data, setData] = useState([]);\n  const [count, setCount] = useState(\"\");\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  useEffect(() => {\n    getTaxProf();\n  }, []);\n\n  const getTaxProf = () => {\n    axios\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setData(res.data.result);\n          setCount(res.data.result.length);\n        }\n      });\n  };\n\n  // delete data\n  const del = (id) => {\n    console.log(\"del\", id);\n\n    axios\n      .get(`${baseUrl}/delete/TaxLead/${id}`)\n      .then(function (response) {\n        console.log(\"delete-\", response);\n        alert.success(\"successfully deleted \");\n        getTaxProf();\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"10\">\n              <CardTitle tag=\"h4\">Tax Professionals ({count})</CardTitle>\n            </Col>\n            <Col md=\"2\"></Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th scope=\"col\">S.No</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Phone No.</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((p, i) => (\n                <tr>\n                  <th scope=\"row\">{i + 1}</th>\n                  <td>{p.name}</td>\n                  <td>{p.email}</td>\n                  <td>{p.phone}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddTeamProf;\n","/var/www/html/Mazars_Pannel/src/pages/TL/AddAssingmentStages/AddAssingmentStages.js",["612","613","614","615","616","617","618","619","620","621"],"/var/www/html/Mazars_Pannel/src/pages/TL/QueryAssingment/QueryAssingment.js",["622","623","624","625","626","627","628","629"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams ,useHistory} from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\n\nfunction QueryAssingment() {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const { id } = useParams();\n  const history = useHistory();\n\n  const [taxProfessionDisplay, setTaxProfessionDisplay] = useState([]);\n  const [hideQuery, setHideQuery] = useState({\n    name: \"\",\n    timeline: \"\",\n    date_allocation: \"\",\n    expdeliverydate: \"\",\n  });\n\n  const [query, setQuery] = useState(true);\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const tpkey = window.localStorage.getItem(\"tpkey\");\n\n  const [queryData, setQuerData] = useState({\n    queryNo: \"\",\n    timelines: \"\",\n    custId: \"\",\n  });\n\n  const { queryNo, timelines, custId } = queryData;\n\n  useEffect(() => {\n    getTaxProfession();\n    getQueryData();\n  }, []);\n\n  const getTaxProfession = () => {\n    axios\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${JSON.parse(userId)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTaxProfessionDisplay(res.data.result);\n        }\n      });\n  };\n\n  const getQueryData = () => {\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setQuerData({\n          queryNo: res.data.result[0].assign_no,\n          timelines: res.data.result[0].Timelines,\n          custId: res.data.result[0].customer_id,\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getQuery();\n  }, [queryNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/TlCheckIfAssigned?assignno=${queryNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setQuery(false);\n          // setHideQuery(res.data.meta);\n          setHideQuery({\n            name: res.data.meta[0].name,\n            timeline: res.data.meta[0].timeline,\n            date_allocation: res.data.meta[0].date_allocation,\n            expdeliverydate: res.data.meta[0].expdeliverydate,\n          });\n        }\n      });\n  };\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    // var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n    var expdeliverydate = value.p_expdeldate.replace(\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\n      \"$3-$1-$2\"\n    );\n\n    let formData = new FormData();\n    formData.append(\"who\", JSON.parse(tpkey));\n    formData.append(\"id\", id);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"type\", \"tl\");\n    formData.append(\"types\", \"tp\");\n    formData.append(\"name\", value.p_taxprof);\n    // formData.append(\"date\", date);\n    formData.append(\"timeline\", value.p_timelines);\n    formData.append(\"expdeliverydate\", expdeliverydate);\n    formData.append(\"assignNo\", queryNo);\n    formData.append(\"customer_id\", custId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AddQueryAssignment`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"assigned  !\");\n          getQuery();\n          reset();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  console.log(hideQuery);\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\">\n       <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\">\n              <div style={{ textAlign: \"center\" }}>\n                <h2>Query Allocation</h2>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n        <div class=\"row mt-3\">\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\n         \n          <div class=\"col-md-12\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Query No.</th>\n                    <th scope=\"col\">Tax Professional</th>\n                    {/* <th scope=\"col\">Date of Allocation</th> */}\n                    <th scope=\"col\">Expected Timeline</th>\n                    <th scope=\"col\">Exp. Delivery Date</th>\n                    <th scope=\"col\">Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {query ? (\n                    <tr>\n                      <th scope=\"row\">{queryNo}</th>\n                      <td>\n                        <select\n                          class=\"form-control\"\n                          name=\"p_taxprof\"\n                          ref={register}\n                        >\n                          <option value=\"\">--select--</option>\n                          {taxProfessionDisplay.map((p, index) => (\n                            <option key={index} value={p.name}>\n                              {p.name}\n                            </option>\n                          ))}\n                        </select>\n                      </td>\n                      {/* <td>\n                        <input type=\"date\" ref={register} name=\"p_date\" />\n                      </td> */}\n                      <td>\n                        <input\n                          type=\"text\"\n                          ref={register}\n                          name=\"p_timelines\"\n                          value={timelines}\n                          class=\"form-control\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                         type=\"date\" \n                         ref={register} \n                         name=\"p_expdeldate\" \n                         class=\"form-control\"\n                         />\n                      </td>\n\n                      <td>\n                        <button type=\"submit\" class=\"btn btn-success\">\n                          Assign\n                        </button>\n                      </td>\n                    </tr>\n                  ) : (\n                    <tr>\n                      <th scope=\"row\">{queryNo}</th>\n                      <td>\n                        <select class=\"form-control w-75 p-0\" disabled>\n                          <option>{hideQuery.name}</option>\n                        </select>\n                      </td>\n                      \n                      <td>\n                        <input\n                          type=\"text\"\n                          ref={register}\n                          name=\"p_timelines\"\n                          value={hideQuery.timeline}\n                          disabled\n                          class=\"form-control\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          type=\"date\"\n                          ref={register}\n                          name=\"p_expdeldate\"\n                          value={hideQuery.expdeliverydate}\n                          disabled\n                          class=\"form-control\"\n                        />\n                      </td>\n\n                      <td>\n                        <button class=\"btn btn-success\" disabled>\n                          Assigned\n                        </button>\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </form>\n          </div>\n        </div>\n      </div>\n        </CardHeader>\n        </Card>\n     \n    </Layout>\n  );\n}\n\nexport default QueryAssingment;\n\nconst taxprof = [\n  {\n    id: \"1\",\n    name: \"harry\",\n  },\n  {\n    id: \"2\",\n    name: \"martin\",\n  },\n  {\n    id: \"3\",\n    name: \"mayur\",\n  },\n];\n","/var/www/html/Mazars_Pannel/src/pages/TL/AddNew/AddNew.js",["630","631","632"],"import React from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import './index.css'\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\"; \nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\n\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required name\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_phone: yup\n//   .string()\n//   .required(\"required phone no\")\n//   .matches(/^[0-9]+$/, \"Must be only digits\")\n//   .min(10, \"Must be exactly 10 digits\")\n//   .max(20, \"max 20 digits\"),\n// });\n\n\n\nfunction AddNew() {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"type\", \"tp\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/AddTaxProfessional`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);     \n        if (response.data.code === 1) {\n          alert.success(\"TP created  !\");\n          reset();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n\n  };\n\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"text-center\">\n            <h3>Add New Tax Professionals</h3>\n          </div>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\n          <div>\n          <form onSubmit={handleSubmit(onSubmit)}>   \n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Name</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_name\"\n                      ref={register}\n                    />\n                   \n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Email</label>\n                    <input\n                      type=\"email\"\n                      class=\"form-control\"\n                      name=\"p_email\"\n                    ref={register}\n                    />\n                    \n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Phone Number</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_phone\"\n                      ref={register}\n                    />\n                    \n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default AddNew;\n","/var/www/html/Mazars_Pannel/src/pages/TL/Proposal/Proposal.js",["633","634","635","636","637","638","639"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\n\nfunction Proposal() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [proposal, setProposal] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n  const [count, setCount] = useState(\"\");\n\n  useEffect(() => {\n    getProposalList();\n  }, []);\n  const getProposalList = () => {\n    axios\n      .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setProposal(res.data.result);\n          setCount(res.data.result.length);\n        }\n      });\n  };\n\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getProposalList();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getProposalList();\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetData ..\");\n    setSelectedData([]);\n    getProposalList();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(\n          userid\n        )}&cat_id=${selectedData}&from=${data.p_dateFrom}&to=${\n          data.p_dateTo\n        }&status=${data.p_status}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setProposal(res.data.result);\n          }\n        }\n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"9\">\n              <CardTitle tag=\"h4\">List of Proposals ({count})</CardTitle>\n            </Col>\n            <Col md=\"3\">\n              <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                {/* <Link\n                  to={`/teamleader/sendproposal/${id}`}                \n                >\n                  Send Proposal\n                </Link> */}\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                  style={{ padding: \"4px 9px\" }}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-sm-9 d-flex p-0\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mb-2 ml-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mb-2 ml-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mb-2 ml-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mb-2 ml-2\">\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">tl Accepted</option>\n                      <option value=\"2\">Pending</option>\n                      <option value=\"3\">Accepted</option>\n                      <option value=\"4\">Declined</option>\n                    </select>\n                  </div>\n\n                  <button type=\"submit\" class=\"btn btn-primary mb-2 ml-2\">\n                    <i class=\"fa fa-search\"></i>\n                  </button>\n                </form>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th>S.No.</th>\n                <th>Query No.</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th>Proposal No</th>\n                <th>Customer Name </th>\n                <th>Amount</th>\n                <th>misc1</th>\n                <th>misc2</th>\n                <th>Status</th>\n                <th style={{ textAlign: \"center\" }}>Edit</th>\n                <th style={{ textAlign: \"center\" }}>Prepare</th>\n              </tr>\n            </thead>\n            <tbody>\n              {proposal.length > 0 ? (\n                proposal.map((p, i) => (\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <th>\n                      <Link to={`/teamleader/queries/${p.id}`}>\n                        {p.assign_no}\n                      </Link>\n                    </th>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n                    <td>{p.proposal_number}</td>\n                    <td>{p.name}</td>\n                    <td>{p.amount}</td>\n                    <td>{p.misc1}</td>\n                    <td>{p.misc2}</td>\n                    <td>{p.status}</td>\n                    <td style={{ textAlign: \"center\" }}>\n                      {(p.status == \"Accepted\" || p.status == \"Pending\" ) ? (\n                        <Link to={`/teamleader/edit-proposal/${p.id}`}>\n                          <i\n                            className=\"fa fa-edit\"\n                            style={{\n                              fontSize: 18,\n                              cursor: \"pointer\",\n                              marginLeft: \"8px\",\n                              color: \"green\",\n                            }}\n                          ></i>\n                        </Link>\n                      ) : null}\n                    </td>\n\n                    <td style={{ textAlign: \"center\" }}>\n                      {p.status == \"TL Accepted\" ? (\n                        <Link to={`/teamleader/sendproposal/${p.id}`}>\n                          <i class=\"fa fa-mail-forward\"></i>\n                        </Link>\n                      ) : null}\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"6\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Proposal;\n\n// import Layout from \"../../../components/Layout/Layout\";\n\n{\n  /* <ProposalComponent /> */\n}\n","/var/www/html/Mazars_Pannel/src/pages/TL/EditTP/EditTP.js",["640","641"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useParams } from \"react-router-dom\";\n\n\nfunction EditTP() {\n  const { id } = useParams();\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n  });\n  const { name, email, phone } = user;\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tp/getTaxProfessional?id=${id}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setUser({\n            name: res.data.result[0].name,\n            email: res.data.result[0].email,\n            phone: res.data.result[0].phone,\n          });\n        }\n      });\n    };\n    getTeamLeader();\n  }, [id]);\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"id\", JSON.parse(userid));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/updateTP`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"TL updated  !\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"text-center\">\n            <h3>Edit Tax Professional</h3>\n          </div>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Name</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_name\"\n                      defaultValue={name}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Email</label>\n                    <input\n                      type=\"email\"\n                      class=\"form-control\"\n                      name=\"p_email\"\n                      defaultValue={email}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Phone Number</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_phone\"\n                      defaultValue={phone}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default EditTP;\n","/var/www/html/Mazars_Pannel/src/pages/TP/Start/Start.js",[],"/var/www/html/Mazars_Pannel/src/pages/TL/QueriesRecevied/QueriesRecevied.js",["642","643","644","645","646"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useParams ,useHistory} from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\nfunction QueriesRecevied() {\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  useEffect(() => {\n    const getQueryDetails = () => {\n      axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setAssingmentNo(res.data.result[0].assign_no);\n        }\n      });\n    };\n\n    getQueryDetails();\n    getAdditionalQuery();\n  }, [assingNo]);\n\n  const getAdditionalQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setDisplayQuery(res.data.result);\n        }\n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <p>{assingNo}</p>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {submitData.map((p, i) => (\n            <div class=\"card-body\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Titles</th>\n                    <th scope=\"col\">Data</th>\n                  </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope=\"row\">Query Status</th>\n                    <td>{p.status}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facts of the case</th>\n                    <td>{p.fact_case}</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      Timelines within which Opinion is Required\n                    </th>\n                    <td colspan=\"1\">{p.Timelines}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">specific questions</th>\n                    <td colspan=\"1\">\n                      {diaplaySpecific.map((p, i) => (\n                        <p>{p.text}</p>\n                      ))}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Documents</th>\n                    <td>\n                      {p.upload_doc_1 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_2 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_3 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Format in which Opinion is required</th>\n                    <td colspan=\"1\">\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                      <p>\n                        {p.softcopy_digitally_assigned === \"1\" &&\n                          \"SoftCopy- Digitally Signed\"}\n                      </p>\n\n                      <p>\n                        {p.printout_physically_assigned === \"1\" &&\n                          \"Printout- Physically Signed\"}\n                      </p>\n                    </td>\n                  </tr>\n                  \n                </tbody>\n              </table>\n\n              <table class=\"table table-bordered\">\n                {displayQuery.length > 0 && (\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                        Additional Queries\n                      </th>\n                      <th scope=\"col\">Date Submission</th>\n                      <th scope=\"col\">Documents</th>\n                    </tr>\n                  </thead>\n                )}\n\n                {displayQuery.map((p, i) => (\n                  <tbody>\n                    <tr key={i}>\n                      <td>{p.additional_queries}</td>\n                      <td>{p.created}</td>\n                      <td>\n                          {p.upload_doc == \"\" ? (\n                            \"\"\n                          ) : (\n                            <p>\n                              <a\n                                href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc}`}\n                              >\n                                <i class=\"fa fa-photo\"></i>\n                              </a>\n                            </p>\n                          )}\n                        </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          ))}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n\n// <div class=\"row mt-3\">\n// <div class=\"col-xl-12 col-lg-12 col-md-12\">\n//   <div class=\"\">\n//     <h2>Queries Received</h2>\n//   </div>\n//   <br />\n//   <br />\n//   <div class=\"accordion\" id=\"accordionExample\">\n//     {submitData.map((p, i) => (\n//       <div class=\"card\">\n//         <div\n//           class=\"card-header\"\n//           id=\"headingOne\"\n//           style={{ padding: \".5rem .1rem\" }}\n//         >\n//           <h2 class=\"mb-0 query\">\n//             <button\n//               class=\"btn btn-block text-left\"\n//               type=\"button\"\n//               data-toggle=\"collapse\"\n//               data-target=\"#collapseOne\"\n//               aria-expanded=\"true\"\n//               aria-controls=\"collapseOne\"\n//             >\n//               {p.AssignNo}\n//             </button>\n//             <div>\n\n//             </div>\n//           </h2>\n//         </div>\n\n//           <div class=\"card-body\">\n//           <table class=\"table table-bordered\">\n//           <thead>\n//             <tr>\n//               <th scope=\"col\">Titles</th>\n//               <th scope=\"col\">Data</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             <tr>\n//               <th scope=\"row\">Facts of the case</th>\n//               <td>{p.fact_case}</td>\n//             </tr>\n\n//             <tr>\n//               <th scope=\"row\">Purpose for which Opinion is sought</th>\n//               <td colspan=\"1\">{p.purpose_opinion}</td>\n//             </tr>\n//             <tr>\n//               <th scope=\"row\">\n//                 Timelines within which Opinion is Required\n//               </th>\n//               <td colspan=\"1\">{p.Timelines}</td>\n//             </tr>\n//             <tr>\n//               <th scope=\"row\">specific questions</th>\n//               <td colspan=\"1\">\n//                 {diaplaySpecific.map((p, i) => (\n//                   <p>{p.text}</p>\n//                 ))}\n//               </td>\n//             </tr>\n\n//             <tr>\n//               <th scope=\"row\">Documents</th>\n//               <td>\n//                 {p.upload_doc_1 == null ? (\n//                   \"\"\n//                 ) : (\n//                   <p>\n//                     <a\n//                       href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\n//                     >\n//                       <i class=\"fa fa-photo\"></i>\n//                     </a>\n//                   </p>\n//                 )}\n\n//                 {p.upload_doc_2 == null ? (\n//                   \"\"\n//                 ) : (\n//                   <p>\n//                     <a\n//                       href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\n//                     >\n//                       <i class=\"fa fa-photo\"></i>\n//                     </a>\n//                   </p>\n//                 )}\n\n//                 {p.upload_doc_3 == null ? (\n//                   \"\"\n//                 ) : (\n//                   <p>\n//                     <a\n//                       href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\n//                     >\n//                       <i class=\"fa fa-photo\"></i>\n//                     </a>\n//                   </p>\n//                 )}\n//               </td>\n//             </tr>\n//             <tr>\n//               <th scope=\"row\">Format in which Opinion is required</th>\n//               <td colspan=\"1\">\n//                 <p>\n//                   {p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}\n//                 </p>\n//                 <p>\n//                   {p.softcopy_digitally_assigned === \"1\" &&\n//                     \"SoftCopy- Digitally Signed\"}\n//                 </p>\n\n//                 <p>\n//                   {p.printout_physically_assigned === \"1\" &&\n//                     \"Printout- Physically Signed\"}\n//                 </p>\n//               </td>\n//             </tr>\n//             <tr>\n//               <th scope=\"row\">Query Status</th>\n//               <td>{p.status}</td>\n//             </tr>\n//           </tbody>\n//         </table>\n//             <table class=\"table table-bordered\">\n//               <thead>\n//                 <tr>\n//                   <th scope=\"col\" style={{ width: \"33.3%\" }}>\n//                     Additional Queries\n//                   </th>\n//                   <th scope=\"col\">Date Submission</th>\n//                   <th scope=\"col\">Documents</th>\n//                 </tr>\n//               </thead>\n//               {displayQuery.map((p, i) => (\n//                 <tbody>\n//                   <tr key={i}>\n//                   <td>{p.additional_queries}</td>\n//                     <td>{p.created}</td>\n//                     <td>{p.upload}</td>\n//                   </tr>\n//                 </tbody>\n//               ))}\n//             </table>\n//           </div>\n\n//       </div>\n//     ))}\n//   </div>\n// </div>\n// </div>\n","/var/www/html/Mazars_Pannel/src/pages/TP/Proposal/Proposal.js",["647","648","649","650","651","652"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport ProposalComponent from \"./ProposalComponent\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { Link, useParams } from \"react-router-dom\";\n\nfunction Proposal() {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [proposal, setProposal] = useState([]);\n\n  useEffect(() => {\n    const getProposalList = () => {\n      axios\n        .get(`${baseUrl}/tp/getassignedques?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setProposal(res.data.result);\n          }\n        });\n    };\n    getProposalList();\n  }, []);\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"9\">\n              <CardTitle tag=\"h4\">List of Proposals</CardTitle>\n            </Col>\n            <Col md=\"3\">\n              <div\n                style={{ display: \"flex\", justifyContent: \"space-around\" }}\n              ></div>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th>S.No.</th>\n                <th>Query No</th>\n                <th>Customer Name </th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {proposal.length > 0 ? (\n                proposal.map((p, i) => (\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td>{p.assign_no}</td>\n                    <td>{p.name}</td>\n                    <td>\n                      <Link to={`/taxprofessional/sendproposal/${p.id}`}>\n                        <i class=\"fa fa-mail-forward\"></i>\n                      </Link>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"6\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Proposal;\n\n// const assingMENT = [\n//   {\n//     \"assing\":\"8960598-76764\",\n//     \"id\":\"1\"\n//   },\n//   {\n//     \"assing\":\"8960458-76763\",\n//     \"id\":\"2\"\n//   },\n//   {\n//     \"assing\":\"8960598-76767\",\n//     \"id\":\"3\"\n//   },\n\n// ];\n","/var/www/html/Mazars_Pannel/src/pages/TP/Dashboard/Dashboard.js",["653","654","655","656","657","658","659"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\nfunction Dashboard() {\n  const [newQueries, setNewQueries] = useState([]);\n  const [incompleteData, setInCompleteData] = useState([]);\n  const [completeData, setCompleteData] = useState([]);\n\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  useEffect(() => {\n    const getNewQueries = () => {\n      axios\n        .get(`${baseUrl}/tp/getassignedques?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setNewQueries(res.data.result);\n          }\n        });\n    };\n\n    const getInCompleteAssingment = () => {\n      axios\n        .get(`${baseUrl}/tp/GetIncompleteQues?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setInCompleteData(res.data.result);\n          }\n        });\n    };\n\n    const getCompleteAssingment = () => {\n      axios\n        .get(`${baseUrl}/tp/GetCompleteQues?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setCompleteData(res.data.result);\n          }\n        });\n    };\n\n    getNewQueries();\n    getInCompleteAssingment();\n    getCompleteAssingment();\n  }, []);\n\n  // change date format\n  function ChangeFormateDate(oldDate) {\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <ul\n            class=\"nav nav-pills mb-3\"\n            style={{ justifyContent: \"space-around\" }}\n            id=\"pills-tab\"\n            role=\"tablist\"\n          >\n            <li class=\"nav-item\" role=\"presentation\">\n              <a\n                class=\"nav-link text-white active\"\n                id=\"pills-profile-tab\"\n                data-toggle=\"pill\"\n                href=\"#payment\"\n                role=\"tab\"\n                aria-controls=\"pills-profile\"\n                aria-selected=\"false\"\n              >\n                New Queries\n              </a>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n              <a\n                class=\"nav-link text-white\"\n                id=\"pills-contact-tab\"\n                data-toggle=\"pill\"\n                href=\"#incomplete\"\n                role=\"tab\"\n                aria-controls=\"pills-contact\"\n                aria-selected=\"false\"\n              >\n                Incomplete\n              </a>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n              <a\n                class=\"nav-link text-white\"\n                id=\"pills-contact-tab\"\n                data-toggle=\"pill\"\n                href=\"#complete\"\n                role=\"tab\"\n                aria-controls=\"pills-contact\"\n                aria-selected=\"false\"\n              >\n                Complete\n              </a>\n            </li>\n          </ul>\n          <div class=\"tab-content\" id=\"pills-tabContent\">\n            <div\n              class=\"tab-pane fade show active\"\n              id=\"payment\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-profile-tab\"\n            >\n              <Card>\n                <CardBody>\n                  <Table responsive=\"sm\" bordered>\n                    <thead>\n                      <tr>\n                      <th scope=\"col\">S.No</th>\n                        <th scope=\"col\">Query No .</th>\n                        <th scope=\"col\">Customer Name</th>\n                        <th scope=\"col\">Facts of the Case</th>\n                        <th scope=\"col\">Exp. Delivery Date</th>\n                        <th scope=\"col\">Assignment Stage</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {newQueries.length > 0 ? (\n                        newQueries.map((p, i) => (\n                          <tr key={i}>\n                            <td>{i+1}</td>\n                            <td scope=\"row\">\n                              <Link to={`/taxprofessional/queries/${p.id}`}>\n                                {p.assign_no}\n                              </Link>\n                            </td>\n                            <td>{p.name}</td>\n                            <td>{p.fact_case}</td>\n                            <td>{ChangeFormateDate(p.Exp_Delivery_Date)}</td>\n                            <td></td>\n                          </tr>\n                        ))\n                      ) : (\n                        <tr>\n                          <td colSpan=\"5\">No Records</td>\n                        </tr>\n                      )}\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </div>\n            <div\n              class=\"tab-pane fade\"\n              id=\"incomplete\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-contact-tab\"\n            >\n              <Card>\n                <CardBody>\n                  <Table responsive=\"sm\" bordered>\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Query No .</th>\n                        <th scope=\"col\">Customer Name</th>\n                        <th scope=\"col\">Facts of the Case</th>\n                        <th scope=\"col\">Exp. Delivery Date</th>\n                        <th scope=\"col\">Assignment Stage</th>\n                        <th scope=\"col\">Status</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {incompleteData.length > 0 ? (\n                        incompleteData.map((p, i) => (\n                          <tr>\n                            <th scope=\"row\">{p.assign_no}</th>\n                            <td>{p.name}</td>\n                            <td>{p.fact_case}</td>\n                            <td>{p.Exp_Delivery_Date}</td>\n                            <td></td>\n                            <td></td>\n                          </tr>\n                        ))\n                      ) : (\n                        <tr>\n                          <td colSpan=\"6\">No Records</td>\n                        </tr>\n                      )}\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </div>\n            <div\n              class=\"tab-pane fade\"\n              id=\"complete\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-contact-tab\"\n            >\n              {/* {completeData.map((p, i) => (\n                <div>\n                  <table class=\"table table-bordered\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Query No .</th>\n                        <th scope=\"col\">Customer Name</th>\n                        <th scope=\"col\">Delivery Date</th>\n                        <th scope=\"col\">Assignment Stage</th>\n                        <th scope=\"col\">Status</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <th scope=\"row\">{p.AssignNo}</th>\n                        <td>{p.name}</td>\n                        <td>{p.Expect}</td>\n                        <td>Client discussion</td>\n                        <td class=\"bg-success text-white\">Complete</td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\"></th>\n                        <td></td>\n                        <td></td>\n                        <td>Draft report</td>\n                        <td class=\"bg-success text-white\">Complete</td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\"></th>\n                        <td></td>\n                        <td></td>\n                        <td>Final Discussion</td>\n                        <td class=\"bg-success text-white\">Complete</td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\"></th>\n                        <td></td>\n                        <td></td>\n                        <td>Delivery of report</td>\n                        <td class=\"bg-success text-white\">Complete</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              ))} */}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Dashboard;\n","/var/www/html/Mazars_Pannel/src/pages/TP/QueriesRecevied/QueriesRecevied.js",["660","661","662","663","664"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\nfunction QueriesRecevied() {\n  const [displayData, setDisplayData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setDisplayData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setAssingmentNo(res.data.result[0].assign_no);\n        }\n      });\n    };\n\n    getSubmittedAssingment();\n    getQuery();\n  }, [assingNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setDisplayQuery(res.data.result);\n        }\n      });\n  };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <p>{assingNo}</p>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {displayData.map((p, i) => (\n            <div class=\"card-body\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Titles</th>\n                    <th scope=\"col\">Data</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Facts of the case</th>\n                    <td>{p.fact_case}</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      Timelines within which Opinion is Required\n                    </th>\n                    <td colspan=\"1\">{p.Timelines}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">specific questions</th>\n                    <td colspan=\"1\">\n                      {diaplaySpecific.map((p, i) => (\n                        <p>{p.text}</p>\n                      ))}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Documents</th>\n                    <td>\n                      {p.upload_doc_1 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_2 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_3 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Format in which Opinion is required</th>\n                    <td colspan=\"1\">\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                      <p>\n                        {p.softcopy_digitally_assigned === \"1\" &&\n                          \"SoftCopy- Digitally Signed\"}\n                      </p>\n\n                      <p>\n                        {p.printout_physically_assigned === \"1\" &&\n                          \"Printout- Physically Signed\"}\n                      </p>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Query Status</th>\n                    <td>{p.status}</td>\n                  </tr>\n                </tbody>\n              </table>\n\n              <table class=\"table table-bordered\">\n                {displayQuery.length > 0 && (\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                        Additional Queries\n                      </th>\n                      <th scope=\"col\">Date Submission</th>\n                      <th scope=\"col\">Documents</th>\n                    </tr>\n                  </thead>\n                )}\n\n                {displayQuery.map((p, i) => (\n                  <tbody>\n                    <tr key={i}>\n                      <td>{p.additional_queries}</td>\n                      <td>{p.created}</td>\n                      <td>\n                          {p.upload_doc == \"\" ? (\n                            \"\"\n                          ) : (\n                            <p>\n                              <a\n                                href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc}`}\n                              >\n                                <i class=\"fa fa-photo\"></i>\n                              </a>\n                            </p>\n                          )}\n                        </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          ))}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n\n// <div class=\"row mt-3\">\n// <div class=\"col-xl-12 col-lg-12 col-md-12\">\n//   <div class=\"\">\n//     <h2>Queries Received</h2>\n//   </div>\n//   <br />\n//   <br />\n//   <div class=\"accordion\" id=\"accordionExample\">\n//     {displayData.map((p, i) => (\n//       <div class=\"card\">\n//         <div\n//           class=\"card-header\"\n//           id=\"headingOne\"\n//           style={{ padding: \".5rem .1rem\" }}\n//         >\n//           <h2 class=\"mb-0 query\">\n//             <button\n//               class=\"btn btn-block text-left\"\n//               type=\"button\"\n//               data-toggle=\"collapse\"\n//               data-target=\"#collapseOne\"\n//               aria-expanded=\"true\"\n//               aria-controls=\"collapseOne\"\n//             >\n//               {p.AssignNo}\n//             </button>\n//           </h2>\n//         </div>\n\n//         <div class=\"card-body\">\n//           <table class=\"table table-bordered\">\n//             <thead>\n//               <tr>\n//                 <th scope=\"col\">Titles</th>\n//                 <th scope=\"col\">Data</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               <tr>\n//                 <th scope=\"row\">Facts of the case</th>\n//                 <td>{p.fact_case}</td>\n//               </tr>\n\n//               <tr>\n//                 <th scope=\"row\">Purpose for which Opinion is sought</th>\n//                 <td colspan=\"1\">{p.purpose_opinion}</td>\n//               </tr>\n//               <tr>\n//                 <th scope=\"row\">\n//                   Timelines within which Opinion is Required\n//                 </th>\n//                 <td colspan=\"1\">{p.Timelines}</td>\n//               </tr>\n//               <tr>\n//                 <th scope=\"row\">specific questions</th>\n//                 <td colspan=\"1\">\n//                   {diaplaySpecific.map((p, i) => (\n//                     <p>{p.text}</p>\n//                   ))}\n//                 </td>\n//               </tr>\n\n//               <tr>\n//                 <th scope=\"row\">Documents</th>\n//                 <td>\n//                   {p.upload_doc_1 == null ? (\n//                     \"\"\n//                   ) : (\n//                     <p>\n//                       <a\n//                         href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\n//                       >\n//                         <i class=\"fa fa-photo\"></i>\n//                       </a>\n//                     </p>\n//                   )}\n\n//                   {p.upload_doc_2 == null ? (\n//                     \"\"\n//                   ) : (\n//                     <p>\n//                       <a\n//                         href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\n//                       >\n//                         <i class=\"fa fa-photo\"></i>\n//                       </a>\n//                     </p>\n//                   )}\n\n//                   {p.upload_doc_3 == null ? (\n//                     \"\"\n//                   ) : (\n//                     <p>\n//                       <a\n//                         href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\n//                       >\n//                         <i class=\"fa fa-photo\"></i>\n//                       </a>\n//                     </p>\n//                   )}\n//                 </td>\n//               </tr>\n//               <tr>\n//                 <th scope=\"row\">Format in which Opinion is required</th>\n//                 <td colspan=\"1\">\n//                   <p>\n//                     {p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}\n//                   </p>\n//                   <p>\n//                     {p.softcopy_digitally_assigned === \"1\" &&\n//                       \"SoftCopy- Digitally Signed\"}\n//                   </p>\n\n//                   <p>\n//                     {p.printout_physically_assigned === \"1\" &&\n//                       \"Printout- Physically Signed\"}\n//                   </p>\n//                 </td>\n//               </tr>\n//               <tr>\n//                 <th scope=\"row\">Query Status</th>\n//                 <td>{p.status}</td>\n//               </tr>\n//             </tbody>\n//           </table>\n\n//           <table class=\"table table-bordered\">\n//             <thead>\n//               <tr>\n//                 <th scope=\"col\" style={{ width: \"33.3%\" }}>\n//                   Additional Queries\n//                 </th>\n//                 <th scope=\"col\">Date Submission</th>\n//                 <th scope=\"col\">Documents</th>\n//               </tr>\n//             </thead>\n//             {displayQuery.map((p, i) => (\n//               <tbody>\n//                 <tr key={i}>\n//                   <td>{p.additional_queries}</td>\n//                   <td>{p.created}</td>\n//                   <td>\n//                     <a href=\"#\">{p.upload}</a>\n//                   </td>\n//                 </tr>\n//               </tbody>\n//             ))}\n//           </table>\n//         </div>\n//       </div>\n//     ))}\n//   </div>\n// </div>\n// </div>\n","/var/www/html/Mazars_Pannel/src/pages/TP/Login/Login.js",["665","666","667","668","669"],"import React,{useState} from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\n\n\n// const Schema = yup.object().shape({\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   password: yup\n//     .string()\n//     .required(\"required password\")\n//     .min(5, \"at least 5 digits\")\n//     .max(20, \"max 20 digits\"),\n// });\n\n\nfunction Login(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const [error, setError] = useState('');\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"type\",\"tp\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/login`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);     \n        if (response.data.code === 1) {\n          alert.success(\"Login successfully !\");\n          localStorage.setItem(\n            \"tpkey\",\n            JSON.stringify(response.data[\"user id\"])\n          );\n          props.history.push(\"/taxprofessional/dashboard\");  \n        } else\n         if (response.data.code === 0) {\n          console.log(response.data.result)\n          setError(response.data.result)\n          }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n       <Header mtp=\"mtp\"/>\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>MTP Login</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>    \n         \n            <div className=\"row\">\n              <div className=\"col-md-12\">\n              <div className=\"mb-3\">\n                  <label className=\"form-label\">User Id</label>\n                  <input\n                   type=\"text\"\n                    className=\"form-control\"\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                  />\n                 \n                </div>\n                \n              </div>\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    placeholder=\"Enter Password\"\n                    ref={register}\n                  />\n                  \n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Login;\n","/var/www/html/Mazars_Pannel/src/components/Footer/Footer.js",[],"/var/www/html/Mazars_Pannel/src/components/Header/Header.js",[],"/var/www/html/Mazars_Pannel/src/config/config.js",[],"/var/www/html/Mazars_Pannel/src/components/Admin-Header/Admin-Header.js",["670","671","672","673"],"import React from \"react\";\nimport \"../../assets/css/style.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport NavWrapper from \"./NavWrapper\";\n\nfunction AdminHeader({ custUserId, adminUserId, TLuserId, TPuserId }) {\n  let history = useHistory();\n  // const userId = window.localStorage.getItem(\"userid\");\n\n  const custLogout = () => {\n    localStorage.removeItem(\"userid\");\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"uid\");\n    localStorage.removeItem(\"category\");\n    history.push(\"/customer/signin\");\n  };\n\n  const adminLogout = () => {\n    localStorage.removeItem(\"adminkey\");\n    localStorage.removeItem(\"count_PFA\");\n    history.push(\"/admin/login\");\n  };\n\n  const tlLogout = () => {\n    localStorage.removeItem(\"tlkey\");\n    history.push(\"/teamleader/login\");\n  };\n\n  const tpLogout = () => {\n    localStorage.removeItem(\"tpkey\");\n    history.push(\"/taxprofessional/login\");\n  };\n\n  const nm = window.localStorage.getItem(\"name\");\n  console.log(name);\n  var name = JSON.parse(nm);\n  // const nm = name.split(\"\")[1].toUpperCase();\n  // var a = res[1].toUpperCase()\n  // console.log(nm)\n\n  return (\n    <div>\n      <nav\n        class=\"header-navbar navbar-expand-md navbar navbar-with-menu navbar-without-dd-arrow fixed-top navbar-semi-light\"\n        sty\n      >\n        {custUserId && (\n          <NavWrapper color=\"#5E96AE\" logout={custLogout} name={name} cust=\"cust\"/>\n        )}\n\n        {adminUserId && (\n          <NavWrapper color=\"#262d47\" logout={adminLogout} name=\"Admin\" />\n        )}\n\n        {TLuserId && <NavWrapper color=\"#BC85A3\" logout={tlLogout} name=\"Team\" />}\n\n        {TPuserId && <NavWrapper color=\"#9799BA\" logout={tpLogout} name=\"Ravi\" />}\n      </nav>\n    </div>\n  );\n}\n\nexport default AdminHeader;\n\n// {adminUserId && (\n//   <ul class=\"nav navbar-nav float-right\">\n//     <li class=\"dropdown dropdown-user nav-item\">\n//       <a\n//         class=\"dropdown-toggle nav-link dropdown-user-link\"\n//         href=\"#\"\n//         data-toggle=\"dropdown\"\n//         aria-expanded=\"false\"\n//       >\n//         <span class=\"pr-2\">Admin</span>\n//         <span class=\"avatar avatar-online\">\n//           <img\n//             src=\"https://cdn1.vectorstock.com/i/1000x1000/40/30/user-glyph-icon-web-and-mobile-admin-sign-vector-18444030.jpg\"\n//             alt=\"avatar\"\n//           />\n//           <i style={{ paddingLeft: \"6px\" }}></i>\n//         </span>\n//       </a>\n\n//       <div class=\"dropdown-menu dropdown-menu-right\">\n//         <div class=\"arrow_box_right\">\n//           <p\n//             class=\"dropdown-item\"\n//             onClick={custLogout}\n//             style={{ cursor: \"pointer\" }}\n//           >\n//             <i class=\"fa fa-sign-out\"></i>\n//             Logout\n//           </p>\n//         </div>\n//       </div>\n//     </li>\n//   </ul>\n// )}\n\n// {TLuserId && (\n//   <ul class=\"nav navbar-nav float-right\">\n//     <li class=\"dropdown dropdown-user nav-item\">\n//       <a\n//         class=\"dropdown-toggle nav-link dropdown-user-link\"\n//         href=\"#\"\n//         data-toggle=\"dropdown\"\n//         aria-expanded=\"false\"\n//       >\n//         <span class=\"pr-2\">Team</span>\n//         <span class=\"avatar avatar-online\">\n//           <img\n//             src=\"https://cdn1.vectorstock.com/i/1000x1000/40/30/user-glyph-icon-web-and-mobile-admin-sign-vector-18444030.jpg\"\n//             alt=\"avatar\"\n//           />\n//           <i style={{ paddingLeft: \"6px\" }}></i>\n//         </span>\n//       </a>\n\n//       <div class=\"dropdown-menu dropdown-menu-right\">\n//         <div class=\"arrow_box_right\">\n//           <p\n//             class=\"dropdown-item\"\n//             onClick={custLogout}\n//             style={{ cursor: \"pointer\" }}\n//           >\n//             <i class=\"fa fa-sign-out\"></i>\n//             Logout\n//           </p>\n//         </div>\n//       </div>\n//     </li>\n//   </ul>\n// )}\n\n// {TPuserId && (\n//   <ul class=\"nav navbar-nav float-right\">\n//     <li class=\"dropdown dropdown-user nav-item\">\n//       <a\n//         class=\"dropdown-toggle nav-link dropdown-user-link\"\n//         href=\"#\"\n//         data-toggle=\"dropdown\"\n//         aria-expanded=\"false\"\n//       >\n//         <span class=\"pr-2\">Ravi</span>\n//         <span class=\"avatar avatar-online\">\n//           <img\n//             src=\"https://cdn1.vectorstock.com/i/1000x1000/40/30/user-glyph-icon-web-and-mobile-admin-sign-vector-18444030.jpg\"\n//             alt=\"avatar\"\n//           />\n//           <i style={{ paddingLeft: \"6px\" }}></i>\n//         </span>\n//       </a>\n\n//       <div class=\"dropdown-menu dropdown-menu-right\">\n//         <div class=\"arrow_box_right\">\n//           <p\n//             class=\"dropdown-item\"\n//             onClick={custLogout}\n//             style={{ cursor: \"pointer\" }}\n//           >\n//             <i class=\"fa fa-sign-out\"></i>\n//             Logout\n//           </p>\n//         </div>\n//       </div>\n//     </li>\n//   </ul>\n// )}\n\n{\n  /*               \n              <ul class=\"nav navbar-nav float-right\">\n                <li class=\"dropdown dropdown-user nav-item\">\n                  <a\n                    class=\"dropdown-toggle nav-link dropdown-user-link\"\n                    href=\"#\"\n                    data-toggle=\"dropdown\"\n                    aria-expanded=\"false\"\n                  >\n                    <span class=\"pr-2\">John Doe</span>\n                    <span class=\"avatar avatar-online\">\n                      <img\n                        src=\"https://cdn1.vectorstock.com/i/1000x1000/40/30/user-glyph-icon-web-and-mobile-admin-sign-vector-18444030.jpg\"\n                        alt=\"avatar\"\n                      />\n                      {\n                        custUserId &&\n                      <i style={{paddingLeft:\"6px\"}}> {name}</i>\n                    }\n\n                       {\n                        adminUserId &&\n                      <i style={{paddingLeft:\"6px\"}}>Admin</i>\n                    }\n\n                     {\n                        TLuserId &&\n                      <i style={{paddingLeft:\"6px\"}}>Team</i>\n                    }\n\n                          {\n                        TPuserId &&\n                      <i style={{paddingLeft:\"6px\"}}>Ravi</i>\n                    }\n                                       \n                    </span>\n                  </a>\n\n                  <div class=\"dropdown-menu dropdown-menu-right\">\n                    <div class=\"arrow_box_right\">\n                      <a class=\"dropdown-item\" href=\"#\">\n                        <span class=\"avatar avatar-online\">\n                          <img\n                            src=\"https://themeselection.com/demo/chameleon-free-bootstrap-admin-template/theme-assets/images/portrait/small/avatar-s-19.png\"\n                            alt=\"avatar\"\n                          />\n                          <span class=\"user-name text-bold-700 ml-1\">\n                            ghfgh\n                          </span>\n                        </span>\n                      </a>\n                    \n\n                            {\n                              custUserId \n                              &&\n                              <p class=\"dropdown-item\" onClick={custLogout} style={{cursor:\"pointer\"}}>\n                      <i class=\"fa fa-sign-out\"></i>\n                       Logout\n                      </p>\n                            }\n                      \n                        {\n                          adminUserId\n                          &&\n                          <p class=\"dropdown-item\" onClick={adminLogout} style={{cursor:\"pointer\"}}>\n                          <i class=\"fa fa-sign-out\"></i>\n                           Logout\n                          </p>\n                        }\n\n\n                        {\n                          TLuserId\n                          &&\n                          <p class=\"dropdown-item\" onClick={tlLogout} style={{cursor:\"pointer\"}}>\n                          <i class=\"fa fa-sign-out\"></i>\n                           Logout\n                          </p>\n                        }\n\n                         {\n                          TPuserId\n                          &&\n                          <p class=\"dropdown-item\" onClick={tpLogout} style={{cursor:\"pointer\"}}>\n                          <i class=\"fa fa-sign-out\"></i>\n                           Logout\n                          </p>\n                        }\n\n                      \n                      \n                    </div>\n                  </div>\n                </li>\n              </ul> */\n}\n\n{\n  /* <a class=\"dropdown-item\" href=\"#\">\n                          <span class=\"avatar avatar-online\">                        \n                            <span class=\"user-name text-bold-700 ml-1\">\n                              Change \n                            </span>\n                          \n                          </span>\n                        </a> */\n}\n","/var/www/html/Mazars_Pannel/src/components/Admin-Sidebar/Admin-Sidebar.js",["674","675"],"import { NavLink } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { Badge } from 'reactstrap';\n\n\nfunction Sidebar({ adminDashboard, custDashboard, TLDashboard, TPDashboard }) {\n  const [toggleState, setToggleState] = useState(false);\n\n  const toggleTab = (index) => {\n    console.log(index);\n    setToggleState(index);\n  };\n\n  return (\n    <>\n      <div\n        class=\"main-menu menu-fixed menu-light menu-accordion  menu-shadow \"\n        data-scroll-to-active=\"true\"\n        data-img=\"https://themeselection.com/demo/ chameleon-free-bootstrap-admin-template/theme-assets/images/backgrounds/02.jpg\"\n      >\n        <div class=\"navbar-header\">\n          <ul class=\"nav navbar-nav flex-row\">\n            <li class=\"nav-item mr-auto\">\n              <a class=\"navbar-brand\" href=\"questionnaire.html\">\n                <img\n                  class=\"brand-logo\"\n                  alt=\"Chameleon admin logo\"\n                  src=\"https://themeselection.com/demo/chameleon-free-bootstrap-admin-template/theme-assets/images/logo/logo.png\"\n                />\n                <h3 class=\"brand-text\">Mazars</h3>\n              </a>\n            </li>\n            <li class=\"nav-item d-md-none\">\n              <a class=\"nav-link close-navbar\">\n                <i class=\"fa fa-times\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"main-menu-content\">\n          {custDashboard && (\n            <ul\n              class=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n               <li class=\"nav-item active\">\n                <NavLink to={\"/customer/dashboard\"}>\n                  <i class=\"fa fa-home\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li\n                class={ toggleState && ''}\n                onClick={() => toggleTab(\"active\")}\n              >\n                <NavLink to={\"/customer/queries\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Queries \n                    {/* <Badge color=\"secondary\">New</Badge> */}\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/proposal\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Proposal\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/assignment\"}>\n                  <i class=\"fa fa-file\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Assignments\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/feedback\"}>\n                  <i class=\"fa fa-rss-square\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Feedback\n                  </span>\n                </NavLink>\n              </li>\n            </ul>\n          )}\n\n          {adminDashboard && (\n            <ul\n              class=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li class=\"active nav-item\">\n                <NavLink to={\"/admin/dashboard\"}>\n                  <i class=\"fa fa-home\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/queriestab\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/proposal\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Proposals\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/paymentstatus\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Payment Status\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/assignment\"}>\n                  <i class=\"fa fa-file\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Assignments\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/teamleaders\"}>\n                  <i class=\"fa fa-users\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Team Leaders\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/taxprofessionals\"}>\n                  <i class=\"fa fa-users\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Tax Professionals\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/feedback\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Feedback\n                  </span>\n                </NavLink>\n              </li>\n            </ul>\n          )}\n\n          {TLDashboard && (\n            <ul\n              class=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li class=\"active nav-item\">\n                <NavLink to={\"/teamleader/dashboard\"}>\n                  <i class=\"fa fa-home\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/queriestab\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/proposal\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Proposal\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/paymentstatus\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Payment Status\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/assignment\"}>\n                  <i class=\"fa fa-file\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Assignments\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/addteamprof\"}>\n                  <i class=\"fa fa-users\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    View T.P\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/feedback\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Feedback\n                  </span>\n                </NavLink>\n              </li>\n            </ul>\n          )}\n\n          {TPDashboard && (\n            <ul\n              class=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li class=\"active nav-item\">\n                <NavLink to={\"/taxprofessional/dashboard\"}>\n                  <i class=\"fa fa-home\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/taxprofessional/proposal\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Proposal\n                  </span>\n                </NavLink>\n              </li>\n            </ul>\n          )}\n        </div>\n        <div class=\"navigation-background\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default Sidebar;\n","/var/www/html/Mazars_Pannel/src/components/CategorySelect/CategorySelect.js",["676","677"],"import React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/bootstrap.min.css\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport mazars from \"../../assets/images/mazars-logo.png\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\n\nfunction CategorySelect({ addfreshbtn, startbtn }) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => {\n    if (store2) {\n      localStorage.setItem(\"category\", JSON.stringify(store2));\n    }\n    setModal(!modal);\n  };\n\n  const toggle2 = () => {\n    if (store2) {\n      localStorage.setItem(\"category\", JSON.stringify(store2));\n    }\n  };\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  \n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n  };\n\n  return (\n    <>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"15px\" }}\n      >\n        <div class=\"col-sm-3\" style={{ marginTop: \"38px\" }}>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-group\">\n              <label>Category</label>\n              <select\n                className=\"form-control\"\n                name=\"p_tax\"\n                ref={register}\n                onChange={(e) => setStore(e.target.value)}\n              >\n                <option value=\"\">--Select Category--</option>\n                {tax.map((p, index) => (\n                  <option key={index} value={p.id}>\n                    {p.details}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div class=\"form-group\">\n              <label>Sub Category</label>\n              <select\n                className=\"form-select form-control\"\n                name=\"p_tax2\"\n                ref={register}\n                onChange={(e) => setStore2(e.target.value)}\n              >\n                <option value=\"\">--Select Sub-Category--</option>\n                {tax2.map((p, index) => (\n                  <option key={index} value={p.id}>\n                    {p.details}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div class=\"form-group\">\n              {startbtn && (\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary  btn-block\"\n                  onClick={toggle}\n                >\n                  Submit\n                </button>\n              )}\n\n              {addfreshbtn && (\n                <Link\n                  to=\"/customer/addfresh\"\n                  type=\"submit\"\n                  class=\"btn btn-primary  btn-block\"\n                  onClick={toggle2}\n                >\n                  Submit\n                </Link>\n              )}\n            </div>\n          </form>\n\n          <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>\n              <img\n                src={mazars}\n                style={{ height: \"auto\", width: \"25%\" }}\n                alt=\"\"\n              />\n            </ModalHeader>\n\n            <ModalBody>\n              <div class=\"modal-body\">\n                <h4>Would you like to post a Query ?</h4>\n              </div>\n            </ModalBody>\n\n            <div class=\"modal-footer m-auto\">\n              <Link to=\"/customer/register-yourself\" class=\"btn btn-primary\">\n                Yes\n              </Link>\n              <Link to=\"/customer/signin\" class=\"btn btn-secondary\">\n                No\n              </Link>\n            </div>\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CategorySelect;\n","/var/www/html/Mazars_Pannel/src/pages/TP/Proposal/ProposalComponent.js",["678","679"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useParams } from \"react-router-dom\";\n\nfunction ProposalComponent() {\n  const alert = useAlert();\n  const { register, handleSubmit, reset } = useForm();\n\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [assignId, setAssignID] = useState(\"\");\n  const [assingNo, setAssingNo] = useState(\"\");\n  const [custId, setCustId] = useState(\"\");\n  const [custname, setCustName] = useState();\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getQuery = () => {\n      axios\n        .get(\n          `${baseUrl}/tp/getassignedques?id=${JSON.parse(\n            userid\n          )}&assign_id=${id}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result.length > 0) {\n              setAssingNo(res.data.result[0].assign_no);\n              setAssignID(res.data.result[0].id);\n            }\n          }\n        });\n    };\n    getQuery();\n  }, []);\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\n      console.log(\"res\", res);\n      setCustName(res.data.name);\n      setCustId(res.data.id);\n    };\n\n    getUser();\n  }, [id]);\n\n  const onSubmit = (value) => {\n    console.log(value);\n\n    var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n    let formData = new FormData();\n\n    formData.append(\"assign_no\", assingNo);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"type\", \"tp\");\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"amount\", value.p_amount);\n    formData.append(\"payable\", value.p_payable);\n    formData.append(\"misc1\", value.misc_1);\n    formData.append(\"misc2\", value.misc_2);\n    formData.append(\"payable_date\", value.p_date);\n    formData.append(\"customer_id\", custId);\n    formData.append(\"assign_id\", assignId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/uploadProposal`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          reset();\n          alert.success(<Msg />);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n//alert msg\nconst Msg = () =>{\n  return(\n    <>\n    <p style={{fontSize:\"10px\"}}>proposal successfully sent</p>\n    </>\n  )\n}\n\n  return (\n    <>\n      <div class=\"col-md-8\">\n        <div>\n          <h3>Send Proposal</h3>\n          <br />\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    class=\"form-control\"\n                    value={assingNo}\n                    ref={register}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Customer Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    class=\"form-control\"\n                    value={custname}\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Amount</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_amount\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by Through</label>\n                  <select\n                    class=\"form-control\"\n                    name=\"p_payable\"\n                    aria-label=\"Default select example\"\n                    ref={register}\n                  >\n                    <option value=\"\">--select--</option>\n                    {payable.map((p, index) => (\n                      <option key={index} value={p.pay}>\n                        {p.pay}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Misc 1</label>\n                  <input\n                    type=\"text\"\n                    name=\"misc_1\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Misc 2</label>\n                  <input\n                    type=\"text\"\n                    name=\"misc_2\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by date</label>\n                  <input\n                    type=\"date\"\n                    name=\"p_date\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <br />\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ProposalComponent;\n\nconst payable = [\n  { pay: \"NEFT\" },\n  { pay: \"DEBIT CARD\" },\n  { pay: \"CREDIT CARD\" },\n  { pay: \"UPI\" },\n  { pay: \"WALLET\" },\n];\n\n// {\n//   Object.entries(res.data.result).map(([key, value]) => {\n//     console.log(\"val\", value.name);\n//     setCustName(value.name);\n//   });\n// }\n\n// const getID = (key) =>{\n//   setId(key)\n\n//   incompleteData.filter((data)=>{\n//     if(data.id == key){\n//       console.log('assingNo', data.assign_no);\n//       setAssingNo(data.assign_no)\n//       setAssignID(data.id)\n//     }\n//   })\n// }\n","/var/www/html/Mazars_Pannel/src/pages/TL/Proposal/ProposalComponent.js",["680","681","682","683","684"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\nfunction ProposalComponent(props) {\n  const { id } = props;\n  console.log(id);\n\n  const alert = useAlert();\n  const { register, handleSubmit, reset } = useForm();\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [custId, setCustId] = useState(\"\");\n  const [custname, setCustName] = useState();\n  const [assignId, setAssignID] = useState(\"\");\n  const [assingNo, setAssingNo] = useState(\"\");\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const getQuery = () => {\n      axios\n        .get(\n          `${baseUrl}/tl/pendingTlProposal?tl_id=${JSON.parse(\n            userid\n          )}&assign_id=${id}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n           if(res.data.result.length > 0){\n              setAssingNo(res.data.result[0].assign_no);\n              setAssignID(res.data.result[0].id);\n            }           \n          }\n        });\n    };\n    getQuery();\n  }, []);\n\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\n      console.log(\"res\", res);\n      setCustName(res.data.name);\n      setCustId(res.data.id);\n    };\n\n    getUser();\n  }, [id]);\n\n\n \n\n\n  const onSubmit = (value) => {\n    console.log(value);\n\n    // var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n    var todaysDate = new Date()\n\n    let formData = new FormData();\n\n    formData.append(\"assign_no\", assingNo);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"type\", \"tl\");\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"amount\", value.p_amount);\n    formData.append(\"payable\", value.p_payable);\n    formData.append(\"misc1\", value.misc_1);\n    formData.append(\"misc2\", value.misc_2);\n    formData.append(\"payable_date\", todaysDate);\n    formData.append(\"customer_id\", custId);\n    formData.append(\"assign_id\", assignId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/uploadProposal`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          reset();\n          alert.success(<Msg />);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n//alert msg\n  const Msg = () =>{\n    return(\n      <>\n      <p style={{fontSize:\"10px\"}}>proposal successfully sent</p>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"7\">\n              <div class=\"btn ml-3\">\n                <h4>Prepare Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    class=\"form-control\"\n                    value={assingNo}\n                    ref={register}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Customer Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    class=\"form-control\"\n                    value={custname}\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Amount</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_amount\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by Through</label>\n                  <select\n                    class=\"form-control\"\n                    name=\"p_payable\"\n                    aria-label=\"Default select example\"\n                    ref={register}\n                  >\n                    <option value=\"\">--select--</option>\n                    {payable.map((p, index) => (\n                      <option key={index} value={p.pay}>\n                        {p.pay}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Misc 1</label>\n                  <input\n                    type=\"text\"\n                    name=\"misc_1\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Misc 2</label>\n                  <input\n                    type=\"text\"\n                    name=\"misc_2\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by date</label>\n                  <input\n                    type=\"date\"\n                    name=\"p_date\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div> */}\n\n            <br />\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default ProposalComponent;\n\nconst payable = [\n  { pay: \"NEFT\" },\n  { pay: \"DEBIT CARD\" },\n  { pay: \"CREDIT CARD\" },\n  { pay: \"UPI\" },\n  { pay: \"WALLET\" },\n];\n\n{\n  /* <div class=\"col-md-8\">\n        <div>\n          <h3>Send Proposal</h3>\n          <br />\n\n          \n        \n        </div>\n      </div> */\n}\n\n// const handleImage = (e) =>{\n//   let files = e.target.files\n//    console.log(files)\n\n//   let reader = new FileReader();\n//   reader.readAsDataURL(files[0])\n\n//  reader.onload = (e) => {\n//  console.log(\"img\", e.target.result)\n// }\n\n/* <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label>Proposal File</label>\n                <input type=\"file\" name=\"p_image\" ref={register} />\n              </div>\n            </div> */\n\n// const Schema = yup.object().shape({\n//     p_assingment: yup.string().required(\"required assingment\"),\n//     p_name: yup.string().required(\"required name\"),\n//     p_document: yup.string().required(\"required file\"),\n//   });\n\n// {\n//   Object.entries(res.data.result).map(([key, value]) => {\n//     console.log(\"val\", value.name);\n//     setCustName(value.name);\n//   });\n// }\n\n{\n  /* <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_assingment\"\n                    onChange={(e) => getID(e.target.value)}\n                  >\n                    <option value=\"\">--select--</option>\n                    {incompleteData.map((p, index) => (\n                      <option key={index} value={p.id}>\n                        {p.assign_no}\n                      </option>\n                    ))}\n                  </select> */\n}\n\n// const getID = (key) => {\n//     setId(key);\n//     incompleteData.filter((data) => {\n//       if (data.id == key) {\n//         console.log(\"assingNo\", data.assign_no);\n//         setAssingNo(data.assign_no);\n//         setAssignID(data.id);\n//       }\n//     });\n//   };\n","/var/www/html/Mazars_Pannel/src/pages/TL/CompleteData/CompleteData.js",["685","686","687","688","689","690"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nfunction CompleteData({ CountComplete }) {\n  const [completeData, setCompleteData] = useState([]);\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n\n  useEffect(() => {\n    getCompleteAssingment();\n  }, []);\n\n  const getCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/getCompleteQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          CountComplete(res.data.result.length);\n          setCompleteData(res.data.result);\n        }\n      });\n  };\n  // change date format\n  function ChangeFormateDate(oldDate) {\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getCompleteAssingment();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getCompleteAssingment();\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetData ..\");\n    setSelectedData([]);\n    getCompleteAssingment();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}//tl/getCompleteQues?id=${JSON.parse(\n          userid\n        )}&cat_id=${selectedData}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setCompleteData(res.data.result);\n          }\n        }\n      });\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-sm-9 d-flex\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-primary mb-2\">\n                    Search\n                  </button>\n                </form>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\">S.No</th>\n                <th scope=\"col\">Date</th>\n                <th scope=\"col\">Query No</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th scope=\"col\">Customer Name</th>\n\n                <th scope=\"col\">Delivery Date</th>\n                <th scope=\"col\">Assignment Stage</th>\n                <th scope=\"col\">Status</th>\n              </tr>\n            </thead>\n\n            {completeData.map((p, i) => (\n              <tbody>\n                <tr>\n                  <td>{i + 1}</td>\n                  <td>{ChangeFormateDate(p.query_date)}</td>\n                  <th>\n                    <Link to={`/teamleader/queries/${p.id}`}>\n                      {p.assign_no}\n                    </Link>\n                  </th>\n                  <td>{p.parent_id}</td>\n                  <td>{p.cat_name}</td>\n                  <td>{p.name}</td>\n                  <td>{ChangeFormateDate(p.Exp_Delivery_Date)}</td>\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>\n                      Client Discussion\n                    </span>\n                  </td>\n                  <td> {p.client_discussion}</td>\n                </tr>\n\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>Draft report </span>\n                  </td>\n                  <td> {p.draft_report}</td>\n                </tr>\n\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>Final Discussion</span>\n                  </td>\n                  <td> {p.final_discussion}</td>\n                </tr>\n\n                <tr>\n                  <td></td>\n                  <td></td>\n\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>\n                      Delivery of report\n                    </span>{\" \"}\n                  </td>\n                  <td>{p.delivery_report}</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>Others</span>{\" \"}\n                  </td>\n                  <td>{p.other_stage}</td>\n                </tr>\n              </tbody>\n            ))}\n          </table>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default CompleteData;\n","/var/www/html/Mazars_Pannel/src/pages/TL/InCompleteData/InCompleteData.js",["691","692","693","694","695","696","697","698"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\n\nfunction InCompleteData({ CountIncomplete }) {\n  const [incompleteData, setInCompleteData] = useState([]);\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n\n  useEffect(() => {\n    getInCompleteAssingment();\n  }, []);\n\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          CountIncomplete(res.data.result.length);\n          setInCompleteData(res.data.result);\n        }\n      });\n  };\n\n  // change date format\n  function ChangeFormateDate(oldDate) {\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getInCompleteAssingment();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getInCompleteAssingment();\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetData ..\");\n    setSelectedData([]);\n    getInCompleteAssingment();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(\n          userid\n        )}&cat_id=${selectedData}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setInCompleteData(res.data.result);\n          }\n        }\n      });\n  };\n\n  //change date format\n  function ChangeFormateDate(oldDate) {\n    console.log(\"date\", oldDate);\n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-sm-9 d-flex\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-primary mb-2\">\n                    Search\n                  </button>\n                </form>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\">S.No</th>\n                <th scope=\"col\">Date</th>\n                <th scope=\"col\">Query No</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th scope=\"col\">Customer Name</th>\n                <th scope=\"col\">Exp. Delivery Date</th>\n                <th>Query Allocation</th>\n              </tr>\n            </thead>\n\n            {incompleteData.map((p, i) => (\n              <tbody>\n                <tr>\n                  <td>{i + 1}</td>\n                  <td>{ChangeFormateDate(p.query_date)}</td>\n                  <th>\n                    <Link to={`/teamleader/queries/${p.id}`}>\n                      {p.assign_no}\n                    </Link>\n                  </th>\n                  <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n                  <td>{p.name}</td>\n\n                  <td>{ChangeFormateDate(p.Exp_Delivery_Date)}</td>\n\n                  <td>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-evenly\",\n                        color: \"green\",\n                      }}\n                    >\n                      <Link to={`/teamleader/queryassing/${p.id}`}>\n                        <i class=\"fa fa-share\"></i>\n                      </Link>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            ))}\n          </table>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default InCompleteData;\n\n{\n  /* <p>\n                        <span style={{ fontWeight: \"bold\" }}>\n                          Client Discussion :\n                        </span>\n                        {p.client_discussion}\n                      </p>\n                      <p>\n                        <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                        {p.draft_report}\n                      </p>\n                      <p>\n                        <span style={{ fontWeight: \"bold\" }}>\n                          Final Discussion :\n                        </span>\n                        {p.final_discussion}\n                      </p>\n                      <p>\n                        <span style={{ fontWeight: \"bold\" }}>\n                          Delivery of report :\n                        </span> \n                        {p.delivery_report}\n                      </p> */\n}\n","/var/www/html/Mazars_Pannel/src/pages/TL/PendingForAcceptence/PendingForAcceptence.js",["699","700","701","702","703","704","705"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\n\nfunction PendingForAcceptence({ CountPendingForAcceptence }) {\n  const alert = useAlert();\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [pendingData, setPendingData] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n\n  useEffect(() => {\n    getPendingforAcceptance();\n  }, []);\n\n  const getPendingforAcceptance = () => {\n    axios\n      .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setPendingData(res.data.result);\n          CountPendingForAcceptence(res.data.result.length);\n        }   \n      });\n  };\n\n\n  const acceptHandler = (key) => {\n    console.log(\"acceptHandler\", key);\n\n    let formData = new FormData();\n    formData.append(\"set\", 1);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"response-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Query accepted !\");\n          getPendingforAcceptance();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const rejectHandler = (key) => {\n    console.log(\"rejectHandler\", key);\n\n    let formData = new FormData();\n    formData.append(\"set\", 0);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Query rejected !\");\n          getPendingforAcceptance();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  //change date format\n  function ChangeFormateDate(oldDate) {\n    console.log(\"date\", oldDate);\n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n\n\n\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getPendingforAcceptance();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getPendingforAcceptance();\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetData ..\");\n    setSelectedData([]);\n    getPendingforAcceptance();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}&cat_id=${selectedData}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setPendingData(res.data.result);\n\n          }\n        }\n      });\n  };\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n        <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-sm-9 d-flex\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-primary mb-2\">\n                    Search\n                  </button>\n                </form>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div> \n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\">S.No</th>\n                <th scope=\"col\">Date.</th>\n                <th scope=\"col\">Query No </th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th scope=\"col\">Customer Name</th>\n                <th scope=\"col\">Exp. Delivery Date</th>\n                <th scope=\"col\">Accept / Reject</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {pendingData.length > 0 ? (\n                pendingData.map((p, i) => (\n                  <tr>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.query_created)}</td>\n                    <th scope=\"row\">\n                      <Link to={`/teamleader/pending/${p.id}`}>\n                        {p.assign_no}\n                      </Link>\n                    </th>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n                    <td>{p.name}</td>                  \n                    <td>{ChangeFormateDate(p.Exp_Delivery_Date)}</td>\n                    <td>\n                      <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"space-evenly\",\n                          color: \"#6967ce\",\n                          cursor: \"pointer\",\n                        }}\n                        id=\"div1\"\n                      >\n                        <div\n                          id=\"accept\"\n                          title=\"Accept Assignment\"\n                          onClick={() => acceptHandler(p)}\n                        >\n                          <i class=\"fa fa-check\" style={{ color: \"green\",fontSize:\"16px\" }}></i>\n                        </div>\n                        <div\n                          id=\"reject\"\n                          title=\"Reject Assignment\"\n                          onClick={() => rejectHandler(p)}\n                        >\n                          <i class=\"fa fa-times\" style={{ color: \"red\",fontSize:\"16px\" }}></i>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"7\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingForAcceptence;\n\n// http://13.232.121.233/mazarapi/v1/tl/AcceptRejectQuery\n\n// axios.post(`${baseUrl}/tl/AcceptRejectQuery`, formData)\n// .then(res => {\n//   console.log(res);\n//   if (res.data.code === 1) {\n//     alert.success(\"Query rejected!\");\n//     getPendingforAcceptance();\n//   }\n// });\n\n\n// set: 1\n// tlid: 128\n// assignment_id: 11\n// allocation_id: 36","/var/www/html/Mazars_Pannel/src/components/PendingForNonPayment/PendingForNonPayment.js",["706","707","708"],"/var/www/html/Mazars_Pannel/src/components/AllQueriesData/AllQueriesData.js",["709","710","711","712","713"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\n// import Filter from \"../Search-Filter/SearchFilter\";\n\nfunction AllQueriesData({ CountAllQuery }) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n\n  const [allQueriesData, setAllQueriesData] = useState([]);\n\n  useEffect(() => {\n    getAllQueriesData();\n  }, []);\n\n  const getAllQueriesData = () => {\n    axios.get(`${baseUrl}/admin/getAllQueries`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setAllQueriesData(res.data.result);\n        CountAllQuery(res.data.result.length);\n      }\n    });\n  };\n\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getAllQueriesData();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getAllQueriesData();\n  };\n\n  // //reset category\n  // const resetCategory = () => {\n  //   console.log(\"resetData ..\");\n  //   setSelectedData([]);\n  //   getAllQueriesData();\n  // };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/admin/getAllQueries?cat_id=${selectedData}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAllQueriesData(res.data.result);\n          }\n        }\n      });\n  };\n\n  // change date format\n  function ChangeFormateDate(oldDate) {\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          {/* <Filter\n            setData={setAllQueriesData}\n            getData={getAllQueriesData}\n            allquery=\"allquery\"\n          /> */}\n\n          <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n                allowClear\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              {/* <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div> */}\n            </div>\n\n            <div className=\"col-sm-9 d-flex\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-primary mb-2\">\n                    Search\n                  </button>\n                </form>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th scope=\"col\">S.No.</th>\n                <th scope=\"col\">Date</th>\n                <th scope=\"col\">Query No</th>\n                <th scope=\"col\">Category</th>\n                <th scope=\"col\">Sub Category</th>\n                <th>Customer Name</th>\n                <th>status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {allQueriesData.length > 0 ? (\n                allQueriesData.map((p, i) => (\n                  <tr>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.created)}</td>\n                    <th>\n                      <Link to={`/admin/queries/${p.id}`}>{p.assign_no}</Link>\n                    </th>\n                    <td>{p.parent_id} </td>\n                    <td>{p.cat_name}</td>\n                    <td>{p.name}</td>\n                    <td>{p.status}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"7\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AllQueriesData;\n","/var/www/html/Mazars_Pannel/src/components/PendingForProposals/PendingForProposals.js",["714","715","716","717","718","719","720"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\n\nfunction PendingForProposals({ CountPendingProposal }) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n\n  const [nonpendingData, setNonPendingData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n\n  const [history, setHistory] = useState([]);\n  const [modal, setModal] = useState(false);\n  const toggle = (key) => {\n    console.log(\"key\", key);\n    setModal(!modal);\n\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        setHistory(response.result);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    getPendingForProposals();\n  }, []);\n\n  const getPendingForProposals = () => {\n    axios.get(`${baseUrl}/admin/pendingProposal`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setNonPendingData(res.data.result);\n        CountPendingProposal(res.data.result.length);\n      }\n    });\n  };\n\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getPendingForProposals();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    // setSelectedData([]);\n    getPendingForProposals();\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetData ..\");\n    setSelectedData([]);\n    getPendingForProposals();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/admin/pendingProposal?category=${selectedData}&date1=${data.p_dateFrom}&date2=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setNonPendingData(res.data.result);\n          }\n        }\n      });\n  };\n\n  //change date format\n  function ChangeFormateDate(oldDate) {\n    console.log(\"date\", oldDate);\n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-sm-9 d-flex\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-primary mb-2\">\n                    Search\n                  </button>\n                </form>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardBody>\n          <div>\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">S.No</th>\n                  <th scope=\"col\">Date</th>\n                  <th scope=\"col\">Query No</th>\n                  <th scope=\"col\">Category</th>\n                  <th scope=\"col\">Sub Category</th>\n                  <th>Customer Name</th>\n                  <th scope=\"col\">History</th>\n                </tr>\n              </thead>\n              {nonpendingData.map((p, i) => (\n                <tbody>\n                  <tr>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.created)}</td>\n                    <th scope=\"row\">\n                      <Link to={`/admin/queries/${p.id}`}>{p.assign_no}</Link>\n                    </th>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n                    <td>{p.name}</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-info btn-sm\"\n                        onClick={() => toggle(p.id)}\n                      >\n                        View\n                      </button>\n                    </td>\n                  </tr>\n                </tbody>\n              ))}\n            </table>\n          </div>\n\n          <Modal isOpen={modal} fade={false} toggle={toggle}>\n            <ModalHeader toggle={toggle}>History</ModalHeader>\n            <ModalBody>\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"row\">S.No</th>\n                    <th scope=\"row\">Name</th>\n                    <th scope=\"row\">Query No</th>\n                    <th scope=\"row\">Status</th>\n                    <th scope=\"row\">Date of Allocation</th>\n                  </tr>\n                </thead>\n\n                {history.length > 0\n                  ? history.map((p, i) => (\n                      <tbody>\n                        <tr>\n                          <td>{i + 1}</td>\n                          <td>{p.name}</td>\n                          <td>{p.assign_no}</td>\n                          <td>{p.status}</td>\n                          <td>{ChangeFormateDate(p.date_of_allocation)}</td>\n                        </tr>\n                      </tbody>\n                    ))\n                  : null}\n              </table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={toggle}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingForProposals;\n{\n  /* <td class=\"text-center\">\n                      <p style={{ color: \"green\" }}>\n                        Query accepted by {p.tname}\n                      </p>\n                    </td> */\n}\n","/var/www/html/Mazars_Pannel/src/components/PendingForAllocation/PendingForAllocation.js",["721","722","723","724","725","726"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\n// import Filter from \"../Search-Filter/SearchFilter\";\n\nfunction PendingAllocation({ CountPendingForAllocation }) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n\n  const [pendingData, setPendingData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [history, setHistory] = useState([]);\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = (key) => {\n    console.log(\"key\", key);\n    setModal(!modal);\n\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        setHistory(response.result);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    getPendingForAllocation();\n  }, []);\n\n  const getPendingForAllocation = () => {\n    axios.get(`${baseUrl}/admin/pendingAllocation`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        CountPendingForAllocation(res.data.result.length);\n        setPendingData(res.data.result);\n        // localStorage.setItem(\n        //   \"count_PFA\",\n        //   JSON.stringify(res.data.result.length)\n        // );\n      }\n    });\n  };\n\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getPendingForAllocation();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getPendingForAllocation();\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetData ..\");\n    setSelectedData([]);\n    getPendingForAllocation();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/admin/pendingAllocation?category=${selectedData}&date1=${data.p_dateFrom}&date2=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setPendingData(res.data.result);\n          }\n        }\n      });\n  };\n\n  //change date format\n  function ChangeFormateDate(oldDate) {\n    // console.log(\"date\", oldDate);\n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          {/* <Filter\n            setData={setPendingData}\n            getData={getPendingForAllocation}\n            pendingAllocation=\"pendingAllocation\"\n          /> */}\n\n          <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-sm-9 d-flex\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-primary mb-2\">\n                    Search\n                  </button>\n                </form>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <div>\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">S.No</th>\n                  <th scope=\"col\">Date</th>\n                  <th scope=\"col\">Query No</th>\n                  <th scope=\"col\">Category</th>\n                  <th scope=\"col\">Sub Category</th>\n                  <th>Customer Name</th>\n                  <th scope=\"col\">Query Allocation</th>\n                  <th scope=\"col\">History</th>\n                </tr>\n              </thead>\n              {pendingData.map((p, i) => (\n                <tbody key={i}>\n                  <tr>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.created)}</td>\n                    <th scope=\"row\">\n                      <Link to={`/admin/pending/${p.id}`}>{p.assign_no}</Link>\n                    </th>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n                    <td>{p.name}</td>\n                    <td class=\"text-center\">\n                      {p.is_assigned === \"1\" ? (\n                        <p style={{ color: \"green\", fontSize: \"10px\" }}>\n                          Assign to {p.tname} on\n                          {p.allocation_time}\n                        </p>\n                      ) : (\n                        <Link to={`/admin/queryassing/${p.id}`}>\n                          <i class=\"fa fa-share\"></i>\n                        </Link>\n                      )}\n                    </td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-info btn-sm\"\n                        onClick={() => toggle(p.id)}\n                      >\n                        View\n                      </button>\n                    </td>\n                  </tr>\n                </tbody>\n              ))}\n            </table>\n          </div>\n\n          <Modal isOpen={modal} fade={false} toggle={toggle}>\n            <ModalHeader toggle={toggle}>History</ModalHeader>\n            <ModalBody>\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"row\">S.No</th>\n                    <th scope=\"row\">Name</th>\n                    <th scope=\"row\">Query No</th>\n                    <th scope=\"row\">Status</th>\n                    <th scope=\"row\">Date of Allocation</th>\n                  </tr>\n                </thead>\n\n                {history.length > 0\n                  ? history.map((p, i) => (\n                      <tbody>\n                        <tr>\n                          <td>{i + 1}</td>\n                          <td>{p.name}</td>\n                          <td>{p.assign_no}</td>\n                          <td>{p.status}</td>\n                          <td>{ChangeFormateDate(p.date_of_allocation)}</td>\n                        </tr>\n                      </tbody>\n                    ))\n                  : null}\n              </table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={toggle}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingAllocation;\n\n/* <td style={{ textAlign: \"center\" }}>\n                      {p.is_assigned === \"1\" && (\n                        <p style={{ color: \"green\" }}>\n                          <i class=\"fa fa-circle\" \n                          style={{fontSize:\"10px\" ,marginRight:\"4px\"}}>\n                            </i>\n                            {p.allocation_time}\n                          </p>\n                      )}\n\n                      {p.reject === \"3\" && (\n                        <p style={{ color: \"red\" }}>\n                          Query Rejected By {p.tname}\n                        </p>\n                      )}\n                    </td> */\n\n//   <Modal isOpen={addModal} toggle={addHandler} size=\"md\">\n//   <ModalHeader toggle={addHandler}>Show history</ModalHeader>\n//   <ModalBody>\n// <table class=\"table table-bordered\">\n//   <thead>\n//     <tr>\n//       <th scope=\"col\">Titles</th>\n//       <th scope=\"col\">Data</th>\n//     </tr>\n//   </thead>\n\n//   {history.length > 0\n//     ? history.map((p, i) => (\n//         <tbody>\n//           <tr>\n//             <th scope=\"row\">Name</th>\n//             <td>{p.name}</td>\n//           </tr>\n\n//           <tr>\n//             <th scope=\"row\">Date of Allocation</th>\n//             <td>{ChangeFormateDate(p.date_of_allocation)}</td>\n//           </tr>\n//           <tr>\n//             <th scope=\"row\">Query No</th>\n//             <td>{p.assign_no}</td>\n//           </tr>\n//           <tr>\n//             <th scope=\"row\">Status</th>\n//             <td>{p.status}</td>\n//           </tr>\n//         </tbody>\n//       ))\n//     : null}\n// </table>\n//   </ModalBody>\n// </Modal>\n","/var/www/html/Mazars_Pannel/src/pages/Admin/DeclinedProposal/DeclinedPropoal.js",["727","728","729","730","731"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nfunction DeclinedProposal({ declinedProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n  useEffect(() => {\n    getDeclinedProposal();\n  }, []);\n\n  const getDeclinedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?&status=6`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        declinedProposal(res.data.result.length);\n      }\n    });\n  };\n\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getDeclinedProposal();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getDeclinedProposal();\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetData ..\");\n    setSelectedData([]);\n    getDeclinedProposal();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/admin/getProposals?&status=6&cat_id=${selectedData}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setProposalDisplay(res.data.result);\n          }\n        }\n      });\n  };\n\n  // change date format\n  function ChangeFormateDate(oldDate) {\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-sm-9 d-flex\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-primary mb-2\">\n                    Search\n                  </button>\n                </form>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th>S.No</th>\n                <th>Date</th>\n                <th>Query No</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n\n                <th>Proposal No.</th>\n                <th>Proposal Sent date</th>\n                <th>Proposed Amount</th>\n                <th>Proposal Status</th>\n                <th>Amount Accepted</th>\n                <th>Assignment Number</th>\n                <th>TL name</th>\n              </tr>\n            </thead>\n            <tbody>\n              {proposalDisplay.length > 0 ? (\n                proposalDisplay.map((p, i) => (\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.created)}</td>\n                    <th>\n                      <Link to={`/admin/queries/${p.q_id}`}>{p.assign_no}</Link>\n                    </th>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n\n                    <td>{p.proposal_number}</td>\n                    <td>{ChangeFormateDate(p.DateofProposal)}</td>\n                    <td>{p.ProposedAmount}</td>\n                    <td>{p.status}</td>\n                    <td>{p.accepted_amount}</td>\n                    <td></td>\n                    <td>{p.tl_name}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"10\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default DeclinedProposal;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AcceptedProposal/AcceptedProposal.js",["732","733","734","735","736"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nfunction AcceptedProposal({ acceptedProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n  useEffect(() => {\n    getAcceptedProposal();\n  }, []);\n  const getAcceptedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?&status=5,7,8`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        acceptedProposal(res.data.result.length);\n      }\n    });\n  };\n\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getAcceptedProposal();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getAcceptedProposal();\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetData ..\");\n    setSelectedData([]);\n    getAcceptedProposal();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/admin/getProposals?&status=5,7,8&cat_id=${selectedData}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setProposalDisplay(res.data.result);\n          }\n        }\n      });\n  };\n\n  // change date format\n  function ChangeFormateDate(oldDate) {\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-sm-9 d-flex\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-primary mb-2\">\n                    Search\n                  </button>\n                </form>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th>S.No</th>\n                <th>Date</th>\n                <th>Query No</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th>Proposal No.</th>\n                <th>Proposal Sent date</th>\n                <th>Proposed Amount</th>\n                <th>Proposal Status</th>\n                <th>Amount Accepted</th>\n                <th>Assignment Number</th>\n                <th>TL name</th>\n              </tr>\n            </thead>\n            <tbody>\n              {proposalDisplay.length > 0 ? (\n                proposalDisplay.map((p, i) => (\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.created)}</td>\n                    <th>\n                      <Link to={`/admin/queries/${p.q_id}`}>{p.assign_no}</Link>\n                    </th>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n\n                    <td>{p.proposal_number}</td>\n                    <td>{ChangeFormateDate(p.DateofProposal)}</td>\n                    <td>{p.ProposedAmount}</td>\n                    <td>{p.status}</td>\n                    <td>{p.accepted_amount}</td>\n                    <td></td>\n                    <td>{p.tl_name}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"10\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AcceptedProposal;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AllProposalComponent/AllProposalComponent.js",["737","738","739","740","741"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nfunction AllProposalComponent({ allProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n\n  useEffect(() => {\n    getProposalData();\n  }, []);\n\n  const getProposalData = () => {\n    axios.get(`${baseUrl}/admin/getProposals`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        allProposal(res.data.result.length);\n      }\n    });\n  };\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getProposalData();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getProposalData();\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetData ..\");\n    setSelectedData([]);\n    getProposalData();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/admin/getProposals?cat_id=${selectedData}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setProposalDisplay(res.data.result);\n          }\n        }\n      });\n  };\n\n  //change date format\n  function ChangeFormateDate(oldDate) {\n    // console.log(\"date\",oldDate)\n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-sm-9 d-flex\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-primary mb-2\">\n                    Search\n                  </button>\n                </form>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th>S.No</th>\n                <th>Date</th>\n                <th>Query No</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th>Proposal No.</th>\n                <th>Proposal Sent date</th>\n                <th>Proposed Amount</th>\n                <th>Proposal Status</th>\n                <th>Amount Accepted</th>\n                <th>Assignment Number</th>\n                <th>TL name</th>\n              </tr>\n            </thead>\n            <tbody>\n              {proposalDisplay.length > 0 ? (\n                proposalDisplay.map((p, i) => (\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.created)}</td>\n                    <th>\n                      <Link to={`/admin/queries/${p.q_id}`}>{p.assign_no}</Link>\n                    </th>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n\n                    <td>{p.proposal_number}</td>\n                    <td>{ChangeFormateDate(p.DateofProposal)}</td>\n                    <td>{p.ProposedAmount}</td>\n                    <td>{p.status}</td>\n                    <td>{p.accepted_amount}</td>\n                    <td></td>\n                    <td>{p.tl_name}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"10\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AllProposalComponent;\n","/var/www/html/Mazars_Pannel/src/components/PendingForPayment/PendingForPayment.js",["742","743","744","745","746","747","748"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link, useParams } from \"react-router-dom\";\n\nfunction PendingForPayment({ CountPendingForPayment }) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [pendingData, setPendingData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n\n  useEffect(() => {\n    getPendingForPayment();\n  }, []);\n\n  const getPendingForPayment = () => {\n    axios.get(`${baseUrl}/admin/getProposals?&status=5,7`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setPendingData(res.data.result);\n        CountPendingForPayment(res.data.result.length);\n      }\n    });\n  };\n\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getPendingForPayment();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getPendingForPayment();\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetData ..\");\n    setSelectedData([]);\n    getPendingForPayment();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/admin/getProposals?&status=5,7&cat_id=${selectedData}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setPendingData(res.data.result);\n          }\n        }\n      });\n  };\n\n  function checkOutstading(p, a) {\n    console.log(\"paid -\", p);\n    console.log(\"acc -\", a);\n    if (p == 0) {\n      return \"0\";\n    } else return a - p;\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-sm-9 d-flex\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-primary mb-2\">\n                    Search\n                  </button>\n                </form>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th>S.No</th>\n                <th>Date</th>\n                <th>Query No.</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th>Assignment No</th>\n                <th>Amount Accepted</th>\n                <th>Payment Terms</th>\n                <th>Payments Received</th>\n                <th>Outstanding payment</th>\n              </tr>\n            </thead>\n            <tbody>\n              {pendingData.length > 0 ? (\n                pendingData.map((p, i) => (\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td></td>\n                    <th>\n                      <Link to={`/teamleader/queries/${p.id}`}>\n                        {p.assign_no}\n                      </Link>\n                    </th>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n                    <td></td>\n                    <td>{p.accepted_amount}</td>\n                    <td></td>\n                    <td>{p.paid_amount}</td>\n                    <td>{checkOutstading(p.paid_amount, p.accepted_amount)}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"10\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingForPayment;\n","/var/www/html/Mazars_Pannel/src/components/PaidComponent/PaidComponent.js",["749","750","751","752","753"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Layout from \"../Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nfunction PaidComponent() {\n  const [payment, setPayment] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n  const [paymentcount, setPaymentCount] = useState(\"\");\n\n  useEffect(() => {\n    getPaymentStatus();\n  }, []);\n\n  const getPaymentStatus = () => {\n    axios.get(`${baseUrl}/tl/getUploadedProposals`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setPayment(res.data.result);\n        setPaymentCount(res.data.result.length);\n      }\n    });\n  };\n\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getPaymentStatus();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getPaymentStatus();\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetData ..\");\n    setSelectedData([]);\n    getPaymentStatus();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/tl/getUploadedProposals?cat_id=${selectedData}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setPayment(res.data.result);\n          }\n        }\n      });\n  };\n\n  // function checkStatus(p, a) {\n  //   console.log(\"paid -\", p);\n  //   console.log(\"acc -\", a);\n\n  //   if (p > 0 && p < a) {\n  //     return \"Partial Received \";\n  //   } else if (p === a && p > 0) {\n  //     return \"Paid\";\n  //   } else {\n  //     return \"pending\";\n  //   }\n  // }\n\n  function checkOutstading(p, a) {\n    console.log(\"paid -\", p);\n    console.log(\"acc -\", a);\n    if (p == 0) {\n      return \"0\";\n    } else return a - p;\n  }\n\n  //change date format\n  function ChangeFormateDate(oldDate) {\n    // console.log(\"date\",oldDate)\n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"7\">\n              <CardTitle tag=\"h4\">Payment status ({paymentcount})</CardTitle>\n            </Col>\n            <Col md=\"5\"></Col>\n          </Row>\n        </CardHeader>\n\n        <CardHeader>\n          <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                  style={{ padding: \"4px 9px\" }}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-sm-9 d-flex p-0\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mb-2 ml-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mb-2 ml-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mb-2 ml-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mb-2 ml-2\">\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Unpaid</option>\n                      <option value=\"2\">Paid</option>\n                    </select>\n                  </div>\n\n                  <button type=\"submit\" class=\"btn btn-primary mb-2 ml-2\">\n                    <i class=\"fa fa-search\"></i>\n                  </button>\n                </form>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th>S.No</th>\n                <th>Date</th>\n                <th>Query No</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th>Proposal No</th>\n                <th>Customer Name</th>\n                <th style={{ color: \"#21a3ce\" }}>Accepted Amount</th>\n                <th style={{ color: \"#064606\" }}>Paid Amount</th>\n                <th style={{ color: \"darkred\" }}>Amount Outstanding</th>\n                <th>Status</th>\n                <th>TL name</th>\n              </tr>\n            </thead>\n            <tbody>\n              {payment.length > 0 ? (\n                payment.map((p, i) => (\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.created)}</td>\n                    <th>\n                      <Link to={`/admin/queries/${p.id}`}>{p.assign_no}</Link>\n                    </th>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n\n                    <td>{p.proposal_number}</td>\n                    <td>{p.name}</td>\n                    <td style={{ color: \"#21a3ce\" }}>{p.accepted_amount}</td>\n                    <td style={{ color: \"#064606\" }}>{p.paid_amount}</td>\n                    <td style={{ color: \"darkred\" }}>\n                      {checkOutstading(p.paid_amount, p.accepted_amount)}\n                    </td>\n                    <td>\n                      {p.status}\n                      {/* {checkStatus(\n                        Number(p.paid_amount),\n                        Number(p.accepted_amount)\n                      )} */}\n                    </td>\n                    <td>{p.tl_name}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"9\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default PaidComponent;\n","/var/www/html/Mazars_Pannel/src/pages/TL/FeedbackTab/FeedbackTab.js",["754","755"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\nfunction FeedbackTab() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [feedbackData, setFeedBackData] = useState([]);\n\n  useEffect(() => {\n    const getFeedback = () => {\n      axios\n        .get(`${baseUrl}/customers/getFeedback?tl_id=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setFeedBackData(res.data.result);\n          }\n        });\n    };\n    getFeedback();\n  }, []);\n\n  return (\n    <>\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"7\">\n                <CardTitle tag=\"h4\">Feedback Recieved</CardTitle>\n              </Col>\n              <Col md=\"5\"></Col>\n            </Row>\n          </CardHeader>\n          <CardBody>\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th>Sr. No.</th>\n                  <th>Query No</th>\n                  <th>Customer Name</th>\n                  <th>Details of feedback</th>\n                </tr>\n              </thead>\n              <tbody>\n                {feedbackData.length > 0 ? (\n                  feedbackData.map((p, i) => (\n                    <tr key={i}>\n                      <td>{i + 1}</td>\n                      <td>{p.assign_no}</td>\n                      <td>{p.name}</td>\n                      <td>{p.feedback}</td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"4\">No Records</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </CardBody>\n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default FeedbackTab;\n","/var/www/html/Mazars_Pannel/src/components/PendingForAcceptence/PendingForAcceptence.js",["756","757","758","759","760"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nfunction PendingForAcceptence({ pendingProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n  useEffect(() => {\n    getPendingAcceptedProposal();\n  }, []);\n\n  const getPendingAcceptedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?&status=4`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        pendingProposal(res.data.result.length);\n      }\n    });\n  };\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getPendingAcceptedProposal();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getPendingAcceptedProposal();\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetData ..\");\n    setSelectedData([]);\n    getPendingAcceptedProposal();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/admin/getProposals?&status=4&cat_id=${selectedData}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setProposalDisplay(res.data.result);\n          }\n        }\n      });\n  };\n\n  // change date format\n  function ChangeFormateDate(oldDate) {\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-sm-9 d-flex\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-primary mb-2\">\n                    Search\n                  </button>\n                </form>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n        <CardBody>\n          <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th>S.No</th>\n                <th>Date</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th>Query No</th>\n                <th>Proposal No.</th>\n                <th>Proposal Sent date</th>\n                <th>Proposed Amount</th>\n                <th>Proposal Status</th>\n                <th>Amount Accepted</th>\n                <th>Assignment Number</th>\n                <th>TL name</th>\n              </tr>\n            </thead>\n            <tbody>\n              {proposalDisplay.length > 0 ? (\n                proposalDisplay.map((p, i) => (\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.created)}</td>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n                    <th>\n                      <Link to={`/admin/queries/${p.q_id}`}>{p.assign_no}</Link>\n                    </th>\n                    <td>{p.proposal_number}</td>\n                    <td>{ChangeFormateDate(p.DateofProposal)}</td>\n                    <td>{p.ProposedAmount}</td>\n                    <td>{p.status}</td>\n                    <td>{p.accepted_amount}</td>\n                    <td></td>\n                    <td>{p.tl_name}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"12\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default PendingForAcceptence;\n","/var/www/html/Mazars_Pannel/src/pages/TL/PaymentStatus/PaymentStatus.js",["761","762","763","764","765","766"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\n\nfunction PaymentStatus() {\n  const alert = useAlert();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const cust_id = window.localStorage.getItem(\"userid\");\n\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n  const [count, setCount] = useState(\"\");\n  const [payment, setPayment] = useState([]);\n\n  useEffect(() => {\n    getPaymentStatus();\n  }, []);\n\n  const getPaymentStatus = () => {\n    axios.get(`${baseUrl}/tl/getUploadedProposals`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setPayment(res.data.result);\n        setCount(res.data.result.length);\n      }\n    });\n  };\n\n  // accepted proposal\n  const accepted = (key) => {\n    console.log(\"acc\", key);\n\n    let formData = new FormData();\n    formData.append(\"id\", key);\n    formData.append(\"status\", 7);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/ProposalAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          getPaymentStatus();\n          alert.success(\"accepted !\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  // rejected proposal\n  // const rejected = (key) => {\n  //   console.log(\"rej\", key);\n  // };\n\n  const makeAssignment = (key) => {\n    console.log(\"makeAssignment\", key);\n\n    let formData = new FormData();\n    formData.append(\"proposal_id\", key.id);\n    formData.append(\"q_id\", key.assign_id);\n    formData.append(\"tl_id\", JSON.parse(userid));\n    formData.append(\"customer_id\", JSON.parse(cust_id));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/MakeAssignment`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          getPaymentStatus();\n          alert.success(\"accepted assignment!\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  function checkStatus(p, a) {\n    console.log(\"paid -\", p);\n    console.log(\"acc -\", a);\n\n    if (p > 0 && p < a) {\n      return \"Partial Received \";\n    } else if (p === a && p > 0) {\n      return \"Paid\";\n    } else {\n      return \"pending\";\n    }\n  }\n\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getPaymentStatus();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getPaymentStatus();\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetData ..\");\n    setSelectedData([]);\n    getPaymentStatus();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/tl/getUploadedProposals?cat_id=${selectedData}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setPayment(res.data.result);\n          }\n        }\n      });\n  };\n\n  function checkOutstading(p, a) {\n    console.log(\"paid -\", p);\n    console.log(\"acc -\", a);\n    if (p == 0) {\n      return \"0\";\n    } else return a - p;\n  }\n\n  return (\n    <>\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"7\">\n                <CardTitle tag=\"h4\">Payment Status ({count})</CardTitle>\n              </Col>\n              <Col md=\"5\"></Col>\n            </Row>\n          </CardHeader>\n          <CardHeader>\n            <div className=\"row\">\n              <div class=\"col-sm-3 d-flex\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: \"100%\" }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleChange}\n                  optionLabelProp=\"label\"\n                  value={selectedData}\n                >\n                  <OptGroup label=\"Direct Tax\">\n                    <Option value=\"3\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Compliance</div>\n                    </Option>\n                    <Option value=\"4\" label=\"Assessment\">\n                      <div className=\"demo-option-label-item\">Assessment</div>\n                    </Option>\n                    <Option value=\"5\" label=\"Appeals\">\n                      <div className=\"demo-option-label-item\">Appeals</div>\n                    </Option>\n                    <Option value=\"6\" label=\"Advisory/opinion\">\n                      <div className=\"demo-option-label-item\">\n                        Advisory/opinion\n                      </div>\n                    </Option>\n                    <Option value=\"7\" label=\"Transfer Pricing\">\n                      <div className=\"demo-option-label-item\">\n                        Transfer Pricing\n                      </div>\n                    </Option>\n                    <Option value=\"8\" label=\"Others\">\n                      <div className=\"demo-option-label-item\">Others</div>\n                    </Option>\n                  </OptGroup>\n\n                  <OptGroup label=\"Indirect Tax\">\n                    <Option value=\"9\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Compliance</div>\n                    </Option>\n                    <Option value=\"10\" label=\"Assessment\">\n                      <div className=\"demo-option-label-item\">Assessment</div>\n                    </Option>\n                    <Option value=\"11\" label=\"Appeals\">\n                      <div className=\"demo-option-label-item\">Appeals</div>\n                    </Option>\n                    <Option value=\"12\" label=\"Advisory/opinion\">\n                      <div className=\"demo-option-label-item\">\n                        Advisory/opinion\n                      </div>\n                    </Option>\n                    <Option value=\"13\" label=\"Others\">\n                      <div className=\"demo-option-label-item\">Others</div>\n                    </Option>\n                  </OptGroup>\n                </Select>\n\n                <div>\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mb-2 ml-3\"\n                    onClick={resetCategory}\n                    style={{ padding: \"4px 9px\" }}\n                  >\n                    X\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"col-sm-9 d-flex p-0\">\n                <div>\n                  <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                    <div class=\"form-group mb-2\">\n                      <label className=\"form-select form-control\">From</label>\n                    </div>\n                    <div class=\"form-group mb-2 ml-2\">\n                      <input\n                        type=\"date\"\n                        name=\"p_dateFrom\"\n                        className=\"form-select form-control\"\n                        ref={register}\n                      />\n                    </div>\n\n                    <div class=\"form-group mb-2 ml-2\">\n                      <label className=\"form-select form-control\">To</label>\n                    </div>\n                    <div class=\"form-group mb-2 ml-2\">\n                      <input\n                        type=\"date\"\n                        name=\"p_dateTo\"\n                        className=\"form-select form-control\"\n                        ref={register}\n                      />\n                    </div>\n\n                    <div class=\"form-group mb-2 ml-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_status\"\n                        ref={register}\n                        style={{ height: \"33px\" }}\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"1\">Unpaid</option>\n                        <option value=\"2\">Paid</option>\n                      </select>\n                    </div>\n\n                    <button type=\"submit\" class=\"btn btn-primary mb-2 ml-2\">\n                      <i class=\"fa fa-search\"></i>\n                    </button>\n                  </form>\n                </div>\n\n                <div>\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mb-2 ml-3\"\n                    onClick={resetData}\n                  >\n                    Reset\n                  </button>\n                </div>\n              </div>\n            </div>\n          </CardHeader>\n\n          <CardBody>\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th>Sr. No.</th>\n                  <th>Query No</th>\n                  <th>Proposal No</th>\n                  <th>Customer Name</th>\n                  <th>Proposed Amount</th>\n                  <th style={{ color: \"#21a3ce\" }}>Accepted Amount</th>\n                  <th style={{ color: \"#064606\" }}>Paid Amount</th>\n                  <th style={{ color: \"darkred\" }}>Amount Outstanding</th>\n                  <th>status</th>\n                  {/* <th style={{ textAlign: \"center\" }}>Accept Amount</th> */}\n                  <th style={{ textAlign: \"center\" }}>Accept as Assignment</th>\n                </tr>\n              </thead>\n              <tbody>\n                {payment.length > 0 ? (\n                  payment.map((p, i) => (\n                    <tr key={i}>\n                      <td>{i + 1}</td>\n                      <td>{p.assign_no}</td>\n                      <td>{p.proposal_number}</td>\n                      <td>{p.name}</td>\n                      <td>{p.amount}</td>\n                      <td style={{ color: \"#21a3ce\" }}>{p.accepted_amount}</td>\n                      <td style={{ color: \"#064606\" }}>{p.paid_amount}</td>\n                      <td style={{ color: \"darkred\" }}>\n                        {checkOutstading(p.paid_amount, p.accepted_amount)}\n                      </td>\n                      <td>{p.status}</td>\n\n                      <td>\n                        <div\n                          title=\"Accept Assignment\"\n                          style={{\n                            cursor: \"pointer\",\n                            color: \"green\",\n                            textAlign: \"center\",\n                          }}\n                        >\n                          {p.paid_amount > 0 && p.sid < 9 && (\n                            <div>\n                              <i\n                                class=\"fa fa-check\"\n                                style={{ cursor: \"pointer\" }}\n                                onClick={() => makeAssignment(p)}\n                              ></i>\n                            </div>\n                          )}\n                        </div>\n\n                        <div\n                          title=\"Add Assignment stages\"\n                          style={{ cursor: \"pointer\", textAlign: \"center\" }}\n                        >\n                          {p.sid > 8 && (\n                            <Link to={`/teamleader/addassingment/${p.id}`}>\n                              <i class=\"fa fa-tasks\"></i>\n                            </Link>\n                          )}\n                        </div>\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"11\">No Records</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </CardBody>\n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default PaymentStatus;\n\n/* <tbody>\n              <tr>\n                  <td>1</td>\n                  <td>123</td>\n                  <td>Net banking</td>\n                  <td>\n                  <div style={{display:\"flex\", justifyContent:\"space-evenly\"}}>\n                     <div>A</div>\n                     <div>B</div>\n                  </div>  \n                  </td>               \n                </tr>\n              </tbody> */\n\n// {p.negotiated_amount === \"0\" ? (\n// <div\n//   style={{\n//     display: \"flex\",\n//     justifyContent: \"space-evenly\",\n//   }}\n// >\n//   <div style={{ cursor: \"pointer\" }}>\n//     <i\n//       class=\"fa fa-check\"\n//       onClick={() => accepted(p.assign_id)}\n//     ></i>\n//   </div>\n//   <div style={{ cursor: \"pointer\" }}>\n//     <i\n//       class=\"fa fa-times\"\n//       onClick={() => rejected(p.assign_id)}\n//     ></i>\n//   </div>\n// </div>\n// ) : null}\n\n{\n  /* <td>\n                        {p.negotiated_amount === \"0\" &&\n                        p.accepted_amount === \"0\" ? (\n                          \"\"\n                        ) : p.negotiated_amount && p.accepted_amount === \"0\" ? (\n                          <div\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"space-evenly\",\n                            }}\n                          >\n                            <div\n                              title=\"amount Accepted\"\n                              style={{ cursor: \"pointer\", color: \"orange\" }}\n                            >\n                              <i\n                                class=\"fa fa-check\"\n                                onClick={() => accepted(p.assign_id)}\n                              ></i>\n                            </div>\n                          </div>\n                        ) : (\n                          \"\"\n                        )}\n                      </td> */\n}\n","/var/www/html/Mazars_Pannel/src/views/ProposalTab/PaymentModal.js",["767","768","769"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  pay,\n  getProposalData,\n}) {\n  const { handleSubmit, register } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n\n  const { id, amount } = pay;\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"status\", 8);\n    formData.append(\"amount\", value.p_amount);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PaymentPartialAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Payment Done!\");\n          history.push(\"/customer/queries\");\n\n          getProposalData();\n          paymentHandler();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"sm\">\n        <ModalHeader toggle={paymentHandler}>Payment</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <input\n                type=\"text\"\n                name=\"p_amount\"\n                ref={register}\n                className=\"form-control\"\n                defaultValue={amount}\n                placeholder=\"enter amount\"\n              />\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Pay\n              </button>\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/var/www/html/Mazars_Pannel/src/views/ProposalTab/AcceptModal.js",["770","771","772","773"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\n\nfunction AcceptModal({ acceptedModal, acceptedHandler, id,getProposalData}) {\n    const { handleSubmit, register, reset } = useForm();\n    const alert = useAlert();\n// console.log(\"accept-id\",id)\n\n    const onSubmit = (value) => {\n      console.log(\"value :\", value);\n\n      let formData = new FormData();\n      formData.append(\"revised_text\", value.p_text);\n      formData.append(\"id\", id);\n    \n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/updateRevisedText`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"res-\", response); \n          if (response.data.code === 1) {\n            alert.success(\"Revision Submitted!\");\n            getProposalData();\n            acceptedHandler();        \n          } \n                      \n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n       });\n  };\n\n    return (\n        <div>\n              <Modal isOpen={acceptedModal} toggle={acceptedHandler} size=\"md\">\n              <ModalHeader toggle={acceptedHandler}>Add message</ModalHeader>\n              <ModalBody>\n                   <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"mb-3\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"p_text\"\n                      ref={register}\n                      placeholder=\"enter message\"\n                    />\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary\"\n                    >\n                      Submit\n                    </button>\n                  </div>\n                </form>\n              </ModalBody>\n            </Modal>\n        </div>\n    );\n}\n\nexport default AcceptModal;","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/AssignmentTab.js",["774","775","776","777","778","779","780","781","782","783","784","785"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport DraftReportModal from \"./DraftReportUpload\";\nimport FinalReportUpload from \"./FinalReportUpload\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\n\nfunction AssignmentTab() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n  const [count, setCount] = useState(\"\");\n  const [assignment, setAssignment] = useState([]);\n  const [id, setId] = useState(\"\");\n  const [finalId, setFinalId] = useState(\"\");\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setAssignment(res.data.result);\n          setCount(res.data.result.length);\n        }\n      });\n  };\n\n  // draft modal\n  const [draftModal, setDraftModal] = useState(false);\n  const uploadDraftReport = (id) => {\n    console.log(id);\n    setDraftModal(!draftModal);\n    setId(id);\n  };\n\n  // final modal\n  const [fianlModal, setFianlModal] = useState(false);\n\n  const uploadFinalReport = (id) => {\n    console.log(id);\n    setFianlModal(!fianlModal);\n    setFinalId(id);\n  };\n\n  function checkStatus(p, a) {\n    console.log(\"paid -\", p);\n    console.log(\"acc -\", a);\n\n    if (p > 0 && p < a) {\n      return \"Partial Received \";\n    } else if (p === a && p > 0) {\n      return \"Paid\";\n    } else {\n      return \"pending\";\n    }\n  }\n\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getAssignmentList();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getAssignmentList();\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetData ..\");\n    setSelectedData([]);\n    getAssignmentList();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\n          userid\n        )}&cat_id=${selectedData}&from=${data.p_dateFrom}&to=${\n          data.p_dateTo\n        }&status=${data.p_status}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignment(res.data.result);\n          }\n        }\n      });\n  };\n\n  //change date format\n  function ChangeFormateDate(oldDate) {\n    console.log(\"date\", oldDate);\n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"7\">\n              <CardTitle tag=\"h4\">Assignment ({count})</CardTitle>\n            </Col>\n            <Col md=\"5\"></Col>\n          </Row>\n        </CardHeader>\n\n        <CardHeader>\n          <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                  style={{ padding: \"4px 9px\" }}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-sm-9 d-flex p-0\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mb-2 ml-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mb-2 ml-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mb-2 ml-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mb-2 ml-2\">\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Incomplete</option>\n                      <option value=\"2\">Complete</option>\n                    </select>\n                  </div>\n\n                  <button type=\"submit\" class=\"btn btn-primary mb-2 ml-2\">\n                    <i class=\"fa fa-search\"></i>\n                  </button>\n                </form>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardBody>\n          <Table responsive=\"sm\" bordered>\n            <thead class=\"table_head\">\n              <tr>\n                <th>S.No</th>\n                <th>Date of Query</th>\n                <th>Query No</th>\n                <th>Assignment No</th>\n                <th>Assignment Date</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th>Proposed date of Completion</th>\n                {/* <th>Assignment Stage</th> */}\n                <th>Status</th>\n                <th>Time taken for Completion</th>\n                <th> Report</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            {assignment.map((p, i) => (\n              <tbody class=\"table_bdy\">\n                <tr key={i}>\n                  <td>{i + 1}</td>\n                  <td>{ChangeFormateDate(p.date_of_query)}</td>\n                  <th>\n                    <Link to={`/admin/queries/${p.q_id}`}>{p.assign_no}</Link>\n                  </th>\n                  <td>{p.assignment_number}</td>\n                  <td>{p.assignment_date}</td>\n                  <td>{p.parent_id}</td>\n                  <td>{p.cat_name}</td>\n                  <td></td>\n                  {/* <td>\n                    <span style={{ fontWeight: \"bold\" }}>\n                      Client Discussion\n                    </span>\n                  </td> */}\n                  <td>{p.status}</td>\n                  <td></td>\n\n                  <td style={{ textAlign: \"center\" }}>\n                    {!p.final_report == \"\" ? (\n                      <div>\n                        <a\n                          href={`http://13.232.121.233/mazarapi/assets/upload/report/${p.final_report}`}\n                        >\n                          <i\n                            class=\"fa fa-file-text\"\n                            style={{ fontSize: \"16px\" }}\n                          ></i>{\" \"}\n                          final\n                        </a>\n                      </div>\n                    ) : p.assignement_draft_report ? (\n                      <div>\n                        <a\n                          href={`http://13.232.121.233/mazarapi/assets/upload/report/${p.assignment_draft_report}`}\n                        >\n                          <i\n                            class=\"fa fa-file-text\"\n                            style={{ fontSize: \"16px\" }}\n                          ></i>{\" \"}\n                          draft\n                        </a>\n                      </div>\n                    ) : null}\n                  </td>\n                  <td>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"space-between\",\n                      }}\n                    >\n                      <div title=\"upload Pdf\">\n                        <p\n                          style={{ cursor: \"pointer\", color: \"green\" }}\n                          onClick={() => uploadDraftReport(p.id)}\n                        >\n                          <i\n                            class=\"fa fa-upload\"\n                            style={{ fontSize: \"16px\" }}\n                          ></i>\n                          draft\n                        </p>\n                      </div>\n\n                      <div title=\"upload Pdf\">\n                        <p\n                          style={{ cursor: \"pointer\", color: \"red\" }}\n                          onClick={() => uploadFinalReport(p)}\n                        >\n                          {p.client_discussion == \"completed\" &&\n                          p.delivery_report == \"completed\" &&\n                          p.draft_report == \"completed\" &&\n                          p.final_discussion == \"completed\" &&\n                          p.amount == p.paid_amount ? (\n                            <div>\n                              <i\n                                class=\"fa fa-upload\"\n                                style={{ fontSize: \"16px\" }}\n                              ></i>\n                              final\n                            </div>\n                          ) : (\n                            \"\"\n                          )}\n                        </p>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n                {/* <tr>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>Draft report</span>\n                  </td>\n                  <td> {p.draft_report}</td>\n\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                </tr>\n\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>Final Discussion</span>\n                  </td>\n                  <td> {p.final_discussion}</td>\n\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                </tr>\n\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>\n                      Delivery of report\n                    </span>\n                  </td>\n                  <td> {p.delivery_report}</td>\n\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>Complete</span>\n                  </td>\n                  <td> {p.other_stage}</td>\n\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                </tr>\n                */}\n              </tbody>\n            ))}\n          </Table>\n\n          <DraftReportModal\n            draftModal={draftModal}\n            uploadDraftReport={uploadDraftReport}\n            getAssignmentList={getAssignmentList}\n            id={id}\n          />\n\n          <FinalReportUpload\n            fianlModal={fianlModal}\n            uploadFinalReport={uploadFinalReport}\n            getAssignmentList={getAssignmentList}\n            id={finalId}\n          />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AssignmentTab;\n\n// http://13.232.121.233/mazarapi/assets/upload/report/{dra}\n\n// {Number(p.paid_amount) > 0 &&\n//   Number(p.accepted_amount) > Number(p.paid_amount)\n//     ? \"Partial Received\"\n//     : Number(p.accepted_amount) == Number(p.paid_amount)\n//     ? \"Full Received\"\n//     : \"pending\"}\n\n{\n  /* <Link to={`http://13.232.121.233/mazarapi/assets/upload/report/${p.assignement_draft_report}`}>\n                          <i class=\"fa fa-file-text\"></i>\n                      </Link> */\n}\n\n{\n  /* <a\n                            href={`http://13.232.121.233/mazarapi/assets/upload/report/draft_210311120314_6049c472265c6_csv`}\n                          > */\n}\n","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/DraftReportUpload.js",["786","787","788","789"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\n\nfunction DraftReport({ draftModal, uploadDraftReport ,id ,getAssignmentList}) {\n  const alert = useAlert();\n    const { handleSubmit, register, reset } = useForm();\n\n    const onSubmit = (value) => {\n      console.log(\"value :\", value);\n\n      let formData = new FormData();\n      formData.append(\"draft_report\", value.p_draft[0]);\n      formData.append(\"id\", id);\n       \n      axios.post(`${baseUrl}/tl/UploadReport`, formData, {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      }).then(response => {\n        console.log(response.data)\n        alert.success(<Msg />);\n        getAssignmentList();\n        uploadDraftReport();\n      });\n       \n  };\n\n//alert msg\n  const Msg = () =>{\n    return(\n      <>\n      <p style={{fontSize:\"12px\"}}>draft Report uploaded</p>\n      </>\n    )\n  }\n    return (\n        <div>\n              <Modal isOpen={draftModal} toggle={uploadDraftReport} size=\"md\">\n              <ModalHeader toggle={uploadDraftReport}>Draft Report</ModalHeader>\n              <ModalBody>\n                   <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"mb-3\">\n                  <input\n                    type=\"file\"\n                    name=\"p_draft\"\n                    ref={register}\n                    className=\"form-control-file\"\n                  />\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary\"\n                    >\n                      Upload\n                    </button>\n                  </div>\n                </form>\n              </ModalBody>\n            </Modal>\n        </div>\n    );\n}\n\nexport default DraftReport;\n\n // let formData = new FormData();\n      // formData.append(\"draft_report\", value.p_draft[0]);\n      // formData.append(\"id\", id);\n    \n      // axios({\n      //   method: \"POST\",\n      //   headers: {\n      //     'content-type': 'multipart/form-data'\n      //   },\n      //   url: `${baseUrl}/tl/UploadReport`,\n      //   data: formData,\n      // })\n      //   .then(function (response) {\n      //     console.log(\"res-\", response);  \n      //     uploadDraftReport();            \n      //   })\n      //   .catch((error) => {\n      //     console.log(\"erroror - \", error);\n      //  });\n\n\n// axios.post(`${baseUrl}/tl/UploadReport`, formData, {\n//   headers: {\n//     'content-type': 'multipart/form-data'\n//   }\n// }).then(response => {\n//   console.log(response.data)\n// });\n\n\n// formData.append('draft_report',{\n//   uri: value.p_draft[0].uri,\n//   name: value.p_draft[0].name,\n//   type: value.p_draft[0].type}\n// );\n\n\n\n// axios({\n//   method: \"post\",\n//   url: \"myurl\",\n//   data: bodyFormData,\n//   headers: { \"Content-Type\": \"multipart/form-data\" },\n// })\n//   .then(function (response) {\n \n//     console.log(response);\n//   })\n//   .catch(function (response) {\n\n//     console.log(response);\n//   });","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/FinalReportUpload.js",["790","791","792","793"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\n\nfunction DraftReport({ fianlModal, uploadFinalReport, id, getAssignmentList }) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n\n\n  console.log(\"id-\",id)\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"final_report\", value.p_final[0]);\n    formData.append(\"id\", id.id);\n    formData.append(\"q_id\", id.q_id);\n\n    axios\n      .post(`${baseUrl}/tl/UploadReport`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        alert.success(<Msg />);\n        getAssignmentList();\n        uploadFinalReport();\n      });\n  };\n\n  //alert msg\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"12px\" }}>final report uploaded</p>\n      </>\n    );\n  };\n  return (\n    <div>\n      <Modal isOpen={fianlModal} toggle={uploadFinalReport} size=\"md\">\n        <ModalHeader toggle={uploadFinalReport}>Final Report</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <input\n                type=\"file\"\n                name=\"p_final\"\n                ref={register}\n                className=\"form-control-file\"\n              />\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Upload\n              </button>\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default DraftReport;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/PendingForPaymentProposal/PendingForPaymentProposal.js",["794","795","796"],"/var/www/html/Mazars_Pannel/src/pages/TL/SendProposal/SendProposal.js",["797","798"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {  useParams } from \"react-router-dom\";\nimport ProposalComponent from \"../Proposal/ProposalComponent\";\n\n\nfunction SendProposal() {\n    const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  return (\n    <>\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n        <ProposalComponent id={id}/>\n      </Layout>\n    </>\n  );\n}\n\nexport default SendProposal;\n","/var/www/html/Mazars_Pannel/src/views/ProposalReceived/ProposalReceived.js",["799","800","801","802","803"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nfunction ProposalReceived() {\n  const [proposalDetails, setProposalDetails] = useState([]);\n\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    const getProposalDetails = () => {\n      axios\n        .get(\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\n            userId\n          )}&assign_id=${id}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setProposalDetails(res.data.result);\n          }\n        });\n    };\n\n    getProposalDetails();\n  }, []);\n\n  //outstanding amount\n  function checkOutstading(p, a) {\n    console.log(\"paid -\", p);\n    console.log(\"acc -\", a);\n    if (p == 0) {\n      return \"0\";\n    } else return a - p;\n  }\n\n\n //change date format\n function ChangeFormateDate(oldDate) {\n  console.log(\"date\",oldDate)\n  if(oldDate == null){\n    return null\n  }\n  return oldDate.toString().split(\"-\").reverse().join(\"-\");\n}\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Proposal Details</p>\n            </Col>\n            <Col\n              md=\"4\"\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            ></Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {proposalDetails.length > 0\n            ? proposalDetails.map((p, i) => (\n                <div class=\"card-body\">\n                  <table class=\"table table-bordered\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Titles</th>\n                        <th scope=\"col\">Data</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <th scope=\"row\">Date</th>\n                        <td>{ChangeFormateDate(p.created)}</td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\">Proposal No</th>\n                        <td>{p.proposal_number}</td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\">Category</th>\n                        <td>{p.parent_id}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Sub Category</th>\n                        <td>{p.cat_name}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Status of Proposal</th>\n                        <td>{p.status}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Date of Proposal</th>\n                        <td>{ChangeFormateDate(p.DateofProposal)}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Proposed Amount</th>\n                        <td>{p.ProposedAmount}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Negotiated Amount</th>\n                        <td>{p.negotiated_amount}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Amount Accepted</th>\n                        <td>{p.accepted_amount}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Amount Paid</th>\n                        <td>{p.paid_amount}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Date of Payment</th>\n                        <td>{ChangeFormateDate(p.pay_date)}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Amount Outstanding</th>\n                        <td>\n                          {checkOutstading(p.paid_amount, p.accepted_amount)}\n                        </td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\">Date of acceptance of Proposal</th>\n                        <td>{ChangeFormateDate(p.acpt_reject_time)}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              ))\n            : \"\"}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ProposalReceived;\n","/var/www/html/Mazars_Pannel/src/pages/TL/QueriesTab/QueriesTab.js",["804","805","806","807","808"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\n\nimport PendingForAcceptence from \"../PendingForAcceptence/PendingForAcceptence\";\nimport InCompleteData from \"../InCompleteData/InCompleteData\";\nimport CompleteData from \"../CompleteData/CompleteData\";\n\nfunction QueriesTab() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [pendingAcceptence, setPendingAcceptence] = useState(\"\");\n  const [incomplete, setIncomplete] = useState(\"\");\n  const [complete, setComplete] = useState(\"\");\n\n\n  const CountPendingForAcceptence = (data) => {\n    setPendingAcceptence(data);\n  };\n\n  const CountIncomplete = (data) => {\n    setIncomplete(data);\n  };\n\n  const CountComplete = (data) => {\n    setComplete(data);\n  };\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <ul\n            class=\"nav nav-pills mb-3\"\n            style={{ justifyContent: \"space-around\" }}\n            id=\"pills-tab\"\n            role=\"tablist\"\n          >\n            <li class=\"nav-item\" role=\"presentation\">\n              <a\n                class=\"nav-link text-white active\"\n                id=\"pills-pending-tab\"\n                data-toggle=\"pill\"\n                href=\"#pending\"\n                role=\"tab\"\n                aria-controls=\"pills-pending\"\n                aria-selected=\"false\"\n              >\n                Pending for Acceptance ({pendingAcceptence})\n              </a>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n              <a\n                class=\"nav-link text-white\"\n                id=\"pills-incomplete-tab\"\n                data-toggle=\"pill\"\n                href=\"#incomplete\"\n                role=\"tab\"\n                aria-controls=\"pills-incomplete\"\n                aria-selected=\"false\"\n              >\n                Incomplete ({incomplete})\n              </a>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n              <a\n                class=\"nav-link text-white\"\n                id=\"pills-complete-tab\"\n                data-toggle=\"pill\"\n                href=\"#complete\"\n                role=\"tab\"\n                aria-controls=\"pills-complete\"\n                aria-selected=\"false\"\n              >\n                Complete ({complete})\n              </a>\n            </li>\n          </ul>\n          <div class=\"tab-content\" id=\"pills-tabContent\">\n            <div\n              class=\"tab-pane fade show active\"\n              id=\"pending\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-pending-tab\"\n            >\n              <PendingForAcceptence\n                CountPendingForAcceptence={CountPendingForAcceptence}\n              />\n            </div>\n\n            <div\n              class=\"tab-pane fade\"\n              id=\"incomplete\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-incomplete-tab\"\n            >\n              <InCompleteData CountIncomplete={CountIncomplete} />\n            </div>\n\n            <div\n              class=\"tab-pane fade\"\n              id=\"complete\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-complete-tab\"\n            >\n              <CompleteData CountComplete={CountComplete}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n//  {pendingData.map((p, i) => (\n\n//  <PendingForAcceptence\n//  p={p}\n//  getPendingforAcceptance={getPendingforAcceptance}/>\n//  ))}\n","/var/www/html/Mazars_Pannel/src/pages/TP/SendProposal/SendProposal.js",["809","810"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import {  useParams } from \"react-router-dom\";\nimport ProposalComponent from \"../Proposal/ProposalComponent\";\n\n\nfunction SendProposal() {\n\n  const userid = window.localStorage.getItem(\"tpkey\");\n  return (\n    <>\n      <Layout TPDashboard=\"TPDashboard\" TLuserId={userid}>\n        <ProposalComponent />\n      </Layout>\n    </>\n  );\n}\n\nexport default SendProposal;\n","/var/www/html/Mazars_Pannel/src/pages/TL/EditProposal/EditProposal.js",["811","812","813","814","815","816","817","818","819","820","821"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory , useParams} from \"react-router-dom\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n  } from \"reactstrap\";\n\nfunction ProposalComponent() {\n  // const { id } = props;\n  // console.log(id);\n\n  const alert = useAlert();\n  const { register, handleSubmit, reset } = useForm();\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [custId, setCustId] = useState(\"\");\n  const [custname, setCustName] = useState();\n  const [assignId, setAssignID] = useState(\"\");\n  const [assingNo, setAssingNo] = useState(\"\");\n\n   const history = useHistory();\n   const { id } = useParams();\n\n    const [proposal, setProposal] = useState({\n    query: \"\",\n    name: \"\",\n    amount: \"\",\n    payable: \"\",\n    misc1: \"\",\n    misc2: \"\",\n    payable_through:\"\"\n  });\n  const { query, name, amount,misc1,misc2 ,payable_through} = proposal;\n\n  useEffect(() => {  \n    getQuery();\n  }, []);\n\n  const getQuery = () => {\n    axios\n      .get(\n        `${baseUrl}/tl/getProposalDetail?id=${id}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setProposal({\n            name: res.data.result.name,\n            query: res.data.result.assign_no,\n            amount: res.data.result.amount,\n            misc1: res.data.result.misc1,\n            misc2: res.data.result.misc2,\n            payable_through: res.data.result.payable_through,\n          });\n        }\n      });\n  };\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\n      console.log(\"res\", res);\n      // setCustName(res.data.name);\n      setCustId(res.data.id);\n    };\n    getUser();\n  }, [id]);\n\n\n\n  console.log(assignId);\n\n\n\n  const onSubmit = (value) => {\n    console.log(value);\n\n    // var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n    var todaysDate = new Date()\n    let formData = new FormData();\n\n    formData.append(\"assign_no\", value.p_assingment);\n    formData.append(\"name\", value.p_name);\n    // formData.append(\"type\", \"tl\");\n    formData.append(\"assign_id\", id);\n    formData.append(\"amount\", value.p_amount);\n    formData.append(\"payable_through\", value.p_payable);\n    formData.append(\"misc1\", value.misc_1);\n    formData.append(\"misc2\", value.misc_2);\n    // formData.append(\"payable_date\", todaysDate);\n    // formData.append(\"customer_id\", custId);\n    // formData.append(\"assign_id\", assignId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/updateProposal`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          // reset();\n          getQuery();\n          alert.success(<Msg />);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n//alert msg\nconst Msg = () =>{\n  return(\n    <>\n    <p style={{fontSize:\"10px\"}}>proposal updated</p>\n    </>\n  )\n}\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n         <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n            <button class=\"btn btn-success ml-3\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"7\">\n            <div class=\"btn ml-3\">               \n                <h4>Edit Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n        \n        <CardBody>\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    class=\"form-control\"\n                    value={query}\n                    ref={register}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Customer Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    class=\"form-control\"\n                    value={name}\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Amount</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_amount\"\n                    class=\"form-control\"\n                    ref={register}\n                    defaultValue={amount}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by Through</label>\n                  <select\n                    class=\"form-control\"\n                    name=\"p_payable\"\n                    aria-label=\"Default select example\"\n                    ref={register}\n                    defaultValue={payable_through}\n                  >\n                    <option value=\"\">--select--</option>\n                    {payable.map((p, index) => (\n                      <option key={index} value={p.pay}>\n                        {p.pay}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Misc 1</label>\n                  <input\n                    type=\"text\"\n                    name=\"misc_1\"\n                    class=\"form-control\"\n                    ref={register}\n                    defaultValue={misc1}\n                  />\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Misc 2</label>\n                  <input\n                    type=\"text\"\n                    name=\"misc_2\"\n                    class=\"form-control\"\n                    ref={register}\n                    defaultValue={misc2}\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by date</label>\n                  <input\n                    type=\"date\"\n                    name=\"p_date\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div> */}\n\n            <br />\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </CardBody>\n        </Card>\n    \n    </Layout>\n  );\n}\n\nexport default ProposalComponent;\n\nconst payable = [\n  { pay: \"NEFT\" },\n  { pay: \"DEBIT CARD\" },\n  { pay: \"CREDIT CARD\" },\n  { pay: \"UPI\" },\n  { pay: \"WALLET\" },\n];\n\n\n\n\n","/var/www/html/Mazars_Pannel/src/pages/Admin/PendingReceived/PendingRecevived.js",["822","823","824","825","826","827"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\n\nfunction PendingRecevied() {\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setAssingmentNo(res.data.result[0].assign_no);\n        }\n      });\n    };\n\n    getSubmittedAssingment();\n    getQuery();\n  }, [assingNo]);\n\n  console.log(assingNo);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setDisplayQuery(res.data.result);\n        }\n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <p>{assingNo}</p>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {submitData.map((p, i) => (\n            <div class=\"card-body\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Titles</th>\n                    <th scope=\"col\">Data</th>\n                  </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope=\"row\">Query Status</th>\n                    <td>{p.status}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facts of the case</th>\n                    <td>{p.fact_case}</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      Timelines within which Opinion is Required\n                    </th>\n                    <td colspan=\"1\">{p.Timelines}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">specific questions</th>\n                    <td colspan=\"1\">\n                      {diaplaySpecific.map((p, i) => (\n                        <p>{p.text}</p>\n                      ))}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Documents</th>\n                    <td>\n                      {p.upload_doc_1 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_2 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_3 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Format in which Opinion is required</th>\n                    <td colspan=\"1\">\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                      <p>\n                        {p.softcopy_digitally_assigned === \"1\" &&\n                          \"SoftCopy- Digitally Signed\"}\n                      </p>\n\n                      <p>\n                        {p.printout_physically_assigned === \"1\" &&\n                          \"Printout- Physically Signed\"}\n                      </p>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Action</th>\n                    <td>\n                    {p.allocation_status == \"0\" || p.allocation_status == \"3\"  ? (\n                        <Link to={`/admin/queryassing/${p.id}`}>\n                        <i class=\"fa fa-share\"></i>\n                      </Link>\n                      ) : (                  \n                       null\n                      )}\n                    </td>\n                  </tr>\n                 \n                </tbody>\n              </table>\n\n              <table class=\"table table-bordered\">\n                {displayQuery.length > 0 && (\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                        Additional Queries\n                      </th>\n                      <th scope=\"col\">Date Submission</th>\n                      <th scope=\"col\">Documents</th>\n                    </tr>\n                  </thead>\n                )}\n\n                {displayQuery.map((p, i) => (\n                  <tbody>\n                    <tr key={i}>\n                      <td>{p.additional_queries}</td>\n                      <td>{p.created}</td>\n                      <td>\n                        {p.upload_doc == \"\" ? (\n                          \"\"\n                        ) : (\n                          <p>\n                            <a\n                              href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc}`}\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                          </p>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          ))}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default PendingRecevied;\n","/var/www/html/Mazars_Pannel/src/pages/TL/PendingReceived/PendingReceived.js",["828","829","830","831","832"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\n\nfunction PendingRecevied() {\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const alert = useAlert();\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  useEffect(() => {\n    getQueryDetails();\n    getAdditionalQuery();\n  }, [assingNo]);\n\n  const getQueryDetails = () => {\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setSubmitData(res.data.result);\n        setDisplaySpecific(res.data.additional_queries);\n        setAssingmentNo(res.data.result[0].assign_no);\n      }\n    });\n  };\n\n  const getAdditionalQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setDisplayQuery(res.data.result);\n        }\n      });\n  };\n\n\n\n\n  const acceptHandler = (key) => {\n    console.log(\"acceptHandler\", key);\n\n    let formData = new FormData();\n    formData.append(\"set\", 1);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"response-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Query accepted\");\n          history.goBack()\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const rejectHandler = (key) => {\n    console.log(\"rejectHandler\", key);\n\n    let formData = new FormData();\n    formData.append(\"set\", 0);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Query rejected\");\n          history.goBack()\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n \n\n  \n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <p>{assingNo}</p>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {submitData.map((p, i) => (\n            <div class=\"card-body\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Titles</th>\n                    <th scope=\"col\">Data</th>\n                  </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope=\"row\">Query Status</th>\n                    <td>{p.status}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facts of the case</th>\n                    <td>{p.fact_case}</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      Timelines within which Opinion is Required\n                    </th>\n                    <td colspan=\"1\">{p.Timelines}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">specific questions</th>\n                    <td colspan=\"1\">\n                      {diaplaySpecific.map((p, i) => (\n                        <p>{p.text}</p>\n                      ))}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Documents</th>\n                    <td>\n                      {p.upload_doc_1 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_2 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_3 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Format in which Opinion is required</th>\n                    <td colspan=\"1\">\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                      <p>\n                        {p.softcopy_digitally_assigned === \"1\" &&\n                          \"SoftCopy- Digitally Signed\"}\n                      </p>\n\n                      <p>\n                        {p.printout_physically_assigned === \"1\" &&\n                          \"Printout- Physically Signed\"}\n                      </p>\n                    </td>\n                  </tr>\n                  \n                  <tr>\n                    <th scope=\"row\">Accept / Reject</th>\n                    <td>\n                    <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"space-evenly\",\n                          color: \"#6967ce\",\n                          cursor: \"pointer\",\n                        }}\n                        id=\"div1\"\n                      >\n                        <div\n                          id=\"accept\"\n                          title=\"Accept Assignment\"\n                          onClick={() => acceptHandler(p)}\n                        >\n                          <i class=\"fa fa-check\" style={{ color: \"green\" }}></i>\n                        </div>\n                        <div\n                          id=\"reject\"\n                          title=\"Reject Assignment\"\n                          onClick={() => rejectHandler(p)}\n                        >\n                          <i class=\"fa fa-times\" style={{ color: \"red\" }}></i>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n\n              <table class=\"table table-bordered\">\n                {displayQuery.length > 0 && (\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                        Additional Queries\n                      </th>\n                      <th scope=\"col\">Date Submission</th>\n                      <th scope=\"col\">Documents</th>\n                    </tr>\n                  </thead>\n                )}\n\n                {displayQuery.map((p, i) => (\n                  <tbody>\n                    <tr key={i}>\n                      <td>{p.additional_queries}</td>\n                      <td>{p.created}</td>\n                      <td>\n                        {p.upload_doc == \"\" ? (\n                          \"\"\n                        ) : (\n                          <p>\n                            <a\n                              href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc}`}\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                          </p>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          ))}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default PendingRecevied;\n","/var/www/html/Mazars_Pannel/src/components/Search-Filter/SearchFilter.js",["833","834","835","836"],"/var/www/html/Mazars_Pannel/src/components/Admin-Header/NavWrapper.js",["837","838"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavWrapper(props) {\n  const { color, logout, name, cust } = props;\n\n  return (\n    <>\n      <div class=\"navbar-wrapper\">\n        <div class=\"navbar-container\" style={{ background: color }}>\n          <div class=\"collapse navbar-collapse show\" id=\"navbar-mobile\">\n            <ul class=\"nav navbar-nav mr-auto float-left\">\n              <li class=\"nav-item d-block d-md-none\">\n                <a\n                  class=\"nav-link nav-menu-main menu-toggle hidden-xs is-active\"\n                  href=\"#\"\n                >\n                  <i class=\"fa fa-bars\"></i>\n                </a>\n              </li>\n\n              <li class=\"nav-item dropdown navbar-search\">\n                <ul class=\"dropdown-menu\">\n                  <li class=\"arrow_box\">\n                    <form>\n                      <div class=\"input-group search-box\">\n                        <div class=\"position-relative has-icon-right full-width\">\n                          <input\n                            class=\"form-control\"\n                            id=\"search\"\n                            type=\"text\"\n                            placeholder=\"Search here...\"\n                          />\n                          <div class=\"form-control-position navbar-search-close\">\n                            <i class=\"fa fa-times\"> </i>\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  </li>\n                </ul>\n              </li>\n            </ul>\n\n            <ul class=\"nav navbar-nav float-right\">\n              <li class=\"dropdown dropdown-user nav-item\">\n                <a\n                  class=\"dropdown-toggle nav-link dropdown-user-link\"\n                  href=\"#\"\n                  data-toggle=\"dropdown\"\n                  aria-expanded=\"false\"\n                >\n                  <span class=\"pr-2\">{name}</span>\n                  <span class=\"avatar avatar-online\">\n                    <img\n                      src=\"https://cdn1.vectorstock.com/i/1000x1000/40/30/user-glyph-icon-web-and-mobile-admin-sign-vector-18444030.jpg\"\n                      alt=\"avatar\"\n                    />\n                    <i style={{ paddingLeft: \"6px\" }}></i>\n                  </span>\n                </a>\n\n                <div class=\"dropdown-menu dropdown-menu-right\">\n                  <div class=\"arrow_box_right\">\n                    {cust && (\n                      <p class=\"dropdown-item\" style={{ cursor: \"pointer\" }}>\n                        <i class=\"fa fa-sign-out\"></i>\n                        <Link to=\"/customer/change-password\">\n                          Change Password\n                        </Link>\n                      </p>\n                    )}\n\n                    <p\n                      class=\"dropdown-item\"\n                      onClick={logout}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <i class=\"fa fa-sign-out\"></i>\n                      Logout\n                    </p>\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default NavWrapper;\n","/var/www/html/Mazars_Pannel/src/components/Search-Filter/CustomerFilter.js",["839","840","841","842","843","844","845","846"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { useForm } from \"react-hook-form\";\n\nfunction CustomerFilter(props) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n\n  const { setData, getData, id, query, proposal, assignment } = props;\n\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getData();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getData();\n  };\n\n  // //reset category\n  // const resetCategory = () => {\n  //   console.log(\"resetData ..\");\n  //   setSelectedData([]);\n  //   getData();\n  // };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    console.log(\"proposal :\", data.p_status);\n\n    if (query == \"query\") {\n      axios\n        .get(\n          `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(\n            id\n          )}&cat_id=${selectedData}&from=${data.p_dateFrom}&to=${\n            data.p_dateTo\n          }&status=${data.p_status}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n\n    if (proposal == \"proposal\") {\n      axios\n        .get(\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\n            id\n          )}&cat_id=${selectedData}&from=${data.p_dateFrom}&to=${\n            data.p_dateTo\n          }&status=${data.p_status}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n\n    if (assignment == \"assignment\") {\n      axios\n        .get(\n          `${baseUrl}/customers/completeAssignments?user=${JSON.parse(\n            id\n          )}&cat_id=${selectedData}&from=${data.p_dateFrom}&to=${\n            data.p_dateTo\n          }&status=${data.p_status}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <div class=\"col-sm-4 d-flex\">\n          <Select\n            mode=\"multiple\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Select Category\"\n            defaultValue={[]}\n            onChange={handleChange}\n            optionLabelProp=\"label\"\n            value={selectedData}\n            allowClear\n          >\n            <OptGroup label=\"Direct Tax\">\n              <Option value=\"3\" label=\"Compilance\">\n                <div className=\"demo-option-label-item\">Compliance</div>\n              </Option>\n              <Option value=\"4\" label=\"Assessment\">\n                <div className=\"demo-option-label-item\">Assessment</div>\n              </Option>\n              <Option value=\"5\" label=\"Appeals\">\n                <div className=\"demo-option-label-item\">Appeals</div>\n              </Option>\n              <Option value=\"6\" label=\"Advisory/opinion\">\n                <div className=\"demo-option-label-item\">Advisory/opinion</div>\n              </Option>\n              <Option value=\"7\" label=\"Transfer Pricing\">\n                <div className=\"demo-option-label-item\">Transfer Pricing</div>\n              </Option>\n              <Option value=\"8\" label=\"Others\">\n                <div className=\"demo-option-label-item\">Others</div>\n              </Option>\n            </OptGroup>\n\n            <OptGroup label=\"Indirect Tax\">\n              <Option value=\"9\" label=\"Compilance\">\n                <div className=\"demo-option-label-item\">Compliance</div>\n              </Option>\n              <Option value=\"10\" label=\"Assessment\">\n                <div className=\"demo-option-label-item\">Assessment</div>\n              </Option>\n              <Option value=\"11\" label=\"Appeals\">\n                <div className=\"demo-option-label-item\">Appeals</div>\n              </Option>\n              <Option value=\"12\" label=\"Advisory/opinion\">\n                <div className=\"demo-option-label-item\">Advisory/opinion</div>\n              </Option>\n              <Option value=\"13\" label=\"Others\">\n                <div className=\"demo-option-label-item\">Others</div>\n              </Option>\n            </OptGroup>\n          </Select>\n\n          {/* <div>\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary mb-2 ml-3\"\n              onClick={resetCategory}\n              style={{ padding: \"4px 9px\" }}\n            >\n              X\n            </button>\n          </div> */}\n        </div>\n\n        <div className=\"col-sm-8 d-flex p-0\">\n          <div>\n            <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"form-group mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n              <div class=\"form-group mb-2 ml-1\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  style={{width:\"90%\"}}\n                />\n              </div>\n\n              <div class=\"form-group mb-2 ml-1\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n              <div class=\"form-group mb-2 ml-1\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  style={{width:\"90%\"}}\n\n                />\n              </div>\n\n              <div class=\"form-group mb-2 ml-1\">\n              {query == \"query\" && (\n                  <select\n                    className=\"form-select form-control\"\n                    name=\"p_status\"\n                    ref={register}\n                    style={{ height: \"33px\" }}\n                  >\n                    <option value=\"\">--select--</option>\n                    <option value=\"1\">Inprogress</option>\n                    <option value=\"2\">Progress</option>\n                    <option value=\"3\">Complete</option>\n                  </select>\n                )}\n\n                {assignment == \"assignment\" && (\n                  <select\n                    className=\"form-select form-control\"\n                    name=\"p_status\"\n                    ref={register}\n                    style={{ height: \"33px\" }}\n                  >\n                    <option value=\"\">--select--</option>\n                    <option value=\"1\">InProgress</option>\n                    <option value=\"2\">Complete</option>\n                  </select>\n                )}\n                {proposal == \"proposal\" && (\n                  <select\n                    className=\"form-select form-control\"\n                    name=\"p_status\"\n                    ref={register}\n                    style={{ height: \"33px\" }}\n                  >\n                    <option value=\"\">--select--</option>\n                    <option value=\"1\">Pending</option>\n                    <option value=\"2\">Accepted</option>\n                    <option value=\"3\">Declined</option>\n                  </select>\n                )}\n              </div>\n\n              <button type=\"submit\" class=\"btn btn-primary mb-2 ml-1\">\n                <i class=\"fa fa-search\"></i>\n              </button>\n            </form>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary mb-2 ml-2\"\n              onClick={resetData}\n            >\n            <i class=\"fa fa-refresh\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CustomerFilter;\n\n// http://13.232.121.233/mazarapi/v1/customers/incompleteAssignments?user=93&cat_id=&from=2021-03-20&to=2021-03-20\n","/var/www/html/Mazars_Pannel/src/views/ForgetPassword/ForgetPassword.js",["847","848"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n// import NewPassword from \"../NewPassword/NewPassword\";\n\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required user id\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n});\n\nfunction ForgetPassword(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [error, setError] = useState(\"\");\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"user_id\", value.p_name);\n    formData.append(\"email\", value.p_email);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/forgototp`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"otp send your email !\");\n          props.history.push(\"/customer/new-password\");\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          setError(response.data.result);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <p className=\"error\">{error && error}</p>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">User Id</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"p_name\"\n                ref={register}\n                placeholder=\"Enter user id\"\n              />\n              <p className=\"error\">{errors.p_name && errors.p_name.message}</p>\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Email</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"p_email\"\n                ref={register}\n                placeholder=\"Enter Email\"\n              />\n              <p className=\"error\">\n                {errors.p_email && errors.p_email.message}\n              </p>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n","/var/www/html/Mazars_Pannel/src/views/NewPassword/NewPassword.js",["849"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required user id\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_code: yup.string().required(\"required otp \"),\n  p_password: yup.string().required(\"required password\"),\n  p_confirm_password: yup.string().required(\"required confirm password\"),\n});\n\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [error, setError] = useState(\"\");\n  \n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"user_id\", value.p_name);\n    formData.append(\"email\", value.p_email);\n    formData.append(\"code\", value.p_code);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"reset password successfully!\");\n          reset();\n          props.history.push(\"/customer/signin\");\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          setError(response.data.result);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Reset Password</h2>\n          </div>\n          <p className=\"error\">{error && error}</p>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-group\">\n              <div className=\"mb-3\">\n                <label className=\"form-label\">User Id</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"p_name\"\n                  ref={register}\n                  placeholder=\"Enter user id\"\n                />\n                <p className=\"error\">\n                  {errors.p_name && errors.p_name.message}\n                </p>\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Email</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"p_email\"\n                  ref={register}\n                  placeholder=\"Enter Email\"\n                />\n                <p className=\"error\">\n                  {errors.p_email && errors.p_email.message}\n                </p>\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Enter code</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"p_code\"\n                  ref={register}\n                  placeholder=\"Enter code\"\n                />\n                <p className=\"error\">\n                  {errors.p_code && errors.p_code.message}\n                </p>\n              </div>\n              <label className=\"form-label\">New Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className=\"form-control\"\n                placeholder=\"Enter Your Password\"\n                name=\"p_password\"\n                ref={register}\n              />\n              <p className=\"error\">\n                {errors.p_password && errors.p_password.message}\n              </p>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Confirm Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className=\"form-control\"\n                placeholder=\"Confirm Password\"\n                name=\"p_confirm_password\"\n                ref={register}\n              />\n              <p className=\"error\">\n                {errors.p_confirm_password && errors.p_confirm_password.message}\n              </p>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default NewPassword;\n","/var/www/html/Mazars_Pannel/src/views/ChangePassword/ChangePassword.js",["850","851","852"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required user id\"),\n  p_password: yup.string().required(\"required password\"),\n  p_confirm_password: yup.string().required(\"required confirm password\"),\n});\n\nfunction ChangePassword(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [error, setError] = useState(\"\");\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"id\", JSON.parse(userId));\n    formData.append(\"user_id\", value.p_name);\n    formData.append(\"password\", value.password);\n    formData.append(\"rpassword\", value.confirm_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/passChange`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"change password successfully!\");\n          reset();\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          setError(response.data.result);\n          reset();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div className=\"container\">\n        <div className=\"form\">\n        <div className=\"heading\">\n            <h2>Change Password</h2>\n          </div>\n        <p className=\"error\">{error && error}</p>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-group\">\n              <div className=\"mb-3\">\n                <label className=\"form-label\">User Id</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"p_name\"\n                  ref={register}\n                  placeholder=\"Enter user id\"\n                />\n                 <p className=\"error\">\n                  {errors.p_name && errors.p_name.message}\n                </p>\n              </div>\n\n              <label className=\"form-label\">New Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className=\"form-control\"\n                placeholder=\"Enter Your Password\"\n                name=\"p_password\"\n                ref={register}\n              />\n               <p className=\"error\">\n                  {errors.p_password && errors.p_password.message}\n                </p>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Confirm Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className=\"form-control\"\n                placeholder=\"Confirm Password\"\n                name=\"p_confirm_password\"\n                ref={register}\n              />\n               <p className=\"error\">\n                  {errors.p_confirm_password && errors.p_confirm_password.message}\n                </p>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default ChangePassword;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/TeamLeaderTab/Header/index.js",[],"/var/www/html/Mazars_Pannel/src/components/FontawsomeIcons/index.js",[],"/var/www/html/Mazars_Pannel/src/components/DataTable/Header/index.js",[],{"ruleId":"853","replacedBy":"854"},{"ruleId":"855","replacedBy":"856"},{"ruleId":"857","severity":1,"message":"858","line":1,"column":17,"nodeType":"859","messageId":"860","endLine":1,"endColumn":26},{"ruleId":"857","severity":1,"message":"861","line":95,"column":8,"nodeType":"859","messageId":"860","endLine":95,"endColumn":25},{"ruleId":"857","severity":1,"message":"862","line":96,"column":8,"nodeType":"859","messageId":"860","endLine":96,"endColumn":22},{"ruleId":"857","severity":1,"message":"863","line":97,"column":8,"nodeType":"859","messageId":"860","endLine":97,"endColumn":22},{"ruleId":"864","severity":1,"message":"865","line":212,"column":11,"nodeType":"866","messageId":"867","endLine":226,"endColumn":78},{"ruleId":"864","severity":1,"message":"865","line":227,"column":11,"nodeType":"866","messageId":"867","endLine":227,"endColumn":19},{"ruleId":"857","severity":1,"message":"868","line":3,"column":10,"nodeType":"859","messageId":"860","endLine":3,"endColumn":21},{"ruleId":"857","severity":1,"message":"869","line":4,"column":13,"nodeType":"859","messageId":"860","endLine":4,"endColumn":16},{"ruleId":"857","severity":1,"message":"870","line":34,"column":35,"nodeType":"859","messageId":"860","endLine":34,"endColumn":41},{"ruleId":"871","severity":1,"message":"872","line":115,"column":23,"nodeType":"873","messageId":"874","endLine":115,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":116,"column":16,"nodeType":"877","messageId":"878","endLine":116,"endColumn":18},{"ruleId":"857","severity":1,"message":"868","line":6,"column":10,"nodeType":"859","messageId":"860","endLine":6,"endColumn":21},{"ruleId":"857","severity":1,"message":"869","line":7,"column":13,"nodeType":"859","messageId":"860","endLine":7,"endColumn":16},{"ruleId":"857","severity":1,"message":"870","line":17,"column":36,"nodeType":"859","messageId":"860","endLine":17,"endColumn":42},{"ruleId":"857","severity":1,"message":"868","line":7,"column":10,"nodeType":"859","messageId":"860","endLine":7,"endColumn":21},{"ruleId":"857","severity":1,"message":"869","line":8,"column":13,"nodeType":"859","messageId":"860","endLine":8,"endColumn":16},{"ruleId":"857","severity":1,"message":"870","line":18,"column":36,"nodeType":"859","messageId":"860","endLine":18,"endColumn":42},{"ruleId":"857","severity":1,"message":"858","line":2,"column":27,"nodeType":"859","messageId":"860","endLine":2,"endColumn":36},{"ruleId":"857","severity":1,"message":"879","line":21,"column":35,"nodeType":"859","messageId":"860","endLine":21,"endColumn":40},{"ruleId":"864","severity":1,"message":"865","line":116,"column":1,"nodeType":"866","messageId":"867","endLine":132,"endColumn":2},{"ruleId":"880","severity":1,"message":"881","line":67,"column":6,"nodeType":"882","endLine":67,"endColumn":8,"suggestions":"883"},{"ruleId":"857","severity":1,"message":"884","line":3,"column":10,"nodeType":"859","messageId":"860","endLine":3,"endColumn":14},{"ruleId":"857","severity":1,"message":"885","line":4,"column":41,"nodeType":"859","messageId":"860","endLine":4,"endColumn":52},{"ruleId":"880","severity":1,"message":"886","line":96,"column":6,"nodeType":"882","endLine":96,"endColumn":16,"suggestions":"887"},{"ruleId":"875","severity":1,"message":"876","line":471,"column":41,"nodeType":"877","messageId":"878","endLine":471,"endColumn":43},{"ruleId":"857","severity":1,"message":"868","line":5,"column":10,"nodeType":"859","messageId":"860","endLine":5,"endColumn":21},{"ruleId":"857","severity":1,"message":"869","line":8,"column":13,"nodeType":"859","messageId":"860","endLine":8,"endColumn":16},{"ruleId":"857","severity":1,"message":"870","line":15,"column":35,"nodeType":"859","messageId":"860","endLine":15,"endColumn":41},{"ruleId":"857","severity":1,"message":"858","line":2,"column":27,"nodeType":"859","messageId":"860","endLine":2,"endColumn":36},{"ruleId":"857","severity":1,"message":"868","line":3,"column":10,"nodeType":"859","messageId":"860","endLine":3,"endColumn":21},{"ruleId":"857","severity":1,"message":"869","line":4,"column":13,"nodeType":"859","messageId":"860","endLine":4,"endColumn":16},{"ruleId":"857","severity":1,"message":"885","line":9,"column":41,"nodeType":"859","messageId":"860","endLine":9,"endColumn":52},{"ruleId":"857","severity":1,"message":"870","line":20,"column":35,"nodeType":"859","messageId":"860","endLine":20,"endColumn":41},{"ruleId":"864","severity":1,"message":"865","line":370,"column":1,"nodeType":"866","messageId":"867","endLine":381,"endColumn":2},{"ruleId":"864","severity":1,"message":"865","line":408,"column":1,"nodeType":"866","messageId":"867","endLine":440,"endColumn":2},{"ruleId":"857","severity":1,"message":"868","line":3,"column":10,"nodeType":"859","messageId":"860","endLine":3,"endColumn":21},{"ruleId":"857","severity":1,"message":"869","line":4,"column":13,"nodeType":"859","messageId":"860","endLine":4,"endColumn":16},{"ruleId":"857","severity":1,"message":"870","line":19,"column":35,"nodeType":"859","messageId":"860","endLine":19,"endColumn":41},{"ruleId":"880","severity":1,"message":"881","line":38,"column":6,"nodeType":"882","endLine":38,"endColumn":8,"suggestions":"888"},{"ruleId":"889","severity":1,"message":"890","line":143,"column":27,"nodeType":"891","endLine":143,"endColumn":39},{"ruleId":"889","severity":1,"message":"890","line":143,"column":54,"nodeType":"891","endLine":143,"endColumn":66},{"ruleId":"889","severity":1,"message":"890","line":144,"column":27,"nodeType":"891","endLine":144,"endColumn":39},{"ruleId":"857","severity":1,"message":"892","line":13,"column":3,"nodeType":"859","messageId":"860","endLine":13,"endColumn":8},{"ruleId":"857","severity":1,"message":"893","line":29,"column":10,"nodeType":"859","messageId":"860","endLine":29,"endColumn":16},{"ruleId":"880","severity":1,"message":"894","line":46,"column":6,"nodeType":"882","endLine":46,"endColumn":8,"suggestions":"895"},{"ruleId":"875","severity":1,"message":"876","line":131,"column":11,"nodeType":"877","messageId":"878","endLine":131,"endColumn":13},{"ruleId":"875","severity":1,"message":"876","line":235,"column":43,"nodeType":"877","messageId":"878","endLine":235,"endColumn":45},{"ruleId":"875","severity":1,"message":"876","line":236,"column":42,"nodeType":"877","messageId":"878","endLine":236,"endColumn":44},{"ruleId":"875","severity":1,"message":"876","line":237,"column":42,"nodeType":"877","messageId":"878","endLine":237,"endColumn":44},{"ruleId":"880","severity":1,"message":"896","line":24,"column":6,"nodeType":"882","endLine":24,"endColumn":8,"suggestions":"897"},{"ruleId":"875","severity":1,"message":"876","line":107,"column":40,"nodeType":"877","messageId":"878","endLine":107,"endColumn":42},{"ruleId":"857","severity":1,"message":"898","line":5,"column":10,"nodeType":"859","messageId":"860","endLine":5,"endColumn":18},{"ruleId":"880","severity":1,"message":"899","line":42,"column":6,"nodeType":"882","endLine":42,"endColumn":8,"suggestions":"900"},{"ruleId":"857","severity":1,"message":"901","line":82,"column":12,"nodeType":"859","messageId":"860","endLine":82,"endColumn":22},{"ruleId":"864","severity":1,"message":"865","line":156,"column":1,"nodeType":"866","messageId":"867","endLine":193,"endColumn":2},{"ruleId":"880","severity":1,"message":"902","line":135,"column":6,"nodeType":"882","endLine":135,"endColumn":8,"suggestions":"903"},{"ruleId":"857","severity":1,"message":"868","line":4,"column":10,"nodeType":"859","messageId":"860","endLine":4,"endColumn":21},{"ruleId":"857","severity":1,"message":"869","line":5,"column":13,"nodeType":"859","messageId":"860","endLine":5,"endColumn":16},{"ruleId":"857","severity":1,"message":"870","line":25,"column":35,"nodeType":"859","messageId":"860","endLine":25,"endColumn":41},{"ruleId":"857","severity":1,"message":"879","line":25,"column":43,"nodeType":"859","messageId":"860","endLine":25,"endColumn":48},{"ruleId":"857","severity":1,"message":"904","line":26,"column":10,"nodeType":"859","messageId":"860","endLine":26,"endColumn":15},{"ruleId":"857","severity":1,"message":"868","line":4,"column":10,"nodeType":"859","messageId":"860","endLine":4,"endColumn":21},{"ruleId":"857","severity":1,"message":"869","line":5,"column":13,"nodeType":"859","messageId":"860","endLine":5,"endColumn":16},{"ruleId":"857","severity":1,"message":"905","line":12,"column":3,"nodeType":"859","messageId":"860","endLine":12,"endColumn":11},{"ruleId":"857","severity":1,"message":"906","line":13,"column":3,"nodeType":"859","messageId":"860","endLine":13,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":14,"column":3,"nodeType":"859","messageId":"860","endLine":14,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":15,"column":3,"nodeType":"859","messageId":"860","endLine":15,"endColumn":6},{"ruleId":"857","severity":1,"message":"892","line":16,"column":3,"nodeType":"859","messageId":"860","endLine":16,"endColumn":8},{"ruleId":"857","severity":1,"message":"909","line":17,"column":3,"nodeType":"859","messageId":"860","endLine":17,"endColumn":10},{"ruleId":"857","severity":1,"message":"870","line":25,"column":35,"nodeType":"859","messageId":"860","endLine":25,"endColumn":41},{"ruleId":"857","severity":1,"message":"879","line":25,"column":43,"nodeType":"859","messageId":"860","endLine":25,"endColumn":48},{"ruleId":"857","severity":1,"message":"868","line":4,"column":10,"nodeType":"859","messageId":"860","endLine":4,"endColumn":21},{"ruleId":"857","severity":1,"message":"869","line":5,"column":13,"nodeType":"859","messageId":"860","endLine":5,"endColumn":16},{"ruleId":"857","severity":1,"message":"905","line":12,"column":3,"nodeType":"859","messageId":"860","endLine":12,"endColumn":11},{"ruleId":"857","severity":1,"message":"906","line":13,"column":3,"nodeType":"859","messageId":"860","endLine":13,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":14,"column":3,"nodeType":"859","messageId":"860","endLine":14,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":15,"column":3,"nodeType":"859","messageId":"860","endLine":15,"endColumn":6},{"ruleId":"857","severity":1,"message":"892","line":16,"column":3,"nodeType":"859","messageId":"860","endLine":16,"endColumn":8},{"ruleId":"857","severity":1,"message":"909","line":17,"column":3,"nodeType":"859","messageId":"860","endLine":17,"endColumn":10},{"ruleId":"857","severity":1,"message":"870","line":23,"column":35,"nodeType":"859","messageId":"860","endLine":23,"endColumn":41},{"ruleId":"857","severity":1,"message":"884","line":6,"column":10,"nodeType":"859","messageId":"860","endLine":6,"endColumn":14},{"ruleId":"857","severity":1,"message":"906","line":11,"column":3,"nodeType":"859","messageId":"860","endLine":11,"endColumn":12},{"ruleId":"857","severity":1,"message":"892","line":14,"column":3,"nodeType":"859","messageId":"860","endLine":14,"endColumn":8},{"ruleId":"880","severity":1,"message":"886","line":42,"column":6,"nodeType":"882","endLine":42,"endColumn":16,"suggestions":"910"},{"ruleId":"875","severity":1,"message":"876","line":193,"column":41,"nodeType":"877","messageId":"878","endLine":193,"endColumn":43},{"ruleId":"857","severity":1,"message":"858","line":1,"column":27,"nodeType":"859","messageId":"860","endLine":1,"endColumn":36},{"ruleId":"857","severity":1,"message":"911","line":3,"column":8,"nodeType":"859","messageId":"860","endLine":3,"endColumn":13},{"ruleId":"857","severity":1,"message":"912","line":4,"column":10,"nodeType":"859","messageId":"860","endLine":4,"endColumn":17},{"ruleId":"857","severity":1,"message":"868","line":4,"column":10,"nodeType":"859","messageId":"860","endLine":4,"endColumn":21},{"ruleId":"857","severity":1,"message":"869","line":5,"column":13,"nodeType":"859","messageId":"860","endLine":5,"endColumn":16},{"ruleId":"857","severity":1,"message":"905","line":13,"column":3,"nodeType":"859","messageId":"860","endLine":13,"endColumn":11},{"ruleId":"857","severity":1,"message":"906","line":14,"column":3,"nodeType":"859","messageId":"860","endLine":14,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":15,"column":3,"nodeType":"859","messageId":"860","endLine":15,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":16,"column":3,"nodeType":"859","messageId":"860","endLine":16,"endColumn":6},{"ruleId":"857","severity":1,"message":"892","line":17,"column":3,"nodeType":"859","messageId":"860","endLine":17,"endColumn":8},{"ruleId":"857","severity":1,"message":"909","line":18,"column":3,"nodeType":"859","messageId":"860","endLine":18,"endColumn":10},{"ruleId":"857","severity":1,"message":"870","line":26,"column":35,"nodeType":"859","messageId":"860","endLine":26,"endColumn":41},{"ruleId":"857","severity":1,"message":"879","line":26,"column":43,"nodeType":"859","messageId":"860","endLine":26,"endColumn":48},{"ruleId":"857","severity":1,"message":"868","line":4,"column":10,"nodeType":"859","messageId":"860","endLine":4,"endColumn":21},{"ruleId":"857","severity":1,"message":"869","line":5,"column":13,"nodeType":"859","messageId":"860","endLine":5,"endColumn":16},{"ruleId":"857","severity":1,"message":"905","line":13,"column":3,"nodeType":"859","messageId":"860","endLine":13,"endColumn":11},{"ruleId":"857","severity":1,"message":"906","line":14,"column":3,"nodeType":"859","messageId":"860","endLine":14,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":15,"column":3,"nodeType":"859","messageId":"860","endLine":15,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":16,"column":3,"nodeType":"859","messageId":"860","endLine":16,"endColumn":6},{"ruleId":"857","severity":1,"message":"892","line":17,"column":3,"nodeType":"859","messageId":"860","endLine":17,"endColumn":8},{"ruleId":"857","severity":1,"message":"909","line":18,"column":3,"nodeType":"859","messageId":"860","endLine":18,"endColumn":10},{"ruleId":"857","severity":1,"message":"870","line":26,"column":35,"nodeType":"859","messageId":"860","endLine":26,"endColumn":41},{"ruleId":"857","severity":1,"message":"879","line":26,"column":43,"nodeType":"859","messageId":"860","endLine":26,"endColumn":48},{"ruleId":"857","severity":1,"message":"913","line":36,"column":31,"nodeType":"859","messageId":"860","endLine":36,"endColumn":39},{"ruleId":"857","severity":1,"message":"914","line":36,"column":41,"nodeType":"859","messageId":"860","endLine":36,"endColumn":53},{"ruleId":"857","severity":1,"message":"905","line":11,"column":3,"nodeType":"859","messageId":"860","endLine":11,"endColumn":11},{"ruleId":"857","severity":1,"message":"906","line":12,"column":3,"nodeType":"859","messageId":"860","endLine":12,"endColumn":12},{"ruleId":"857","severity":1,"message":"892","line":15,"column":3,"nodeType":"859","messageId":"860","endLine":15,"endColumn":8},{"ruleId":"857","severity":1,"message":"909","line":16,"column":3,"nodeType":"859","messageId":"860","endLine":16,"endColumn":10},{"ruleId":"857","severity":1,"message":"870","line":21,"column":35,"nodeType":"859","messageId":"860","endLine":21,"endColumn":41},{"ruleId":"880","severity":1,"message":"915","line":49,"column":6,"nodeType":"882","endLine":49,"endColumn":8,"suggestions":"916"},{"ruleId":"880","severity":1,"message":"917","line":75,"column":6,"nodeType":"882","endLine":75,"endColumn":15,"suggestions":"918"},{"ruleId":"857","severity":1,"message":"858","line":1,"column":27,"nodeType":"859","messageId":"860","endLine":1,"endColumn":36},{"ruleId":"857","severity":1,"message":"911","line":3,"column":8,"nodeType":"859","messageId":"860","endLine":3,"endColumn":13},{"ruleId":"857","severity":1,"message":"912","line":4,"column":10,"nodeType":"859","messageId":"860","endLine":4,"endColumn":17},{"ruleId":"857","severity":1,"message":"919","line":6,"column":3,"nodeType":"859","messageId":"860","endLine":6,"endColumn":7},{"ruleId":"857","severity":1,"message":"920","line":7,"column":3,"nodeType":"859","messageId":"860","endLine":7,"endColumn":13},{"ruleId":"857","severity":1,"message":"905","line":8,"column":3,"nodeType":"859","messageId":"860","endLine":8,"endColumn":11},{"ruleId":"857","severity":1,"message":"906","line":9,"column":3,"nodeType":"859","messageId":"860","endLine":9,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":10,"column":3,"nodeType":"859","messageId":"860","endLine":10,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":11,"column":3,"nodeType":"859","messageId":"860","endLine":11,"endColumn":6},{"ruleId":"857","severity":1,"message":"892","line":12,"column":3,"nodeType":"859","messageId":"860","endLine":12,"endColumn":8},{"ruleId":"857","severity":1,"message":"884","line":14,"column":10,"nodeType":"859","messageId":"860","endLine":14,"endColumn":14},{"ruleId":"857","severity":1,"message":"921","line":22,"column":9,"nodeType":"859","messageId":"860","endLine":22,"endColumn":18},{"ruleId":"857","severity":1,"message":"892","line":12,"column":3,"nodeType":"859","messageId":"860","endLine":12,"endColumn":8},{"ruleId":"857","severity":1,"message":"870","line":24,"column":35,"nodeType":"859","messageId":"860","endLine":24,"endColumn":41},{"ruleId":"875","severity":1,"message":"876","line":271,"column":38,"nodeType":"877","messageId":"878","endLine":271,"endColumn":40},{"ruleId":"864","severity":1,"message":"865","line":386,"column":1,"nodeType":"866","messageId":"867","endLine":411,"endColumn":2},{"ruleId":"857","severity":1,"message":"892","line":12,"column":3,"nodeType":"859","messageId":"860","endLine":12,"endColumn":8},{"ruleId":"880","severity":1,"message":"922","line":57,"column":6,"nodeType":"882","endLine":57,"endColumn":8,"suggestions":"923"},{"ruleId":"857","severity":1,"message":"868","line":4,"column":10,"nodeType":"859","messageId":"860","endLine":4,"endColumn":21},{"ruleId":"857","severity":1,"message":"869","line":5,"column":13,"nodeType":"859","messageId":"860","endLine":5,"endColumn":16},{"ruleId":"857","severity":1,"message":"870","line":23,"column":35,"nodeType":"859","messageId":"860","endLine":23,"endColumn":41},{"ruleId":"857","severity":1,"message":"879","line":23,"column":43,"nodeType":"859","messageId":"860","endLine":23,"endColumn":48},{"ruleId":"857","severity":1,"message":"904","line":25,"column":10,"nodeType":"859","messageId":"860","endLine":25,"endColumn":15},{"ruleId":"857","severity":1,"message":"884","line":4,"column":10,"nodeType":"859","messageId":"860","endLine":4,"endColumn":14},{"ruleId":"880","severity":1,"message":"924","line":26,"column":6,"nodeType":"882","endLine":26,"endColumn":8,"suggestions":"925"},{"ruleId":"857","severity":1,"message":"926","line":41,"column":9,"nodeType":"859","messageId":"860","endLine":41,"endColumn":12},{"ruleId":"857","severity":1,"message":"905","line":11,"column":3,"nodeType":"859","messageId":"860","endLine":11,"endColumn":11},{"ruleId":"857","severity":1,"message":"906","line":12,"column":3,"nodeType":"859","messageId":"860","endLine":12,"endColumn":12},{"ruleId":"857","severity":1,"message":"892","line":15,"column":3,"nodeType":"859","messageId":"860","endLine":15,"endColumn":8},{"ruleId":"857","severity":1,"message":"909","line":16,"column":3,"nodeType":"859","messageId":"860","endLine":16,"endColumn":10},{"ruleId":"857","severity":1,"message":"870","line":21,"column":35,"nodeType":"859","messageId":"860","endLine":21,"endColumn":41},{"ruleId":"857","severity":1,"message":"927","line":22,"column":10,"nodeType":"859","messageId":"860","endLine":22,"endColumn":26},{"ruleId":"857","severity":1,"message":"928","line":22,"column":28,"nodeType":"859","messageId":"860","endLine":22,"endColumn":47},{"ruleId":"880","severity":1,"message":"929","line":29,"column":6,"nodeType":"882","endLine":29,"endColumn":8,"suggestions":"930"},{"ruleId":"864","severity":1,"message":"865","line":289,"column":1,"nodeType":"866","messageId":"867","endLine":312,"endColumn":2},{"ruleId":"864","severity":1,"message":"865","line":314,"column":1,"nodeType":"866","messageId":"867","endLine":365,"endColumn":2},{"ruleId":"857","severity":1,"message":"905","line":11,"column":3,"nodeType":"859","messageId":"860","endLine":11,"endColumn":11},{"ruleId":"857","severity":1,"message":"906","line":12,"column":3,"nodeType":"859","messageId":"860","endLine":12,"endColumn":12},{"ruleId":"857","severity":1,"message":"892","line":15,"column":3,"nodeType":"859","messageId":"860","endLine":15,"endColumn":8},{"ruleId":"857","severity":1,"message":"909","line":16,"column":3,"nodeType":"859","messageId":"860","endLine":16,"endColumn":10},{"ruleId":"857","severity":1,"message":"870","line":21,"column":35,"nodeType":"859","messageId":"860","endLine":21,"endColumn":41},{"ruleId":"880","severity":1,"message":"931","line":49,"column":6,"nodeType":"882","endLine":49,"endColumn":8,"suggestions":"932"},{"ruleId":"880","severity":1,"message":"917","line":77,"column":6,"nodeType":"882","endLine":77,"endColumn":15,"suggestions":"933"},{"ruleId":"857","severity":1,"message":"934","line":273,"column":7,"nodeType":"859","messageId":"860","endLine":273,"endColumn":14},{"ruleId":"857","severity":1,"message":"868","line":5,"column":10,"nodeType":"859","messageId":"860","endLine":5,"endColumn":21},{"ruleId":"857","severity":1,"message":"869","line":6,"column":13,"nodeType":"859","messageId":"860","endLine":6,"endColumn":16},{"ruleId":"857","severity":1,"message":"870","line":27,"column":35,"nodeType":"859","messageId":"860","endLine":27,"endColumn":41},{"ruleId":"857","severity":1,"message":"935","line":14,"column":16,"nodeType":"859","messageId":"860","endLine":14,"endColumn":25},{"ruleId":"857","severity":1,"message":"870","line":23,"column":35,"nodeType":"859","messageId":"860","endLine":23,"endColumn":41},{"ruleId":"880","severity":1,"message":"936","line":30,"column":6,"nodeType":"882","endLine":30,"endColumn":8,"suggestions":"937"},{"ruleId":"875","severity":1,"message":"876","line":271,"column":34,"nodeType":"877","messageId":"878","endLine":271,"endColumn":36},{"ruleId":"875","severity":1,"message":"876","line":271,"column":60,"nodeType":"877","messageId":"878","endLine":271,"endColumn":62},{"ruleId":"875","severity":1,"message":"876","line":287,"column":33,"nodeType":"877","messageId":"878","endLine":287,"endColumn":35},{"ruleId":"864","severity":1,"message":"865","line":312,"column":1,"nodeType":"866","messageId":"867","endLine":314,"endColumn":2},{"ruleId":"857","severity":1,"message":"870","line":13,"column":35,"nodeType":"859","messageId":"860","endLine":13,"endColumn":41},{"ruleId":"857","severity":1,"message":"879","line":13,"column":43,"nodeType":"859","messageId":"860","endLine":13,"endColumn":48},{"ruleId":"857","severity":1,"message":"884","line":6,"column":10,"nodeType":"859","messageId":"860","endLine":6,"endColumn":14},{"ruleId":"857","severity":1,"message":"906","line":11,"column":3,"nodeType":"859","messageId":"860","endLine":11,"endColumn":12},{"ruleId":"857","severity":1,"message":"892","line":14,"column":3,"nodeType":"859","messageId":"860","endLine":14,"endColumn":8},{"ruleId":"880","severity":1,"message":"938","line":42,"column":6,"nodeType":"882","endLine":42,"endColumn":16,"suggestions":"939"},{"ruleId":"875","severity":1,"message":"876","line":191,"column":41,"nodeType":"877","messageId":"878","endLine":191,"endColumn":43},{"ruleId":"857","severity":1,"message":"940","line":3,"column":10,"nodeType":"859","messageId":"860","endLine":3,"endColumn":17},{"ruleId":"857","severity":1,"message":"868","line":4,"column":10,"nodeType":"859","messageId":"860","endLine":4,"endColumn":21},{"ruleId":"857","severity":1,"message":"869","line":5,"column":13,"nodeType":"859","messageId":"860","endLine":5,"endColumn":16},{"ruleId":"857","severity":1,"message":"941","line":8,"column":8,"nodeType":"859","messageId":"860","endLine":8,"endColumn":25},{"ruleId":"857","severity":1,"message":"935","line":18,"column":16,"nodeType":"859","messageId":"860","endLine":18,"endColumn":25},{"ruleId":"880","severity":1,"message":"922","line":37,"column":6,"nodeType":"882","endLine":37,"endColumn":8,"suggestions":"942"},{"ruleId":"857","severity":1,"message":"920","line":9,"column":3,"nodeType":"859","messageId":"860","endLine":9,"endColumn":13},{"ruleId":"857","severity":1,"message":"906","line":11,"column":3,"nodeType":"859","messageId":"860","endLine":11,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":12,"column":3,"nodeType":"859","messageId":"860","endLine":12,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":13,"column":3,"nodeType":"859","messageId":"860","endLine":13,"endColumn":6},{"ruleId":"857","severity":1,"message":"943","line":20,"column":10,"nodeType":"859","messageId":"860","endLine":20,"endColumn":22},{"ruleId":"880","severity":1,"message":"922","line":61,"column":6,"nodeType":"882","endLine":61,"endColumn":8,"suggestions":"944"},{"ruleId":"945","severity":1,"message":"946","line":143,"column":33,"nodeType":"947","endLine":143,"endColumn":44},{"ruleId":"857","severity":1,"message":"884","line":6,"column":10,"nodeType":"859","messageId":"860","endLine":6,"endColumn":14},{"ruleId":"857","severity":1,"message":"906","line":11,"column":3,"nodeType":"859","messageId":"860","endLine":11,"endColumn":12},{"ruleId":"857","severity":1,"message":"892","line":14,"column":3,"nodeType":"859","messageId":"860","endLine":14,"endColumn":8},{"ruleId":"880","severity":1,"message":"886","line":41,"column":6,"nodeType":"882","endLine":41,"endColumn":16,"suggestions":"948"},{"ruleId":"875","severity":1,"message":"876","line":189,"column":41,"nodeType":"877","messageId":"878","endLine":189,"endColumn":43},{"ruleId":"857","severity":1,"message":"868","line":4,"column":10,"nodeType":"859","messageId":"860","endLine":4,"endColumn":21},{"ruleId":"857","severity":1,"message":"869","line":5,"column":13,"nodeType":"859","messageId":"860","endLine":5,"endColumn":16},{"ruleId":"857","severity":1,"message":"870","line":24,"column":35,"nodeType":"859","messageId":"860","endLine":24,"endColumn":41},{"ruleId":"857","severity":1,"message":"879","line":24,"column":43,"nodeType":"859","messageId":"860","endLine":24,"endColumn":48},{"ruleId":"857","severity":1,"message":"904","line":26,"column":10,"nodeType":"859","messageId":"860","endLine":26,"endColumn":15},{"ruleId":"857","severity":1,"message":"884","line":3,"column":10,"nodeType":"859","messageId":"860","endLine":3,"endColumn":14},{"ruleId":"949","severity":1,"message":"950","line":35,"column":15,"nodeType":"859","messageId":"951","endLine":35,"endColumn":19},{"ruleId":"864","severity":1,"message":"865","line":170,"column":1,"nodeType":"866","messageId":"867","endLine":267,"endColumn":2},{"ruleId":"864","severity":1,"message":"865","line":269,"column":1,"nodeType":"866","messageId":"867","endLine":278,"endColumn":2},{"ruleId":"857","severity":1,"message":"952","line":3,"column":10,"nodeType":"859","messageId":"860","endLine":3,"endColumn":15},{"ruleId":"889","severity":1,"message":"953","line":34,"column":15,"nodeType":"891","endLine":34,"endColumn":48},{"ruleId":"857","severity":1,"message":"870","line":12,"column":35,"nodeType":"859","messageId":"860","endLine":12,"endColumn":41},{"ruleId":"857","severity":1,"message":"879","line":12,"column":43,"nodeType":"859","messageId":"860","endLine":12,"endColumn":48},{"ruleId":"880","severity":1,"message":"954","line":39,"column":6,"nodeType":"882","endLine":39,"endColumn":8,"suggestions":"955"},{"ruleId":"857","severity":1,"message":"956","line":55,"column":9,"nodeType":"859","messageId":"860","endLine":55,"endColumn":13},{"ruleId":"857","severity":1,"message":"906","line":11,"column":3,"nodeType":"859","messageId":"860","endLine":11,"endColumn":12},{"ruleId":"857","severity":1,"message":"892","line":14,"column":3,"nodeType":"859","messageId":"860","endLine":14,"endColumn":8},{"ruleId":"880","severity":1,"message":"954","line":51,"column":6,"nodeType":"882","endLine":51,"endColumn":8,"suggestions":"957"},{"ruleId":"864","severity":1,"message":"865","line":262,"column":1,"nodeType":"866","messageId":"867","endLine":272,"endColumn":2},{"ruleId":"864","severity":1,"message":"865","line":305,"column":1,"nodeType":"866","messageId":"867","endLine":319,"endColumn":2},{"ruleId":"857","severity":1,"message":"906","line":6,"column":3,"nodeType":"859","messageId":"860","endLine":6,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":7,"column":3,"nodeType":"859","messageId":"860","endLine":7,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":8,"column":3,"nodeType":"859","messageId":"860","endLine":8,"endColumn":6},{"ruleId":"857","severity":1,"message":"892","line":9,"column":3,"nodeType":"859","messageId":"860","endLine":9,"endColumn":8},{"ruleId":"857","severity":1,"message":"870","line":21,"column":35,"nodeType":"859","messageId":"860","endLine":21,"endColumn":41},{"ruleId":"880","severity":1,"message":"958","line":27,"column":6,"nodeType":"882","endLine":27,"endColumn":8,"suggestions":"959"},{"ruleId":"857","severity":1,"message":"906","line":6,"column":3,"nodeType":"859","messageId":"860","endLine":6,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":7,"column":3,"nodeType":"859","messageId":"860","endLine":7,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":8,"column":3,"nodeType":"859","messageId":"860","endLine":8,"endColumn":6},{"ruleId":"857","severity":1,"message":"892","line":9,"column":3,"nodeType":"859","messageId":"860","endLine":9,"endColumn":8},{"ruleId":"857","severity":1,"message":"870","line":21,"column":35,"nodeType":"859","messageId":"860","endLine":21,"endColumn":41},{"ruleId":"880","severity":1,"message":"960","line":27,"column":6,"nodeType":"882","endLine":27,"endColumn":8,"suggestions":"961"},{"ruleId":"962","severity":1,"message":"963","line":87,"column":12,"nodeType":"859","messageId":"964","endLine":87,"endColumn":29},{"ruleId":"864","severity":1,"message":"865","line":267,"column":1,"nodeType":"866","messageId":"867","endLine":290,"endColumn":2},{"ruleId":"857","severity":1,"message":"965","line":4,"column":16,"nodeType":"859","messageId":"860","endLine":4,"endColumn":26},{"ruleId":"857","severity":1,"message":"906","line":10,"column":3,"nodeType":"859","messageId":"860","endLine":10,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":11,"column":3,"nodeType":"859","messageId":"860","endLine":11,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":12,"column":3,"nodeType":"859","messageId":"860","endLine":12,"endColumn":6},{"ruleId":"857","severity":1,"message":"892","line":13,"column":3,"nodeType":"859","messageId":"860","endLine":13,"endColumn":8},{"ruleId":"857","severity":1,"message":"870","line":24,"column":35,"nodeType":"859","messageId":"860","endLine":24,"endColumn":41},{"ruleId":"880","severity":1,"message":"966","line":30,"column":6,"nodeType":"882","endLine":30,"endColumn":8,"suggestions":"967"},{"ruleId":"857","severity":1,"message":"906","line":8,"column":3,"nodeType":"859","messageId":"860","endLine":8,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":9,"column":3,"nodeType":"859","messageId":"860","endLine":9,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":10,"column":3,"nodeType":"859","messageId":"860","endLine":10,"endColumn":6},{"ruleId":"857","severity":1,"message":"906","line":9,"column":3,"nodeType":"859","messageId":"860","endLine":9,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":10,"column":3,"nodeType":"859","messageId":"860","endLine":10,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":11,"column":3,"nodeType":"859","messageId":"860","endLine":11,"endColumn":6},{"ruleId":"857","severity":1,"message":"870","line":20,"column":35,"nodeType":"859","messageId":"860","endLine":20,"endColumn":41},{"ruleId":"880","severity":1,"message":"968","line":28,"column":6,"nodeType":"882","endLine":28,"endColumn":8,"suggestions":"969"},{"ruleId":"857","severity":1,"message":"906","line":9,"column":3,"nodeType":"859","messageId":"860","endLine":9,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":10,"column":3,"nodeType":"859","messageId":"860","endLine":10,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":11,"column":3,"nodeType":"859","messageId":"860","endLine":11,"endColumn":6},{"ruleId":"857","severity":1,"message":"892","line":12,"column":3,"nodeType":"859","messageId":"860","endLine":12,"endColumn":8},{"ruleId":"857","severity":1,"message":"870","line":24,"column":35,"nodeType":"859","messageId":"860","endLine":24,"endColumn":41},{"ruleId":"880","severity":1,"message":"970","line":52,"column":6,"nodeType":"882","endLine":52,"endColumn":8,"suggestions":"971"},{"ruleId":"864","severity":1,"message":"865","line":310,"column":1,"nodeType":"866","messageId":"867","endLine":316,"endColumn":2},{"ruleId":"857","severity":1,"message":"906","line":8,"column":3,"nodeType":"859","messageId":"860","endLine":8,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":9,"column":3,"nodeType":"859","messageId":"860","endLine":9,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":10,"column":3,"nodeType":"859","messageId":"860","endLine":10,"endColumn":6},{"ruleId":"857","severity":1,"message":"892","line":11,"column":3,"nodeType":"859","messageId":"860","endLine":11,"endColumn":8},{"ruleId":"857","severity":1,"message":"870","line":25,"column":35,"nodeType":"859","messageId":"860","endLine":25,"endColumn":41},{"ruleId":"880","severity":1,"message":"972","line":54,"column":6,"nodeType":"882","endLine":54,"endColumn":8,"suggestions":"973"},{"ruleId":"857","severity":1,"message":"906","line":6,"column":3,"nodeType":"859","messageId":"860","endLine":6,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":7,"column":3,"nodeType":"859","messageId":"860","endLine":7,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":8,"column":3,"nodeType":"859","messageId":"860","endLine":8,"endColumn":6},{"ruleId":"857","severity":1,"message":"870","line":20,"column":35,"nodeType":"859","messageId":"860","endLine":20,"endColumn":41},{"ruleId":"880","severity":1,"message":"974","line":25,"column":6,"nodeType":"882","endLine":25,"endColumn":8,"suggestions":"975"},{"ruleId":"857","severity":1,"message":"906","line":6,"column":3,"nodeType":"859","messageId":"860","endLine":6,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":7,"column":3,"nodeType":"859","messageId":"860","endLine":7,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":8,"column":3,"nodeType":"859","messageId":"860","endLine":8,"endColumn":6},{"ruleId":"857","severity":1,"message":"870","line":20,"column":35,"nodeType":"859","messageId":"860","endLine":20,"endColumn":41},{"ruleId":"880","severity":1,"message":"976","line":25,"column":6,"nodeType":"882","endLine":25,"endColumn":8,"suggestions":"977"},{"ruleId":"857","severity":1,"message":"906","line":8,"column":3,"nodeType":"859","messageId":"860","endLine":8,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":9,"column":3,"nodeType":"859","messageId":"860","endLine":9,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":10,"column":3,"nodeType":"859","messageId":"860","endLine":10,"endColumn":6},{"ruleId":"857","severity":1,"message":"870","line":20,"column":35,"nodeType":"859","messageId":"860","endLine":20,"endColumn":41},{"ruleId":"880","severity":1,"message":"894","line":26,"column":6,"nodeType":"882","endLine":26,"endColumn":8,"suggestions":"978"},{"ruleId":"857","severity":1,"message":"906","line":8,"column":3,"nodeType":"859","messageId":"860","endLine":8,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":9,"column":3,"nodeType":"859","messageId":"860","endLine":9,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":10,"column":3,"nodeType":"859","messageId":"860","endLine":10,"endColumn":6},{"ruleId":"857","severity":1,"message":"935","line":16,"column":16,"nodeType":"859","messageId":"860","endLine":16,"endColumn":25},{"ruleId":"857","severity":1,"message":"870","line":19,"column":35,"nodeType":"859","messageId":"860","endLine":19,"endColumn":41},{"ruleId":"880","severity":1,"message":"979","line":26,"column":6,"nodeType":"882","endLine":26,"endColumn":8,"suggestions":"980"},{"ruleId":"875","severity":1,"message":"876","line":79,"column":11,"nodeType":"877","messageId":"878","endLine":79,"endColumn":13},{"ruleId":"857","severity":1,"message":"981","line":4,"column":8,"nodeType":"859","messageId":"860","endLine":4,"endColumn":14},{"ruleId":"857","severity":1,"message":"892","line":12,"column":3,"nodeType":"859","messageId":"860","endLine":12,"endColumn":8},{"ruleId":"857","severity":1,"message":"898","line":14,"column":10,"nodeType":"859","messageId":"860","endLine":14,"endColumn":18},{"ruleId":"857","severity":1,"message":"870","line":22,"column":35,"nodeType":"859","messageId":"860","endLine":22,"endColumn":41},{"ruleId":"875","severity":1,"message":"876","line":95,"column":11,"nodeType":"877","messageId":"878","endLine":95,"endColumn":13},{"ruleId":"857","severity":1,"message":"892","line":12,"column":3,"nodeType":"859","messageId":"860","endLine":12,"endColumn":8},{"ruleId":"880","severity":1,"message":"922","line":32,"column":6,"nodeType":"882","endLine":32,"endColumn":8,"suggestions":"982"},{"ruleId":"857","severity":1,"message":"906","line":6,"column":3,"nodeType":"859","messageId":"860","endLine":6,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":7,"column":3,"nodeType":"859","messageId":"860","endLine":7,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":8,"column":3,"nodeType":"859","messageId":"860","endLine":8,"endColumn":6},{"ruleId":"857","severity":1,"message":"870","line":20,"column":35,"nodeType":"859","messageId":"860","endLine":20,"endColumn":41},{"ruleId":"880","severity":1,"message":"983","line":25,"column":6,"nodeType":"882","endLine":25,"endColumn":8,"suggestions":"984"},{"ruleId":"857","severity":1,"message":"892","line":12,"column":3,"nodeType":"859","messageId":"860","endLine":12,"endColumn":8},{"ruleId":"857","severity":1,"message":"870","line":25,"column":35,"nodeType":"859","messageId":"860","endLine":25,"endColumn":41},{"ruleId":"857","severity":1,"message":"985","line":46,"column":9,"nodeType":"859","messageId":"860","endLine":46,"endColumn":17},{"ruleId":"857","severity":1,"message":"986","line":101,"column":12,"nodeType":"859","messageId":"860","endLine":101,"endColumn":23},{"ruleId":"875","severity":1,"message":"876","line":155,"column":11,"nodeType":"877","messageId":"878","endLine":155,"endColumn":13},{"ruleId":"864","severity":1,"message":"865","line":419,"column":1,"nodeType":"866","messageId":"867","endLine":445,"endColumn":2},{"ruleId":"857","severity":1,"message":"987","line":1,"column":17,"nodeType":"859","messageId":"860","endLine":1,"endColumn":25},{"ruleId":"857","severity":1,"message":"858","line":1,"column":27,"nodeType":"859","messageId":"860","endLine":1,"endColumn":36},{"ruleId":"857","severity":1,"message":"885","line":2,"column":41,"nodeType":"859","messageId":"860","endLine":2,"endColumn":52},{"ruleId":"857","severity":1,"message":"987","line":1,"column":17,"nodeType":"859","messageId":"860","endLine":1,"endColumn":25},{"ruleId":"857","severity":1,"message":"858","line":1,"column":27,"nodeType":"859","messageId":"860","endLine":1,"endColumn":36},{"ruleId":"857","severity":1,"message":"885","line":2,"column":41,"nodeType":"859","messageId":"860","endLine":2,"endColumn":52},{"ruleId":"857","severity":1,"message":"879","line":9,"column":37,"nodeType":"859","messageId":"860","endLine":9,"endColumn":42},{"ruleId":"857","severity":1,"message":"909","line":13,"column":3,"nodeType":"859","messageId":"860","endLine":13,"endColumn":10},{"ruleId":"857","severity":1,"message":"870","line":24,"column":35,"nodeType":"859","messageId":"860","endLine":24,"endColumn":41},{"ruleId":"880","severity":1,"message":"929","line":34,"column":6,"nodeType":"882","endLine":34,"endColumn":8,"suggestions":"988"},{"ruleId":"857","severity":1,"message":"986","line":65,"column":12,"nodeType":"859","messageId":"860","endLine":65,"endColumn":23},{"ruleId":"875","severity":1,"message":"876","line":311,"column":38,"nodeType":"877","messageId":"878","endLine":311,"endColumn":40},{"ruleId":"875","severity":1,"message":"876","line":363,"column":48,"nodeType":"877","messageId":"878","endLine":363,"endColumn":50},{"ruleId":"875","severity":1,"message":"876","line":364,"column":45,"nodeType":"877","messageId":"878","endLine":364,"endColumn":47},{"ruleId":"875","severity":1,"message":"876","line":365,"column":42,"nodeType":"877","messageId":"878","endLine":365,"endColumn":44},{"ruleId":"875","severity":1,"message":"876","line":366,"column":46,"nodeType":"877","messageId":"878","endLine":366,"endColumn":48},{"ruleId":"875","severity":1,"message":"876","line":367,"column":36,"nodeType":"877","messageId":"878","endLine":367,"endColumn":38},{"ruleId":"864","severity":1,"message":"865","line":494,"column":1,"nodeType":"866","messageId":"867","endLine":498,"endColumn":2},{"ruleId":"864","severity":1,"message":"865","line":500,"column":1,"nodeType":"866","messageId":"867","endLine":504,"endColumn":2},{"ruleId":"857","severity":1,"message":"987","line":1,"column":17,"nodeType":"859","messageId":"860","endLine":1,"endColumn":25},{"ruleId":"857","severity":1,"message":"858","line":1,"column":27,"nodeType":"859","messageId":"860","endLine":1,"endColumn":36},{"ruleId":"857","severity":1,"message":"885","line":2,"column":41,"nodeType":"859","messageId":"860","endLine":2,"endColumn":52},{"ruleId":"857","severity":1,"message":"879","line":10,"column":37,"nodeType":"859","messageId":"860","endLine":10,"endColumn":42},{"ruleId":"857","severity":1,"message":"987","line":1,"column":17,"nodeType":"859","messageId":"860","endLine":1,"endColumn":25},{"ruleId":"857","severity":1,"message":"858","line":1,"column":27,"nodeType":"859","messageId":"860","endLine":1,"endColumn":36},{"ruleId":"857","severity":1,"message":"885","line":2,"column":41,"nodeType":"859","messageId":"860","endLine":2,"endColumn":52},{"ruleId":"857","severity":1,"message":"879","line":10,"column":35,"nodeType":"859","messageId":"860","endLine":10,"endColumn":40},{"ruleId":"857","severity":1,"message":"906","line":8,"column":3,"nodeType":"859","messageId":"860","endLine":8,"endColumn":12},{"ruleId":"857","severity":1,"message":"907","line":9,"column":3,"nodeType":"859","messageId":"860","endLine":9,"endColumn":6},{"ruleId":"857","severity":1,"message":"908","line":10,"column":3,"nodeType":"859","messageId":"860","endLine":10,"endColumn":6},{"ruleId":"857","severity":1,"message":"987","line":1,"column":17,"nodeType":"859","messageId":"860","endLine":1,"endColumn":25},{"ruleId":"857","severity":1,"message":"858","line":1,"column":27,"nodeType":"859","messageId":"860","endLine":1,"endColumn":36},{"ruleId":"857","severity":1,"message":"898","line":5,"column":10,"nodeType":"859","messageId":"860","endLine":5,"endColumn":18},{"ruleId":"857","severity":1,"message":"906","line":10,"column":3,"nodeType":"859","messageId":"860","endLine":10,"endColumn":12},{"ruleId":"857","severity":1,"message":"892","line":13,"column":3,"nodeType":"859","messageId":"860","endLine":13,"endColumn":8},{"ruleId":"880","severity":1,"message":"989","line":42,"column":6,"nodeType":"882","endLine":42,"endColumn":8,"suggestions":"990"},{"ruleId":"875","severity":1,"message":"876","line":48,"column":11,"nodeType":"877","messageId":"878","endLine":48,"endColumn":13},{"ruleId":"857","severity":1,"message":"858","line":1,"column":27,"nodeType":"859","messageId":"860","endLine":1,"endColumn":36},{"ruleId":"857","severity":1,"message":"911","line":4,"column":8,"nodeType":"859","messageId":"860","endLine":4,"endColumn":13},{"ruleId":"857","severity":1,"message":"912","line":5,"column":10,"nodeType":"859","messageId":"860","endLine":5,"endColumn":17},{"ruleId":"857","severity":1,"message":"884","line":6,"column":10,"nodeType":"859","messageId":"860","endLine":6,"endColumn":14},{"ruleId":"857","severity":1,"message":"898","line":7,"column":10,"nodeType":"859","messageId":"860","endLine":7,"endColumn":18},{"ruleId":"857","severity":1,"message":"987","line":1,"column":17,"nodeType":"859","messageId":"860","endLine":1,"endColumn":25},{"ruleId":"857","severity":1,"message":"858","line":1,"column":27,"nodeType":"859","messageId":"860","endLine":1,"endColumn":36},{"ruleId":"857","severity":1,"message":"906","line":12,"column":5,"nodeType":"859","messageId":"860","endLine":12,"endColumn":14},{"ruleId":"857","severity":1,"message":"892","line":15,"column":5,"nodeType":"859","messageId":"860","endLine":15,"endColumn":10},{"ruleId":"857","severity":1,"message":"879","line":23,"column":35,"nodeType":"859","messageId":"860","endLine":23,"endColumn":40},{"ruleId":"857","severity":1,"message":"991","line":26,"column":10,"nodeType":"859","messageId":"860","endLine":26,"endColumn":16},{"ruleId":"857","severity":1,"message":"992","line":27,"column":10,"nodeType":"859","messageId":"860","endLine":27,"endColumn":18},{"ruleId":"857","severity":1,"message":"993","line":27,"column":20,"nodeType":"859","messageId":"860","endLine":27,"endColumn":31},{"ruleId":"857","severity":1,"message":"994","line":28,"column":20,"nodeType":"859","messageId":"860","endLine":28,"endColumn":31},{"ruleId":"857","severity":1,"message":"995","line":29,"column":10,"nodeType":"859","messageId":"860","endLine":29,"endColumn":18},{"ruleId":"857","severity":1,"message":"996","line":29,"column":20,"nodeType":"859","messageId":"860","endLine":29,"endColumn":31},{"ruleId":"880","severity":1,"message":"917","line":47,"column":6,"nodeType":"882","endLine":47,"endColumn":8,"suggestions":"997"},{"ruleId":"857","severity":1,"message":"998","line":89,"column":9,"nodeType":"859","messageId":"860","endLine":89,"endColumn":19},{"ruleId":"857","severity":1,"message":"906","line":11,"column":3,"nodeType":"859","messageId":"860","endLine":11,"endColumn":12},{"ruleId":"857","severity":1,"message":"892","line":14,"column":3,"nodeType":"859","messageId":"860","endLine":14,"endColumn":8},{"ruleId":"880","severity":1,"message":"886","line":42,"column":6,"nodeType":"882","endLine":42,"endColumn":16,"suggestions":"999"},{"ruleId":"875","severity":1,"message":"876","line":173,"column":42,"nodeType":"877","messageId":"878","endLine":173,"endColumn":44},{"ruleId":"875","severity":1,"message":"876","line":173,"column":72,"nodeType":"877","messageId":"878","endLine":173,"endColumn":74},{"ruleId":"875","severity":1,"message":"876","line":205,"column":39,"nodeType":"877","messageId":"878","endLine":205,"endColumn":41},{"ruleId":"857","severity":1,"message":"884","line":6,"column":10,"nodeType":"859","messageId":"860","endLine":6,"endColumn":14},{"ruleId":"857","severity":1,"message":"906","line":11,"column":3,"nodeType":"859","messageId":"860","endLine":11,"endColumn":12},{"ruleId":"857","severity":1,"message":"892","line":14,"column":3,"nodeType":"859","messageId":"860","endLine":14,"endColumn":8},{"ruleId":"880","severity":1,"message":"1000","line":32,"column":6,"nodeType":"882","endLine":32,"endColumn":16,"suggestions":"1001"},{"ruleId":"875","severity":1,"message":"876","line":279,"column":39,"nodeType":"877","messageId":"878","endLine":279,"endColumn":41},{"ruleId":"857","severity":1,"message":"858","line":1,"column":27,"nodeType":"859","messageId":"860","endLine":1,"endColumn":36},{"ruleId":"857","severity":1,"message":"870","line":9,"column":35,"nodeType":"859","messageId":"860","endLine":9,"endColumn":41},{"ruleId":"875","severity":1,"message":"876","line":43,"column":18,"nodeType":"877","messageId":"878","endLine":43,"endColumn":20},{"ruleId":"875","severity":1,"message":"876","line":58,"column":27,"nodeType":"877","messageId":"878","endLine":58,"endColumn":29},{"ruleId":"889","severity":1,"message":"890","line":14,"column":17,"nodeType":"891","endLine":17,"endColumn":18},{"ruleId":"889","severity":1,"message":"890","line":47,"column":17,"nodeType":"891","endLine":52,"endColumn":18},{"ruleId":"857","severity":1,"message":"858","line":1,"column":27,"nodeType":"859","messageId":"860","endLine":1,"endColumn":36},{"ruleId":"857","severity":1,"message":"870","line":9,"column":35,"nodeType":"859","messageId":"860","endLine":9,"endColumn":41},{"ruleId":"875","severity":1,"message":"876","line":41,"column":15,"nodeType":"877","messageId":"878","endLine":41,"endColumn":17},{"ruleId":"875","severity":1,"message":"876","line":60,"column":18,"nodeType":"877","messageId":"878","endLine":60,"endColumn":20},{"ruleId":"875","severity":1,"message":"876","line":79,"column":20,"nodeType":"877","messageId":"878","endLine":79,"endColumn":22},{"ruleId":"875","severity":1,"message":"876","line":196,"column":22,"nodeType":"877","messageId":"878","endLine":196,"endColumn":24},{"ruleId":"875","severity":1,"message":"876","line":210,"column":29,"nodeType":"877","messageId":"878","endLine":210,"endColumn":31},{"ruleId":"875","severity":1,"message":"876","line":222,"column":27,"nodeType":"877","messageId":"878","endLine":222,"endColumn":29},{"ruleId":"857","severity":1,"message":"858","line":2,"column":27,"nodeType":"859","messageId":"860","endLine":2,"endColumn":36},{"ruleId":"857","severity":1,"message":"879","line":21,"column":35,"nodeType":"859","messageId":"860","endLine":21,"endColumn":40},{"ruleId":"857","severity":1,"message":"858","line":2,"column":27,"nodeType":"859","messageId":"860","endLine":2,"endColumn":36},{"ruleId":"857","severity":1,"message":"858","line":2,"column":27,"nodeType":"859","messageId":"860","endLine":2,"endColumn":36},{"ruleId":"857","severity":1,"message":"1002","line":5,"column":8,"nodeType":"859","messageId":"860","endLine":5,"endColumn":14},{"ruleId":"857","severity":1,"message":"1003","line":6,"column":8,"nodeType":"859","messageId":"860","endLine":6,"endColumn":14},"no-native-reassign",["1004"],"no-negated-in-lhs",["1005"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'PrivateRouteAdmin' is defined but never used.","'PrivateRouteTL' is defined but never used.","'PrivateRouteTP' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'yupResolver' is defined but never used.","'yup' is defined but never used.","'errors' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'reset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["1006"],"'Link' is defined but never used.","'ModalFooter' is defined but never used.","React Hook useEffect has missing dependencies: 'getQuery' and 'id'. Either include them or remove the dependency array.",["1007"],["1008"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Table' is defined but never used.","'reject' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalData'. Either include it or remove the dependency array.",["1009"],"React Hook useEffect has a missing dependency: 'getAssignmentData'. Either include it or remove the dependency array.",["1010"],"'useAlert' is defined but never used.","React Hook useEffect has a missing dependency: 'getQueriesData'. Either include it or remove the dependency array.",["1011"],"'showStatus' is defined but never used.","React Hook useEffect has a missing dependency: 'inprogress.total_complete'. Either include it or remove the dependency array.",["1012"],"'error' is assigned a value but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Tooltip' is defined but never used.",["1013"],"'axios' is defined but never used.","'baseUrl' is defined but never used.","'category' is assigned a value but never used.","'sub_category' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQueryData'. Either include it or remove the dependency array.",["1014"],"React Hook useEffect has a missing dependency: 'getQuery'. Either include it or remove the dependency array.",["1015"],"'Card' is defined but never used.","'CardHeader' is defined but never used.","'count_PFA' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["1016"],"React Hook useEffect has a missing dependency: 'getTaxProf'. Either include it or remove the dependency array.",["1017"],"'del' is assigned a value but never used.","'assignmentStages' is assigned a value but never used.","'setAssignmentstages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAssignmentList'. Either include it or remove the dependency array.",["1018"],"React Hook useEffect has missing dependencies: 'getQueryData' and 'getTaxProfession'. Either include them or remove the dependency array.",["1019"],["1020"],"'taxprof' is assigned a value but never used.","'useParams' is defined but never used.","React Hook useEffect has a missing dependency: 'getProposalList'. Either include it or remove the dependency array.",["1021"],"React Hook useEffect has missing dependencies: 'getAdditionalQuery' and 'id'. Either include them or remove the dependency array.",["1022"],"'useForm' is defined but never used.","'ProposalComponent' is defined but never used.",["1023"],"'completeData' is assigned a value but never used.",["1024"],"jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute",["1025"],"no-use-before-define","'name' was used before it was defined.","usedBeforeDefined","'Badge' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'id' and 'userid'. Either include them or remove the dependency array.",["1026"],"'date' is assigned a value but never used.",["1027"],"React Hook useEffect has a missing dependency: 'getCompleteAssingment'. Either include it or remove the dependency array.",["1028"],"React Hook useEffect has a missing dependency: 'getInCompleteAssingment'. Either include it or remove the dependency array.",["1029"],"no-redeclare","'ChangeFormateDate' is already defined.","redeclared","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'getPendingforAcceptance'. Either include it or remove the dependency array.",["1030"],"React Hook useEffect has a missing dependency: 'getAllQueriesData'. Either include it or remove the dependency array.",["1031"],"React Hook useEffect has a missing dependency: 'getPendingForProposals'. Either include it or remove the dependency array.",["1032"],"React Hook useEffect has a missing dependency: 'getPendingForAllocation'. Either include it or remove the dependency array.",["1033"],"React Hook useEffect has a missing dependency: 'getDeclinedProposal'. Either include it or remove the dependency array.",["1034"],"React Hook useEffect has a missing dependency: 'getAcceptedProposal'. Either include it or remove the dependency array.",["1035"],["1036"],"React Hook useEffect has a missing dependency: 'getPendingForPayment'. Either include it or remove the dependency array.",["1037"],"'Layout' is defined but never used.",["1038"],"React Hook useEffect has a missing dependency: 'getPendingAcceptedProposal'. Either include it or remove the dependency array.",["1039"],"'accepted' is assigned a value but never used.","'checkStatus' is defined but never used.","'useState' is defined but never used.",["1040"],"React Hook useEffect has missing dependencies: 'id' and 'userId'. Either include them or remove the dependency array.",["1041"],"'custId' is assigned a value but never used.","'custname' is assigned a value but never used.","'setCustName' is assigned a value but never used.","'setAssignID' is assigned a value but never used.","'assingNo' is assigned a value but never used.","'setAssingNo' is assigned a value but never used.",["1042"],"'todaysDate' is assigned a value but never used.",["1043"],"React Hook useEffect has missing dependencies: 'getAdditionalQuery' and 'getQueryDetails'. Either include them or remove the dependency array.",["1044"],"'Header' is defined but never used.","'Footer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1045","fix":"1046"},{"desc":"1047","fix":"1048"},{"desc":"1045","fix":"1049"},{"desc":"1050","fix":"1051"},{"desc":"1052","fix":"1053"},{"desc":"1054","fix":"1055"},{"desc":"1056","fix":"1057"},{"desc":"1047","fix":"1058"},{"desc":"1059","fix":"1060"},{"desc":"1061","fix":"1062"},{"desc":"1063","fix":"1064"},{"desc":"1065","fix":"1066"},{"desc":"1067","fix":"1068"},{"desc":"1069","fix":"1070"},{"desc":"1061","fix":"1071"},{"desc":"1072","fix":"1073"},{"desc":"1074","fix":"1075"},{"desc":"1063","fix":"1076"},{"desc":"1063","fix":"1077"},{"desc":"1047","fix":"1078"},{"desc":"1079","fix":"1080"},{"desc":"1079","fix":"1081"},{"desc":"1082","fix":"1083"},{"desc":"1084","fix":"1085"},{"desc":"1086","fix":"1087"},{"desc":"1088","fix":"1089"},{"desc":"1090","fix":"1091"},{"desc":"1092","fix":"1093"},{"desc":"1094","fix":"1095"},{"desc":"1096","fix":"1097"},{"desc":"1050","fix":"1098"},{"desc":"1099","fix":"1100"},{"desc":"1063","fix":"1101"},{"desc":"1102","fix":"1103"},{"desc":"1067","fix":"1104"},{"desc":"1105","fix":"1106"},{"desc":"1107","fix":"1108"},{"desc":"1047","fix":"1109"},{"desc":"1110","fix":"1111"},"Update the dependencies array to be: [userId]",{"range":"1112","text":"1113"},"Update the dependencies array to be: [assingNo, getQuery, id]",{"range":"1114","text":"1115"},{"range":"1116","text":"1113"},"Update the dependencies array to be: [getProposalData]",{"range":"1117","text":"1118"},"Update the dependencies array to be: [getAssignmentData]",{"range":"1119","text":"1120"},"Update the dependencies array to be: [getQueriesData]",{"range":"1121","text":"1122"},"Update the dependencies array to be: [inprogress.total_complete]",{"range":"1123","text":"1124"},{"range":"1125","text":"1115"},"Update the dependencies array to be: [getQueryData]",{"range":"1126","text":"1127"},"Update the dependencies array to be: [getQuery, queryNo]",{"range":"1128","text":"1129"},"Update the dependencies array to be: [userid]",{"range":"1130","text":"1131"},"Update the dependencies array to be: [getTaxProf]",{"range":"1132","text":"1133"},"Update the dependencies array to be: [getAssignmentList]",{"range":"1134","text":"1135"},"Update the dependencies array to be: [getQueryData, getTaxProfession]",{"range":"1136","text":"1137"},{"range":"1138","text":"1129"},"Update the dependencies array to be: [getProposalList]",{"range":"1139","text":"1140"},"Update the dependencies array to be: [assingNo, getAdditionalQuery, id]",{"range":"1141","text":"1142"},{"range":"1143","text":"1131"},{"range":"1144","text":"1131"},{"range":"1145","text":"1115"},"Update the dependencies array to be: [id, userid]",{"range":"1146","text":"1147"},{"range":"1148","text":"1147"},"Update the dependencies array to be: [getCompleteAssingment]",{"range":"1149","text":"1150"},"Update the dependencies array to be: [getInCompleteAssingment]",{"range":"1151","text":"1152"},"Update the dependencies array to be: [getPendingforAcceptance]",{"range":"1153","text":"1154"},"Update the dependencies array to be: [getAllQueriesData]",{"range":"1155","text":"1156"},"Update the dependencies array to be: [getPendingForProposals]",{"range":"1157","text":"1158"},"Update the dependencies array to be: [getPendingForAllocation]",{"range":"1159","text":"1160"},"Update the dependencies array to be: [getDeclinedProposal]",{"range":"1161","text":"1162"},"Update the dependencies array to be: [getAcceptedProposal]",{"range":"1163","text":"1164"},{"range":"1165","text":"1118"},"Update the dependencies array to be: [getPendingForPayment]",{"range":"1166","text":"1167"},{"range":"1168","text":"1131"},"Update the dependencies array to be: [getPendingAcceptedProposal]",{"range":"1169","text":"1170"},{"range":"1171","text":"1135"},"Update the dependencies array to be: [id, userId]",{"range":"1172","text":"1173"},"Update the dependencies array to be: [getQuery]",{"range":"1174","text":"1175"},{"range":"1176","text":"1115"},"Update the dependencies array to be: [assingNo, getAdditionalQuery, getQueryDetails]",{"range":"1177","text":"1178"},[1837,1839],"[userId]",[3086,3096],"[assingNo, getQuery, id]",[1116,1118],[1216,1218],"[getProposalData]",[661,663],"[getAssignmentData]",[1316,1318],"[getQueriesData]",[4054,4056],"[inprogress.total_complete]",[1179,1189],[1202,1204],"[getQueryData]",[1832,1841],"[getQuery, queryNo]",[1595,1597],"[userid]",[623,625],"[getTaxProf]",[794,796],"[getAssignmentList]",[1210,1212],"[getQueryData, getTaxProfession]",[1905,1914],[816,818],"[getProposalList]",[1171,1181],"[assingNo, getAdditionalQuery, id]",[974,976],[1578,1580],[1178,1188],[1148,1150],"[id, userid]",[1313,1315],[741,743],"[getCompleteAssingment]",[751,753],"[getInCompleteAssingment]",[842,844],"[getPendingforAcceptance]",[741,743],"[getAllQueriesData]",[1312,1314],"[getPendingForProposals]",[1366,1368],"[getPendingForAllocation]",[696,698],"[getDeclinedProposal]",[696,698],"[getAcceptedProposal]",[692,694],[705,707],"[getPendingForPayment]",[756,758],[703,705],"[getPendingAcceptedProposal]",[1013,1015],[1000,1002],"[id, userId]",[1199,1201],"[getQuery]",[1182,1192],[885,895],"[assingNo, getAdditionalQuery, getQueryDetails]"]