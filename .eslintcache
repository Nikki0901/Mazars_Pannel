[{"/var/www/html/Mazars_Pannel/src/index.js":"1","/var/www/html/Mazars_Pannel/src/reportWebVitals.js":"2","/var/www/html/Mazars_Pannel/src/App.js":"3","/var/www/html/Mazars_Pannel/src/Service/PrivateRouteAdmin.js":"4","/var/www/html/Mazars_Pannel/src/Service/PrivateRouteTP.js":"5","/var/www/html/Mazars_Pannel/src/Service/PrivateRouteTL.js":"6","/var/www/html/Mazars_Pannel/src/views/SignUpForm/SignUp.js":"7","/var/www/html/Mazars_Pannel/src/views/VrerifyOtpLogin/VerifyOtpLogin.js":"8","/var/www/html/Mazars_Pannel/src/views/VerifyOtp/VerifyOtp.js":"9","/var/www/html/Mazars_Pannel/src/views/SignInForm/SignIn.js":"10","/var/www/html/Mazars_Pannel/src/views/RegisterYourSelf/RegisterYourSelf.js":"11","/var/www/html/Mazars_Pannel/src/views/Start/Start.js":"12","/var/www/html/Mazars_Pannel/src/views/Dashboard/Dashboard.js":"13","/var/www/html/Mazars_Pannel/src/views/MyAssingment/MyAssingment.js":"14","/var/www/html/Mazars_Pannel/src/views/AddFressAssignment/AddFreshAssingment.js":"15","/var/www/html/Mazars_Pannel/src/views/QuestionnairePage/QuestionnairePage.js":"16","/var/www/html/Mazars_Pannel/src/views/Feedback/Feedback.js":"17","/var/www/html/Mazars_Pannel/src/views/SelectCategoryPage/SelectCategoryPage.js":"18","/var/www/html/Mazars_Pannel/src/views/ProposalTab/ProposalTab.js":"19","/var/www/html/Mazars_Pannel/src/views/AssignmentTab/AssignmentTab.js":"20","/var/www/html/Mazars_Pannel/src/views/QueriesTab/QueriesTab.js":"21","/var/www/html/Mazars_Pannel/src/components/Layout/Layout.js":"22","/var/www/html/Mazars_Pannel/src/pages/Admin/Start/Start.js":"23","/var/www/html/Mazars_Pannel/src/pages/Admin/Dashboard/Dashboard.js":"24","/var/www/html/Mazars_Pannel/src/pages/Admin/Login/Login.js":"25","/var/www/html/Mazars_Pannel/src/pages/Admin/AddNewTeamLeader/AddNewTeamLeader.js":"26","/var/www/html/Mazars_Pannel/src/pages/Admin/AddNewTaxProf/AddNewTaxProf.js":"27","/var/www/html/Mazars_Pannel/src/pages/Admin/QueriesRecevied/QueriesRecevied.js":"28","/var/www/html/Mazars_Pannel/src/pages/Admin/Proposal/Proposal.js":"29","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTP/EditTP.js":"30","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/EditTL.js":"31","/var/www/html/Mazars_Pannel/src/pages/Admin/PaymentStatusTab/PaymentStatusTab.js":"32","/var/www/html/Mazars_Pannel/src/pages/Admin/QueryAssingment/QueryAssingment.js":"33","/var/www/html/Mazars_Pannel/src/pages/Admin/QueriesTab/QueriesTab.js":"34","/var/www/html/Mazars_Pannel/src/pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab.js":"35","/var/www/html/Mazars_Pannel/src/pages/Admin/AssignmentTab/AssignmentTab.js":"36","/var/www/html/Mazars_Pannel/src/pages/TL/Start/Start.js":"37","/var/www/html/Mazars_Pannel/src/pages/Admin/TeamLeaderTab/TeamLeaderTab.js":"38","/var/www/html/Mazars_Pannel/src/pages/Admin/FeedbackTab/FeedbackTab.js":"39","/var/www/html/Mazars_Pannel/src/pages/TL/Dashboard/Dashboard.js":"40","/var/www/html/Mazars_Pannel/src/pages/TL/Login/Login.js":"41","/var/www/html/Mazars_Pannel/src/pages/TL/AddTeamProf/AddTeamProf.js":"42","/var/www/html/Mazars_Pannel/src/pages/TL/AddAssingmentStages/AddAssingmentStages.js":"43","/var/www/html/Mazars_Pannel/src/pages/TL/QueryAssingment/QueryAssingment.js":"44","/var/www/html/Mazars_Pannel/src/pages/TL/AddNew/AddNew.js":"45","/var/www/html/Mazars_Pannel/src/pages/TL/Proposal/Proposal.js":"46","/var/www/html/Mazars_Pannel/src/pages/TL/EditTP/EditTP.js":"47","/var/www/html/Mazars_Pannel/src/pages/TL/QueriesRecevied/QueriesRecevied.js":"48","/var/www/html/Mazars_Pannel/src/components/Footer/Footer.js":"49","/var/www/html/Mazars_Pannel/src/components/Header/Header.js":"50","/var/www/html/Mazars_Pannel/src/config/config.js":"51","/var/www/html/Mazars_Pannel/src/components/Admin-Header/Admin-Header.js":"52","/var/www/html/Mazars_Pannel/src/components/Admin-Sidebar/Admin-Sidebar.js":"53","/var/www/html/Mazars_Pannel/src/components/CategorySelect/CategorySelect.js":"54","/var/www/html/Mazars_Pannel/src/pages/TL/CompleteData/CompleteData.js":"55","/var/www/html/Mazars_Pannel/src/pages/TL/InCompleteData/InCompleteData.js":"56","/var/www/html/Mazars_Pannel/src/pages/TL/PendingForAcceptence/PendingForAcceptence.js":"57","/var/www/html/Mazars_Pannel/src/components/PendingForNonPayment/PendingForNonPayment.js":"58","/var/www/html/Mazars_Pannel/src/components/AllQueriesData/AllQueriesData.js":"59","/var/www/html/Mazars_Pannel/src/components/PendingForProposals/PendingForProposals.js":"60","/var/www/html/Mazars_Pannel/src/components/PendingForAllocation/PendingForAllocation.js":"61","/var/www/html/Mazars_Pannel/src/pages/Admin/DeclinedProposal/DeclinedPropoal.js":"62","/var/www/html/Mazars_Pannel/src/pages/Admin/AcceptedProposal/AcceptedProposal.js":"63","/var/www/html/Mazars_Pannel/src/pages/Admin/AllProposalComponent/AllProposalComponent.js":"64","/var/www/html/Mazars_Pannel/src/components/PendingForPayment/PendingForPayment.js":"65","/var/www/html/Mazars_Pannel/src/components/PaidComponent/PaidComponent.js":"66","/var/www/html/Mazars_Pannel/src/pages/TL/FeedbackTab/FeedbackTab.js":"67","/var/www/html/Mazars_Pannel/src/components/PendingForAcceptence/PendingForAcceptence.js":"68","/var/www/html/Mazars_Pannel/src/pages/TL/PaymentStatus/PaymentStatus.js":"69","/var/www/html/Mazars_Pannel/src/views/ProposalTab/PaymentModal.js":"70","/var/www/html/Mazars_Pannel/src/views/ProposalTab/AcceptModal.js":"71","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/AssignmentTab.js":"72","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/DraftReportUpload.js":"73","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/FinalReportUpload.js":"74","/var/www/html/Mazars_Pannel/src/pages/Admin/PendingForPaymentProposal/PendingForPaymentProposal.js":"75","/var/www/html/Mazars_Pannel/src/pages/TL/SendProposal/SendProposal.js":"76","/var/www/html/Mazars_Pannel/src/views/ProposalReceived/ProposalReceived.js":"77","/var/www/html/Mazars_Pannel/src/pages/TL/QueriesTab/QueriesTab.js":"78","/var/www/html/Mazars_Pannel/src/pages/TL/EditProposal/EditProposal.js":"79","/var/www/html/Mazars_Pannel/src/pages/Admin/PendingReceived/PendingRecevived.js":"80","/var/www/html/Mazars_Pannel/src/pages/TL/PendingReceived/PendingReceived.js":"81","/var/www/html/Mazars_Pannel/src/components/Search-Filter/SearchFilter.js":"82","/var/www/html/Mazars_Pannel/src/components/Admin-Header/NavWrapper.js":"83","/var/www/html/Mazars_Pannel/src/components/Search-Filter/CustomerFilter.js":"84","/var/www/html/Mazars_Pannel/src/views/ForgetPassword/ForgetPassword.js":"85","/var/www/html/Mazars_Pannel/src/views/NewPassword/NewPassword.js":"86","/var/www/html/Mazars_Pannel/src/views/ChangePassword/ChangePassword.js":"87","/var/www/html/Mazars_Pannel/src/pages/Admin/TeamLeaderTab/Header/index.js":"88","/var/www/html/Mazars_Pannel/src/components/FontawsomeIcons/index.js":"89","/var/www/html/Mazars_Pannel/src/components/DataTable/Header/index.js":"90","/var/www/html/Mazars_Pannel/src/pages/TL/PendingForAllocation/PendingForAllocation.js":"91","/var/www/html/Mazars_Pannel/src/pages/TL/PendingForProposal/PendingForProposal.js":"92","/var/www/html/Mazars_Pannel/src/pages/TL/PendingForPayment/PendingForPayment.js":"93","/var/www/html/Mazars_Pannel/src/components/Admin-Header/CustomerNotification.js":"94","/var/www/html/Mazars_Pannel/src/pages/TL/QueryTab2/QueryTab2.js":"95","/var/www/html/Mazars_Pannel/src/views/Propposal2/Proposal2.js":"96","/var/www/html/Mazars_Pannel/src/views/EditQuery/EditQuery.js":"97","/var/www/html/Mazars_Pannel/src/components/Search-Filter/AdminFilter.js":"98","/var/www/html/Mazars_Pannel/src/views/Frsh/Fresh.js":"99","/var/www/html/Mazars_Pannel/src/views/EditQuery/field.js":"100","/var/www/html/Mazars_Pannel/src/components/QueryDetails/QueryDetails.js":"101","/var/www/html/Mazars_Pannel/src/components/QueryDetails/BasicQuery.js":"102","/var/www/html/Mazars_Pannel/src/components/QueryDetails/ProposalDetails.js":"103","/var/www/html/Mazars_Pannel/src/components/QueryDetails/AssignmentDetails.js":"104","/var/www/html/Mazars_Pannel/src/components/QueryDetails/AdditionalQuery.js":"105","/var/www/html/Mazars_Pannel/src/components/QueryDetails/AddAdditionalQuery.js":"106","/var/www/html/Mazars_Pannel/src/common/common.js":"107","/var/www/html/Mazars_Pannel/src/components/Search-Filter/tlFilter.js":"108","/var/www/html/Mazars_Pannel/src/views/EditQuery/ImageUploads.js":"109","/var/www/html/Mazars_Pannel/src/views/AssignmentTab/PaymentModal.js":"110","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/Reset.js":"111","/var/www/html/Mazars_Pannel/src/config/services/QueryDetails.js":"112","/var/www/html/Mazars_Pannel/src/config/http/http-common.js":"113","/var/www/html/Mazars_Pannel/src/config/services/TaxProffesional.js":"114","/var/www/html/Mazars_Pannel/src/views/EditQuery/SelectComponent.js":"115","/var/www/html/Mazars_Pannel/src/views/Frsh/field.js":"116","/var/www/html/Mazars_Pannel/src/pages/Admin/AssignmentTab/Statusfilter.js":"117","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/Test.js":"118","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/Check.js":"119","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentForm/AssignmentForm.js":"120","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/A.js":"121","/var/www/html/Mazars_Pannel/src/views/Frsh/UserForm.js":"122","/var/www/html/Mazars_Pannel/src/pages/TL/QueriesTab/Tab.js":"123","/var/www/html/Mazars_Pannel/src/agora.config.js":"124","/var/www/html/Mazars_Pannel/src/utils/Validator.js":"125","/var/www/html/Mazars_Pannel/src/utils/Settings.js":"126","/var/www/html/Mazars_Pannel/src/views/VideoCall/VideoCall.js":"127","/var/www/html/Mazars_Pannel/src/components/InputRoom/index.js":"128","/var/www/html/Mazars_Pannel/src/views/MeetingComponent/MeetingComponent.js":"129","/var/www/html/Mazars_Pannel/src/components/meeting/index.jsx":"130","/var/www/html/Mazars_Pannel/src/components/AgoraVideoCall/index.jsx":"131","/var/www/html/Mazars_Pannel/src/pages/TL/MeetingComponent/MeetingComponent.js":"132","/var/www/html/Mazars_Pannel/src/pages/TL/meeting/index.jsx":"133","/var/www/html/Mazars_Pannel/src/pages/TL/AgoraVideoCall/index.jsx":"134","/var/www/html/Mazars_Pannel/src/pages/TP/Start/Start.js":"135","/var/www/html/Mazars_Pannel/src/pages/TP/Login/Login.js":"136","/var/www/html/Mazars_Pannel/src/pages/TP/Dashboard/Dashboard.js":"137","/var/www/html/Mazars_Pannel/src/pages/TP/QueriesRecevied/QueriesRecevied.js":"138","/var/www/html/Mazars_Pannel/src/pages/TL/SendProposal/ProposalComponent.js":"139","/var/www/html/Mazars_Pannel/src/pages/TP/QueriesTab/QueriesTab.js":"140","/var/www/html/Mazars_Pannel/src/pages/TP/InComplete/InComplete.js":"141","/var/www/html/Mazars_Pannel/src/pages/TP/Complete/Complete.js":"142","/var/www/html/Mazars_Pannel/src/pages/TP/Proposal/Proposal.js":"143","/var/www/html/Mazars_Pannel/src/pages/TP/SendProposal/SendProposal.js":"144","/var/www/html/Mazars_Pannel/src/pages/TP/SendProposal/ProposalComponent.js":"145","/var/www/html/Mazars_Pannel/src/pages/TP/EditProposal/EditProposal.js":"146","/var/www/html/Mazars_Pannel/src/components/Search-Filter/tpfilter.js":"147","/var/www/html/Mazars_Pannel/src/pages/TP/ChangePassword/ChangePassword.js":"148","/var/www/html/Mazars_Pannel/src/views/Schedule/schedule.js":"149","/var/www/html/Mazars_Pannel/src/views/Schedule/demo.js":"150","/var/www/html/Mazars_Pannel/src/views/Schedule/appoinments.js":"151","/var/www/html/Mazars_Pannel/src/pages/TL/ViewReport/ViewReport.js":"152","/var/www/html/Mazars_Pannel/src/pages/TL/Schedule/Schedule.js":"153","/var/www/html/Mazars_Pannel/src/pages/TL/Schedule/Demo.js":"154","/var/www/html/Mazars_Pannel/src/pages/TL/Schedule/appoinments.js":"155"},{"size":478,"mtime":1617278663546,"results":"156","hashOfConfig":"157"},{"size":362,"mtime":1614851778954,"results":"158","hashOfConfig":"157"},{"size":12476,"mtime":1621935669915,"results":"159","hashOfConfig":"157"},{"size":478,"mtime":1614851778946,"results":"160","hashOfConfig":"157"},{"size":477,"mtime":1614851778946,"results":"161","hashOfConfig":"157"},{"size":474,"mtime":1614851778946,"results":"162","hashOfConfig":"157"},{"size":11310,"mtime":1620746786456,"results":"163","hashOfConfig":"157"},{"size":2878,"mtime":1614851778974,"results":"164","hashOfConfig":"157"},{"size":2941,"mtime":1614851778974,"results":"165","hashOfConfig":"157"},{"size":4427,"mtime":1620747499348,"results":"166","hashOfConfig":"157"},{"size":565,"mtime":1614851778974,"results":"167","hashOfConfig":"157"},{"size":428,"mtime":1614851778974,"results":"168","hashOfConfig":"157"},{"size":6233,"mtime":1620742495010,"results":"169","hashOfConfig":"157"},{"size":5774,"mtime":1618810568181,"results":"170","hashOfConfig":"157"},{"size":16883,"mtime":1620746937138,"results":"171","hashOfConfig":"157"},{"size":13487,"mtime":1620747463167,"results":"172","hashOfConfig":"157"},{"size":4731,"mtime":1620625572132,"results":"173","hashOfConfig":"157"},{"size":1149,"mtime":1617794091180,"results":"174","hashOfConfig":"157"},{"size":21974,"mtime":1620747814630,"results":"175","hashOfConfig":"157"},{"size":11784,"mtime":1621837180609,"results":"176","hashOfConfig":"157"},{"size":6504,"mtime":1618384671364,"results":"177","hashOfConfig":"157"},{"size":964,"mtime":1614851778950,"results":"178","hashOfConfig":"157"},{"size":441,"mtime":1614851778954,"results":"179","hashOfConfig":"157"},{"size":13942,"mtime":1617697762169,"results":"180","hashOfConfig":"157"},{"size":3701,"mtime":1618895206231,"results":"181","hashOfConfig":"157"},{"size":8574,"mtime":1620738445037,"results":"182","hashOfConfig":"157"},{"size":9980,"mtime":1620738451529,"results":"183","hashOfConfig":"157"},{"size":11001,"mtime":1618810565237,"results":"184","hashOfConfig":"157"},{"size":5082,"mtime":1620282281802,"results":"185","hashOfConfig":"157"},{"size":8906,"mtime":1619762478800,"results":"186","hashOfConfig":"157"},{"size":12331,"mtime":1619017754521,"results":"187","hashOfConfig":"157"},{"size":1771,"mtime":1616490776680,"results":"188","hashOfConfig":"157"},{"size":8755,"mtime":1620295818994,"results":"189","hashOfConfig":"157"},{"size":5525,"mtime":1617174960790,"results":"190","hashOfConfig":"157"},{"size":4993,"mtime":1618466657378,"results":"191","hashOfConfig":"157"},{"size":14854,"mtime":1621837201690,"results":"192","hashOfConfig":"157"},{"size":441,"mtime":1614851778954,"results":"193","hashOfConfig":"157"},{"size":7698,"mtime":1618384348098,"results":"194","hashOfConfig":"157"},{"size":2411,"mtime":1618479811442,"results":"195","hashOfConfig":"157"},{"size":5279,"mtime":1618128820000,"results":"196","hashOfConfig":"157"},{"size":3671,"mtime":1618895220947,"results":"197","hashOfConfig":"157"},{"size":3255,"mtime":1617355602949,"results":"198","hashOfConfig":"157"},{"size":18134,"mtime":1621835900767,"results":"199","hashOfConfig":"157"},{"size":8756,"mtime":1620295884990,"results":"200","hashOfConfig":"157"},{"size":3551,"mtime":1615879752967,"results":"201","hashOfConfig":"157"},{"size":4443,"mtime":1620279485755,"results":"202","hashOfConfig":"157"},{"size":3762,"mtime":1615970498309,"results":"203","hashOfConfig":"157"},{"size":10363,"mtime":1618810364008,"results":"204","hashOfConfig":"157"},{"size":277,"mtime":1614851778950,"results":"205","hashOfConfig":"157"},{"size":3067,"mtime":1618371790010,"results":"206","hashOfConfig":"157"},{"size":207,"mtime":1619779288920,"results":"207","hashOfConfig":"157"},{"size":2970,"mtime":1621490029944,"results":"208","hashOfConfig":"157"},{"size":10260,"mtime":1621935666651,"results":"209","hashOfConfig":"157"},{"size":4456,"mtime":1616228161004,"results":"210","hashOfConfig":"157"},{"size":13192,"mtime":1618309183741,"results":"211","hashOfConfig":"157"},{"size":4622,"mtime":1620309257338,"results":"212","hashOfConfig":"157"},{"size":6837,"mtime":1620376345592,"results":"213","hashOfConfig":"157"},{"size":1762,"mtime":1615185928333,"results":"214","hashOfConfig":"157"},{"size":11242,"mtime":1618303279912,"results":"215","hashOfConfig":"157"},{"size":12102,"mtime":1618555533456,"results":"216","hashOfConfig":"157"},{"size":8999,"mtime":1620309348952,"results":"217","hashOfConfig":"157"},{"size":13189,"mtime":1618558271287,"results":"218","hashOfConfig":"157"},{"size":13267,"mtime":1618558262811,"results":"219","hashOfConfig":"157"},{"size":18580,"mtime":1618558252387,"results":"220","hashOfConfig":"157"},{"size":13003,"mtime":1618558320643,"results":"221","hashOfConfig":"157"},{"size":9516,"mtime":1620747922393,"results":"222","hashOfConfig":"157"},{"size":3039,"mtime":1617355455734,"results":"223","hashOfConfig":"157"},{"size":13237,"mtime":1618558283519,"results":"224","hashOfConfig":"157"},{"size":9515,"mtime":1620747885573,"results":"225","hashOfConfig":"157"},{"size":2067,"mtime":1618510349202,"results":"226","hashOfConfig":"157"},{"size":2162,"mtime":1616481101031,"results":"227","hashOfConfig":"157"},{"size":18082,"mtime":1621837255727,"results":"228","hashOfConfig":"157"},{"size":3246,"mtime":1617603549395,"results":"229","hashOfConfig":"157"},{"size":1912,"mtime":1616047169459,"results":"230","hashOfConfig":"157"},{"size":1708,"mtime":1615525987064,"results":"231","hashOfConfig":"157"},{"size":498,"mtime":1620035402952,"results":"232","hashOfConfig":"157"},{"size":5034,"mtime":1616230814405,"results":"233","hashOfConfig":"157"},{"size":5010,"mtime":1620625237764,"results":"234","hashOfConfig":"157"},{"size":7641,"mtime":1619005118792,"results":"235","hashOfConfig":"157"},{"size":7921,"mtime":1617601644511,"results":"236","hashOfConfig":"157"},{"size":9993,"mtime":1617601736579,"results":"237","hashOfConfig":"157"},{"size":5607,"mtime":1616317663631,"results":"238","hashOfConfig":"157"},{"size":6639,"mtime":1621490026932,"results":"239","hashOfConfig":"157"},{"size":9419,"mtime":1622201077772,"results":"240","hashOfConfig":"157"},{"size":2674,"mtime":1617789636026,"results":"241","hashOfConfig":"157"},{"size":5991,"mtime":1617797051998,"results":"242","hashOfConfig":"157"},{"size":5130,"mtime":1620217528804,"results":"243","hashOfConfig":"157"},{"size":1402,"mtime":1617189136106,"results":"244","hashOfConfig":"157"},{"size":580,"mtime":1617173766607,"results":"245","hashOfConfig":"157"},{"size":1403,"mtime":1617200404439,"results":"246","hashOfConfig":"157"},{"size":3879,"mtime":1617606931448,"results":"247","hashOfConfig":"157"},{"size":2843,"mtime":1617608128881,"results":"248","hashOfConfig":"157"},{"size":3686,"mtime":1617629971613,"results":"249","hashOfConfig":"157"},{"size":1237,"mtime":1617616955929,"results":"250","hashOfConfig":"157"},{"size":3607,"mtime":1617629055950,"results":"251","hashOfConfig":"157"},{"size":1386,"mtime":1617963523422,"results":"252","hashOfConfig":"157"},{"size":16379,"mtime":1621837107930,"results":"253","hashOfConfig":"157"},{"size":10300,"mtime":1618506906209,"results":"254","hashOfConfig":"157"},{"size":1125,"mtime":1618834878585,"results":"255","hashOfConfig":"157"},{"size":714,"mtime":1618471404856,"results":"256","hashOfConfig":"157"},{"size":2829,"mtime":1618810932866,"results":"257","hashOfConfig":"157"},{"size":3525,"mtime":1621836904238,"results":"258","hashOfConfig":"157"},{"size":3277,"mtime":1618565047590,"results":"259","hashOfConfig":"157"},{"size":3810,"mtime":1618901742047,"results":"260","hashOfConfig":"157"},{"size":1465,"mtime":1621836911450,"results":"261","hashOfConfig":"157"},{"size":2440,"mtime":1618298492090,"results":"262","hashOfConfig":"157"},{"size":569,"mtime":1618556915521,"results":"263","hashOfConfig":"157"},{"size":8328,"mtime":1621511632059,"results":"264","hashOfConfig":"157"},{"size":1096,"mtime":1618318238088,"results":"265","hashOfConfig":"157"},{"size":2531,"mtime":1618561968175,"results":"266","hashOfConfig":"157"},{"size":6275,"mtime":1618980765956,"results":"267","hashOfConfig":"157"},{"size":143,"mtime":1618427724194,"results":"268","hashOfConfig":"157"},{"size":184,"mtime":1619779294628,"results":"269","hashOfConfig":"157"},{"size":490,"mtime":1618831813912,"results":"270","hashOfConfig":"157"},{"size":1492,"mtime":1618513964346,"results":"271","hashOfConfig":"157"},{"size":786,"mtime":1618834447140,"results":"272","hashOfConfig":"157"},{"size":2191,"mtime":1618505455654,"results":"273","hashOfConfig":"157"},{"size":4246,"mtime":1618809486986,"results":"274","hashOfConfig":"157"},{"size":1592,"mtime":1618824771538,"results":"275","hashOfConfig":"157"},{"size":9865,"mtime":1621837087618,"results":"276","hashOfConfig":"157"},{"size":435,"mtime":1618829532985,"results":"277","hashOfConfig":"157"},{"size":1108,"mtime":1618895550304,"results":"278","hashOfConfig":"157"},{"size":2209,"mtime":1618902471690,"results":"279","hashOfConfig":"157"},{"size":123,"mtime":1619793371051,"results":"280","hashOfConfig":"157"},{"size":327,"mtime":1619454422947,"results":"281","hashOfConfig":"157"},{"size":1396,"mtime":1619454422943,"results":"282","hashOfConfig":"157"},{"size":380,"mtime":1619590569747,"results":"283","hashOfConfig":"157"},{"size":10903,"mtime":1619774599924,"results":"284","hashOfConfig":"157"},{"size":399,"mtime":1619590371055,"results":"285","hashOfConfig":"157"},{"size":1578,"mtime":1620022201914,"results":"286","hashOfConfig":"157"},{"size":15437,"mtime":1620033923670,"results":"287","hashOfConfig":"157"},{"size":381,"mtime":1619783791541,"results":"288","hashOfConfig":"157"},{"size":1664,"mtime":1620022347453,"results":"289","hashOfConfig":"157"},{"size":15439,"mtime":1620022939302,"results":"290","hashOfConfig":"157"},{"size":467,"mtime":1620034695974,"results":"291","hashOfConfig":"157"},{"size":3739,"mtime":1620120754200,"results":"292","hashOfConfig":"157"},{"size":3347,"mtime":1620375532787,"results":"293","hashOfConfig":"157"},{"size":4789,"mtime":1620047608610,"results":"294","hashOfConfig":"157"},{"size":8775,"mtime":1618293063606,"results":"295","hashOfConfig":"157"},{"size":2664,"mtime":1620039057582,"results":"296","hashOfConfig":"157"},{"size":2888,"mtime":1620197070257,"results":"297","hashOfConfig":"157"},{"size":2842,"mtime":1620195854590,"results":"298","hashOfConfig":"157"},{"size":4453,"mtime":1620280888613,"results":"299","hashOfConfig":"157"},{"size":470,"mtime":1620217914350,"results":"300","hashOfConfig":"157"},{"size":8780,"mtime":1620276097955,"results":"301","hashOfConfig":"157"},{"size":7646,"mtime":1620229700361,"results":"302","hashOfConfig":"157"},{"size":6910,"mtime":1620309089365,"results":"303","hashOfConfig":"157"},{"size":5192,"mtime":1620218280913,"results":"304","hashOfConfig":"157"},{"size":788,"mtime":1622112917106,"results":"305","hashOfConfig":"157"},{"size":5815,"mtime":1622439133604,"results":"306","hashOfConfig":"157"},{"size":330,"mtime":1622006875731,"results":"307","hashOfConfig":"157"},{"size":2863,"mtime":1622201232651,"results":"308","hashOfConfig":"157"},{"size":668,"mtime":1621936623992,"results":"309","hashOfConfig":"157"},{"size":6264,"mtime":1622436405003,"results":"310","hashOfConfig":"157"},{"size":917,"mtime":1622111124893,"results":"311","hashOfConfig":"157"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},"1lex05f",{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"314"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"314"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"314"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"314"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"314"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"314"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"314"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"314"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"314"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"314"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"314"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"314"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"314"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"314"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"314"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"314"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"314"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"314"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"314"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"314"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"314"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"314"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"314"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"314"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"314"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"314"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"314"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"314"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"314"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"314"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"314"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"314"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"314"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"314"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"314"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"314"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"314"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"314"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"314"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"314"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"314"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"314"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"314"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"472","messages":"473","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"314"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"314"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"314"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"314"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"314"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"314"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"314"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"314"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"314"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"314"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"314"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"314"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"314"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"314"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"314"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"314"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"522","messages":"523","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"314"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"314"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"314"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"314"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"314"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"314"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"542","messages":"543","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"314"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"547","messages":"548","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"314"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"314"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"314"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"558"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"561"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"568"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"571","messages":"572","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"314"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"576","messages":"577","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"314"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"581","messages":"582","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"314"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"314"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"590"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"593"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"314"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"314"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"314"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"314"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"314"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"314"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"314"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"314"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"620","messages":"621","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"314"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"314"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"314"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"314"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"636","messages":"637","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"638","messages":"639","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"314"},{"filePath":"641","messages":"642","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"643","messages":"644","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"590"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"314"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"652"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655","usedDeprecatedRules":"590"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"663"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"663"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"314"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"314"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"314"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"314"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"314"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687","usedDeprecatedRules":"314"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692","usedDeprecatedRules":"314"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695","usedDeprecatedRules":"314"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698","usedDeprecatedRules":"314"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701","usedDeprecatedRules":"314"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"704","usedDeprecatedRules":"314"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"707","usedDeprecatedRules":"314"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"710","usedDeprecatedRules":"314"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"713","usedDeprecatedRules":"314"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"314"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"314"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"724","usedDeprecatedRules":"314"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"727","usedDeprecatedRules":"314"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"314"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"735"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"738","messages":"739","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"314"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},"/var/www/html/Mazars_Pannel/src/index.js",[],["745","746"],"/var/www/html/Mazars_Pannel/src/reportWebVitals.js",[],"/var/www/html/Mazars_Pannel/src/App.js",["747","748","749","750","751","752"],"import React, { useEffect } from \"react\";\nimport {HashRouter  as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { positions, Provider, transitions } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n// import 'bulma/css/bulma.css'\n\n\n//user routes\nimport Signin from './views/SignInForm/SignIn'\nimport SignUp from './views/SignUpForm/SignUp'\nimport VerifyOtp from './views/VerifyOtp/VerifyOtp'\nimport VerifyOtpLogin from './views/VrerifyOtpLogin/VerifyOtpLogin'\nimport RegisterYourSelf from './views/RegisterYourSelf/RegisterYourSelf'\nimport Start from './views/Start/Start'\nimport Dashboard from './views/Dashboard/Dashboard'\nimport MyAssingment from './views/MyAssingment/MyAssingment'\nimport AddFreshAssingment from './views/AddFressAssignment/AddFreshAssingment'\nimport QuestionnairePage from './views/QuestionnairePage/QuestionnairePage'\nimport Feedback from './views/Feedback/Feedback'\nimport Layout from './components/Layout/Layout'\nimport SelectCategoryPage from './views/SelectCategoryPage/SelectCategoryPage'\nimport QueriesTab from './views/QueriesTab/QueriesTab'\nimport ProposalTab from './views/ProposalTab/ProposalTab'\nimport AssignmentTab from './views/AssignmentTab/AssignmentTab'\nimport ProposalReceived from './views/ProposalReceived/ProposalReceived'\nimport ForgetPassword from './views/ForgetPassword/ForgetPassword'\nimport NewPassword from './views/NewPassword/NewPassword'\nimport ChangePassword from './views/ChangePassword/ChangePassword'\nimport EditQuery from './views/EditQuery/EditQuery'\nimport VideoCall from './views/VideoCall/VideoCall'\nimport MeetingComponent from './views/MeetingComponent/MeetingComponent'\nimport schedule from './views/Schedule/schedule'\n\n\n\n\n//admin routes\nimport AdminStart from './pages/Admin/Start/Start'\nimport AdminLogin from './pages/Admin/Login/Login'\nimport AdminDashboard from './pages/Admin/Dashboard/Dashboard'\nimport AdminNewTeamLeader from './pages/Admin/AddNewTeamLeader/AddNewTeamLeader'\nimport AdminNewTaxProf from './pages/Admin/AddNewTaxProf/AddNewTaxProf'\nimport AdminProposal from './pages/Admin/Proposal/Proposal'\nimport AdminQueriesRecevied from './pages/Admin/QueriesRecevied/QueriesRecevied'\nimport AdminQueryAssingment from './pages/Admin/QueryAssingment/QueryAssingment'\nimport AdminEditTL from './pages/Admin/EditTL/EditTL'\nimport AdminEditTP from './pages/Admin/EditTP/EditTP'\nimport AdminQueriesTab from './pages/Admin/QueriesTab/QueriesTab'\nimport AdminAssignmentTab from './pages/Admin/AssignmentTab/AssignmentTab'\nimport AdminPaymentStatusTab from './pages/Admin/PaymentStatusTab/PaymentStatusTab'\nimport AdminTeamLeaderTab from './pages/Admin/TeamLeaderTab/TeamLeaderTab'\nimport AdminTaxProfessionalsTab from './pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab'\nimport AdminFeedbackTab from './pages/Admin/FeedbackTab/FeedbackTab'\nimport AdminPendingRecevived from './pages/Admin/PendingReceived/PendingRecevived'\n\n\n\n\n\n//TL routes\nimport TlStart from './pages/TL/Start/Start'\nimport TlLogin from './pages/TL/Login/Login'\nimport TlDashboard from './pages/TL/Dashboard/Dashboard'\nimport TlAddAssingmentStages from './pages/TL/AddAssingmentStages/AddAssingmentStages'\nimport TlAddNew from './pages/TL/AddNew/AddNew'\nimport TlAddTeamProf from './pages/TL/AddTeamProf/AddTeamProf'\nimport TlProposal from './pages/TL/Proposal/Proposal'\nimport TlQueriesRecevied from './pages/TL/QueriesRecevied/QueriesRecevied'\nimport TlQueryAssingment from './pages/TL/QueryAssingment/QueryAssingment'\nimport TlEditTP from './pages/TL/EditTP/EditTP'\nimport TlFeedbackTab from './pages/TL/FeedbackTab/FeedbackTab'\nimport TlPaymentStatus from './pages/TL/PaymentStatus/PaymentStatus'\nimport TlAssignmentTab from './pages/TL/AssignmentTab/AssignmentTab'\nimport TlSendProposal from './pages/TL/SendProposal/SendProposal'\nimport TlQueriesTab from './pages/TL/QueriesTab/QueriesTab'\nimport TlEditProposal from './pages/TL/EditProposal/EditProposal'\nimport TlPendingReceived from './pages/TL//PendingReceived/PendingReceived'\nimport TlQueryTab2 from './pages/TL/QueryTab2/QueryTab2'\nimport TlAssignmentForm from './pages/TL/AssignmentForm/AssignmentForm'\nimport TlMeetingComponent from './pages/TL/MeetingComponent/MeetingComponent'\nimport TlViewReport from './pages/TL/ViewReport/ViewReport'\nimport TlSchedule from './pages/TL/Schedule/Schedule'\n\n\n\n\n\n\n// TP routes\nimport TpStart from './pages/TP/Start/Start'\nimport TpLogin from './pages/TP/Login/Login'\nimport TpQueriesRecevied from './pages/TP/QueriesRecevied/QueriesRecevied'\nimport TpQueriesTab from './pages/TP/QueriesTab/QueriesTab'\nimport TpProposal from './pages/TP/Proposal/Proposal'\nimport TpSendProposal from './pages/TP/SendProposal/SendProposal'\nimport TpEditProposal from './pages/TP/EditProposal/EditProposal'\nimport TpChangePassword from './pages/TP/ChangePassword/ChangePassword'\nimport TpDashboard from './pages/TP/Dashboard/Dashboard'\n\n\n\n\n\n\n//private routes\n// import PrivateRouteUser from './Service/PrivateRouteUser'\nimport PrivateRouteAdmin from './Service/PrivateRouteAdmin'\nimport PrivateRouteTL from './Service/PrivateRouteTL'\nimport PrivateRouteTP from './Service/PrivateRouteTP'\n\n\n\n\nconst options = {\n  timeout: 4000,\n  position: positions.TOP_CENTER,\n  offset: \"80px\",\n  transition: transitions.SCALE,\n};\n\n\nfunction App() {\n  return (\n    <div>\n        <Provider template={AlertTemplate} {...options}>\n        <Router>\n        <Switch>\n\n        <Route exact path=\"/\" component={Start} />\n        <Route exact path=\"/customer/signin\" component={Signin} />\n        <Route exact path=\"/customer/signup\" component={SignUp} />\n        <Route exact path=\"/customer/register-yourself\" component={RegisterYourSelf} />\n        <Route exact path=\"/customer/verify-otp\" component={VerifyOtp} />\n        <Route exact path=\"/customer/otp\" component={VerifyOtpLogin} />\n        <Route exact path=\"/customer/questionnaire-page\" component={QuestionnairePage} />\n        <Route exact path=\"/customer/feedback\" component={Feedback} />\n        <Route exact path=\"/customer/dashboard\" component={Dashboard} />\n        <Route exact path=\"/customer/my-assingment/:id\" component={MyAssingment} />\n        <Route exact path=\"/customer/addfresh\" component={AddFreshAssingment} />\n        <Route exact path=\"/customer/select-category\" component={SelectCategoryPage} />\n        <Route exact path=\"/customer/dashboard\" component={Layout} />\n        <Route exact path=\"/customer/queries\" component={QueriesTab} />\n        <Route exact path=\"/customer/proposal\" component={ProposalTab} />\n        <Route exact path=\"/customer/assignment\" component={AssignmentTab} />\n        <Route exact path=\"/customer/proposal-received/:id\" component={ProposalReceived} />\n        <Route exact path=\"/customer/forget-password\" component={ForgetPassword} />\n        <Route exact path=\"/customer/new-password\" component={NewPassword} />\n        <Route exact path=\"/customer/change-password\" component={ChangePassword} />\n        <Route exact path=\"/customer/edit-query/:id\" component={EditQuery} />\n        <Route exact path=\"/customer/video-call\" component={VideoCall} />\n        <Route exact path=\"/customer/meeting\" component={MeetingComponent} />\n        <Route exact path=\"/customer/schedule\" component={schedule} />\n\n\n\n\n\n        <Route exact path=\"/admin/start\" component={AdminStart} />\n        <Route exact path=\"/admin/login\" component={AdminLogin} />\n        <Route exact path=\"/admin/dashboard\" component={AdminDashboard} />\n        <Route exact path=\"/admin/addnewtl\" component={AdminNewTeamLeader} />\n        <Route exact path=\"/admin/addnewtp\" component={AdminNewTaxProf} />\n        <Route exact path=\"/admin/teamleaders\" component={AdminTeamLeaderTab} />\n        <Route exact path=\"/admin/taxprofessionals\" component={AdminTaxProfessionalsTab} />\n        <Route exact path=\"/admin/proposal\" component={AdminProposal} />\n        <Route exact path=\"/admin/queries/:id\" component={AdminQueriesRecevied} />\n        <Route exact path=\"/admin/queryassing/:id\" component={AdminQueryAssingment} />\n        <Route exact path=\"/admin/queriestab\" component={AdminQueriesTab} />\n        <Route exact path=\"/admin/feedback\" component={AdminFeedbackTab} />\n        <Route exact path=\"/admin/paymentstatus\" component={AdminPaymentStatusTab} />\n        <Route exact path=\"/admin/assignment\" component={AdminAssignmentTab} />\n        <Route exact path=\"/admin/edittl/:id\" component={AdminEditTL} />\n        <Route exact path=\"/admin/edittp/:id\" component={AdminEditTP} />\n        <Route exact path=\"/admin/pending/:id\" component={AdminPendingRecevived} />\n\n\n\n        <Route exact path=\"/teamleader/start\" component={TlStart} />\n        <Route exact path=\"/teamleader/login\" component={TlLogin} />\n        <Route exact path=\"/teamleader/dashboard\" component={TlDashboard} />\n        <Route exact path=\"/teamleader/addnew\" component={TlAddNew} />\n        <Route exact path=\"/teamleader/addteamprof\" component={TlAddTeamProf} />\n        <Route exact path=\"/teamleader/proposal\" component={TlProposal} />\n        <Route exact path=\"/teamleader/addassingment/:id\" component={TlAddAssingmentStages} />\n        <Route exact path=\"/teamleader/queries/:id\" component={TlQueriesRecevied} />\n        <Route exact path=\"/teamleader/queryassing/:id\" component={TlQueryAssingment} />\n        <Route exact path=\"/teamleader/edittp/:id\" component={TlEditTP} />\n        <Route exact path=\"/teamleader/feedback\" component={TlFeedbackTab} />\n        <Route exact path=\"/teamleader/paymentstatus\" component={TlPaymentStatus} />\n        <Route exact path=\"/teamleader/assignment\" component={TlAssignmentTab} />\n        <Route exact path=\"/teamleader/sendproposal/:id\" component={TlSendProposal} />\n        <Route exact path=\"/teamleader/queriestab\" component={TlQueriesTab} />\n        <Route exact path=\"/teamleader/edit-proposal/:id\" component={TlEditProposal} />\n        <Route exact path=\"/teamleader/pending/:id\" component={TlPendingReceived} />\n        <Route exact path=\"/teamleader/queriestab2\" component={TlQueryTab2} />\n        <Route exact path=\"/teamleader/assignment-form/:id\" component={TlAssignmentForm} />\n        <Route exact path=\"/teamleader/meeting\" component={TlMeetingComponent} />\n        <Route exact path=\"/teamleader/view-report/:id\" component={TlViewReport} />\n        <Route exact path=\"/teamleader/schedule\" component={TlSchedule} />\n\n\n\n\n        <Route exact path=\"/taxprofessional/start\" component={TpStart} />\n        <Route exact path=\"/taxprofessional/login\" component={TpLogin} />\n        <Route exact path=\"/taxprofessional/queries/:id\" component={TpQueriesRecevied} />\n        <Route exact path=\"/taxprofessional/queriestab\" component={TpQueriesTab} />\n        <Route exact path=\"/taxprofessional/proposal\" component={TpProposal} />\n        <Route exact path=\"/taxprofessional/sendproposal/:id\" component={TpSendProposal} />\n        <Route exact path=\"/taxprofessional/edit-proposal/:id\" component={TpEditProposal} />\n        <Route exact path=\"/taxprofessional/change-password\" component={TpChangePassword} />\n        <Route exact path=\"/taxprofessional/dashboard\" component={TpDashboard} />\n\n\n        </Switch>\n      </Router>\n      </Provider>\n    </div>\n  );\n}\n\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n          {/* <Route exact path=\"/\" component={Start} />\n          <Route exact path=\"/abc\" component={Layout} />\n\n          <Route exact path=\"/signin\" component={Signin} />\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route exact path=\"/register-yourself\" component={RegisterYourSelf} />\n          <Route exact path=\"/verify-otp\" component={VerifyOtp} />\n          <Route exact path=\"/otp\" component={VerifyOtpLogin} />\n          <Route exact path=\"/questionnaire-page\" component={QuestionnairePage} />\n             \n          <Route exact path=\"/questionnaire\" component={Questionnaire} />    \n          <Route exact path=\"/feedback\" component={Feedback} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/my-assingment/:id\" component={MyAssingment} />\n          <Route exact path=\"/addfresh\" component={AddFreshAssingment} /> */}\n          {/*  */}\n\n  // <Switch>\n      //   <Route exact path=\"/\" component={Login} />\n      //   <PrivateRoute\n      //     path=\"/admin\"\n      //     render={(props) => <AdminLayout {...props} />}\n      //   />\n\n        \n      // </Switch>","/var/www/html/Mazars_Pannel/src/Service/PrivateRouteAdmin.js",[],"/var/www/html/Mazars_Pannel/src/Service/PrivateRouteTP.js",[],"/var/www/html/Mazars_Pannel/src/Service/PrivateRouteTL.js",[],"/var/www/html/Mazars_Pannel/src/views/SignUpForm/SignUp.js",["753","754"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from \"reactstrap\";\n\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_profession: yup.string().required(\"required proffesion\"),\n  p_state: yup.string().required(\"required state\"),\n  p_city: yup.string().required(\"required city\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n  p_password: yup\n    .string()\n    .required(\"required password\")\n    .min(5, \"at least 5 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\nfunction SignUp(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [states, setStates] = useState([]);\n  const [city, setCity] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [load, setLoad] = useState(false);\n\n  const [store, setStore] = useState(0);\n\n  useEffect(() => {\n    const getStates = () => {\n      // console.log(`${baseUrl}/customers/getState`)\n      axios.get(`${baseUrl}/customers/getState`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setStates(res.data.result);\n        }\n      });\n    };\n    getStates();\n  }, []);\n\n  useEffect(() => {\n    const getCity = () => {\n      axios\n        .get(`${baseUrl}/customers/getCity?state_id=${store}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setCity(res.data.result);\n          }\n        });\n    };\n\n    getCity();\n  }, [store]);\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    console.log(\"value :\", value.p_state);\n    setLoad(true);\n\n    let formData = new FormData();\n    formData.append(\"name\", value.p_name);\n    formData.append(\"email\", value.p_email);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"occupation\", value.p_profession);\n    formData.append(\"state\", name);\n    formData.append(\"city\", value.p_city);\n    formData.append(\"password\", value.p_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/signup`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n\n        if (response.data.code === 1) {\n          alert.success(\"signup successfully !\");\n          localStorage.setItem(\"userid\", JSON.stringify(response.data.id));\n          localStorage.setItem(\n            \"userNameId\",\n            JSON.stringify(response.data.user_id)\n          );\n          localStorage.setItem(\"name\", JSON.stringify(response.data.name));\n          props.history.push(\"/customer/questionnaire-page\");\n          reset();\n        } else if (response.data.code === 0) {\n          console.log(\"res -\", response.data.result);\n          setLoad(false);\n\n          Swal.fire(\n            \"Oops\",\n            `error : \n          \n          ${response.data.message[0] ? response.data.message[0] : \"\"} \n\n          ${response.data.message[0] && response.data.message[1] ? \"and\" : \"\"} \n\n            ${response.data.message[1] ? response.data.message[1] : \"\"} \n            `,\n            \"error\"\n          );\n          reset();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const getID = (key) => {\n    setStore(key);\n\n    states.filter((data) => {\n      if (data.Id == key) {\n        console.log(\"Name\", data.name);\n        setName(data.name);\n        // document.getElementById('state').value=data.Name;\n      }\n    });\n  };\n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Customer Register</h2>\n          </div>\n          {load ? (\n            <Spinner size=\"sm\" color=\"primary\" />\n          ) : (\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Name</label>\n                    <input\n                      type=\"text\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_name,\n                      })}\n                      name=\"p_name\"\n                      ref={register}\n                      placeholder=\"Enter Name\"\n                    />\n                    {errors.p_name && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_name.message}{\" \"}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Email</label>\n                    <input\n                      type=\"text\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_email,\n                      })}\n                      name=\"p_email\"\n                      ref={register}\n                      placeholder=\"Enter Email\"\n                    />\n                    {errors.p_email && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_email.message}{\" \"}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Phone number</label>\n                    <input\n                      type=\"text\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_phone,\n                      })}\n                      name=\"p_phone\"\n                      ref={register}\n                      placeholder=\"Phone number\"\n                    />\n                    {errors.p_phone && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_phone.message}{\" \"}\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Occupation/ Profession</label>\n                    <br />\n                    <select\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_profession,\n                      })}\n                      name=\"p_profession\"\n                      aria-label=\"Default select example\"\n                      ref={register}\n                    >\n                      <option value=\"\">--select--</option>\n                      {professionName.map((p, index) => (\n                        <option key={index} value={p.city}>\n                          {p.city}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.p_profession && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_profession.message}{\" \"}\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">State</label>\n                    <select\n                      id=\"state\"\n                      name=\"p_state\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_state,\n                      })}\n                      ref={register}\n                      onChange={(e) => getID(e.target.value)}\n                    >\n                      <option value=\"\">--select--</option>\n                      {states.map((p) => (\n                        <option key={p.Id} value={p.id}>\n                          {p.name}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.p_state && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_state.message}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">City</label>\n\n                    <select\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_city,\n                      })}\n                      name=\"p_city\"\n                      ref={register}\n                    >\n                      <option value=\"\">--select--</option>\n                      {city.map((p, index) => (\n                        <option key={index} value={p.city}>\n                          {p.city}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.p_city && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_city.message}\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <div class=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Password</label>\n                    <input\n                      type=\"password\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_password,\n                      })}\n                      name=\"p_password\"\n                      ref={register}\n                      placeholder=\"Enter Password\"\n                    />\n                    {errors.p_password && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_password.message}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n          )}\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default SignUp;\n\nconst professionName = [\n  { city: \"CA\" },\n  { city: \"NON-CA\" },\n  { city: \"CFO\" },\n  { city: \"CEO\" },\n  { city: \"FINANCE HEAD\" },\n  { city: \"ACCOUNTS MANAGER\" },\n  { city: \"ACCOUNTANT\" },\n  { city: \"TAX PROFESSIONAL\" },\n  { city: \"OTHERS\" },\n];\n\n// Swal.fire(\n//   'Oops...',\n//   \"Errorr : <br/>\"\n//  +response.data.message[0]+\n//   \"<br/>\"\n//   +response.data.message[1] ,\n//   'error')\n","/var/www/html/Mazars_Pannel/src/views/VrerifyOtpLogin/VerifyOtpLogin.js",["755","756","757"],"import React , {useEffect , useState} from 'react'\nimport Header from \"../../components/Header/Header\";\nimport Footer from '../../components/Footer/Footer'\nimport axios from 'axios'\nimport { baseUrl } from \"../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\n\n// const Schema = yup.object().shape({\n//   p_otp: yup.string().required(\"required otp\"),\n// });\n\n\nfunction VerifyOtp(props) {\n\n  const { handleSubmit, register,  errors  } = useForm();\n\n  const[time, setTime] = useState('')\n  const[disabled, setDisabled] = useState(false)\n\n  \n  useEffect(() => {\n    console.log(\"call useEffect\")\n\n    var timerOn = true;\n\n    function timer(remaining) {\n    // var m = Math.floor(remaining / 60);\n    var s = remaining % 60;\n    \n    // m = m < 10 ? '0' + m : m;\n    s = s < 10 ? '0' + s : s;\n      setTime(s)\n\n      remaining -= 1;\n  \n    if(remaining >= 0 && timerOn) {\n      setTimeout(function() {\n          timer(remaining);\n      }, 1000);\n      return;\n    }\n    setDisabled(true)\n    }\n  \n    timer(60);\n  }, []);\n \n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n  \n    let formData = new FormData();\n    formData.append(\"otp\", value.p_otp);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/auth/validateOTP`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);   \n        if (response.data.code === 1) {\n          props.history.push(\"/customer/dashboard\");\n          } \n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  }\n\n\n  const resendOtp = () => {\n    props.history.push(\"/customer/signin\");\n  }\n\n\n\n  return (\n    <>\n    <Header cust_sign=\"cust_sign\"/>\n    <div class=\"container\">\n      <div class=\"otp\">\n        <div class=\"heading text-center\">\n          <h2>Verify Your OTP</h2>\n        </div>\n        <form onSubmit={handleSubmit(onSubmit)}>\n        { \n              disabled ? \n              null\n            : \n            <div class=\"form-group\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"otp\"\n              placeholder=\"Enter Your OTP Here\"\n              ref={register}\n              name=\"p_otp\"\n            />\n         \n            <small class=\"text-center\">           \n              Note: OTP is valid for {time} seconds.\n            </small>\n          </div>\n            }\n\n          <div class=\"text-center\">\n\n          { \n              disabled ?\n              <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>RESEND OTP</button>           \n              :\n              <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button> \n            }\n          </div>\n        </form>\n      </div>\n    </div>\n    <Footer />\n    </>\n  );\n}\n\nexport default VerifyOtp;\n","/var/www/html/Mazars_Pannel/src/views/VerifyOtp/VerifyOtp.js",["758","759","760"],"import React , {useEffect , useState} from 'react'\nimport { useForm } from \"react-hook-form\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from '../../components/Footer/Footer'\nimport axios from 'axios'\nimport { baseUrl } from \"../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\n\n// const Schema = yup.object().shape({\n//   p_otp: yup.string().required(\"required otp\"),\n// });\n\n\nfunction VerifyOtp(props) {\n\n  const { handleSubmit, register,  errors  } = useForm();\n\n  const[time, setTime] = useState('')\n  const[disabled, setDisabled] = useState(false)\n\n\n  useEffect(() => {\n    console.log(\"call useEffect\")\n\n    var timerOn = true;\n\n    function timer(remaining) {\n    // var m = Math.floor(remaining / 60);\n    var s = remaining % 60;\n    \n    // m = m < 10 ? '0' + m : m;\n    s = s < 10 ? '0' + s : s;\n      setTime(s)\n\n      remaining -= 1;\n  \n    if(remaining >= 0 && timerOn) {\n      setTimeout(function() {\n          timer(remaining);\n      }, 1000);\n      return;\n    }\n\n    setDisabled(true)\n    \n    }\n    \n\n    timer(60);\n  }, []);\n \n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n  \n    let formData = new FormData();\n    formData.append(\"otp\", value.p_otp);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/auth/validateOTP`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);   \n        if (response.data.code === 1) {\n          props.history.push(\"/customer/questionnaire-page\");\n          } \n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  }\n\n    const resendOtp = () => {\n      \n      props.history.push(\"/customer/signup\");\n    }\n\n  return (\n    <>\n<Header cust_sign=\"cust_sign\"/>\n    <div class=\"container\">\n      <div class=\"otp\">\n        <div class=\"heading text-center\">\n          <h2>Verify Your OTP</h2>\n        </div>\n        <form onSubmit={handleSubmit(onSubmit)}>\n        { \n              disabled ? \n              null\n            : \n            <div class=\"form-group\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"otp\"\n              placeholder=\"Enter Your OTP Here\"\n              ref={register}\n              name=\"p_otp\"\n            />\n          \n            <small class=\"text-center\">           \n              Note: OTP is valid for {time} seconds.\n            </small>\n          </div>\n            }\n         \n\n          <div class=\"text-center\">\n\n            { \n              disabled ?\n              <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>RESEND OTP</button>           \n              :\n              <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button> \n            }\n            \n\n            \n          </div>\n        </form>\n      </div>\n    </div>\n    <Footer />\n    </>\n  );\n}\n\nexport default VerifyOtp;\n","/var/www/html/Mazars_Pannel/src/views/SignInForm/SignIn.js",["761","762"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from \"reactstrap\";\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_password: yup.string().required(\"required password\"),\n});\n\nfunction SignIn(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [load, setLoad] = useState(false);\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    setLoad(true);\n\n    let formData = new FormData();\n    formData.append(\"user_id\", value.p_email);\n    formData.append(\"password\", value.p_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/login`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Login successfully !\");\n          localStorage.setItem(\"userid\", JSON.stringify(response.data.user_id));\n          localStorage.setItem(\"name\", JSON.stringify(response.data.name));\n          props.history.push(\"/customer/dashboard\");\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          setLoad(false);\n          Swal.fire(\n            \"Oops...\",\n            \"Errorr : Incorrect Email and password\",\n            \"error\"\n          );\n          // Swal.fire(`oops : ${response.data.result}`)\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Customer Login</h2>\n          </div>\n\n          {load ? (\n            <Spinner size=\"sm\" color=\"primary\" />\n          ) : (\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Email</label>\n                    <input\n                      type=\"text\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_email,\n                      })}\n                      name=\"p_email\"\n                      ref={register}\n                      placeholder=\"Enter Email\"\n                    />\n                    {errors.p_email && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_email.message}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-md-12\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Password</label>\n                    <input\n                      type=\"password\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_password,\n                      })}\n                      name=\"p_password\"\n                      placeholder=\"Enter Password\"\n                      ref={register}\n                    />\n                    {errors.p_password && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_password.message}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n\n              <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n                <Link to={`/customer/forget-password`}>Forgot Password</Link>\n              </div>\n            </form>\n          )}\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default SignIn;\n","/var/www/html/Mazars_Pannel/src/views/RegisterYourSelf/RegisterYourSelf.js",[],"/var/www/html/Mazars_Pannel/src/views/Start/Start.js",[],"/var/www/html/Mazars_Pannel/src/views/Dashboard/Dashboard.js",["763"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport \"./index.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\n\n\nfunction Dashboard() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const [queries, setQueries] = useState(\"\");\n  const [proposal, setProposal] = useState(\"\");\n  const [assignment, setAssignment] = useState(\"\");\n\n  useEffect(() => {\n    const getQueries = () => {\n      axios\n        .get(\n          `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(\n            userId\n          )}`\n        )\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setQueries(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getProposal = () => {\n      axios\n        .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setProposal(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getAssignment = () => {\n      axios\n        .get(\n          `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}`\n        )\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setAssignment(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    getQueries();\n    getProposal();\n    getAssignment();\n  }, []);\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div class=\"row mt-3\">\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-180\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">Queries</h5>\n                </div>\n                <div>\n                  <Link to={`/customer/queries/`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{queries === \"0\" ? \"0\" : queries}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-180\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Proposal\n                  </h5>\n                </div>\n                <div>\n                  <Link to={`/customer/proposal/`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{proposal === \"0\" ? \"0\" : proposal}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-180\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Assignment\n                  </h5>\n                </div>\n                <div>\n                  <Link to={`/customer/assignment/`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{assignment === \"\" ? \"0\" : assignment}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Dashboard;\n\n// <div class=\"row\">\n// <div class=\"col-sm-4\">\n//   <div class=\"card\">\n//     <div class=\"card-body\">\n//       <p style={{ fontSize: \"24px\" }}>Queries</p>\n//       <div\n//         style={{\n//           display: \"flex\",\n//           flexDirection: \"row\",\n//           justifyContent: \"flex-end\",\n//         }}\n//       >\n//         <h2>{queries === \"0\" ? \"0\" : queries}</h2>\n//       </div>\n//     </div>\n//   </div>\n// </div>\n\n// <div class=\"col-sm-4\">\n//   <div class=\"card\">\n//     <div class=\"card-body\">\n//       <p style={{ fontSize: \"24px\" }}>Proposal</p>\n\n//       <div\n//         style={{\n//           display: \"flex\",\n//           flexDirection: \"row\",\n//           justifyContent: \"flex-end\",\n//         }}\n//       >\n//         <h2>{proposal === \"0\" ? \"0\" : proposal}</h2>\n//       </div>\n//     </div>\n//   </div>\n// </div>\n\n// <div class=\"col-sm-4\">\n//   <div class=\"card\">\n//     <div class=\"card-body\">\n//       <p style={{ fontSize: \"24px\" }}>Assignment</p>\n\n//       <div\n//         style={{\n//           display: \"flex\",\n//           flexDirection: \"row\",\n//           justifyContent: \"flex-end\",\n//         }}\n//       >\n//         <h2>{assignment === \"\" ? \"0\" : assignment}</h2>\n//       </div>\n//     </div>\n//   </div>\n// </div>\n// </div>\n","/var/www/html/Mazars_Pannel/src/views/MyAssingment/MyAssingment.js",["764","765"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { Link, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport QueryDetails from \"../../components/QueryDetails/QueryDetails\";\n\nfunction MyAssingment() {\n  const { id } = useParams();\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n\n\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n    misc2: \"\",\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tlname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/customers/getQueryDetails?id=${id}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setPaymentDetails(res.data.payment_detail);\n          setAssingmentNo(res.data.result[0].assign_no);\n\n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n          \n          console.log(\"purposeItem-\", typeof purposeItem);\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            var myYear = JSON.parse(assementItem);\n            setPurpose(myPurpose);\n            setYear(myYear);\n          } catch (e) {\n            return false;\n          }\n\n          // if (typeof purposeItem == \"string\") {\n\n          // }\n\n          if (res.data.proposal_queries.length > 0) {\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              misc2: res.data.proposal_queries[0].misc2,\n            });\n          }\n\n          if (res.data.assignment.length > 0) {\n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n          if (res.data.history_queries.length > 0) {\n            setDisplayHistory({\n              tlname: res.data.history_queries[0].tname,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n          }\n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n        }\n      });\n    };\n    getQuery();\n    getSubmittedAssingment();\n  }, [assingNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setDisplayQuery(res.data.result);\n        }\n      });\n  };\n\n  // console.log(\"purpose -\", JSON.parse(purpose));\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"schedule\">\n            <h3>Query Detail</h3>\n          </div>\n        </div>\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          {submitData.map((p, index) => (\n            <QueryDetails\n              p={p}\n              key={index}\n              diaplaySpecific={diaplaySpecific}\n              diaplayProposal={diaplayProposal}\n              diaplayHistory={diaplayHistory}\n              diaplayAssignment={diaplayAssignment}\n              displayQuery={displayQuery}\n              getQuery={getQuery}\n              assingNo={assingNo}\n              customerQuery=\"customerQuery\"\n              queryDocs={queryDocs}\n              purpose={purpose}\n              year={year}\n              paymentDetails={paymentDetails}\n            />\n          ))}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default MyAssingment;\n\n// <h2 class=\"mb-0 query\">\n// <button\n//   class=\"btn btn-link btn-block text-left\"\n//   type=\"button\"\n//   data-toggle=\"collapse\"\n//   data-target={`#${i}`}\n//   aria-expanded=\"true\"\n//   aria-controls=\"collapseOne\"\n// >\n//   {p.assign_no}\n// </button>\n// <div style={{display:\"flex\" , justifyContent:\"space-evenly\"}}>\n//   <p class=\"m-0\" style={{ fontSize: \"15px\" }}>\n//     Submitted on\n//   </p>\n//   <p class=\"m-0\" style={{ fontSize: \"15px\" }}>\n//    : {p.created}\n//   </p>\n// </div>\n// <div class=\"d-flex\">\n//   <div class=\"additional\">\n//     <button\n//       class=\"btn\"\n//       data-toggle=\"modal\"\n//       data-target=\"#staticBackdrop\"\n//       onClick={addHandler}\n//     >\n//       Add. Query\n//     </button>\n//   </div>\n//   <div class=\"complete\">\n//     <p>Pending</p>\n//   </div>\n// </div>\n// </h2>\n","/var/www/html/Mazars_Pannel/src/views/AddFressAssignment/AddFreshAssingment.js",["766","767","768","769","770","771","772","773","774","775","776"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport * as yup from \"yup\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport { Spinner } from \"reactstrap\";\n\nfunction AddFreshAssingment(props) {\n  const alert = useAlert();\n  const history = useHistory();\n  const [load, setLoad] = useState(false);\n\n  const { handleSubmit, register, errors, reset, control } = useForm({\n    defaultValues: {\n      users: [{ query: \"\" }],\n    },\n  });\n\n  const { append, remove, fields } = useFieldArray({\n    control,\n    name: \"users\",\n  });\n\n  const userId = window.localStorage.getItem(\"userid\");\n  const category = window.localStorage.getItem(\"category\");\n  const [selectedOption, setSelectedOption] = useState([]);\n  const [purposeOption, setPurposeOption] = useState([]);\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    setLoad(true);\n\n    let formData = new FormData();\n\n    var uploadImg = value.upload;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let a = value.upload[i].pics[0];\n        formData.append(\"upload_1[]\", a);\n      }\n    }\n\n    formData.append(\"fact\", value.p_fact);\n    formData.append(\"specific\", JSON.stringify(value.users));\n    formData.append(\"timelines\", value.p_timelines);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"cid\", JSON.parse(category));\n    formData.append(\"softcopy_word\", Number(value.p_format_word));\n    formData.append(\n      \"softcopy_digitally_assigned\",\n      Number(value.p_format_digital)\n    );\n    formData.append(\n      \"printout_physically_assigned\",\n      Number(value.p_format_physically)\n    );\n    formData.append(\"case_name\", value.p_case_name);\n    formData.append(\"assessment_year\", JSON.stringify(selectedOption));\n    formData.append(\"purpose\", JSON.stringify(purposeOption));\n\n    axios\n      .post(`${baseUrl}/customers/PostQuestion`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          reset();\n          alert.success(<Msg />);\n          props.history.push(\"/customer/queries\");\n        } else {\n          setLoad(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"12px\" }}>Query successfully added!</p>\n      </>\n    );\n  };\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Add Fresh Query</p>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardHeader>\n          <div class=\"col-xl-8 col-lg-8 col-md-12 py-4\">\n            {load ? (\n              <Spinner size=\"sm\" color=\"primary\" />\n            ) : (\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Facts of the case</label>\n                      <textarea\n                        className=\"form-control\"\n                        id=\"textarea\"\n                        rows=\"6\"\n                        name=\"p_fact\"\n                        ref={register}\n                      ></textarea>\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"question_query mb-2\">\n                      <label className=\"form-label\">\n                        Specific Questions for advisory\n                      </label>\n                      <div\n                        className=\"btn btn-primary\"\n                        onClick={() => append({ query: \"\" })}\n                      >\n                        +\n                      </div>\n                    </div>\n\n                    {fields.map((item, index) => (\n                      <div className=\"question_query_field mb-2\" key={index}>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          ref={register}\n                          name={`users[${index}].query`}\n                          placeholder=\"Specify your query\"\n                          defaultValue={`${item.query}`}\n                        />\n                        <div\n                          className=\"btn btn-primary ml-2\"\n                          onClick={() => remove(index)}\n                        >\n                          -\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Case name</label>\n                      <input\n                        type=\"text\"\n                        name=\"p_case_name\"\n                        ref={register}\n                        className=\"form-control\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Assessment year</label>\n                      <Select\n                        closeMenuOnSelect={false}\n                        onChange={setSelectedOption}\n                        isMulti\n                        options={assessment_year}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <ImageUploads register={register} control={control} />\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">\n                        Format in which Opinion is required\n                      </label>\n                      <br />\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          name=\"p_format_word\"\n                          ref={register}\n                        />\n                        <label className=\"form-check-label\">\n                          Softcopy - Word/ Pdf\n                        </label>\n                      </div>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          name=\"p_format_digital\"\n                          ref={register}\n                        />\n                        <label className=\"form-check-label\">\n                          SoftCopy- Digitally Signed\n                        </label>\n                      </div>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          name=\"p_format_physically\"\n                          ref={register}\n                        />\n                        <label className=\"form-check-label\">\n                          Printout- Physically Signed\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">\n                        Timelines within which Opinion is Required\n                      </label>\n                      <br />\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"p_timelines\"\n                          ref={register}\n                          value=\"Urgent, (4-5 Working Days)\"\n                          defaultChecked\n                        />\n                        <label>Urgent, (4-5 Working Days)</label>\n                      </div>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"p_timelines\"\n                          ref={register}\n                          value=\"Regular (10-12 Working Days)\"\n                        />\n                        <label>Regular (10-12 Working Days)</label>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">\n                        Purpose for which Opinion is sought\n                      </label>\n                      <Select\n                        closeMenuOnSelect={false}\n                        onChange={setPurposeOption}\n                        isMulti\n                        options={purpose}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Submit\n                </button>\n              </form>\n            )}\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddFreshAssingment;\n\nconst purpose = [\n  { value: \"Assessment\", label: \"Assessment\" },\n  { value: \"Appeal\", label: \"Appeal\" },\n  { value: \"Filing before any Court\", label: \"Filing before any Court\" },\n  {\n    value: \"Filing before any Authority\",\n    label: \"Filing before any Authority\",\n  },\n  { value: \"Others\", label: \"Others\" },\n];\n\nconst assessment_year = [\n  {\n    value: \"2010-11\",\n    label: \"2010-11\",\n  },\n  {\n    value: \"2011-12\",\n    label: \"2011-12\",\n  },\n  {\n    value: \"2012-13\",\n    label: \"2012-13\",\n  },\n  {\n    value: \"2013-14\",\n    label: \"2013-14\",\n  },\n  {\n    value: \"2014-15\",\n    label: \"2014-15\",\n  },\n  {\n    value: \"2015-16\",\n    label: \"2015-16\",\n  },\n  {\n    value: \"2016-17\",\n    label: \"2016-17\",\n  },\n  {\n    value: \"2017-18\",\n    label: \"2017-18\",\n  },\n  {\n    value: \"2018-19\",\n    label: \"2018-19\",\n  },\n  {\n    value: \"2019-20\",\n    label: \"2019-20\",\n  },\n  {\n    value: \"2020-21\",\n    label: \"2020-21\",\n  },\n  {\n    value: \"2021-22\",\n    label: \"2021-22\",\n  },\n  {\n    value: \"2022-23\",\n    label: \"2022-23\",\n  },\n  {\n    value: \"2023-24\",\n    label: \"2023-24\",\n  },\n  {\n    value: \"2024-25\",\n    label: \"2024-25\",\n  },\n  {\n    value: \"2025-26\",\n    label: \"2025-26\",\n  },\n  {\n    value: \"2026-27\",\n    label: \"2026-27\",\n  },\n  {\n    value: \"2027-28\",\n    label: \"2027-28\",\n  },\n];\nconst ImageUploads = ({ register, control }) => {\n  const { append, fields, remove } = useFieldArray({\n    control,\n    name: \"upload\",\n  });\n  return (\n    <>\n      <div className=\"question_query mb-2\">\n        <label className=\"form-label\">Upload Your Document</label>\n        <div className=\"btn btn-primary\" onClick={() => append({ pics: \"\" })}>\n          +\n        </div>\n      </div>\n\n      {fields.map((item, index) => (\n        <div className=\"question_query_field mb-2\" key={index}>\n          <input\n            type=\"file\"\n            name={`upload[${index}].pics`}\n            ref={register()}\n            className=\"form-control-file\"\n            defaultValue={item.pics}\n          />\n          <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\n            -\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n\n// formData.append(\"purpose\", value.p_purpose);\n// console.log(\"arr\",arr);\n\n// for (let i = 0; i < multipleFiles.length; i++) {\n//   formData.append('upload_1', multipleFiles[i]);\n// }\n\n{\n  /* <div className=\"question_query mb-2\">\n                  <label className=\"form-label\">\n                    multiple upload\n                  </label>\n                  <div\n                    className=\"btn btn-primary\"\n                    onClick={() => append({ img: \"\" })}\n                  >\n                    +\n                  </div>\n                </div>\n\n                {fields.length > 0 &&\n                  fields.map((item, i) => (\n                    <div className=\"question_query_field mb-2\" key={i}>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        ref={register}\n                        name={`pics[${i}].img`}\n                        placeholder=\"img\"\n                      />\n                      <div\n                        className=\"btn btn-primary ml-2\"\n                        onClick={() => remove(i)}\n                      >\n                        -\n                      </div>\n                    </div>\n                  ))} */\n}\n\n// const children = [];\n// for (let i = 1; i < 20; i++) {\n//   children.push(\n//     <Option key={i}>{i}</Option>\n//   );\n// }\n{\n  /* <select\n                    className=\"form-select form-control\"\n                    name=\"p_assessment_year\"\n                    aria-label=\"Default select example\"\n                    ref={register}\n                  >\n                    <option value=\"\">--select--</option>\n                    <option value=\"2010\">2010</option>\n                   \n                  </select> */\n}\n{\n  /* <Select\n                      mode=\"tags\"\n                      style={{ width: \"100%\" }}\n                      onChange={handleChange}\n                      allowClear\n                    >\n                      {assessment_year.map((p, i) => (\n                        <Option key={p.year}>{p.year}</Option>\n                      ))}\n                    </Select> */\n}\n{\n  /* <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        name=\"p_assessment\"\n                        ref={register}\n                        value=\"Assessment\"\n                      />\n                      <label className=\"form-check-label\">Assessment</label>\n                    </div>\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        name=\"p_appeal\"\n                        ref={register}\n                        value=\"Appeal\"\n                      />\n                      <label className=\"form-check-label\">Appeal</label>\n                    </div>\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        name=\"p_court\"\n                        ref={register}\n                        value=\"Filing before any Court\"\n                      />\n                      <label className=\"form-check-label\">\n                        Filing before any Court\n                      </label>\n                    </div>\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        name=\"p_authority\"\n                        ref={register}\n                        value=\"Filing before any Authority\"\n                      />\n                      <label className=\"form-check-label\">\n                        Filing before any Authority\n                      </label>\n                    </div>\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        name=\"p_others\"\n                        ref={register}\n                        value=\"Others\"\n                      />\n                      <label className=\"form-check-label\">Others</label>\n                    </div> */\n}\n// defaultValue={[...yearOption]}\n","/var/www/html/Mazars_Pannel/src/views/QuestionnairePage/QuestionnairePage.js",["777","778","779","780","781","782"],"import { useForm, useFieldArray } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport Select from \"react-select\";\nimport { Spinner } from \"reactstrap\";\n\nfunction Questionnaire(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset, control } = useForm();\n  const { append, remove, fields } = useFieldArray({\n    control,\n    name: \"specific\",\n  });\n  const userId = window.localStorage.getItem(\"userid\");\n  const category = window.localStorage.getItem(\"category\");\n  const userNameId = window.localStorage.getItem(\"name\");\n  const [selectedOption, setSelectedOption] = useState([]);\n  const [purposeOption, setPurposeOption] = useState([]);\n\n  const [modal, setModal] = useState(true);\n  const toggle = () => setModal(!modal);\n  const [load, setLoad] = useState(false);\n\n  //alert msg\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"12px\" }}>Query successfully added!</p>\n      </>\n    );\n  };\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    setLoad(true);\n\n    let formData = new FormData();\n\n    var uploadImg = value.upload;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        console.log(\"pics\", value.upload[i].pics[0]);\n        let a = value.upload[i].pics[0];\n        formData.append(\"upload_1[]\", a);\n      }\n    }\n\n    formData.append(\"fact\", value.p_fact);\n    formData.append(\"specific\", JSON.stringify(value.specific));\n    formData.append(\"timelines\", value.p_timelines);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"cid\", JSON.parse(category));\n    formData.append(\"softcopy_word\", Number(value.p_format_word));\n    formData.append(\n      \"softcopy_digitally_assigned\",\n      Number(value.p_format_digital)\n    );\n    formData.append(\n      \"printout_physically_assigned\",\n      Number(value.p_format_physically)\n    );\n\n    formData.append(\"case_name\", value.p_case_name);\n    formData.append(\"assessment_year\", JSON.stringify(selectedOption));\n    formData.append(\"purpose\", JSON.stringify(purposeOption));\n    axios\n      .post(`${baseUrl}/customers/PostQuestion`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          reset();\n          alert.success(<Msg />);\n          props.history.push(\"/customer/dashboard\");\n        } else {\n          setLoad(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const SuccessMesg = () => {\n    return (\n      <>\n        <Modal isOpen={modal} toggle={toggle} size=\"sm\">\n          <ModalHeader toggle={toggle}></ModalHeader>\n\n          <ModalBody>\n            <br />\n            <div class=\"modal-body\">\n              <h1 style={{ textAlign: \"center\", fontSize: \"1.5rem\" }}>\n                {JSON.parse(userNameId)} , You have Successfully Registered\n              </h1>\n            </div>\n          </ModalBody>\n        </Modal>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Header id={JSON.parse(userNameId)} />\n      <div className=\"container\">\n        {SuccessMesg()}\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Basic Questionnaire</h2>\n          </div>\n          {load ? (\n            <Spinner size=\"sm\" color=\"primary\" />\n          ) : (\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Facts of the case</label>\n                    <textarea\n                      className=\"form-control\"\n                      id=\"textarea\"\n                      rows=\"6\"\n                      name=\"p_fact\"\n                      ref={register}\n                    ></textarea>\n                  </div>\n                </div>\n\n                <div className=\"col-md-6\">\n                  <div className=\"question_query mb-2\">\n                    <label className=\"form-label\">\n                      Specific Questions for advisory\n                    </label>\n                    <div\n                      className=\"btn btn-primary\"\n                      onClick={() => append({ query: \"\" })}\n                    >\n                      +\n                    </div>\n                  </div>\n\n                  {fields.length > 0 &&\n                    fields.map((item, index) => (\n                      <div>\n                        {fields.length < 5 ? (\n                          <div\n                            className=\"question_query_field mb-2\"\n                            key={index}\n                          >\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              ref={register}\n                              name={`specific[${index}].query`}\n                              placeholder=\"Specify your query\"\n                            />\n                            <div\n                              className=\"btn btn-primary ml-2\"\n                              onClick={() => remove(index)}\n                            >\n                              -\n                            </div>\n                          </div>\n                        ) : null}\n                      </div>\n                    ))}\n                </div>\n\n                <div className=\"col-md-6\">\n                  <ImageUploads register={register} control={control} />\n                </div>\n\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Case name</label>\n                    <input\n                      type=\"text\"\n                      name=\"p_case_name\"\n                      ref={register}\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Assessment year</label>\n                    <Select\n                      closeMenuOnSelect={false}\n                      onChange={setSelectedOption}\n                      isMulti\n                      options={assessment_year}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">\n                      Format in which Opinion is required\n                    </label>\n                    <br />\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        name=\"p_format_word\"\n                        ref={register}\n                        // value=\"1\"\n                      />\n                      <label className=\"form-check-label\">\n                        Softcopy - Word/ Pdf\n                      </label>\n                    </div>\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        name=\"p_format_digital\"\n                        ref={register}\n                        // value=\"1\"\n                      />\n                      <label className=\"form-check-label\">\n                        SoftCopy- Digitally Signed\n                      </label>\n                    </div>\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        name=\"p_format_physically\"\n                        ref={register}\n                        // value=\"1\"\n                      />\n                      <label className=\"form-check-label\">\n                        Printout- Physically Signed\n                      </label>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">\n                      Timelines within which Opinion is Required\n                    </label>\n                    <br />\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"p_timelines\"\n                        ref={register}\n                        value=\"Urgent, (4-5 Working Days)\"\n                        defaultChecked\n                      />\n                      <label>Urgent, (4-5 Working Days)</label>\n                    </div>\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"p_timelines\"\n                        ref={register}\n                        value=\"Regular (10-12 Working Days)\"\n                      />\n                      <label>Regular (10-12 Working Days)</label>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">\n                      Purpose for which Opinion is sought\n                    </label>\n                    <Select\n                      closeMenuOnSelect={false}\n                      onChange={setPurposeOption}\n                      isMulti\n                      options={purpose}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n          )}\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Questionnaire;\n\nconst purpose = [\n  { value: \"Assessment\", label: \"Assessment\" },\n  { value: \"Appeal\", label: \"Appeal\" },\n  { value: \"Filing before any Court\", label: \"Filing before any Court\" },\n  {\n    value: \"Filing before any Authority\",\n    label: \"Filing before any Authority\",\n  },\n  { value: \"Others\", label: \"Others\" },\n];\n\nconst assessment_year = [\n  {\n    value: \"2010-11\",\n    label: \"2010-11\",\n  },\n  {\n    value: \"2011-12\",\n    label: \"2011-12\",\n  },\n  {\n    value: \"2012-13\",\n    label: \"2012-13\",\n  },\n  {\n    value: \"2013-14\",\n    label: \"2013-14\",\n  },\n  {\n    value: \"2014-15\",\n    label: \"2014-15\",\n  },\n  {\n    value: \"2015-16\",\n    label: \"2015-16\",\n  },\n  {\n    value: \"2016-17\",\n    label: \"2016-17\",\n  },\n  {\n    value: \"2017-18\",\n    label: \"2017-18\",\n  },\n  {\n    value: \"2018-19\",\n    label: \"2018-19\",\n  },\n  {\n    value: \"2019-20\",\n    label: \"2019-20\",\n  },\n  {\n    value: \"2020-21\",\n    label: \"2020-21\",\n  },\n  {\n    value: \"2021-22\",\n    label: \"2021-22\",\n  },\n  {\n    value: \"2022-23\",\n    label: \"2022-23\",\n  },\n  {\n    value: \"2023-24\",\n    label: \"2023-24\",\n  },\n  {\n    value: \"2024-25\",\n    label: \"2024-25\",\n  },\n  {\n    value: \"2025-26\",\n    label: \"2025-26\",\n  },\n  {\n    value: \"2026-27\",\n    label: \"2026-27\",\n  },\n  {\n    value: \"2027-28\",\n    label: \"2027-28\",\n  },\n];\n\nconst ImageUploads = ({ register, control }) => {\n  const { append, fields, remove } = useFieldArray({\n    control,\n    name: \"upload\",\n  });\n  return (\n    <>\n      <div className=\"question_query mb-2\">\n        <label className=\"form-label\">Upload Your Document</label>\n        <div className=\"btn btn-primary\" onClick={() => append({ pics: \"\" })}>\n          +\n        </div>\n      </div>\n\n      {fields.map((item, index) => (\n        <div className=\"question_query_field mb-2\" key={index}>\n          <input\n            type=\"file\"\n            name={`upload[${index}].pics`}\n            ref={register()}\n            className=\"form-control-file\"\n            defaultValue={item.pics}\n          />\n          <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\n            -\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n\n{\n  /* <div className=\"col-md-6\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">\n                    Purpose for which Opinion is sought\n                  </label>\n                  <select\n                    className=\"form-select form-control\"\n                    name=\"p_purpose\"\n                    aria-label=\"Default select example\"\n                    ref={register}\n                  >\n                    <option value=\"\">--select--</option>\n                    {Opinion.map((p, i) => (\n                      <option key={i} value={p.sought}>\n                        {p.sought}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div> */\n}\n","/var/www/html/Mazars_Pannel/src/views/Feedback/Feedback.js",["783","784","785","786"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\n\n\n// const Schema = yup.object().shape({\n//   p_feedback: yup.string().required(\"required feedback\"),\n//   p_assignment: yup.string().required(\"required assignment\"),\n// });\n\n\nfunction Feedback() {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm(); \n\n\n  const [assignment, setAssingment] = useState([]);\n  const [teamLeader, setTeamLeader] = useState([]);\n\n  const userId = window.localStorage.getItem(\"userid\");\n\n  useEffect(() => {\n    const getAssingment = () => {\n      axios.get(`${baseUrl}/customers/getAssignedAssignments?user=${JSON.parse(userId)}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setAssingment(res.data.result);\n        }\n      });\n    };\n\n    getAssingment();\n  }, []);\n\n\n  useEffect(() => {\n    getTeamLeader();\n  }, []);\n\n  const getTeamLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setTeamLeader(res.data.result);\n      }\n    });\n  };\n\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"assign_no\", value.p_assignment);\n    formData.append(\"feedback\", value.p_feedback);\n    formData.append(\"user_id\", JSON.parse(userId));\n    formData.append(\"tl_id\", value.p_teamleader);\n\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostUserFeedback`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          reset();   \n          alert.success(\" feedback successfully added!\");      \n          } \n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"text-center\">\n            <h3>Feedback!!!</h3>\n          </div>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Assignment No.</label>\n                    <select\n                      class=\"form-control\"\n                      name=\"p_assignment\"\n                      ref={register}\n                    >\n                      <option value=\"\">--select--</option>\n\n                      {assignment.map((p, i) => (\n                        <option key={i} value={p.assign_no}>\n                          {p.assign_no}\n                        </option>\n                      ))}\n                    </select>\n                   \n                  </div>\n                </div>\n\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Select Team Leader</label>\n                    <select\n                      class=\"form-control\"\n                      name=\"p_teamleader\"\n                      ref={register}\n                    >\n                      <option value=\"\">--select--</option>\n\n                      {teamLeader.map((p, i) => (\n                        <option key={i} value={p.id}>\n                          {p.name}\n                        </option>\n                      ))}\n                    </select>\n                   \n                  </div>\n                </div>\n\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Feedback</label>\n                    <textarea\n                      class=\"form-control\"\n                      placeholder=\"Feedback text here\"\n                      rows=\"5\"\n                      ref={register}\n                      name=\"p_feedback\"\n                    ></textarea>\n                   \n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Feedback;\n","/var/www/html/Mazars_Pannel/src/views/SelectCategoryPage/SelectCategoryPage.js",["787","788","789"],"import React from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport CategorySelect from \"../../components/CategorySelect/CategorySelect\";\n\nfunction SelectCategoryPage() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const history = useHistory();\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Select Category</p>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <CategorySelect addfreshbtn=\"addfreshbtn\" />\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default SelectCategoryPage;\n","/var/www/html/Mazars_Pannel/src/views/ProposalTab/ProposalTab.js",["790","791","792","793","794","795","796","797","798","799","800"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport AcceptModal from \"./AcceptModal\";\nimport PaymentModal from \"./PaymentModal\";\nimport \"./index.css\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport CommonServices from \"../../common/common\";\n\nfunction ProposalTab() {\n  const alert = useAlert();\n\n  const userId = window.localStorage.getItem(\"userid\");\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const [proposalCount, setCountProposal] = useState(\"\");\n\n  const [id, setId] = useState(null);\n  const [reject, setRejected] = useState(true);\n  const [pay, setPay] = useState({\n    pay: \"\",\n    amount: \"\",\n  });\n\n  // accept modal\n  // const [acceptedModal, setAcceptedModal] = useState(false);\n  // const acceptedHandler = (id) => {\n  //   setAcceptedModal(!acceptedModal);\n  //   setId(id);\n  // };\n\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  const paymentHandler = (key) => {\n    console.log(key);\n    setPaymentModal(!addPaymentModal);\n    setPay({\n      amount: key.accepted_amount,\n      id: key.q_id,\n    });\n  };\n\n  useEffect(() => {\n    getProposalData();\n  }, []);\n\n  const getProposalData = () => {\n    axios\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setProposalDisplay(res.data.result);\n          setCountProposal(res.data.result.length);\n        }\n      });\n  };\n\n  const refreshList = () => {\n    getProposalData();\n  };\n\n  // accepted proposal\n  const accepted = (key) => {\n    console.log(\"acc\", key);\n\n    let formData = new FormData();\n    formData.append(\"id\", key);\n    formData.append(\"status\", 5);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/ProposalAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        refreshList();\n        alert.success(\"proposal accepted !\");\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  // rejected proposal\n  const rejected = (key) => {\n    console.log(\"rej\", key);\n\n    let formData = new FormData();\n    formData.append(\"id\", key);\n    formData.append(\"status\", 6);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/ProposalAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          setRejected(false);\n          getProposalData();\n          alert.success(\"proposal rejected !\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      style: {\n        fontSize: \"11px\",\n      },\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function (cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/customer/my-assingment/${row.id}`}>\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.DateofProposal);\n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_accept_date);\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Proposed Amout\",\n      dataField: \"ProposedAmount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Accepted Amount\",\n      dataField: \"accepted_amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n    },\n    {\n      text: \"Amount Paid\",\n      dataField: \"paid_amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#064606\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#064606\" };\n      },\n    },\n    {\n      text: \"Amount Outstanding\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"darkred\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"darkred\" };\n      },\n      formatter: function amountOutstading(cell, row) {\n        var a = row.accepted_amount;\n        var p = row.paid_amount;\n        return a - p;\n      }\n    },\n    {\n      text: \"Date of Payment\",\n      dataField: \"cust_paid_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_paid_date);\n        var oldDate = row.cust_paid_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Completion\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {row.statuscode === \"6\" ? null : (\n              <div>\n                {row.negotiated_amount === \"0\" &&\n                row.accepted_amount === \"0\" ? (\n                  <div>\n                    <div style={{ cursor: \"pointer\" }} title=\"Accepted\">\n                      <i\n                        class=\"fa fa-check\"\n                        style={{\n                          color: \"green\",\n                          fontSize: \"16px\",\n                        }}\n                        onClick={() => accepted(row.q_id)}\n                      ></i>\n                    </div>\n\n                    <div style={{ cursor: \"pointer\" }} title=\"Rejected\">\n                      <i\n                        class=\"fa fa-times\"\n                        style={{ color: \"red\", fontSize: \"16px\" }}\n                        onClick={() => rejected(row.q_id)}\n                      ></i>\n                    </div>\n                  </div>\n                ) : (\n                  (row.negotiated_amount === \"0\" || row.accepted_amount) && \"\"\n                )}\n\n                {/* {row.statuscode == 5 ||\n                row.statuscode == 7 ||\n                row.statuscode == 8 ? (\n                  <div>\n                    <div style={{ cursor: \"pointer\" }}>\n                      <i\n                        class=\"fa fa-credit-card\"\n                        style={{ color: \"green\", fontSize: \"16px\" }}\n                        onClick={() => paymentHandler(row)}\n                      ></i>\n                    </div>\n                  </div>\n                ) : (\n                  \"\"\n                )} */}\n              </div>\n            )}\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"7\">\n              <CardTitle tag=\"h4\">Proposal ({proposalCount})</CardTitle>\n            </Col>\n            <Col md=\"5\"></Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <CustomerFilter\n            setData={setProposalDisplay}\n            getData={getProposalData}\n            id={userId}\n            proposal=\"proposal\"\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={proposalDisplay}\n            columns={columns}\n            classes=\"table-responsive\"\n          />\n\n          <PaymentModal\n            paymentHandler={paymentHandler}\n            addPaymentModal={addPaymentModal}\n            pay={pay}\n            getProposalData={getProposalData}\n          />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ProposalTab;\n\n\n// formatter: function amountOutstading(cell, row) {\n//   console.log(\"dt\", row.paid_amount);\n//   console.log(\"dt\", row.accepted_amount);\n//   var p = row.paid_amount;\n//   var a = row.accepted_amount;\n//   if (p == 0) {\n//     return \"0\";\n//   } else return a - p;\n// },\n{\n  /* <AcceptModal\n            acceptedModal={acceptedModal}\n            acceptedHandler={acceptedHandler}\n            id={id}\n            getProposalData={getProposalData}\n          /> */\n}\n\n{\n  /* <div style={{ cursor: \"pointer\" }}>\n                      <i\n                        class=\"fa fa-file-text\"\n                        style={{\n                          color: \"orange\",\n                          fontSize: \"16px\",\n                        }}\n                        onClick={() => acceptedHandler(row.up_id)}\n                      ></i>\n                    </div> */\n}\n\n{\n  /* <div>\n            <table class=\"table table-bordered \">\n              <thead class=\"table_head_Proposal\">\n                <tr>\n                  <th>S.No</th>\n                  <th>Date of Query</th>\n                  <th>Query No</th>\n                  <th>Proposal No</th>\n                  <th>Category</th>\n                  <th>Sub Category</th>\n                  <th>Date of Proposal</th>\n                  <th>Date of acceptance of Proposal</th>\n                  <th>Status</th>\n                  <th>Proposed Amout</th>\n                  <th style={{ color: \"#21a3ce\" }}>Amount Accepted</th>\n                  <th style={{ color: \"#064606\" }}>Amount Paid</th>\n                  <th>Date of Payment</th>\n                  <th style={{ color: \"darkred\" }}>Amount Outstanding</th>\n                  <th>Date of Completion</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              {proposalDisplay.length > 0 ? (\n                proposalDisplay.map((p, i) => (\n                  <tbody class=\"table_bdy_proposal\">\n                    <tr key={i}>\n                      <td>{i + 1}</td>\n                      <td>{ChangeFormateDate(p.created)}</td>\n                      <th>\n                        <Link to={`/customer/my-assingment/${p.id}`}>\n                          {p.assign_no}\n                        </Link>\n                      </th>\n                      <td>{p.proposal_number}</td>\n                      <td>{p.parent_id}</td>\n                      <td>{p.cat_name}</td>\n                      <td>{ChangeFormateDate(p.DateofProposal)}</td>\n                      <td>{ChangeFormateDate(p.cust_accept_date)}</td>\n                      <td>{p.status}</td>\n                      <td>{p.ProposedAmount}</td>\n                      <td style={{ color: \"#21a3ce\" }}>{p.accepted_amount}</td>\n                      <td style={{ color: \"#064606\" }}>{p.paid_amount}</td>\n                      <td>{ChangeFormateDate(p.cust_paid_date)}</td>\n                      <td style={{ color: \"darkred\" }}>\n                        {checkOutstading(p.paid_amount, p.accepted_amount)}\n                      </td>\n                      <td></td>\n\n                      <td>\n                        {p.statuscode === \"6\" ? null : (\n                          <div>\n                            {p.negotiated_amount === \"0\" &&\n                            p.accepted_amount === \"0\" ? (\n                              <div>\n                                <div style={{ cursor: \"pointer\" }}>\n                                  <i\n                                    class=\"fa fa-check\"\n                                    style={{\n                                      color: \"green\",\n                                      fontSize: \"16px\",\n                                    }}\n                                    onClick={() => accepted(p.q_id)}\n                                  ></i>\n                                </div>\n\n                                <div style={{ cursor: \"pointer\" }}>\n                                  <i\n                                    class=\"fa fa-times\"\n                                    style={{ color: \"red\", fontSize: \"16px\" }}\n                                    onClick={() => rejected(p.q_id)}\n                                  ></i>\n                                </div>\n                              </div>\n                            ) : (\n                              (p.negotiated_amount === \"0\" ||\n                                p.accepted_amount) &&\n                              \"\"\n                            )}\n\n                            {p.statuscode == 5 ||\n                            p.statuscode == 7 ||\n                            p.statuscode == 8 ? (\n                              <div>\n                                <div style={{ cursor: \"pointer\" }}>\n                                  <i\n                                    class=\"fa fa-credit-card\"\n                                    style={{ color: \"green\", fontSize: \"16px\" }}\n                                    onClick={() => paymentHandler(p)}\n                                  ></i>\n                                </div>\n                                <div style={{ cursor: \"pointer\" }}>\n                                  <i\n                                    class=\"fa fa-file-text\"\n                                    style={{\n                                      color: \"orange\",\n                                      fontSize: \"16px\",\n                                    }}\n                                    onClick={() => acceptedHandler(p.up_id)}\n                                  ></i>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                          </div>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"16\">No Records</td>\n                </tr>\n              )}\n            </table>\n          </div> */\n}\n\n{\n  /* <div>\n            <table class=\"table table-bordered \">\n              <thead class=\"table_head_Proposal\">\n                <tr>\n                  <th>S.No</th>\n                  <th>Date of Query</th>\n                  <th>Query No</th>\n                  <th>Proposal No</th>\n                  <th>Category</th>\n                  <th>Sub Category</th>\n                  <th>Date of Proposal</th>\n                  <th>Date of acceptance of Proposal</th>\n                  <th>Status</th>\n                  <th>Proposed Amout</th>\n                  <th style={{ color: \"#21a3ce\" }}>Amount Accepted</th>\n                  <th style={{ color: \"#064606\" }}>Amount Paid</th>\n                  <th>Date of Payment</th>\n                  <th style={{ color: \"darkred\" }}>Amount Outstanding</th>\n                  <th>Date of Completion</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              {proposalDisplay.length > 0 ? (\n                proposalDisplay.map((p, i) => (\n                  <tbody class=\"table_bdy_proposal\">\n                    <tr key={i}>\n                      <td>{i + 1}</td>\n                      <td>{ChangeFormateDate(p.created)}</td>\n                      <th>\n                        <Link to={`/customer/my-assingment/${p.id}`}>\n                          {p.assign_no}\n                        </Link>\n                      </th>\n                      <td>{p.proposal_number}</td>\n                      <td>{p.parent_id}</td>\n                      <td>{p.cat_name}</td>\n                      <td>{ChangeFormateDate(p.DateofProposal)}</td>\n                      <td>{ChangeFormateDate(p.cust_accept_date)}</td>\n                      <td>{p.status}</td>\n                      <td>{p.ProposedAmount}</td>\n                      <td style={{ color: \"#21a3ce\" }}>{p.accepted_amount}</td>\n                      <td style={{ color: \"#064606\" }}>{p.paid_amount}</td>\n                      <td>{ChangeFormateDate(p.cust_paid_date)}</td>\n                      <td style={{ color: \"darkred\" }}>\n                        {checkOutstading(p.paid_amount, p.accepted_amount)}\n                      </td>\n                      <td></td>\n\n                      <td>\n                        {p.statuscode === \"6\" ? null : (\n                          <div>\n                            {p.negotiated_amount === \"0\" &&\n                            p.accepted_amount === \"0\" ? (\n                              <div>\n                                <div style={{ cursor: \"pointer\" }}>\n                                  <i\n                                    class=\"fa fa-check\"\n                                    style={{\n                                      color: \"green\",\n                                      fontSize: \"16px\",\n                                    }}\n                                    onClick={() => accepted(p.q_id)}\n                                  ></i>\n                                </div>\n\n                                <div style={{ cursor: \"pointer\" }}>\n                                  <i\n                                    class=\"fa fa-times\"\n                                    style={{ color: \"red\", fontSize: \"16px\" }}\n                                    onClick={() => rejected(p.q_id)}\n                                  ></i>\n                                </div>\n                              </div>\n                            ) : (\n                              (p.negotiated_amount === \"0\" ||\n                                p.accepted_amount) &&\n                              \"\"\n                            )}\n\n                            {p.statuscode == 5 ||\n                            p.statuscode == 7 ||\n                            p.statuscode == 8 ? (\n                              <div>\n                                <div style={{ cursor: \"pointer\" }}>\n                                  <i\n                                    class=\"fa fa-credit-card\"\n                                    style={{ color: \"green\", fontSize: \"16px\" }}\n                                    onClick={() => paymentHandler(p)}\n                                  ></i>\n                                </div>\n                                <div style={{ cursor: \"pointer\" }}>\n                                  <i\n                                    class=\"fa fa-file-text\"\n                                    style={{\n                                      color: \"orange\",\n                                      fontSize: \"16px\",\n                                    }}\n                                    onClick={() => acceptedHandler(p.up_id)}\n                                  ></i>\n                                </div>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                          </div>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"16\">No Records</td>\n                </tr>\n              )}\n\n              \n            </table>\n\n          </div> */\n}\n","/var/www/html/Mazars_Pannel/src/views/AssignmentTab/AssignmentTab.js",["801","802","803","804","805","806","807","808","809","810","811","812"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport { Link ,useHistory} from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport PaymentModal from \"./PaymentModal\";\nimport * as Cookies from \"js-cookie\";\n\nfunction AssignmentTab() {\n  const history = useHistory();\n  const userId = window.localStorage.getItem(\"userid\");\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const [assignmentCount, setAssignmentQueries] = useState(\"\");\n\n  const [baseMode, SetbaseMode] = useState(\"avc\");\n  const [transcode, SetTranscode] = useState(\"interop\");\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\n\n\n\n  const [pay, setPay] = useState({\n    pay: \"\",\n    amount: \"\",\n    accepted_amount: \"\",\n    paid_amount: \"\",\n  });\n\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  const paymentHandler = (key) => {\n    console.log(\"key\", key);\n\n    setPaymentModal(!addPaymentModal);\n    setPay({\n      amount: key.accepted_amount,\n      id: key.id,\n      accepted_amount: key.accepted_amount,\n      paid_amount: key.paid_amount,\n    });\n  };\n\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n  const getAssignmentData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setAssignmentDisplay(res.data.result);\n          setAssignmentQueries(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/customer/my-assingment/${row.id}`}>\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"Exp_Delivery_Date\",\n      text: \"Expected date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"final_date\",\n      text: \"Actual date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.final_date);\n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00\") {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Deliverable\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        // console.log(row.final_report);\n        return (\n          <>\n            {!row.final_report == \"\" ? (\n              <div>\n                <a\n                  href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.final_report}`}\n                  target=\"_blank\"\n                >\n                  <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\n                  final\n                </a>\n              </div>\n            ) : row.assignment_draft_report ? (\n              <div>\n                <a\n                  href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assignment_draft_report}`}\n                  target=\"_blank\"\n                >\n                  <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\n                  draft\n                </a>\n              </div>\n            ) : null}\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Team Leader name and contact number, email\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: priceFormatter,\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ cursor: \"pointer\" }} title=\"Pay Amount\">\n              <i\n                class=\"fa fa-credit-card\"\n                style={{ color: \"green\", fontSize: \"16px\" }}\n                onClick={() => paymentHandler(row)}\n              ></i>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Video Call\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ cursor: \"pointer\" }} title=\"Video Chat\">\n              <i\n                class=\"fa fa-video-camera\"\n                style={{ color: \"red\", fontSize: \"16px\" }}\n                onClick={() => handleJoin(row.id)}\n              ></i>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  //tl,phone,email\n  function priceFormatter(cell, row) {\n    console.log(\"row\", row);\n    if (row) {\n      return (\n        <>\n          <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\n          <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\n          <p style={{ fontSize: \"10px\" }}>{row.email}</p>\n        </>\n      );\n    }\n\n    return null;\n  }\n\n  //handleJoin\n  const handleJoin = (id) => {\n    console.log(\"id\", id);\n    Cookies.set(\"channel\", id); \n    Cookies.set(\"baseMode\", baseMode);\n    Cookies.set(\"transcode\", transcode);\n    Cookies.set(\"attendeeMode\", attendeeMode);\n    Cookies.set(\"videoProfile\", videoProfile);\n    history.push(\"/customer/meeting\");\n  };\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"7\">\n              <CardTitle tag=\"h4\">Assignment ({assignmentCount})</CardTitle>\n            </Col>\n            <Col md=\"5\"></Col>\n          </Row>\n        </CardHeader>\n\n        <CardHeader>\n          <CustomerFilter\n            setData={setAssignmentDisplay}\n            getData={getAssignmentData}\n            id={userId}\n            assignment=\"assignment\"\n          />\n        </CardHeader>\n\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={assignmentDisplay}\n            columns={columns}\n          />\n          <PaymentModal\n            paymentHandler={paymentHandler}\n            addPaymentModal={addPaymentModal}\n            pay={pay}\n            getProposalData={getAssignmentData}\n          />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AssignmentTab;\n{\n  /* <td>{p.status <= 9 ? \"In Process\" : \"Complete\"} </td> */\n}\n\n// classes: 'hidden-xs',\n// headerClasses: 'hidden-xs',\n\n// function priceFormatter(cell, row) {\n//   console.log(\"row\", row);\n//   if (row) {\n//     return (\n//       <>\n//         <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\n//         <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\n//         <p style={{ fontSize: \"10px\" }}>{row.email}</p>\n//       </>\n//     );\n//   }\n\n//   return null;\n// }\n{\n  /* <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th>S.No</th>\n                <th>Date of Assignment</th>\n                <th>Query No</th>\n                <th>Assignment No</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th>Status</th>\n                <th>Expected date of delivery</th>\n                <th>Actual date of delivery</th>\n                <th>Deliverable</th>\n                <th>Team Leader name and contact number, email</th>\n              </tr>\n            </thead>\n            {assignmentDisplay.length > 0 ? (\n              assignmentDisplay.map((p, i) => (\n                <tbody>\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.assignment_date)}</td>\n                    <th>\n                      <Link to={`/customer/my-assingment/${p.id}`}>\n                        {p.assign_no}\n                      </Link>\n                    </th>\n                    <td>{p.assignment_number}</td>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n                    <td>{p.status}</td>\n                    \n                    <td>{ChangeFormateDate(p.Exp_Delivery_Date)}</td>\n                    <td>{ChangeFormateDate(p.date_of_delivery)}</td>\n\n                    <td style={{ textAlign: \"center\" }}>\n                      {!p.final_report == \"\" ? (\n                        <div>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/upload/report/${p.final_report}`}\n                          >\n                            <i\n                              class=\"fa fa-file-text\"\n                              style={{ fontSize: \"16px\" }}\n                            ></i>{\" \"}\n                            final\n                          </a>\n                        </div>\n                      ) : p.assignment_draft_report ? (\n                        <div>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/upload/report/${p.assignment_draft_report}`}\n                          >\n                            <i\n                              class=\"fa fa-file-text\"\n                              style={{ fontSize: \"16px\" }}\n                            ></i>{\" \"}\n                            draft\n                          </a>\n                        </div>\n                      ) : null}\n                    </td>\n\n                    <td>\n                      <p style={{ fontSize: \"10px\" }}>{p.tname} </p>\n                      <p style={{ fontSize: \"10px\" }}>{p.phone}</p>\n                      <p style={{ fontSize: \"10px\" }}>{p.email}</p>\n                    </td>\n                  </tr>\n                </tbody>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"11\">No Records</td>\n              </tr>\n            )}\n          </Table> */\n}\n","/var/www/html/Mazars_Pannel/src/views/QueriesTab/QueriesTab.js",["813","814","815","816"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Swal from \"sweetalert2\";\n\nfunction QueriesTab() {\n  const alert = useAlert();\n  const [queriesCount, setCountQueries] = useState(\"\");\n  const [query, setQuery] = useState([]);\n  const userId = window.localStorage.getItem(\"userid\");\n\n  useEffect(() => {\n    getQueriesData();\n  }, []);\n\n  const getQueriesData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setQuery(res.data.result);\n          setCountQueries(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/customer/my-assingment/${row.id}`}>\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Expected Delivery Date\",\n      dataField: \"exp_delivery_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.exp_delivery_date);\n        var oldDate = row.exp_delivery_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", textAlign: \"center\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n              <div title=\"Update Query\">\n                <Link to={`/customer/edit-query/${row.id}`}>\n                  {row.status_code < 5 ? (\n                    <i\n                      className=\"fa fa-edit\"\n                      style={{\n                        fontSize: 16,\n                        cursor: \"pointer\",\n                        marginLeft: \"8px\",\n                      }}\n                    ></i>\n                  ) : null}\n                </Link>\n              </div>\n              <div title=\"Delete Query\">\n                {row.status_code < 5 ? (\n                  <i\n                    className=\"fa fa-trash\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                    }}\n                    onClick={() => del(row.id)}\n                  ></i>\n                ) : null}\n              </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  //check\n  const del = (id) => {\n    console.log(\"del\", id);\n\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"It will permanently deleted !\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  const deleteCliente = (id) => {\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/deleteQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n          getQueriesData();\n        } else {\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"9\">\n              <CardTitle tag=\"h4\">Queries ({queriesCount})</CardTitle>\n            </Col>\n            <Col md=\"3\">\n              <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                <Link to=\"/customer/select-category\" class=\"btn btn-primary\">\n                  Fresh Query\n                </Link>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <CustomerFilter\n            setData={setQuery}\n            getData={getQueriesData}\n            id={userId}\n            query=\"query\"\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={query}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n","/var/www/html/Mazars_Pannel/src/components/Layout/Layout.js",[],"/var/www/html/Mazars_Pannel/src/pages/Admin/Start/Start.js",[],"/var/www/html/Mazars_Pannel/src/pages/Admin/Dashboard/Dashboard.js",["817"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\n\nfunction Dashboard() {\n  const userId = window.localStorage.getItem(\"adminkey\");\n\n  const [allQueries, setAllQueries] = useState(\"\");\n  const [allProposal, setAllProposal] = useState(\"\");\n  const [allPendingForAllocation, setPendingForAllocation] = useState(\"\");\n  const [allPendingForPayment, setPendingForPayment] = useState(\"\");\n  const [allAcceptedProposal, setAcceptedProposal] = useState(\"\");\n  const [allDeclinedProposal, setDeclinedProposal] = useState(\"\");\n  const [pendingForAcceptence, setPendingForAcceptence] = useState(\"\");\n\n  const [inprogress, setInprogress] = useState([]);\n  const [completeQuery, setComplete] = useState([]);\n\n  // const { total_inprogress, total_complete } = inprogress;\n\n  useEffect(() => {\n    const getAllQueries = () => {\n      axios\n        .get(`${baseUrl}/admin/getAllQueries`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setAllQueries(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getAllProposal = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setAllProposal(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getPendingForAllocation = () => {\n      axios\n        .get(`${baseUrl}/admin/pendingAllocation`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setPendingForAllocation(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getPendingForPayment = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals?&status=5,7`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setPendingForPayment(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getInProgress = () => {\n      axios\n        .get(`${baseUrl}/admin/totalComplete`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            console.log(\"res\", response.data.result[0]);\n            console.log(\"res\", response.data.result[1]);\n            setInprogress(response.data.result[1]);\n            setComplete(response.data.result[0]);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    console.log(\"inprogress\", inprogress.total_complete);\n\n    const getAcceptedProposal = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals?&status=5,7,8`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setAcceptedProposal(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getDeclinedProposal = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals?&status=6`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setDeclinedProposal(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getPendingForAcceptence = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals?&status=4`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setPendingForAcceptence(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    getAllQueries();\n    getPendingForAllocation();\n    getPendingForPayment();\n    getAllProposal();\n    getAcceptedProposal();\n    getDeclinedProposal();\n    getPendingForAcceptence();\n    getInProgress();\n  }, []);\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n      <div class=\"row mt-3\">\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-150\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    All Queries\n                  </h5>\n                </div>\n                <div>\n                  <Link to={`/admin/queriestab`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{allQueries}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-150\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Inprogress Queries\n                  </h5>\n                </div>\n                <div>\n                  <Link to={`/admin/queriestab`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{inprogress.total_inprogress}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-150\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Completed Queries\n                  </h5>\n                </div>\n                <div>\n                  <Link to={`/admin/queriestab`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{completeQuery.total_complete}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row mt-3\">\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-150\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Pending For Allocation\n                  </h5>\n                </div>\n                <div>\n                  <Link to={`/admin/queriestab`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{allPendingForAllocation}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row mt-3\">\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-150\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    All Proposal\n                  </h5>\n                </div>\n                <div>\n                  <Link to={`/admin/proposal`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{allProposal}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-150\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Accepted Proposal\n                  </h5>\n                </div>\n                <div>\n                  <Link to={`/admin/proposal`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{allAcceptedProposal}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-150\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Declined Proposal\n                  </h5>\n                </div>\n                <div>\n                  <Link to={`/admin/proposal`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{allDeclinedProposal}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row mt-3\">\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-150\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Pending For Acceptence\n                  </h5>\n                </div>\n                <div>\n                  <Link to={`/admin/proposal`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{pendingForAcceptence}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row mt-3\">\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-150\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Pending For Payment\n                  </h5>\n                </div>\n                <div>\n                  <Link to={`/admin/queriestab`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{allPendingForPayment}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Dashboard;\n// {\n//   Object.keys(response.data.result[0]).map((key, i ,value) => (\n//     console.log(key,i,value)\n//   )\n//   )\n// }\n","/var/www/html/Mazars_Pannel/src/pages/Admin/Login/Login.js",["818","819"],"import React, { useState } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  password: yup\n    .string()\n    .required(\"required password\")\n    .min(5, \"at least 5 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\n\nfunction Login(props) {\n  const alert = useAlert();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"userid\", value.p_email);\n    formData.append(\"password\", value.password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/login`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Login successfully !\");\n          localStorage.setItem(\n            \"adminkey\",\n            JSON.stringify(response.data[\"user id\"])\n          );\n          props.history.push(\"/admin/dashboard\");\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          Swal.fire('Oops...',\"Errorr : Incorrect Email and password\",'error')\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n      <Header admin=\"admin\" />\n      <div class=\"container\">\n        <div class=\"form\">\n          <div class=\"heading\">\n            <h2>ADMIN LOGIN</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email</label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    type=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    name=\"password\"\n                    placeholder=\"Enter Password\"\n                    ref={register}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Login;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AddNewTeamLeader/AddNewTeamLeader.js",["820","821"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Card, CardHeader } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n  p_tax: yup.string().required(\"required category\"),\n  p_tax2: yup.string().required(\"required sub category\"),\n});\n\n\nfunction AddNew() {\n  const alert = useAlert();\n  const history = useHistory();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"pcat_id\", value.p_tax);\n    formData.append(\"cat_id\", value.p_tax2);\n    formData.append(\"type\", \"tl\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AddTeamLead`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"TL created  !\");\n          history.goBack();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Add New Team Leader</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardHeader>\n          <div class=\"row mt-3\">\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Name</label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_name,\n                        })}\n                        name=\"p_name\"\n                        ref={register}\n                      />\n                      {errors.p_name && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_name.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Phone Number</label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_phone,\n                        })}\n                        name=\"p_phone\"\n                        ref={register}\n                      />\n                      {errors.p_phone && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_phone.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Category</label>\n                      <select\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_tax,\n                        })}\n                        name=\"p_tax\"\n                        ref={register}\n                        onChange={(e) => setStore(e.target.value)}\n                      >\n                        <option value=\"\">--Select Category--</option>\n                        {tax.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.p_tax && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_tax.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Sub Category</label>\n                      <select\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_tax2,\n                        })}\n                        name=\"p_tax2\"\n                        ref={register}\n                        onChange={(e) => setStore2(e.target.value)}\n                      >\n                        <option value=\"\">--Select Sub-Category--</option>\n                        {tax2.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.p_tax2 && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_tax2.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-12\">\n                    <div class=\"form-group\">\n                      <label>Email</label>\n                      <input\n                        type=\"email\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        ref={register}\n                      />\n                      {errors.p_email && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_email.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Submit\n                </button>\n              </form>\n            </div>\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddNew;\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required name\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_phone: yup\n//   .string()\n//   .required(\"required phone no\")\n//   .matches(/^[0-9]+$/, \"Must be only digits\")\n//   .min(10, \"Must be exactly 10 digits\")\n//   .max(20, \"max 20 digits\"),\n// });\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AddNewTaxProf/AddNewTaxProf.js",["822","823","824","825","826","827","828","829"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n  p_tax: yup.string().required(\"required category\"),\n  p_tax2: yup.string().required(\"required sub category\"),\n  p_teamleader: yup.string().required(\"required sub teamleader\"),\n});\n\nfunction AddNew() {\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [teamleader, setTeamLeader] = useState([]);\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const history = useHistory();\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTeamLeader(res.data.result);\n        }\n      });\n    };\n    getTeamLeader();\n  }, []);\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"pcat_id\", value.p_tax);\n    formData.append(\"cat_id\", value.p_tax2);\n    formData.append(\"type\", \"tp\");\n    formData.append(\"tp_id\", value.p_teamleader);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/AddTaxProfessional`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"TP created  !\");\n          history.goBack();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Add New Tax Professionals</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardHeader>\n          <div class=\"row mt-3\">\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Name</label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_name,\n                        })}\n                        name=\"p_name\"\n                        ref={register}\n                      />\n                      {errors.p_name && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_name.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Phone Number</label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_phone,\n                        })}\n                        name=\"p_phone\"\n                        ref={register}\n                      />\n                      {errors.p_phone && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_phone.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Email</label>\n                      <input\n                        type=\"email\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        ref={register}\n                      />\n                      {errors.p_email && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_email.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Select teamleader</label>\n                      <select\n                        name=\"p_teamleader\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_teamleader,\n                        })}\n                        ref={register}\n                      >\n                        <option value=\"\">--select--</option>\n                        {teamleader.map((p) => (\n                          <option key={p.Id} value={p.id}>\n                            {p.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.p_teamleader && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_teamleader.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Category</label>\n                      <select\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_tax,\n                        })}\n                        name=\"p_tax\"\n                        ref={register}\n                        onChange={(e) => setStore(e.target.value)}\n                      >\n                        <option value=\"\">--Select Category--</option>\n                        {tax.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.p_tax && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_tax.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Sub Category</label>\n                      <select\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_tax2,\n                        })}\n                        name=\"p_tax2\"\n                        ref={register}\n                        onChange={(e) => setStore2(e.target.value)}\n                      >\n                        <option value=\"\">--Select Sub-Category--</option>\n                        {tax2.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.p_tax2 && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_tax2.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddNew;\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required name\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_phone: yup\n//   .string()\n//   .required(\"required phone no\")\n//   .matches(/^[0-9]+$/, \"Must be only digits\")\n//   .min(10, \"Must be exactly 10 digits\")\n//   .max(20, \"max 20 digits\"),\n// });\n","/var/www/html/Mazars_Pannel/src/pages/Admin/QueriesRecevied/QueriesRecevied.js",["830","831","832","833","834","835","836","837","838","839","840"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\n\nfunction QueriesRecevied() {\n  const { id } = useParams();\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tlname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/customers/getQueryDetails?id=${id}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setPaymentDetails(res.data.payment_detail);\n          setAssingmentNo(res.data.result[0].assign_no);\n\n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n          \n          console.log(\"purposeItem-\", typeof purposeItem);\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            var myYear = JSON.parse(assementItem);\n            setPurpose(myPurpose);\n            setYear(myYear);\n          } catch (e) {\n            return false;\n          }\n\n          if (res.data.proposal_queries.length > 0) {\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              misc2: res.data.proposal_queries[0].misc2,\n            });\n          }\n\n          if (res.data.assignment.length > 0) {\n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n          if (res.data.history_queries.length > 0) {\n            setDisplayHistory({\n              tlname: res.data.history_queries[0].tname,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n          }\n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n        }\n      });\n    };\n    getQuery();\n    getSubmittedAssingment();\n  }, [assingNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setDisplayQuery(res.data.result);\n        }\n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"schedule\">\n            <h3>Query Detail</h3>\n          </div>\n        </div>\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          {submitData.map((p, index) => (\n            <QueryDetails\n              p={p}\n              key={index}\n              diaplaySpecific={diaplaySpecific}\n              diaplayProposal={diaplayProposal}\n              diaplayHistory={diaplayHistory}\n              diaplayAssignment={diaplayAssignment}\n              displayQuery={displayQuery}\n              getQuery={getQuery}\n              assingNo={assingNo}\n              queryDocs={queryDocs}\n              paymentDetails={paymentDetails}\n              purpose={purpose}\n              year={year}\n            />\n          ))}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n\n{\n  /* <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{fontSize:\"20px\"}}>Query Details</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {submitData.map((p, i) => (\n            <div class=\"card-body\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Titles</th>\n                    <th scope=\"col\">Data</th>\n                  </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope=\"row\">Query No</th>\n                    <td>{p.assign_no}</td>\n                  </tr>\n                <tr>\n                    <th scope=\"row\">Query Status</th>\n                    <td>{p.status}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facts of the case</th>\n                    <td>{p.fact_case}</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      Timelines within which Opinion is Required\n                    </th>\n                    <td colspan=\"1\">{p.Timelines}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">specific questions</th>\n                    <td colspan=\"1\">\n                      {diaplaySpecific.map((p, i) => (\n                        <p>{p.text}</p>\n                      ))}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Documents</th>\n                    <td>\n                      {p.upload_doc_1 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_2 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_3 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Format in which Opinion is required</th>\n                    <td colspan=\"1\">\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                      <p>\n                        {p.softcopy_digitally_assigned === \"1\" &&\n                          \"SoftCopy- Digitally Signed\"}\n                      </p>\n\n                      <p>\n                        {p.printout_physically_assigned === \"1\" &&\n                          \"Printout- Physically Signed\"}\n                      </p>\n                    </td>\n                  </tr>\n                  \n                </tbody>\n              </table>\n\n              <table class=\"table table-bordered\">\n                {displayQuery.length > 0 && (\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                        Additional Queries\n                      </th>\n                      <th scope=\"col\">Date Submission</th>\n                      <th scope=\"col\">Documents</th>\n                    </tr>\n                  </thead>\n                )}\n\n                {displayQuery.map((p, i) => (\n                  <tbody>\n                    <tr key={i}>\n                      <td>{p.additional_queries}</td>\n                      <td>{ChangeFormateDate(p.created)}</td>\n                      <td>\n                          {p.upload_doc == \"\" ? (\n                            \"\"\n                          ) : (\n                            <p>\n                              <a\n                                href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc}`}\n                              >\n                                <i class=\"fa fa-photo\"></i>\n                              </a>\n                            </p>\n                          )}\n                        </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          ))}\n        </CardBody>\n      </Card> */\n}\n// useEffect(() => {\n//   const getSubmittedAssingment = () => {\n//     axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n//       console.log(res);\n//       if (res.data.code === 1) {\n//         setSubmitData(res.data.result);\n//         setDisplaySpecific(res.data.additional_queries);\n//         setAssingmentNo(res.data.result[0].assign_no);\n//       }\n//     });\n//   };\n\n//   getSubmittedAssingment();\n//   getQuery();\n// }, [assingNo]);\n\n// console.log(assingNo);\n","/var/www/html/Mazars_Pannel/src/pages/Admin/Proposal/Proposal.js",["841","842","843","844"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport AllProposalComponent from \"../AllProposalComponent/AllProposalComponent\";\nimport PendingForAcceptence from \"../../../components/PendingForAcceptence/PendingForAcceptence\";\nimport AcceptedProposal from \"../AcceptedProposal/AcceptedProposal\";\nimport DeclinedPropoal from \"../DeclinedProposal/DeclinedPropoal\";\n\n\nfunction Proposal() {\n  const [allProposalCount, setAllProposalCount] = useState(\"\");\n  const [pendingProposalCount, setPendingProposalCount] = useState(\"\");\n  // const [acceptedProposalCount, setAcceptedProposalCount] = useState(\"\");\n  const [declinedProposalCount, setDeclinedProposalCount] = useState(\"\");\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const allProposal = (data) => {\n    setAllProposalCount(data);\n  };\n\n  const pendingProposal = (data) => {\n    setPendingProposalCount(data);\n  };\n\n  // const acceptedProposal = (data) => {\n  //   setAcceptedProposalCount(data);\n  // };\n\n  const declinedProposal = (data) => {\n    setDeclinedProposalCount(data);\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\" style={{ top: \"-12px\" }}>\n          <div class=\"tab-content\" id=\"pills-tabContent\">\n            <div\n              class=\"tab-pane fade show active\"\n              id=\"query\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-query-tab\"\n            >\n              <ul\n                class=\"nav nav-pills mb-3 col-sm-12\"\n                style={{ justifyContent: \"space-around\" }}\n                id=\"pills-tab\"\n                role=\"tablist\"\n              >\n                <li class=\"nav-item\" role=\"presentation\">\n                  <a\n                    class=\"nav-link text-white active\"\n                    id=\"pills-d-tab\"\n                    data-toggle=\"pill\"\n                    href=\"#d\"\n                    role=\"tab\"\n                    aria-controls=\"pills-d\"\n                    aria-selected=\"true\"\n                  >\n                    All Proposal ({allProposalCount})\n                  </a>\n                </li>\n\n                <li class=\"nav-item\" role=\"presentation\">\n                  <a\n                    class=\"nav-link text-white\"\n                    id=\"pills-a-tab\"\n                    data-toggle=\"pill\"\n                    href=\"#a\"\n                    role=\"tab\"\n                    aria-controls=\"pills-a\"\n                    aria-selected=\"false\"\n                  >\n                    Pending For Acceptence ({pendingProposalCount})\n                  </a>\n                </li>\n\n                {/* <li class=\"nav-item\" role=\"presentation\">\n                  <a\n                    class=\"nav-link text-white\"\n                    id=\"pills-b-tab\"\n                    data-toggle=\"pill\"\n                    href=\"#b\"\n                    role=\"tab\"\n                    aria-controls=\"pills-b\"\n                    aria-selected=\"false\"\n                  >\n                    Accepted ({acceptedProposalCount})\n                  </a>\n                </li> */}\n\n                <li class=\"nav-item\" role=\"presentation\">\n                  <a\n                    class=\"nav-link text-white\"\n                    id=\"pills-c-tab\"\n                    data-toggle=\"pill\"\n                    href=\"#c\"\n                    role=\"tab\"\n                    aria-controls=\"pills-c\"\n                    aria-selected=\"false\"\n                  >\n                    Declined ({declinedProposalCount})\n                  </a>\n                </li>\n              </ul>\n\n              <div class=\"tab-content\" id=\"pills-tabContent\">\n                <div\n                  class=\"tab-pane fade show active\"\n                  id=\"d\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"pills-d-tab\"\n                >\n                  <AllProposalComponent allProposal={allProposal} />\n                </div>\n\n                <div\n                  class=\"tab-pane fade\"\n                  id=\"a\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"pills-a-tab\"\n                >\n                  <PendingForAcceptence pendingProposal={pendingProposal} />\n                </div>\n\n                {/* <div\n                  class=\"tab-pane fade\"\n                  id=\"b\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"pills-b-tab\"\n                >\n                  <AcceptedProposal acceptedProposal={acceptedProposal} />\n                </div> */}\n\n                <div\n                  class=\"tab-pane fade\"\n                  id=\"c\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"pills-c-tab\"\n                >\n                  <DeclinedPropoal declinedProposal={declinedProposal} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Proposal;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTP/EditTP.js",["845","846","847","848","849","850","851","852","853","854","855"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { Select, Form, Input, Button } from \"antd\";\nimport TaxProffesionalService from \"../../../config/services/TaxProffesional\";\n\n\nfunction EditTP() {\n  const { Option } = Select;\n  const { id } = useParams();\n  const history = useHistory();\n  const alert = useAlert();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n  const [value, setValue] = useState({});\n  const [teamleader, setTeamLeader] = useState([]);\n\n  useEffect(() => {\n    getTutorial(id);\n  }, [id]);\n\n  const getTutorial = (id) => {\n    TaxProffesionalService.get(id)\n      .then((res) => {\n        console.log(res.data);\n        if (res.data.code === 1) {\n          setValue(res.data.result[0]);\n          setStore(res.data.result[0].pcat_id);\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTeamLeader(res.data.result);\n        }\n      });\n    };\n    getTeamLeader();\n  }, []);\n\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setStore(value);\n  };\n\n  // console.log(\"value -\", value.name);\n  const data1 = value.name;\n  const data2 = value.email;\n  const data3 = value.phone;\n  const data4 = value.pcat_id;\n  const data5 = value.cat_id;\n  const data6 = value.tl_id;\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n\n  const onFinish = (value) => {\n    console.log(\"value :\", value);\n    let formData = new FormData();\n\n    formData.append(\"email\", value.email);\n    formData.append(\"name\", value.name);\n    formData.append(\"phone\", value.phone);\n    formData.append(\"pcat_id\", value.category);\n    formData.append(\"cat_id\", value.sub_category);\n    formData.append(\"id\", id);\n    formData.append(\"tp_id\", value.select_teamleader);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/updateTP`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"TP updated  !\");\n          history.goBack();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Edit Tax Professional</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        {!data1 ? (\n          <CardHeader>loading ...</CardHeader>\n        ) : (\n          <CardHeader>\n            <div class=\"row mt-3\">\n              <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n              <div class=\"col-lg-8 col-xl-8 col-md-12\">\n                <Form\n                  name=\"basic\"\n                  initialValues={{\n                    name: `${data1}`,\n                    email: `${data2}`,\n                    phone: `${data3}`,\n                    category: `${data4}`,\n                    sub_category: `${data5}`,\n                    select_teamleader: `${data6}`,\n                  }}\n                  onFinish={onFinish}\n                >\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Name</label>\n                        <Form.Item name=\"name\">\n                          <Input />\n                        </Form.Item>\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Phone Number</label>\n                        <Form.Item name=\"phone\">\n                          <Input />\n                        </Form.Item>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Email</label>\n                        <Form.Item name=\"email\">\n                          <Input />\n                        </Form.Item>\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Select teamleader</label>\n                        <Form.Item name=\"select_teamleader\">\n                          <Select>\n                            <Option value=\"\">--select--</Option>\n                            {teamleader.map((p, index) => (\n                              <Option key={p.Id} value={p.id}>\n                                {p.name}\n                              </Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Category</label>\n                        <Form.Item name=\"category\">\n                          <Select onChange={handleChange}>\n                            <Option value=\"\">--Select Category--</Option>\n                            {tax.map((p, index) => (\n                              <Option key={index} value={p.id}>\n                                {p.details}\n                              </Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Sub Category</label>\n                        <Form.Item name=\"sub_category\">\n                          <Select>\n                            <Option value=\"\">--Select Sub-Category--</Option>\n                            {tax2.map((p, index) => (\n                              <Option key={index} value={p.id}>\n                                {p.details}\n                              </Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <Form.Item>\n                          <Button type=\"primary\" htmlType=\"submit\">\n                            Update\n                          </Button>\n                        </Form.Item>\n                      </div>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </CardHeader>\n        )}\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditTP;\n\n\n// useEffect(() => {\n//   const getTaxProfessional = () => {\n//     axios.get(`${baseUrl}/tp/getTaxProfessional?id=${id}`).then((res) => {\n//       console.log(res);\n//       if (res.data.code === 1) {\n//         setUser({\n//           name: res.data.result[0].name,\n//           email: res.data.result[0].email,\n//           phone: res.data.result[0].phone,\n//         });\n//       }\n//     });\n//   };\n\n//   getTaxProfessional();\n// }, [id]);\n","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/EditTL.js",["856","857","858","859","860","861","862","863","864","865","866","867","868","869"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport Reset from \"./Reset\";\nimport { Select, Form, Input, Button } from \"antd\";\n\nfunction EditTL() {\n  const { Option } = Select;\n  const { id } = useParams();\n  const history = useHistory();\n  const alert = useAlert();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n  const [value, setValue] = useState({});\n\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setStore(value);\n  };\n\n  useEffect(() => {\n    getTeamLeader();\n  }, [id]);\n\n  const getTeamLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader?id=${id}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n      setValue(res.data.result[0]);\n      setStore(res.data.result[0].pcat_id);\n      }\n    });\n  };\n  console.log(\"value -\", value.name);\n  const data1 = value.name;\n  const data2 = value.email;\n  const data3 = value.phone;\n  const data4 = value.pcat_id;\n  const data5 = value.cat_id;\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n\n\n  const onFinish = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"email\", value.email);\n    formData.append(\"name\", value.name);\n    formData.append(\"phone\", value.phone);\n    formData.append(\"pcat_id\", value.category);\n    formData.append(\"cat_id\", value.sub_category);\n    formData.append(\"id\", id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/updateTeamLeader`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"TL updated  !\");\n          history.goBack();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Edit Team Leader</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        {!data1 ? (\n          <CardHeader>loading ...</CardHeader>\n        ) : (\n          <CardHeader>\n            <div class=\"row mt-3\">\n              <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n              <div class=\"col-lg-8 col-xl-8 col-md-12\">\n                <Form\n                  name=\"basic\"\n                  initialValues={{\n                    name: `${data1}`,\n                    email: `${data2}`,\n                    phone: `${data3}`,\n                    category: `${data4}`,\n                    sub_category: `${data5}`,\n                  }}\n                  onFinish={onFinish}\n                >\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Name</label>\n                        <Form.Item name=\"name\">\n                          <Input />\n                        </Form.Item>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Phone Number</label>\n                        <Form.Item name=\"phone\">\n                          <Input />\n                        </Form.Item>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Category</label>\n                        <div class=\"form-group\">\n                          <Form.Item name=\"category\">\n                            <Select onChange={handleChange}>\n                              <Option value=\"\">--Select Category--</Option>\n                              {tax.map((p, index) => (\n                                <Option key={index} value={p.id}>\n                                  {p.details}\n                                </Option>\n                              ))}\n                            </Select>\n                          </Form.Item>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Sub Category</label>\n                        <Form.Item name=\"sub_category\">\n                          <Select>\n                            <Option value=\"\">--Select Sub-Category--</Option>\n                            {tax2.map((p, index) => (\n                              <Option key={index} value={p.id}>\n                                {p.details}\n                              </Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group\">\n                        <label>Email</label>\n                        <Form.Item name=\"email\">\n                          <Input />\n                        </Form.Item>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <Form.Item>\n                          <Button type=\"primary\" htmlType=\"submit\">\n                            Update\n                          </Button>\n                        </Form.Item>\n                      </div>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </CardHeader>\n        )}\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditTL;\n\n// setValue(\"p_name\", res.data.result[0].name);\n// setValue(\"p_email\", res.data.result[0].email);\n// setUser({\n//   name: res.data.result[0].name,\n//   email: res.data.result[0].email,\n//   phone: res.data.result[0].phone,\n//   category: res.data.result[0].parent_id,\n//   sub_category: res.data.result[0].cat_name,\n// });\n// const [user, setUser] = useState({\n//   name: \"\",\n//   email: \"\",\n//   phone: \"\",\n//   category: \"\",\n//   sub_category: \"\",\n// });\n\n// const { name, email, phone, category, sub_category } = user;\n{\n  /* <div class=\"row mt-3\">\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\n              <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Name</label>\n                        <input\n                          type=\"text\"\n                          class=\"form-control\"\n                          name=\"p_name\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Phone Number</label>\n                        <input\n                          type=\"text\"\n                          class=\"form-control\"\n                          name=\"p_phone\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Category</label>\n\n                        <select\n                          className=\"form-control\"\n                          name=\"p_tax\"\n                          ref={register}\n                          value={store}\n                          onChange={(e) => setStore(e.target.value)}\n                        >\n                          <option value=\"\">--Select Category--</option>\n                          {tax.map((p, index) => (\n                            <option key={index} value={p.id}>\n                              {p.details}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Sub Category</label>\n                        <select\n                          className=\"form-select form-control\"\n                          name=\"p_tax2\"\n                          ref={register}\n                          onChange={(e) => setStore2(e.target.value)}\n                        >\n                          <option value=\"\">--Select Sub-Category--</option>\n                          {tax2.map((p, index) => (\n                            <option key={index} value={p.id}>\n                              {p.details}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group\">\n                        <label>Email</label>\n                        <input\n                          type=\"email\"\n                          class=\"form-control\"\n                          name=\"p_email\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Update\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div> */\n}\n\n// const [interest, setInterest] = useState(\"Direct Tax\");\n\n// const [selectedOption, setSelectedOption] = useState([]);\n// const [tax, setTax] = useState([]);\n// const [tax2, setTax2] = useState([]);\n\n// const [store, setStore] = useState(\"\");\n// const [store2, setStore2] = useState(null);\n\n// useEffect(() => {\n//   getTeamLeader();\n// }, []);\n\n// const getTeamLeader = () => {\n//   axios.get(`${baseUrl}/tl/getTeamLeader?id=${id}`).then((res) => {\n//     console.log(res);\n//     console.log(res.data.result[0]);\n//     if (res.data.code === 1) {\n//       // setSelectedOption(res.data.result);\n//       // setInterest(res.data.result[0].parent_id)\n//       // reset(res.data.result[0]);\n\n//       setValue(\"p_name\", res.data.result[0].name);\n//       setValue(\"p_email\", res.data.result[0].email);\n//       setValue(\"p_phone\", res.data.result[0].phone);\n//       setValue(\"p_tax\", res.data.result[0].parent_id);\n//       setValue(\"p_tax2\", res.data.result[0].cat_name);\n//     }\n//   });\n// };\n","/var/www/html/Mazars_Pannel/src/pages/Admin/PaymentStatusTab/PaymentStatusTab.js",[],"/var/www/html/Mazars_Pannel/src/pages/Admin/QueryAssingment/QueryAssingment.js",["870","871","872","873","874","875","876","877","878"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\n\nfunction QueryAssingment() {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { id } = useParams();\n  const history = useHistory();\n\n  const [taxLeaderDisplay, setTaxLeaderDisplay] = useState([]);\n  const [teamID, setTeamID] = useState(null);\n  const [teamName, setTeamName] = useState('');\n  const [query, setQuery] = useState(true);\n\n  const [hideQuery, setHideQuery] = useState({\n    name: \"\",\n    timeline: \"\",\n    date_allocation: \"\",\n    expdeliverydate: \"\",\n  });\n\n  const userId = window.localStorage.getItem(\"adminkey\");\n  const tlkey = window.localStorage.getItem(\"tlkey\");\n\n  const [queryData, setQuerData] = useState({\n    queryNo: \"\",\n    timelines: \"\",\n    custId: \"\",\n  });\n\n  const { queryNo, timelines, custId } = queryData;\n\n  useEffect(() => {\n    getTaxLeader();\n    getQueryData();\n  }, []);\n\n  const getTaxLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setTaxLeaderDisplay(res.data.result);\n      }\n    });\n  };\n\n  const getQueryData = () => {\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setQuerData({\n          queryNo: res.data.result[0].assign_no,\n          timelines: res.data.result[0].Timelines,\n          custId: res.data.result[0].customer_id,\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getQuery();\n  }, [queryNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/CheckIfAssigned?assignno=${queryNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setQuery(false);\n          setHideQuery({\n            name: res.data.meta[0].name,\n            timeline: res.data.meta[0].timeline,\n            date_allocation: res.data.meta[0].date_allocation,\n            expdeliverydate: res.data.meta[0].expdeliverydate,\n          });\n        }\n      });\n  };\n\n  const handleChange= (e) =>{\n    console.log(\"val-\",e.target.value);\n    setTeamID(e.target.value)\n    var value = taxLeaderDisplay.filter(function(item) {\n      return item.id == e.target.value\n    })\n    console.log(value[0].name);\n    setTeamName(value[0].name)\n  }\n\n  \n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    var expdeliverydate = value.p_expdeldate.replace(\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\n      \"$3-$1-$2\"\n    );\n\n    let formData = new FormData();\n    formData.append(\"who\", teamID);\n    formData.append(\"id\", id);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"type\", \"admin\");\n    formData.append(\"types\", \"tl\");\n    formData.append(\"name\", teamName);\n    formData.append(\"timeline\", value.p_timelines);\n    formData.append(\"expdeliverydate\", expdeliverydate);\n    formData.append(\"assignNo\", queryNo);\n    formData.append(\"customer_id\", custId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AddQueryAssignment`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"assigned!\");\n          getQuery();\n          reset();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n\n\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\">\n              <div style={{ textAlign: \"center\" }}>\n                <h2>Query Allocation</h2>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <div class=\"row mt-3\">\n            <div class=\"col-md-12\">\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Query No.</th>\n                      <th scope=\"col\">Team Leaders</th>\n                      <th scope=\"col\">Expected Timeline</th>\n                      <th scope=\"col\">Exp. Delivery Date</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {query ? (\n                      <tr>\n                        <th scope=\"row\">{queryNo}</th>\n                        <td>\n                          <select\n                            class=\"form-control\"\n                            name=\"p_taxprof\"\n                            ref={register}\n                            onChange={(e)=> handleChange(e)}\n                          >\n                            <option value=\"\">-select-</option>\n                            {taxLeaderDisplay.map((p, index) => (\n                              <option key={index} value={p.id}>\n                                {p.name}\n                              </option>\n                            ))}\n                          </select>\n                        </td>\n\n                        <td>\n                          <input\n                            type=\"text\"\n                            ref={register}\n                            name=\"p_timelines\"\n                            value={timelines}\n                            class=\"form-control\"\n                          />\n                        </td>\n                        <td>\n                          <input\n                            type=\"date\"\n                            ref={register}\n                            name=\"p_expdeldate\"\n                            class=\"form-control\"\n                          />\n                        </td>\n\n                        <td>\n                          <button type=\"submit\" class=\"btn btn-success\">\n                            Assign\n                          </button>\n                        </td>\n                      </tr>\n                    ) : (\n                      <tr>\n                        <th scope=\"row\">{queryNo}</th>\n                        <td>\n                          <select class=\"form-control w-75 p-0\" disabled>\n                            <option>{hideQuery.name}</option>\n                          </select>\n                        </td>\n\n                        <td>\n                          <input\n                            type=\"text\"\n                            ref={register}\n                            name=\"p_timelines\"\n                            class=\"form-control\"\n                            value={hideQuery.timeline}\n                            disabled\n                          />\n                        </td>\n                        <td>\n                          <input\n                            type=\"date\"\n                            ref={register}\n                            name=\"p_expdeldate\"\n                            class=\"form-control\"\n                            value={hideQuery.expdeliverydate}\n                            disabled\n                          />\n                        </td>\n                        <td>\n                          <button class=\"btn btn-success\" disabled>\n                            Assigned\n                          </button>\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </form>\n            </div>\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default QueryAssingment;\n\n// <Card>\n//         <CardHeader>\n//           <Row>\n//             <Col md=\"4\">\n//               <button\n//                 class=\"btn btn-success ml-3\"\n//                 onClick={() => history.goBack()}\n//               >\n//                 <i class=\"fas fa-arrow-left mr-2\"></i>\n//                 Go Back\n//               </button>\n//             </Col>\n//             <Col md=\"8\">\n//               <h4>Add Assignment Stages (Max 5)</h4>\n//             </Col>\n//           </Row>\n//         </CardHeader>\n//         <CardHeader></CardHeader>\n//       </Card>\n","/var/www/html/Mazars_Pannel/src/pages/Admin/QueriesTab/QueriesTab.js",["879","880","881","882","883","884","885","886","887","888","889","890"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport PendingForAllocation from \"../../../components/PendingForAllocation/PendingForAllocation\";\nimport PendingForProposals from \"../../../components/PendingForProposals/PendingForProposals\";\nimport PendingForPayment from \"../../../components/PendingForPayment/PendingForPayment\";\nimport AllQueriesData from \"../../../components/AllQueriesData/AllQueriesData\";\n\nfunction QueriesTab() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const count_PFA = window.localStorage.getItem(\"count_PFA\");\n\n  const [allQueriesCount, setAllQueriesCount] = useState(\"\");\n  const [pendingProposalCount, setPendingProposalCount] = useState(\"\");\n  const [pendingForPayment, setPendingforPayment] = useState(\"\");\n  const [pendingForAllocation, setPendingforAllocation] = useState(\"\");\n\n  const CountAllQuery = (data) => {\n    setAllQueriesCount(data);\n  };\n\n  const CountPendingProposal = (data) => {\n    setPendingProposalCount(data);\n  };\n\n  const CountPendingForPayment = (data) => {\n    setPendingforPayment(data);\n  };\n\n  const CountPendingForAllocation = (data) => {\n    setPendingforAllocation(data);\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\" style={{ top: \"-12px\" }}>\n          <div class=\"tab-content\" id=\"pills-tabContent\">\n            <div\n              class=\"tab-pane fade show active\"\n              id=\"query\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-query-tab\"\n            >\n              <ul\n                class=\"nav nav-pills mb-3 col-sm-12\"\n                style={{ justifyContent: \"space-around\" }}\n                id=\"pills-tab\"\n                role=\"tablist\"\n              >\n                <li class=\"nav-item\" role=\"presentation\">\n                  <a\n                    class=\"nav-link text-white active\"\n                    id=\"pills-d-tab\"\n                    data-toggle=\"pill\"\n                    href=\"#d\"\n                    role=\"tab\"\n                    aria-controls=\"pills-d\"\n                    aria-selected=\"true\"\n                  >\n                    All Queries ({allQueriesCount})\n                  </a>\n                </li>\n\n                <li class=\"nav-item\" role=\"presentation\">\n                  <a\n                    class=\"nav-link text-white\"\n                    id=\"pills-a-tab\"\n                    data-toggle=\"pill\"\n                    href=\"#a\"\n                    role=\"tab\"\n                    aria-controls=\"pills-a\"\n                    aria-selected=\"false\"\n                  >\n                    Pending for Allocation ({pendingForAllocation})\n                    {/* ({count_PFA}) */}\n                  </a>\n                </li>\n\n                <li class=\"nav-item\" role=\"presentation\">\n                  <a\n                    class=\"nav-link text-white\"\n                    id=\"pills-b-tab\"\n                    data-toggle=\"pill\"\n                    href=\"#b\"\n                    role=\"tab\"\n                    aria-controls=\"pills-b\"\n                    aria-selected=\"false\"\n                  >\n                    Pending for Proposal ({pendingProposalCount})\n                  </a>\n                </li>\n\n                <li class=\"nav-item\" role=\"presentation\">\n                  <a\n                    class=\"nav-link text-white\"\n                    id=\"pills-c-tab\"\n                    data-toggle=\"pill\"\n                    href=\"#c\"\n                    role=\"tab\"\n                    aria-controls=\"pills-c\"\n                    aria-selected=\"false\"\n                  >\n                    Pending for Payment ({pendingForPayment})\n                  </a>\n                </li>\n              </ul>\n\n              <div class=\"tab-content\" id=\"pills-tabContent\">\n                <div\n                  class=\"tab-pane fade show active\"\n                  id=\"d\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"pills-d-tab\"\n                >\n                  <AllQueriesData CountAllQuery={CountAllQuery} />\n                </div>\n\n                <div\n                  class=\"tab-pane fade\"\n                  id=\"a\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"pills-a-tab\"\n                >\n                  <PendingForAllocation\n                    CountPendingForAllocation={CountPendingForAllocation}\n                  />\n                </div>\n\n                <div\n                  class=\"tab-pane fade\"\n                  id=\"b\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"pills-b-tab\"\n                >\n                  <PendingForProposals\n                    CountPendingProposal={CountPendingProposal}\n                  />\n                </div>\n\n                <div\n                  class=\"tab-pane fade\"\n                  id=\"c\"\n                  role=\"tabpanel\"\n                  aria-labelledby=\"pills-c-tab\"\n                >\n                  <PendingForPayment\n                    CountPendingForPayment={CountPendingForPayment}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab.js",["891","892"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProffesionalService from \"../../../config/services/TaxProffesional\";\n\nfunction TaxProfessionalsTab() {\n  const alert = useAlert();\n  const [data, setData] = useState([]);\n  const [tpCount, setTpCount] = useState(\"\");\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  useEffect(() => {\n    getTaxProf();\n  }, []);\n\n  const getTaxProf = () => {\n    TaxProffesionalService.getAll()\n      .then((response) => {\n        setData(response.data.result);\n        setTpCount(response.data.result.length);\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      dataField: \"name\",\n      text: \"Name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"email\",\n      text: \"Email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"phone\",\n      text: \"Phone\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Edit\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <Link to={`/admin/edittp/${row.id}`}>\n              <i\n                className=\"fa fa-edit\"\n                style={{\n                  fontSize: 18,\n                  cursor: \"pointer\",\n                  marginLeft: \"8px\",\n                }}\n              ></i>\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"phone\",\n      text: \"Delete\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <i\n              className=\"fa fa-trash\"\n              style={{ fontSize: 20, cursor: \"pointer\", marginLeft: \"8px\" }}\n              onClick={() => del(row.id)}\n            ></i>\n          </>\n        );\n      },\n    },\n  ];\n\n  //check\n  const del = (id) => {\n    console.log(\"del\", id);\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"It will permanently deleted !\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  // delete data\n  const deleteCliente = (id) => {\n    console.log(\"del\", id);\n    axios\n      .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\n      .then(function (response) {\n        console.log(\"delete-\", response);\n        if (response.data.code === 1) {\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n          getTaxProf();\n        } else {\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n  \n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"10\">\n              <CardTitle tag=\"h4\">Tax Professionals ({tpCount})</CardTitle>\n            </Col>\n            <Col md=\"2\">\n              <Link to={\"/admin/addnewtp\"} class=\"btn btn-primary\">\n                Add New\n              </Link>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={data}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default TaxProfessionalsTab;\n// const getTaxProf = () => {\n//   axios.get(`${baseUrl}/tp/getTaxProfessional`).then((res) => {\n//     console.log(res);\n//     if (res.data.code === 1) {\n//       setData(res.data.result);\n//       setTpCount(res.data.result.length);\n//     }\n//   });\n// };\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AssignmentTab/AssignmentTab.js",["893","894","895","896","897","898","899","900","901","902","903"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport Statusfilter from \"./Statusfilter\";\n\nfunction AssignmentTab() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [assignmentCount, setCountAssignment] = useState(\"\");\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n  const getAssignmentData = () => {\n    axios.get(`${baseUrl}/tl/getAssignments`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setAssignmentDisplay(res.data.result);\n        setCountAssignment(res.data.result.length);\n      }\n    });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    console.log(`selected ${value}`);\n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetCategory ..\");\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    setStatus([]);\n    getAssignmentData();\n  };\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n    console.log(`selected ${value}`);\n    setStatus(value);\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"date_of_query\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.date_of_query);\n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"200px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                {row.client_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                {row.draft_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                {row.final_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of report :</span>\n                {row.delivery_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\n                {row.other_stage}\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"Exp_Delivery_Date\",\n      text: \"Expected date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.Exp_Delivery_Date);\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"final_date\",\n      text: \"Actual date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.final_date);\n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {!row.final_report == \"\" ? (\n              <div>\n                <a\n                  href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.final_report}`}\n                  target=\"_blank\"\n                >\n                  <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\n                  final\n                </a>\n              </div>\n            ) : row.assignement_draft_report ? (\n              <div>\n                <a\n                  href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assignement_draft_report}`}\n                  target=\"_blank\"\n                >\n                  <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\n                  draft\n                </a>\n              </div>\n            ) : null}\n          </>\n        );\n      },\n    },\n    {\n      text: \"TL name\",\n      dataField: \"tl_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n  ];\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/tl/getAssignments?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&assignment_status=${status}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignmentDisplay(res.data.result);\n          }\n        }\n      });\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"7\">\n              <CardTitle tag=\"h4\">Assignment ({assignmentCount})</CardTitle>\n            </Col>\n            <Col md=\"5\"></Col>\n          </Row>\n        </CardHeader>\n\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-inline\">\n              <div class=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 250 }}\n                  placeholder=\"Select Sub Category\"\n                  defaultValue={[]}\n                  onChange={handleSubCategory}\n                  value={store2}\n                  allowClear\n                >\n                  {tax2.map((p, index) => (\n                    <Option value={p.id} key={index}>\n                      {p.details}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 210 }}\n                  placeholder=\"Select stages\"\n                  defaultValue={[]}\n                  onChange={assingmentStatus}\n                  value={status}\n                  allowClear\n                >\n                  <Option value=\"Client_Discussion\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">\n                      Client Discussion\n                    </div>\n                  </Option>\n                  <Option value=\"Draft_Report\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Draft report</div>\n                  </Option>\n                  <Option value=\"Final_Discussion\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">\n                      Final Discussion\n                    </div>\n                  </Option>\n                  <Option value=\"Delivery_of_report\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">\n                      Delivery of report\n                    </div>\n                  </Option>\n                  <Option value=\"Completed\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Completed</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={assignmentDisplay}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AssignmentTab;\n\n{\n  /*            \n            <p style={{ fontSize: \"10px\" }}>{row.draft_report}</p>\n            <p style={{ fontSize: \"10px\" }}>{row.final_discussion}</p>\n            <p style={{ fontSize: \"10px\" }}>{row.draft_report}</p>\n            <p style={{ fontSize: \"10px\" }}>{row.other_stage}</p> */\n}\n{\n  /* <div>\n                      <p>\n                        <span style={{ fontWeight: \"bold\" }}>\n                          Client Discussion :\n                        </span>\n                        {p.client_discussion}\n                      </p>\n                      <p>\n                        <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                        {p.draft_report}\n                      </p>\n                      <p>\n                        <span style={{ fontWeight: \"bold\" }}>\n                          Final Discussion :\n                        </span>\n                        {p.final_discussion}\n                      </p>\n                      <p>\n                        <span style={{ fontWeight: \"bold\" }}>\n                          Delivery of report :\n                        </span> \n                        {p.delivery_report}\n                      </p>\n                    </div> */\n}\n\n/* <div className=\"mb-3\">                     \n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_purpose\"                     \n                      >                  \n                        <option >status</option>                                         \n                        <option >Client Discussion : {p.client_discussion}</option>                                         \n                        <option >Draft report : {p.draft_report}</option>                                         \n                        <option >Final Discussion : {p.final_discussion}</option>                                         \n                        <option >Delivery of report : {p.delivery_report}</option>                                         \n                      </select>\n                    </div> */\n//  {/* <AdminFilter\n//             setData={setAssignmentDisplay}\n//             getData={getAssignmentData}\n//             assignment=\"assignment\"\n//           />\n","/var/www/html/Mazars_Pannel/src/pages/TL/Start/Start.js",[],"/var/www/html/Mazars_Pannel/src/pages/Admin/TeamLeaderTab/TeamLeaderTab.js",["904","905","906"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Swal from \"sweetalert2\";\nfunction TeamLeaderTab() {\n  const alert = useAlert();\n  const [data, setData] = useState([]);\n  const [tlCount, setTlCount] = useState(\"\");\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\" ,width:\"50px\"};\n      },\n    },\n    {\n      dataField: \"name\",\n      text: \"Name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"email\",\n      text: \"Email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"phone\",\n      text: \"Phone\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Edit\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <Link to={`/admin/edittl/${row.id}`}>\n              <i\n                className=\"fa fa-edit\"\n                style={{\n                  fontSize: 18,\n                  cursor: \"pointer\",\n                  marginLeft: \"8px\",\n                }}\n              ></i>\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"phone\",\n      text: \"Delete\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <i\n              className=\"fa fa-trash\"\n              style={{ fontSize: 20, cursor: \"pointer\", marginLeft: \"8px\" }}\n              onClick={() => del(row.id)}\n            ></i>\n          </>\n        );\n      },\n    },\n  ];\n\n  useEffect(() => {\n    getTeamLeader();\n  }, []);\n\n  const getTeamLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setData(res.data.result);\n        setTlCount(res.data.result.length);\n      }\n    });\n  };\n\n\n//check\n  const del = (id) => {\n    console.log(\"del\", id);\n\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"It will permanently deleted !\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  // delete data\n  const deleteCliente = (id) => {\n    axios\n      .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\n      .then(function (response) {\n        console.log(\"delete-\", response);\n        if (response.data.code === 1) {\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n          getTeamLeader();\n        } else {\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        }\n        \n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"10\">\n              <CardTitle tag=\"h4\">Team Leaders ({tlCount})</CardTitle>\n            </Col>\n            <Col md=\"2\">\n              <Link to={\"/admin/addnewtl\"} class=\"btn btn-primary\">\n                Add New\n              </Link>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={data}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default TeamLeaderTab;\n\n{\n  /* <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th scope=\"col\">S.No.</th>\n                <th scope=\"col\">Name</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Phone No.</th>\n                <th scope=\"col\">Edit</th>\n                <th scope=\"col\">Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((p, i) => (\n                <tr>\n                  <th scope=\"row\">{i + 1}</th>\n                  <td>{p.name}</td>\n                  <td>{p.parent_id}</td>\n                  <td>{p.cat_name}</td>\n                  <td>{p.email}</td>\n                  <td>{p.phone}</td>\n                  <td>\n                    <Link to={`/admin/edittl/${p.id}`}>\n                      <i\n                        className=\"fa fa-edit\"\n                        style={{\n                          fontSize: 18,\n                          cursor: \"pointer\",\n                          marginLeft: \"8px\",\n                        }}\n                      ></i>\n                    </Link>\n                  </td>\n                  <td onClick={() => del(p.id)}>\n                    <i\n                      className=\"fa fa-trash\"\n                      style={{\n                        fontSize: 22,\n                        cursor: \"pointer\",\n                        marginLeft: \"8px\",\n                      }}\n                    ></i>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table> */\n}\n\n// <div class=\"row mt-3\">\n//         <div class=\"col-md-12\">\n//           <div class=\"schedule\">\n//             <h3>Team Leaders</h3>\n// <Link to={\"/admin/addnew\"} class=\"btn btn-primary\">\n//   Add New\n// </Link>\n//           </div>\n//         </div>\n//         <br />\n//         <br />\n//         <br />\n//         <br />\n//         <div class=\"col-md-12\">\n//           <table class=\"table\">\n// <thead>\n//   <tr>\n//     <th scope=\"col\">No.</th>\n//     <th scope=\"col\">Name</th>\n//     <th scope=\"col\">Email</th>\n//     <th scope=\"col\">Phone No.</th>\n//     <th scope=\"col\">Edit</th>\n//     <th scope=\"col\">Delete</th>\n//   </tr>\n// </thead>\n// {data.map((p, i) => (\n//   <tr>\n//     <th scope=\"row\">{i + 1}</th>\n//     <td>{p.name}</td>\n//     <td>{p.email}</td>\n//     <td>{p.Phone}</td>\n//     <td>\n//       <Link to={`/admin/edit/${p.id}`}>\n//         <i\n//           className=\"fa fa-edit\"\n//           style={{ fontSize: 18, cursor: \"pointer\", marginLeft:\"8px\" }}\n//         ></i>\n//       </Link>\n//     </td>\n//     <td\n//     onClick={() => del(p.id)}>\n// <i className=\"fa fa-trash\" style={{ fontSize: 22, cursor: \"pointer\" ,marginLeft:\"8px\" }}>\n// </i>\n//     </td>\n//   </tr>\n// ))}\n//           </table>\n//         </div>\n//       </div>\n\n// cellRenderer:  (params)=> {\n//   return <Link to={`/?info=${params.data.Id}`}>\"+{params.value}+\"</Link>,\n\n// const [gridApi, setGridApi] = useState(null);\n// const [gridColumnApi, setGridColumnApi] = useState(null);\n","/var/www/html/Mazars_Pannel/src/pages/Admin/FeedbackTab/FeedbackTab.js",["907","908","909"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport FeedbackService from \"../../../config/services/QueryDetails\";\n\nfunction FeedbackTab() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [feedbackData, setFeedBackData] = useState([]);\n\n  useEffect(() => {\n    getFeedback();\n  }, []);\n\n  const getFeedback = () => {\n    FeedbackService.getAll()\n      .then((response) => {\n        setFeedBackData(response.data.result);\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return <>{row.assign_no}</>;\n      },\n    },\n    {\n      text: \"Details of feedback\",\n      dataField: \"feedback\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"7\">\n                <CardTitle tag=\"h4\">List of Feedback</CardTitle>\n              </Col>\n              <Col md=\"5\"></Col>\n            </Row>\n          </CardHeader>\n          <CardBody>\n            <BootstrapTable\n              bootstrap4\n              keyField=\"id\"\n              data={feedbackData}\n              columns={columns}\n              rowIndex\n            />\n          </CardBody>\n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default FeedbackTab;\n// const getFeedback = () => {\n//   axios.get(`${baseUrl}/customers/getFeedback`).then((res) => {\n//     console.log(res);\n//     if (res.data.code === 1) {\n//       setFeedBackData(res.data.result);\n//     }\n//   });\n// };\n","/var/www/html/Mazars_Pannel/src/pages/TL/Dashboard/Dashboard.js",["910"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\n\nfunction Dashboard() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [pendindForAccepttence, setPendingForAcceptence] = useState(\"\");\n  const [incomplete, setIncomplete] = useState(\"\");\n  const [complete, setcomplete] = useState(\"\");\n\n  useEffect(() => {\n    const getPendindForAccepttence = () => {\n      axios\n        .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setPendingForAcceptence(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getIncomplete = () => {\n      axios\n        .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setIncomplete(res.data.result.length);\n          }\n        });\n    };\n\n    const getComplete = () => {\n      axios\n        .get(`${baseUrl}/tl/getCompleteQues?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setcomplete(res.data.result.length);\n          }\n        });\n    };\n\n\n    getPendindForAccepttence();\n    getIncomplete();\n    getComplete();\n\n  }, []);\n\n  var todaysDate = new Date();\n  console.log(todaysDate);\n\n \n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-150\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Pending for Acceptance\n                  </h5>\n                </div>\n                <div>\n                <Link to={`/teamleader/queriestab`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{pendindForAccepttence}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-150\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Inprogress\n                  </h5>\n                </div>\n                <div>\n                <Link to={`/teamleader/queriestab`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{incomplete}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-150\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Complete\n                  </h5>\n                </div>\n                <div>\n                <Link to={`/teamleader/queriestab`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{complete}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Dashboard;\n\n// var todaysDate = new Date();\n//   console.log(todaysDate);\n// function convertDate(date) {\n//   var yyyy = date.getFullYear().toString();\n//   var mm = (date.getMonth() + 1).toString();\n//   var dd = date.getDate().toString();\n\n//   var mmChars = mm.split(\"\");\n//   var ddChars = dd.split(\"\");\n\n//   return (\n//     yyyy +\n//     \"-\" +\n//     (mmChars[1] ? mm : \"0\" + mmChars[0]) +\n//     \"-\" +\n//     (ddChars[1] ? dd : \"0\" + ddChars[0])\n//   );\n// }\n\n// console.log(convertDate(todaysDate));","/var/www/html/Mazars_Pannel/src/pages/TL/Login/Login.js",["911","912"],"import React,{useState} from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Swal from 'sweetalert2';\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  password: yup\n    .string()\n    .required(\"required password\")\n    .min(5, \"at least 5 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\nfunction Login(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"type\", \"tl\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/login`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);     \n        if (response.data.code === 1) {\n          alert.success(\"Login successfully !\");\n          localStorage.setItem(\n            \"tlkey\",\n            JSON.stringify(response.data[\"user id\"])\n          );\n          props.history.push(\"/teamleader/dashboard\");  \n        } else\n         if (response.data.code === 0) {\n          console.log(response.data.result)\n          Swal.fire('Oops...',\"Errorr : Incorrect Email and password\",'error')\n          }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n      <Header mtl=\"mtl\"/>\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>MTL Login</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>    \n         \n            <div className=\"row\">\n              <div className=\"col-md-12\">\n              <div className=\"mb-3\">\n                  <label className=\"form-label\">Email</label>\n                  <input\n                    type=\"text\"\n                   className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                  />\n                  {errors.p_email && (\n                <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n              )}\n                </div>\n                \n              </div>\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    type=\"password\"\n                   className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    name=\"password\"\n                    placeholder=\"Enter Password\"\n                    ref={register}\n                  />\n                 {errors.password && (\n                <div className=\"invalid-feedback\">{errors.password.message}</div>\n              )}\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Login;\n","/var/www/html/Mazars_Pannel/src/pages/TL/AddTeamProf/AddTeamProf.js",["913","914","915","916"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nfunction AddTeamProf() {\n  const alert = useAlert();\n  const [data, setData] = useState([]);\n  const [count, setCount] = useState(\"\");\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  useEffect(() => {\n    getTaxProf();\n  }, []);\n\n  const getTaxProf = () => {\n    axios\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setData(res.data.result);\n          setCount(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Email\",\n      dataField: \"email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Phone\",\n      dataField: \"phone\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n  ];\n  // delete data\n  const del = (id) => {\n    console.log(\"del\", id);\n\n    axios\n      .get(`${baseUrl}/delete/TaxLead/${id}`)\n      .then(function (response) {\n        console.log(\"delete-\", response);\n        alert.success(\"successfully deleted \");\n        getTaxProf();\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"10\">\n              <CardTitle tag=\"h4\">Tax Professionals ({count})</CardTitle>\n            </Col>\n            <Col md=\"2\"></Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={data}\n            columns={columns}\n            rowIndex\n          />\n\n          {/* <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th scope=\"col\">S.No</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Phone No.</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((p, i) => (\n                <tr>\n                  <th scope=\"row\">{i + 1}</th>\n                  <td>{p.name}</td>\n                  <td>{p.email}</td>\n                  <td>{p.phone}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table> */}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddTeamProf;\n","/var/www/html/Mazars_Pannel/src/pages/TL/AddAssingmentStages/AddAssingmentStages.js",["917","918","919","920","921","922","923","924","925","926","927","928"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\n\nfunction AddAssingmentStages() {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, reset } = useForm();\n  const [assignmentStages, setAssignmentstages] = useState([]);\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}`)\n      .then((res) => {\n        console.log(res);\n        console.log(res.data.result);\n\n        if (res.data.code === 1) {\n          setAssignmentstages(res.data.result);\n          reset(res.data.result[0]);\n        }\n      });\n  };\n\n  const onSubmit = (value) => {\n    console.log(value);\n\n    let formData = new FormData();\n\n    // formData.append(\"user\", JSON.parse(userid));\n    formData.append(\"q_id\", id);\n    formData.append(\"user_id\", JSON.parse(userid));\n    formData.append(\"stage_1_status\", value.client_discussion);\n    formData.append(\"stage_2_status\", value.draft_report);\n    formData.append(\"stage_3_status\", value.final_discussion);\n    formData.append(\"stage_4_status\", value.delivery_report);\n    formData.append(\"stage_5_status\", value.other_stage);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/postAssignmentStages`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(<Msg />);\n          getAssignmentList();\n          history.push(\"/teamleader/assignment\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  //alert msg\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"10px\" }}>Assignment successfully added </p>\n      </>\n    );\n  };\n\n  console.log(\"assignmentStages\", assignmentStages);\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Assignment Stages</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <div class=\"row mt-3\">\n            {assignmentStages.map((p, i) => (\n              <>\n                {p.client_discussion == \"completed\" &&\n                p.delivery_report == \"completed\" &&\n                p.draft_report == \"completed\" &&\n                p.final_discussion == \"completed\" &&\n                p.other_stage == \"completed\" ? (\n                  <div class=\"col-md-12\">\n                    <div class=\"col-md-8\">\n                      <br />\n                      <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Client Discussion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.client_discussion}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Draft Report\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.draft_report}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Final Discussion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.final_discussion}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Delivery of report\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.delivery_report}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Complete\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.other_stage}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <br />\n                        <div class=\"form-group\">\n                          <button\n                            type=\"submit\"\n                            class=\"btn btn-primary\"\n                            disabled\n                          >\n                            Submit\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                ) : (\n                  <div class=\"col-md-12\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Client Discussion\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"client_discussion\"\n                            >\n                              <option value=\"pending\">Pending</option>\n                              <option value=\"completed\">Completed</option>\n                              <option value=\"notApplicable\">\n                                Not Applicable\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                        {p.client_discussion == \"completed\" ? null : (\n                          <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                              <div>\n                                <Link\n                                  to={`/teamleader/assignment-form/${p.assign_id}`}\n                                >\n                                  Add Details\n                                </Link>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Draft Report\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"draft_report\"\n                            >\n                              <option value=\"pending\">Pending</option>\n                              <option value=\"completed\">Completed</option>\n                              <option value=\"notApplicable\">\n                                Not Applicable\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div>\n                              <Link\n                                to={`/teamleader/view-report/${p.assign_no}`}\n                              >\n                                View Report\n                              </Link>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Final Discussion\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"final_discussion\"\n                            >\n                              <option value=\"pending\">Pending</option>\n                              <option value=\"completed\">Completed</option>\n                              <option value=\"notApplicable\">\n                                Not Applicable\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Delivery of report\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"delivery_report\"\n                            >\n                              <option value=\"pending\">Pending</option>\n                              <option value=\"completed\">Completed</option>\n                              <option value=\"notApplicable\">\n                                Not Applicable\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Complete\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"other_stage\"\n                            >\n                              <option value=\"pending\">Pending</option>\n                              <option value=\"completed\">Completed</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <br />\n                      <div class=\"form-group\">\n                        <button type=\"submit\" class=\"btn btn-primary\">\n                          Submit\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                )}\n              </>\n            ))}\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddAssingmentStages;\n","/var/www/html/Mazars_Pannel/src/pages/TL/QueryAssingment/QueryAssingment.js",["929","930","931","932","933","934","935","936","937"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\n\nfunction QueryAssingment() {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const { id } = useParams();\n  const history = useHistory();\n\n  const [taxProfessionDisplay, setTaxProfessionDisplay] = useState([]);\n  const [taxID, setTaxID] = useState(null);\n  const [teamName, setTeamName] = useState('');\n\n  const [hideQuery, setHideQuery] = useState({\n    name: \"\",\n    timeline: \"\",\n    date_allocation: \"\",\n    expdeliverydate: \"\",\n  });\n\n  const [query, setQuery] = useState(true);\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const tpkey = window.localStorage.getItem(\"tpkey\");\n\n  const [queryData, setQuerData] = useState({\n    queryNo: \"\",\n    timelines: \"\",\n    custId: \"\",\n    expect_dd: \"\",\n  });\n\n  const { queryNo, timelines, custId, expect_dd } = queryData;\n\n  useEffect(() => {\n    getTaxProfession();\n    getQueryData();\n  }, []);\n\n  const getTaxProfession = () => {\n    axios\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${JSON.parse(userId)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTaxProfessionDisplay(res.data.result);\n        }\n      });\n  };\n\n  const getQueryData = () => {\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setQuerData({\n          queryNo: res.data.result[0].assign_no,\n          timelines: res.data.result[0].Timelines,\n          custId: res.data.result[0].customer_id,\n          expect_dd: res.data.result[0].Exp_Delivery_Date,\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getQuery();\n  }, [queryNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/TlCheckIfAssigned?assignno=${queryNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setQuery(false);\n          // setHideQuery(res.data.meta);\n          setHideQuery({\n            name: res.data.meta[0].name,\n            timeline: res.data.meta[0].timeline,\n            date_allocation: res.data.meta[0].date_allocation,\n            expdeliverydate: res.data.meta[0].expdeliverydate,\n          });\n        }\n      });\n  };\n\n  const handleChange= (e) =>{\n    console.log(\"val-\",e.target.value);\n    setTaxID(e.target.value)\n    var value = taxProfessionDisplay.filter(function(item) {\n      return item.id == e.target.value\n    })\n    console.log(value[0]);\n    setTeamName(value[0].name)\n  }\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    var expdeliverydate = value.p_expdeldate.replace(\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\n      \"$3-$1-$2\"\n    );\n\n    let formData = new FormData();\n    formData.append(\"who\", taxID);\n    formData.append(\"id\", id);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"type\", \"tl\");\n    formData.append(\"types\", \"tp\");\n    formData.append(\"name\", teamName);\n    formData.append(\"timeline\", value.p_timelines);\n    formData.append(\"expdeliverydate\", expdeliverydate);\n    formData.append(\"assignNo\", queryNo);\n    formData.append(\"customer_id\", custId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AddQueryAssignment`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"assigned  !\");\n          getQuery();\n          reset();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\">\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\">\n              <div style={{ textAlign: \"center\" }}>\n                <h2>Query Allocation</h2>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <div class=\"row mt-3\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12\">\n              <div class=\"col-md-12\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <table class=\"table\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Query No.</th>\n                        <th scope=\"col\">Tax Professional</th>\n                        <th scope=\"col\">Expected Timeline</th>\n                        <th scope=\"col\">Exp. Delivery Date</th>\n                        <th scope=\"col\">Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {query ? (\n                        <tr>\n                          <th scope=\"row\">{queryNo}</th>\n                          <td>\n                            <select\n                              class=\"form-control\"\n                              name=\"p_taxprof\"\n                              ref={register}\n                              onChange={(e)=> handleChange(e)}\n                            >\n                              <option value=\"\">--select--</option>\n                              {taxProfessionDisplay.map((p, index) => (\n                                <option key={index} value={p.id}>\n                                  {p.name}\n                                </option>\n                              ))}\n                            </select>\n                          </td>\n\n                          <td>\n                            <input\n                              type=\"text\"\n                              ref={register}\n                              name=\"p_timelines\"\n                              value={timelines}\n                              class=\"form-control\"\n                            />\n                          </td>\n                          <td>\n                            <input\n                              type=\"text\"\n                              ref={register}\n                              name=\"p_expdeldate\"\n                              class=\"form-control\"\n                              value={expect_dd}\n                            />\n                          </td>\n\n                          <td>\n                            <button type=\"submit\" class=\"btn btn-success\">\n                              Assign\n                            </button>\n                          </td>\n                        </tr>\n                      ) : (\n                        <tr>\n                          <th scope=\"row\">{queryNo}</th>\n                          <td>\n                            <select class=\"form-control w-75 p-0\" disabled>\n                              <option>{hideQuery.name}</option>\n                            </select>\n                          </td>\n\n                          <td>\n                            <input\n                              type=\"text\"\n                              ref={register}\n                              name=\"p_timelines\"\n                              value={hideQuery.timeline}\n                              disabled\n                              class=\"form-control\"\n                            />\n                          </td>\n                          <td>\n                            <input\n                              type=\"date\"\n                              ref={register}\n                              name=\"p_expdeldate\"\n                              value={hideQuery.expdeliverydate}\n                              disabled\n                              class=\"form-control\"\n                            />\n                          </td>\n\n                          <td>\n                            <button class=\"btn btn-success\" disabled>\n                              Assigned\n                            </button>\n                          </td>\n                        </tr>\n                      )}\n                    </tbody>\n                  </table>\n                </form>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default QueryAssingment;\n\n// var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n","/var/www/html/Mazars_Pannel/src/pages/TL/AddNew/AddNew.js",["938","939","940"],"import React from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import './index.css'\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\"; \nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\n\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required name\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_phone: yup\n//   .string()\n//   .required(\"required phone no\")\n//   .matches(/^[0-9]+$/, \"Must be only digits\")\n//   .min(10, \"Must be exactly 10 digits\")\n//   .max(20, \"max 20 digits\"),\n// });\n\n\n\nfunction AddNew() {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"type\", \"tp\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/AddTaxProfessional`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);     \n        if (response.data.code === 1) {\n          alert.success(\"TP created  !\");\n          reset();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n\n  };\n\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"text-center\">\n            <h3>Add New Tax Professionals</h3>\n          </div>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\n          <div>\n          <form onSubmit={handleSubmit(onSubmit)}>   \n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Name</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_name\"\n                      ref={register}\n                    />\n                   \n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Email</label>\n                    <input\n                      type=\"email\"\n                      class=\"form-control\"\n                      name=\"p_email\"\n                    ref={register}\n                    />\n                    \n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Phone Number</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_phone\"\n                      ref={register}\n                    />\n                    \n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default AddNew;\n","/var/www/html/Mazars_Pannel/src/pages/TL/Proposal/Proposal.js",["941","942","943","944"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\n\nfunction Proposal() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [proposal, setProposal] = useState([]);\n  const [count, setCount] = useState(\"\");\n\n  useEffect(() => {\n    getProposalList();\n  }, []);\n\n  const getProposalList = () => {\n    axios\n      .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setProposal(res.data.result);\n          setCount(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      dataField: \"query_date\",\n      text: \"Date\",\n      sort: true,\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.query_date);\n        var oldDate = row.query_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {row.status == \"Cust Accepted\" || row.status == \"Pending\" ? (\n              <Link to={`/teamleader/edit-proposal/${row.id}`}>\n                <i\n                  className=\"fa fa-edit\"\n                  style={{\n                    fontSize: 18,\n                    cursor: \"pointer\",\n                    marginLeft: \"8px\",\n                    color: \"green\",\n                  }}\n                ></i>\n              </Link>\n            ) : row.status == \"Accepted\" ? (\n              <Link to={`/teamleader/sendproposal/${row.id}`}>\n                <i\n                  class=\"fa fa-mail-forward\"\n                  style={{\n                    fontSize: 14,\n                    cursor: \"pointer\",\n                    marginLeft: \"8px\",\n                  }}\n                ></i>\n              </Link>\n            ) : null}\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"9\">\n              <CardTitle tag=\"h4\">List of Proposals ({count})</CardTitle>\n            </Col>\n            <Col md=\"3\"></Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <TeamFilter\n            setData={setProposal}\n            getData={getProposalList}\n            proposal=\"proposal\"\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={proposal}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Proposal;\n","/var/www/html/Mazars_Pannel/src/pages/TL/EditTP/EditTP.js",["945","946"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useParams } from \"react-router-dom\";\n\n\nfunction EditTP() {\n  const { id } = useParams();\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n  });\n  const { name, email, phone } = user;\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tp/getTaxProfessional?id=${id}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setUser({\n            name: res.data.result[0].name,\n            email: res.data.result[0].email,\n            phone: res.data.result[0].phone,\n          });\n        }\n      });\n    };\n    getTeamLeader();\n  }, [id]);\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"id\", JSON.parse(userid));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/updateTP`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"TL updated  !\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"text-center\">\n            <h3>Edit Tax Professional</h3>\n          </div>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Name</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_name\"\n                      defaultValue={name}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Email</label>\n                    <input\n                      type=\"email\"\n                      class=\"form-control\"\n                      name=\"p_email\"\n                      defaultValue={email}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Phone Number</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_phone\"\n                      defaultValue={phone}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default EditTP;\n","/var/www/html/Mazars_Pannel/src/pages/TL/QueriesRecevied/QueriesRecevied.js",["947"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams } from \"react-router-dom\";\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\n\nfunction QueriesRecevied() {\n  const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tlname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/customers/getQueryDetails?id=${id}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setPaymentDetails(res.data.payment_detail);\n          setAssingmentNo(res.data.result[0].assign_no);\n\n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n\n          console.log(\"purposeItem-\", typeof purposeItem);\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            var myYear = JSON.parse(assementItem);\n            setPurpose(myPurpose);\n            setYear(myYear);\n          } catch (e) {\n            return false;\n          }\n\n          if (res.data.proposal_queries.length > 0) {\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              misc2: res.data.proposal_queries[0].misc2,\n            });\n          }\n\n          if (res.data.assignment.length > 0) {\n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n          if (res.data.history_queries.length > 0) {\n            setDisplayHistory({\n              tlname: res.data.history_queries[0].tname,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n          }\n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n        }\n      });\n    };\n    getQuery();\n    getSubmittedAssingment();\n  }, [assingNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setDisplayQuery(res.data.result);\n        }\n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"schedule\">\n            <h3>Query Detail</h3>\n          </div>\n        </div>\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          {submitData.map((p, index) => (\n            <QueryDetails\n              p={p}\n              key={index}\n              diaplaySpecific={diaplaySpecific}\n              diaplayProposal={diaplayProposal}\n              diaplayHistory={diaplayHistory}\n              diaplayAssignment={diaplayAssignment}\n              displayQuery={displayQuery}\n              getQuery={getQuery}\n              assingNo={assingNo}\n              queryDocs={queryDocs}\n              paymentDetails={paymentDetails}\n              purpose={purpose}\n              year={year}\n            />\n          ))}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n// useEffect(() => {\n//   const getQueryDetails = () => {\n//     axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n//       console.log(res);\n//       if (res.data.code === 1) {\n//         setSubmitData(res.data.result);\n//         setDisplaySpecific(res.data.additional_queries);\n//         setAssingmentNo(res.data.result[0].assign_no);\n//       }\n//     });\n//   };\n\n//   getQueryDetails();\n//   getAdditionalQuery();\n// }, [assingNo]);\n\n//   <Card>\n//   <CardHeader>\n//     <Row>\n//       <Col md=\"4\">\n//         <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n//           <i class=\"fas fa-arrow-left mr-2\"></i>\n//           Go Back\n//         </button>\n//       </Col>\n//       <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n//         <p style={{ fontSize: \"20px\" }}>Query Details</p>\n//       </Col>\n//       <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n//       </Col>\n//     </Row>\n//   </CardHeader>\n//   <CardBody>\n//     {submitData.map((p, i) => (\n//       <div class=\"card-body\">\n//         <table class=\"table table-bordered\">\n//           <thead>\n//             <tr>\n//               <th scope=\"col\">Titles</th>\n//               <th scope=\"col\">Data</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//           <tr>\n//               <th scope=\"row\">Query No</th>\n//               <td>{p.assign_no}</td>\n//             </tr>\n//           <tr>\n//               <th scope=\"row\">Query Status</th>\n//               <td>{p.status}</td>\n//             </tr>\n//             <tr>\n//               <th scope=\"row\">Facts of the case</th>\n//               <td>{p.fact_case}</td>\n//             </tr>\n\n//             <tr>\n//               <th scope=\"row\">Purpose for which Opinion is sought</th>\n//               <td colspan=\"1\">{p.purpose_opinion}</td>\n//             </tr>\n//             <tr>\n//               <th scope=\"row\">\n//                 Timelines within which Opinion is Required\n//               </th>\n//               <td colspan=\"1\">{p.Timelines}</td>\n//             </tr>\n//             <tr>\n//               <th scope=\"row\">specific questions</th>\n//               <td colspan=\"1\">\n//                 {diaplaySpecific.map((p, i) => (\n//                   <p>{p.text}</p>\n//                 ))}\n//               </td>\n//             </tr>\n\n//             <tr>\n//               <th scope=\"row\">Documents</th>\n//               <td>\n//                 {p.upload_doc_1 == null ? (\n//                   \"\"\n//                 ) : (\n//                   <p>\n//                     <a\n//                       href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\n//                     >\n//                       <i class=\"fa fa-photo\"></i>\n//                     </a>\n//                   </p>\n//                 )}\n\n//                 {p.upload_doc_2 == null ? (\n//                   \"\"\n//                 ) : (\n//                   <p>\n//                     <a\n//                       href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\n//                     >\n//                       <i class=\"fa fa-photo\"></i>\n//                     </a>\n//                   </p>\n//                 )}\n\n//                 {p.upload_doc_3 == null ? (\n//                   \"\"\n//                 ) : (\n//                   <p>\n//                     <a\n//                       href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\n//                     >\n//                       <i class=\"fa fa-photo\"></i>\n//                     </a>\n//                   </p>\n//                 )}\n//               </td>\n//             </tr>\n//             <tr>\n//               <th scope=\"row\">Format in which Opinion is required</th>\n//               <td colspan=\"1\">\n//                 <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n//                 <p>\n//                   {p.softcopy_digitally_assigned === \"1\" &&\n//                     \"SoftCopy- Digitally Signed\"}\n//                 </p>\n\n//                 <p>\n//                   {p.printout_physically_assigned === \"1\" &&\n//                     \"Printout- Physically Signed\"}\n//                 </p>\n//               </td>\n//             </tr>\n\n//           </tbody>\n//         </table>\n\n//         <table class=\"table table-bordered\">\n//           {displayQuery.length > 0 && (\n//             <thead>\n//               <tr>\n//                 <th scope=\"col\" style={{ width: \"33.3%\" }}>\n//                   Additional Queries\n//                 </th>\n//                 <th scope=\"col\">Date Submission</th>\n//                 <th scope=\"col\">Documents</th>\n//               </tr>\n//             </thead>\n//           )}\n\n//           {displayQuery.map((p, i) => (\n//             <tbody>\n//               <tr key={i}>\n//                 <td>{p.additional_queries}</td>\n//                 <td>{ChangeFormateDate(p.created)}</td>\n//                 <td>\n//                     {p.upload_doc == \"\" ? (\n//                       \"\"\n//                     ) : (\n//                       <p>\n//                         <a\n//                           href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc}`}\n//                         >\n//                           <i class=\"fa fa-photo\"></i>\n//                         </a>\n//                       </p>\n//                     )}\n//                   </td>\n//               </tr>\n//             </tbody>\n//           ))}\n//         </table>\n//       </div>\n//     ))}\n//   </CardBody>\n// </Card>\n","/var/www/html/Mazars_Pannel/src/components/Footer/Footer.js",[],"/var/www/html/Mazars_Pannel/src/components/Header/Header.js",[],"/var/www/html/Mazars_Pannel/src/config/config.js",[],"/var/www/html/Mazars_Pannel/src/components/Admin-Header/Admin-Header.js",["948","949"],"import React from \"react\";\nimport \"../../assets/css/style.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport NavWrapper from \"./NavWrapper\";\n\nfunction AdminHeader({ custUserId, adminUserId, TLuserId, TPuserId }) {\n  let history = useHistory();\n  // const userId = window.localStorage.getItem(\"userid\");\n\n  const custLogout = () => {\n    localStorage.removeItem(\"userid\");\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"uid\");\n    localStorage.removeItem(\"category\");\n    history.push(\"/customer/signin\");\n  };\n\n  const adminLogout = () => {\n    localStorage.removeItem(\"adminkey\");\n    localStorage.removeItem(\"count_PFA\");\n    history.push(\"/admin/login\");\n  };\n\n  const tlLogout = () => {\n    localStorage.removeItem(\"tlkey\");\n    history.push(\"/teamleader/login\");\n  };\n\n  const tpLogout = () => {\n    localStorage.removeItem(\"tpkey\");\n    history.push(\"/taxprofessional/login\");\n  };\n\n  const nm = window.localStorage.getItem(\"name\");\n  console.log(name);\n  var name = JSON.parse(nm);\n  // const nm = name.split(\"\")[1].toUpperCase();\n  // var a = res[1].toUpperCase()\n  // console.log(nm)\n\n  return (\n    <div>\n      <nav\n        class=\"header-navbar navbar-expand-md navbar navbar-with-menu navbar-without-dd-arrow fixed-top navbar-semi-light\"\n        sty\n      >\n        {custUserId && (\n          <NavWrapper color=\"#5E96AE\" logout={custLogout} \n          cust=\"cust\"\n          name=\"Customer\"\n           />\n        )}\n\n        {adminUserId && (\n          <NavWrapper color=\"#262d47\" logout={adminLogout}\n           name=\"Admin\"\n            />\n        )}\n\n        {TLuserId && <NavWrapper color=\"#BC85A3\" logout={tlLogout} \n        name=\"Team Leader\" \n        />}\n\n        {TPuserId && <NavWrapper color=\"#9799BA\" logout={tpLogout} \n        tpdashboard=\"tpdashboard\"\n        name=\"Tax Professional\" \n        />}\n      </nav>\n    </div>\n  );\n}\n\nexport default AdminHeader;\n\n// {adminUserId && (\n//   <ul class=\"nav navbar-nav float-right\">\n//     <li class=\"dropdown dropdown-user nav-item\">\n//       <a\n//         class=\"dropdown-toggle nav-link dropdown-user-link\"\n//         href=\"#\"\n//         data-toggle=\"dropdown\"\n//         aria-expanded=\"false\"\n//       >\n//         <span class=\"pr-2\">Admin</span>\n//         <span class=\"avatar avatar-online\">\n//           <img\n//             src=\"https://cdn1.vectorstock.com/i/1000x1000/40/30/user-glyph-icon-web-and-mobile-admin-sign-vector-18444030.jpg\"\n//             alt=\"avatar\"\n//           />\n//           <i style={{ paddingLeft: \"6px\" }}></i>\n//         </span>\n//       </a>\n\n//       <div class=\"dropdown-menu dropdown-menu-right\">\n//         <div class=\"arrow_box_right\">\n//           <p\n//             class=\"dropdown-item\"\n//             onClick={custLogout}\n//             style={{ cursor: \"pointer\" }}\n//           >\n//             <i class=\"fa fa-sign-out\"></i>\n//             Logout\n//           </p>\n//         </div>\n//       </div>\n//     </li>\n//   </ul>\n// )}\n","/var/www/html/Mazars_Pannel/src/components/Admin-Sidebar/Admin-Sidebar.js",["950","951"],"import { NavLink } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { Badge } from \"reactstrap\";\n\nfunction Sidebar({ adminDashboard, custDashboard, TLDashboard, TPDashboard }) {\n  const [toggleState, setToggleState] = useState(false);\n\n  const toggleTab = (index) => {\n    console.log(index);\n    setToggleState(index);\n  };\n\n  return (\n    <>\n      <div\n        class=\"main-menu menu-fixed menu-light menu-accordion  menu-shadow \"\n        data-scroll-to-active=\"true\"\n        data-img=\"https://themeselection.com/demo/ chameleon-free-bootstrap-admin-template/theme-assets/images/backgrounds/02.jpg\"\n      >\n        <div class=\"navbar-header\">\n          <ul class=\"nav navbar-nav flex-row\">\n            <li class=\"nav-item mr-auto\">\n              <a class=\"navbar-brand\" href=\"questionnaire.html\">\n                <img\n                  class=\"brand-logo\"\n                  alt=\"Chameleon admin logo\"\n                  src=\"https://themeselection.com/demo/chameleon-free-bootstrap-admin-template/theme-assets/images/logo/logo.png\"\n                />\n                <h3 class=\"brand-text\">Mazars</h3>\n              </a>\n            </li>\n            <li class=\"nav-item d-md-none\">\n              <a class=\"nav-link close-navbar\">\n                <i class=\"fa fa-times\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"main-menu-content\">\n          {custDashboard && (\n            <ul\n              class=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li class=\"nav-item active\">\n                <NavLink to={\"/customer/dashboard\"}>\n                  <i class=\"fa fa-home\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class={toggleState && \"\"} onClick={() => toggleTab(\"active\")}>\n                <NavLink to={\"/customer/queries\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/proposal\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Proposal\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/assignment\"}>\n                  <i class=\"fa fa-file\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Assignments\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/schedule\"}>\n                  <i class=\"fa fa-rss-square\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    schedule\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/feedback\"}>\n                  <i class=\"fa fa-rss-square\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Feedback\n                  </span>\n                </NavLink>\n              </li>\n            </ul>\n          )}\n\n          {adminDashboard && (\n            <ul\n              class=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li class=\"active nav-item\">\n                <NavLink to={\"/admin/dashboard\"}>\n                  <i class=\"fa fa-home\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/queriestab\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/proposal\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Proposals\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/paymentstatus\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Payment Status\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/assignment\"}>\n                  <i class=\"fa fa-file\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Assignments\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/teamleaders\"}>\n                  <i class=\"fa fa-users\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Team Leaders\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/taxprofessionals\"}>\n                  <i class=\"fa fa-users\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Tax Professionals\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/feedback\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Feedback\n                  </span>\n                </NavLink>\n              </li>\n            </ul>\n          )}\n\n          {TLDashboard && (\n            <ul\n              class=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li class=\"active nav-item\">\n                <NavLink to={\"/teamleader/dashboard\"}>\n                  <i class=\"fa fa-home\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/queriestab\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/proposal\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Proposal\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/paymentstatus\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Payment Status\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/assignment\"}>\n                  <i class=\"fa fa-file\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Assignments\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/schedule\"}>\n                  <i class=\"fa fa-rss-square\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    schedule\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/addteamprof\"}>\n                  <i class=\"fa fa-users\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    View T.P\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/feedback\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Feedback\n                  </span>\n                </NavLink>\n              </li>\n\n              {/* <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/queriestab2\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Queries test\n                  </span>\n                </NavLink>\n              </li> */}\n            </ul>\n          )}\n\n          {TPDashboard && (\n            <ul\n              class=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li class=\"nav-item\">\n                <NavLink to={\"/taxprofessional/dashboard\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/taxprofessional/queriestab\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/taxprofessional/proposal\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Proposal\n                  </span>\n                </NavLink>\n              </li>\n            </ul>\n          )}\n        </div>\n        <div class=\"navigation-background\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default Sidebar;\n","/var/www/html/Mazars_Pannel/src/components/CategorySelect/CategorySelect.js",["952","953"],"import React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/bootstrap.min.css\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport mazars from \"../../assets/images/mazars-logo.png\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\n\nfunction CategorySelect({ addfreshbtn, startbtn }) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => {\n    if (store2) {\n      localStorage.setItem(\"category\", JSON.stringify(store2));\n    }\n    setModal(!modal);\n  };\n\n  const toggle2 = () => {\n    if (store2) {\n      localStorage.setItem(\"category\", JSON.stringify(store2));\n    }\n  };\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  \n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n  };\n\n  return (\n    <>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"15px\" }}\n      >\n        <div class=\"col-sm-3\" style={{ marginTop: \"38px\" }}>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-group\">\n              <label>Category</label>\n              <select\n                className=\"form-control\"\n                name=\"p_tax\"\n                ref={register}\n                onChange={(e) => setStore(e.target.value)}\n              >\n                <option value=\"\">--Select Category--</option>\n                {tax.map((p, index) => (\n                  <option key={index} value={p.id}>\n                    {p.details}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div class=\"form-group\">\n              <label>Sub Category</label>\n              <select\n                className=\"form-select form-control\"\n                name=\"p_tax2\"\n                ref={register}\n                onChange={(e) => setStore2(e.target.value)}\n              >\n                <option value=\"\">--Select Sub-Category--</option>\n                {tax2.map((p, index) => (\n                  <option key={index} value={p.id}>\n                    {p.details}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div class=\"form-group\">\n              {startbtn && (\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary  btn-block\"\n                  onClick={toggle}\n                >\n                  Submit\n                </button>\n              )}\n\n              {addfreshbtn && (\n                <Link\n                  to=\"/customer/addfresh\"\n                  type=\"submit\"\n                  class=\"btn btn-primary  btn-block\"\n                  onClick={toggle2}\n                >\n                  Submit\n                </Link>\n              )}\n            </div>\n          </form>\n\n          <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>\n              <img\n                src={mazars}\n                style={{ height: \"auto\", width: \"25%\" }}\n                alt=\"\"\n              />\n            </ModalHeader>\n\n            <ModalBody>\n              <div class=\"modal-body\">\n                <h4>Would you like to post a Query ?</h4>\n              </div>\n            </ModalBody>\n\n            <div class=\"modal-footer m-auto\">\n              <Link to=\"/customer/register-yourself\" class=\"btn btn-primary\">\n                Yes\n              </Link>\n              <Link to=\"/customer/signin\" class=\"btn btn-secondary\">\n                No\n              </Link>\n            </div>\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CategorySelect;\n","/var/www/html/Mazars_Pannel/src/pages/TL/CompleteData/CompleteData.js",["954","955","956","957","958","959","960","961","962","963","964","965","966","967","968"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\n\nfunction CompleteData({ CountComplete }) {\n  const [completeData, setCompleteData] = useState([]);\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n\n  useEffect(() => {\n    getCompleteAssingment();\n  }, []);\n\n  const getCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/getCompleteQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          CountComplete(res.data.result.length);\n          setCompleteData(res.data.result);\n        }\n      });\n  };\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.query_date);\n        var updatedate = row.query_date.split(\" \")[0];\n        console.log(updatedate);\n        if (updatedate == null) {\n          return null;\n        }\n        return updatedate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.Exp_Delivery_Date);\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"160px\" };\n      },\n      formatter: function AssignmentStage(cell, row) {\n        console.log(\"status - \", row);\n        return (\n          <>\n            <div style={{ fontSize: \"9px\" ,fontWeight:\"bold\" }}>\n              <tr>\n                <td>Client Discussion</td>\n                <td>{row.client_discussion}</td>\n              </tr>\n              <tr>\n                <td>Draft report</td>\n                <td>{row.draft_report}</td>\n              </tr>\n              <tr>\n                <td>Final Discussion</td>\n                <td>{row.final_discussion}</td>\n              </tr>\n              <tr>\n                <td> Delivery of report</td>\n                <td>{row.delivery_report}</td>\n              </tr>\n              <tr>\n                <td>Complete</td>\n                <td>{row.other_stage}</td>\n              </tr>\n            </div>\n          </>\n        );\n      },\n    },\n   \n  ];\n\n  // change date format\n  function ChangeFormateDate(oldDate) {\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  //search filter\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    getCompleteAssingment();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getCompleteAssingment();\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetData ..\");\n    setSelectedData([]);\n    getCompleteAssingment();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}//tl/getCompleteQues?id=${JSON.parse(\n          userid\n        )}&cat_id=${selectedData}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setCompleteData(res.data.result);\n          }\n        }\n      });\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n        <TeamFilter\n            setData={setCompleteData}\n            getData={getCompleteAssingment}\n            completeAssignment=\"completeAssignment\"\n          />\n          {/* <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-sm-9 d-flex\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-primary mb-2\">\n                    Search\n                  </button>\n                </form>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div> */}\n        </CardHeader>\n        <CardBody>\n        <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={completeData}\n            columns={columns}\n            rowIndex\n          />\n\n          {/* <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\">S.No</th>\n                <th scope=\"col\">Date</th>\n                <th scope=\"col\">Query No</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th scope=\"col\">Customer Name</th>\n\n                <th scope=\"col\">Delivery Date</th>\n                <th scope=\"col\">Assignment Stage</th>\n                <th scope=\"col\">Status</th>\n              </tr>\n            </thead>\n\n            {completeData.map((p, i) => (\n              <tbody>\n                <tr>\n                  <td>{i + 1}</td>\n                  <td>{ChangeFormateDate(p.query_date)}</td>\n                  <th>\n                    <Link to={`/teamleader/queries/${p.id}`}>\n                      {p.assign_no}\n                    </Link>\n                  </th>\n                  <td>{p.parent_id}</td>\n                  <td>{p.cat_name}</td>\n                  <td>{p.name}</td>\n                  <td>{ChangeFormateDate(p.Exp_Delivery_Date)}</td>\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>\n                      Client Discussion\n                    </span>\n                  </td>\n                  <td> {p.client_discussion}</td>\n                </tr>\n\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>Draft report </span>\n                  </td>\n                  <td> {p.draft_report}</td>\n                </tr>\n\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>Final Discussion</span>\n                  </td>\n                  <td> {p.final_discussion}</td>\n                </tr>\n\n                <tr>\n                  <td></td>\n                  <td></td>\n\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>\n                      Delivery of report\n                    </span>{\" \"}\n                  </td>\n                  <td>{p.delivery_report}</td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n                  <td></td>\n\n                  <td>\n                    <span style={{ fontWeight: \"bold\" }}>Complete</span>{\" \"}\n                  </td>\n                  <td>{p.other_stage}</td>\n                </tr>\n              </tbody>\n            ))}\n          </table> */}\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default CompleteData;\n","/var/www/html/Mazars_Pannel/src/pages/TL/InCompleteData/InCompleteData.js",["969","970","971","972","973","974","975","976","977","978","979","980","981","982"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\n\nfunction InCompleteData({ CountIncomplete }) {\n  const [incompleteData, setInCompleteData] = useState([]);\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n\n  useEffect(() => {\n    getInCompleteAssingment();\n  }, []);\n\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          CountIncomplete(res.data.result.length);\n          setInCompleteData(res.data.result);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.query_date);\n        var oldDate = row.query_date.split(\" \")[0];\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.Exp_Delivery_Date);\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query Allocation\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n                color: \"green\",\n              }}\n            >\n              <Link to={`/teamleader/queryassing/${row.id}`}>\n                {row.tp_status == \"1\" ? (\n                  <div title=\"Assigned\">\n                    <i class=\"fa fa-share\" style={{ color: \"green\" }}></i>\n                  </div>\n                ) : (\n                  <div title=\"Assign to\">\n                    <i class=\"fa fa-share\"></i>\n                  </div>\n                )}\n              </Link>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TeamFilter\n            setData={setInCompleteData}\n            getData={getInCompleteAssingment}\n            inCompleteQuery=\"inCompleteQuery\"\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={incompleteData}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default InCompleteData;\n","/var/www/html/Mazars_Pannel/src/pages/TL/PendingForAcceptence/PendingForAcceptence.js",["983","984","985","986","987","988","989","990","991","992","993","994","995","996","997"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\n\nfunction PendingForAcceptence({ CountPendingForAcceptence, updateTab }) {\n  const alert = useAlert();\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [pendingData, setPendingData] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n\n  useEffect(() => {\n    getPendingforAcceptance();\n  }, []);\n\n  const getPendingforAcceptance = () => {\n    axios\n      .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setPendingData(res.data.result);\n          CountPendingForAcceptence(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.query_created);\n        var oldDate = row.query_created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.Exp_Delivery_Date);\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Accept / Reject\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n                color: \"#6967ce\",\n                cursor: \"pointer\",\n              }}\n              id=\"div1\"\n            >\n              <div\n                id=\"accept\"\n                title=\"Accept Assignment\"\n                onClick={() => acceptHandler(row)}\n              >\n                <i\n                  class=\"fa fa-check\"\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                ></i>\n              </div>\n              <div\n                id=\"reject\"\n                title=\"Reject Assignment\"\n                onClick={() => rejectHandler(row)}\n              >\n                <i\n                  class=\"fa fa-times\"\n                  style={{ color: \"red\", fontSize: \"16px\" }}\n                ></i>\n              </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  const acceptHandler = (key) => {\n    console.log(\"acceptHandler\", key);\n\n    let formData = new FormData();\n    formData.append(\"set\", 1);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"response-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Query accepted !\");\n          getPendingforAcceptance();\n          updateTab(1);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const rejectHandler = (key) => {\n    console.log(\"rejectHandler\", key);\n\n    let formData = new FormData();\n    formData.append(\"set\", 0);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Query rejected !\");\n          getPendingforAcceptance();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TeamFilter\n            setData={setPendingData}\n            getData={getPendingforAcceptance}\n            pendingForAcceptence=\"pendingForAcceptence\"\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={pendingData}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingForAcceptence;\n\n{\n  /* <button onClick={() => update(1)}>go to 1st tab</button> */\n}\n// http://13.232.121.233/mazarapi/v1/tl/AcceptRejectQuery\n\n// axios.post(`${baseUrl}/tl/AcceptRejectQuery`, formData)\n// .then(res => {\n//   console.log(res);\n//   if (res.data.code === 1) {\n//     alert.success(\"Query rejected!\");\n//     getPendingforAcceptance();\n//   }\n// });\n\n// set: 1\n// tlid: 128\n// assignment_id: 11\n// allocation_id: 36\n","/var/www/html/Mazars_Pannel/src/components/PendingForNonPayment/PendingForNonPayment.js",["998","999","1000"],"/var/www/html/Mazars_Pannel/src/components/AllQueriesData/AllQueriesData.js",["1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\n// import Filter from \"../Search-Filter/SearchFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\n\nfunction AllQueriesData({ CountAllQuery }) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n\n  const [allQueriesData, setAllQueriesData] = useState([]);\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n\n  useEffect(() => {\n    getAllQueriesData();\n  }, []);\n\n  const getAllQueriesData = () => {\n    axios.get(`${baseUrl}/admin/getAllQueries`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setAllQueriesData(res.data.result);\n        CountAllQuery(res.data.result.length);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getCategory();\n  }, []);\n\n  const getCategory = () => {\n    axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setTax(res.data.result);\n      }\n    });\n  };\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n      // dataFormat: function (cell, row, enumObject, index) {\n      //   return <div>{index + 1}</div>;\n      // },\n      formatter: (cellContent, row, rowIndex, index) => {\n        console.log(\"rowIndex : \", index);\n        return <div>{rowIndex + 1}</div>;\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <Link to={`/admin/queries/${row.id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n  ];\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getAllQueriesData();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"store2 :\", store2);\n\n    axios\n      .get(\n        `${baseUrl}/admin/getAllQueries?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAllQueriesData(res.data.result);\n          }\n        }\n      });\n  };\n\n \n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n        <AdminFilter\n            setData={setAllQueriesData}\n            getData={getAllQueriesData}\n            allQueries=\"allQueries\"\n          />\n          {/* <div className=\"row\">\n            <div className=\"col-sm-12 d-flex\">\n              <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-inline\">\n                    <div class=\"form-group mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_tax\"\n                        ref={register}\n                        style={{ height: \"35px\" }}\n                        onChange={(e) => setStore(e.target.value)}\n                      >\n                        <option value=\"\">--Select Category--</option>\n                        {tax.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_tax2\"\n                        ref={register}\n                        style={{ height: \"35px\" }}\n                        onChange={(e) => setStore2(e.target.value)}\n                      >\n                        <option value=\"\">--Select Sub-Category--</option>\n                        {tax2.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <label className=\"form-select form-control\">From</label>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <input\n                        type=\"date\"\n                        name=\"p_dateFrom\"\n                        className=\"form-select form-control\"\n                        ref={register}\n                      />\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <label className=\"form-select form-control\">To</label>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <input\n                        type=\"date\"\n                        name=\"p_dateTo\"\n                        className=\"form-select form-control\"\n                        ref={register}\n                      />\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_status\"\n                        ref={register}\n                        style={{ height: \"33px\" }}\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"1\">Progress</option>\n                        <option value=\"3\">Complete</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                    Search\n                  </button>\n\n                  <Reset />\n                </form>\n              </div>\n            </div>\n          </div> */}\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={allQueriesData}\n            columns={columns}\n            rowIndex\n            wrapperClasses=\"table-responsive\"\n            // classes=\"table-responsive\"\n            // headerClasses=\"header-class\"\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AllQueriesData;\n\n{\n  /* <Select\nmode=\"multiple\"\nstyle={{ width: \"100%\" }}\nplaceholder=\"Select Category\"\ndefaultValue={[]}\nonChange={handleChange}\noptionLabelProp=\"label\"\nvalue={selectedData}\nallowClear\n>\n<OptGroup label=\"Direct Tax\">\n  <Option value=\"3\" label=\"Compilance\">\n    <div className=\"demo-option-label-item\">Compliance</div>\n  </Option>\n  <Option value=\"4\" label=\"Assessment\">\n    <div className=\"demo-option-label-item\">Assessment</div>\n  </Option>\n  <Option value=\"5\" label=\"Appeals\">\n    <div className=\"demo-option-label-item\">Appeals</div>\n  </Option>\n  <Option value=\"6\" label=\"Advisory/opinion\">\n    <div className=\"demo-option-label-item\">\n      Advisory/opinion\n    </div>\n  </Option>\n  <Option value=\"7\" label=\"Transfer Pricing\">\n    <div className=\"demo-option-label-item\">\n      Transfer Pricing\n    </div>\n  </Option>\n  <Option value=\"8\" label=\"Others\">\n    <div className=\"demo-option-label-item\">Others</div>\n  </Option>\n</OptGroup>\n\n<OptGroup label=\"Indirect Tax\">\n  <Option value=\"9\" label=\"Compilance\">\n    <div className=\"demo-option-label-item\">Compliance</div>\n  </Option>\n  <Option value=\"10\" label=\"Assessment\">\n    <div className=\"demo-option-label-item\">Assessment</div>\n  </Option>\n  <Option value=\"11\" label=\"Appeals\">\n    <div className=\"demo-option-label-item\">Appeals</div>\n  </Option>\n  <Option value=\"12\" label=\"Advisory/opinion\">\n    <div className=\"demo-option-label-item\">\n      Advisory/opinion\n    </div>\n  </Option>\n  <Option value=\"13\" label=\"Others\">\n    <div className=\"demo-option-label-item\">Others</div>\n  </Option>\n</OptGroup>\n</Select> */\n}\n\n{\n  /* <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th scope=\"col\">S.No.</th>\n                <th scope=\"col\">Date</th>\n                <th scope=\"col\">Query No</th>\n                <th scope=\"col\">Category</th>\n                <th scope=\"col\">Sub Category</th>\n                <th>Customer Name</th>\n                <th>status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {allQueriesData.length > 0 ? (\n                allQueriesData.map((p, i) => (\n                  <tr>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.created)}</td>\n                    <th>\n                      <Link to={`/admin/queries/${p.id}`}>{p.assign_no}</Link>\n                    </th>\n                    <td>{p.parent_id} </td>\n                    <td>{p.cat_name}</td>\n                    <td>{p.name}</td>\n                    <td>{p.status}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"7\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </Table> */\n}\n","/var/www/html/Mazars_Pannel/src/components/PendingForProposals/PendingForProposals.js",["1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\n\nfunction PendingForProposals({ CountPendingProposal }) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n\n  const [nonpendingData, setNonPendingData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n\n  const [history, setHistory] = useState([]);\n  const [modal, setModal] = useState(false);\n  const toggle = (key) => {\n    console.log(\"key\", key);\n    setModal(!modal);\n\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        setHistory(response.result);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    getPendingForProposals();\n  }, []);\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(\"\");\n  useEffect(() => {\n    getCategory();\n  }, []);\n\n  const getCategory = () => {\n    axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setTax(res.data.result);\n      }\n    });\n  };\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      sort: true,\n\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n    },\n\n    {\n      dataField: \"tname\",\n      text: \"TL name\",\n      sort: true,\n    },\n    {\n      text: \"History\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <button\n              type=\"button\"\n              class=\"btn btn-info btn-sm\"\n              onClick={() => toggle(row.id)}\n            >\n              History\n            </button>\n          </>\n        );\n      },\n    },\n  ];\n\n  const getPendingForProposals = () => {\n    axios.get(`${baseUrl}/admin/pendingProposal`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setNonPendingData(res.data.result);\n        CountPendingProposal(res.data.result.length);\n      }\n    });\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    // setSelectedData([]);\n    getPendingForProposals();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/admin/pendingProposal?category=${store2}&date1=${data.p_dateFrom}&date2=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setNonPendingData(res.data.result);\n          }\n        }\n      });\n  };\n\n  //change date format\n  function ChangeFormateDate(oldDate) {\n    console.log(\"date\", oldDate);\n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setNonPendingData}\n            getData={getPendingForProposals}\n            pendingForProposal=\"pendingForProposal\"\n          />\n          {/* <div className=\"row\">\n            <div className=\"col-sm-12 d-flex\">\n              <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-inline\">\n                    <div class=\"form-group mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_tax\"\n                        ref={register}\n                        style={{ height: \"35px\" }}\n                        onChange={(e) => setStore(e.target.value)}\n                      >\n                        <option value=\"\">--Select Category--</option>\n                        {tax.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_tax2\"\n                        ref={register}\n                        style={{ height: \"35px\" }}\n                        onChange={(e) => setStore2(e.target.value)}\n                      >\n                        <option value=\"\">--Select Sub-Category--</option>\n                        {tax2.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <label className=\"form-select form-control\">From</label>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <input\n                        type=\"date\"\n                        name=\"p_dateFrom\"\n                        className=\"form-select form-control\"\n                        ref={register}\n                      />\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <label className=\"form-select form-control\">To</label>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <input\n                        type=\"date\"\n                        name=\"p_dateTo\"\n                        className=\"form-select form-control\"\n                        ref={register}\n                      />\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_status\"\n                        ref={register}\n                        style={{ height: \"33px\" }}\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"1\">Pending</option>\n                        <option value=\"2\">Accepted</option>\n                        <option value=\"3\">Declined</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                    Search\n                  </button>\n\n                  <Reset />\n                </form>\n              </div>\n            </div>\n          </div> */}\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={nonpendingData}\n            columns={columns}\n            wrapperClasses=\"table-responsive\"\n          />\n\n          {/* <div>\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">S.No</th>\n                  <th scope=\"col\">Date</th>\n                  <th scope=\"col\">Query No</th>\n                  <th scope=\"col\">Category</th>\n                  <th scope=\"col\">Sub Category</th>\n                  <th>Customer Name</th>\n                  <th scope=\"col\">History</th>\n                </tr>\n              </thead>\n              {nonpendingData.map((p, i) => (\n                <tbody>\n                  <tr>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.created)}</td>\n                    <th scope=\"row\">\n                      <Link to={`/admin/queries/${p.id}`}>{p.assign_no}</Link>\n                    </th>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n                    <td>{p.name}</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-info btn-sm\"\n                        onClick={() => toggle(p.id)}\n                      >\n                        View\n                      </button>\n                    </td>\n                  </tr>\n                </tbody>\n              ))}\n            </table>\n          </div> */}\n\n          <Modal isOpen={modal} fade={false} toggle={toggle}>\n            <ModalHeader toggle={toggle}>History</ModalHeader>\n            <ModalBody>\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"row\">S.No</th>\n                    <th scope=\"row\">Name</th>\n                    <th scope=\"row\">Query No</th>\n                    <th scope=\"row\">Status</th>\n                    <th scope=\"row\">Date of Allocation</th>\n                  </tr>\n                </thead>\n\n                {history.length > 0\n                  ? history.map((p, i) => (\n                      <tbody>\n                        <tr>\n                          <td>{i + 1}</td>\n                          <td>{p.name}</td>\n                          <td>{p.assign_no}</td>\n                          <td>{p.status}</td>\n                          <td>{ChangeFormateDate(p.date_of_allocation)}</td>\n                        </tr>\n                      </tbody>\n                    ))\n                  : null}\n              </table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={toggle}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingForProposals;\n{\n  /* <td class=\"text-center\">\n                      <p style={{ color: \"green\" }}>\n                        Query accepted by {p.tname}\n                      </p>\n                    </td> */\n}\n","/var/www/html/Mazars_Pannel/src/components/PendingForAllocation/PendingForAllocation.js",["1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nfunction PendingAllocation({ CountPendingForAllocation }) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n\n  const [pendingData, setPendingData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [history, setHistory] = useState([]);\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = (key) => {\n    console.log(\"key\", key);\n    setModal(!modal);\n\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        setHistory(response.result);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    getPendingForAllocation();\n  }, []);\n\n  const getPendingForAllocation = () => {\n    axios.get(`${baseUrl}/admin/pendingAllocation`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        CountPendingForAllocation(res.data.result.length);\n        setPendingData(res.data.result);\n        // localStorage.setItem(\n        //   \"count_PFA\",\n        //   JSON.stringify(res.data.result.length)\n        // );\n      }\n    });\n  };\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n  useEffect(() => {\n    getCategory();\n  }, []);\n\n  const getCategory = () => {\n    axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setTax(res.data.result);\n      }\n    });\n  };\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/admin/queries/${row.id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Query Allocation\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {row.is_assigned === \"1\" ? (\n              <p style={{ color: \"green\", fontSize: \"10px\" }}>\n                Assign to {row.tname} on\n                <p>{row.allocation_time}</p>\n              </p>\n            ) : (\n              <div title=\"Assign to\">\n                <Link to={`/admin/queryassing/${row.id}`}>\n                  <i class=\"fa fa-share\"></i>\n                </Link>\n              </div>\n            )}\n          </>\n        );\n      },\n    },\n    {\n      text: \"History\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <button\n              type=\"button\"\n              class=\"btn btn-info btn-sm\"\n              onClick={() => toggle(row.id)}\n            >\n              History\n            </button>\n          </>\n        );\n      },\n    },\n  ];\n\n  //change date format\n  function ChangeFormateDate(oldDate) {\n    // console.log(\"date\", oldDate);\n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setPendingData}\n            getData={getPendingForAllocation}\n            pendingAlloation=\"pendingAlloation\"\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={pendingData}\n            columns={columns}\n            rowIndex\n          />\n          <Modal isOpen={modal} fade={false} toggle={toggle}>\n            <ModalHeader toggle={toggle}>History</ModalHeader>\n            <ModalBody>\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"row\">S.No</th>\n                    <th scope=\"row\">Name</th>\n                    <th scope=\"row\">Query No</th>\n                    <th scope=\"row\">Status</th>\n                    <th scope=\"row\">Date of Allocation</th>\n                  </tr>\n                </thead>\n\n                {history.length > 0\n                  ? history.map((p, i) => (\n                      <tbody>\n                        <tr>\n                          <td>{i + 1}</td>\n                          <td>{p.name}</td>\n                          <td>{p.assign_no}</td>\n                          <td>{p.status}</td>\n                          <td>{ChangeFormateDate(p.date_of_allocation)}</td>\n                        </tr>\n                      </tbody>\n                    ))\n                  : null}\n              </table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={toggle}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingAllocation;\n\n/* <td style={{ textAlign: \"center\" }}>\n                      {p.is_assigned === \"1\" && (\n                        <p style={{ color: \"green\" }}>\n                          <i class=\"fa fa-circle\" \n                          style={{fontSize:\"10px\" ,marginRight:\"4px\"}}>\n                            </i>\n                            {p.allocation_time}\n                          </p>\n                      )}\n\n                      {p.reject === \"3\" && (\n                        <p style={{ color: \"red\" }}>\n                          Query Rejected By {p.tname}\n                        </p>\n                      )}\n                    </td> */\n\n//   <Modal isOpen={addModal} toggle={addHandler} size=\"md\">\n//   <ModalHeader toggle={addHandler}>Show history</ModalHeader>\n//   <ModalBody>\n// <table class=\"table table-bordered\">\n//   <thead>\n//     <tr>\n//       <th scope=\"col\">Titles</th>\n//       <th scope=\"col\">Data</th>\n//     </tr>\n//   </thead>\n\n//   {history.length > 0\n//     ? history.map((p, i) => (\n//         <tbody>\n//           <tr>\n//             <th scope=\"row\">Name</th>\n//             <td>{p.name}</td>\n//           </tr>\n\n//           <tr>\n//             <th scope=\"row\">Date of Allocation</th>\n//             <td>{ChangeFormateDate(p.date_of_allocation)}</td>\n//           </tr>\n//           <tr>\n//             <th scope=\"row\">Query No</th>\n//             <td>{p.assign_no}</td>\n//           </tr>\n//           <tr>\n//             <th scope=\"row\">Status</th>\n//             <td>{p.status}</td>\n//           </tr>\n//         </tbody>\n//       ))\n//     : null}\n// </table>\n//   </ModalBody>\n// </Modal>\n","/var/www/html/Mazars_Pannel/src/pages/Admin/DeclinedProposal/DeclinedPropoal.js",["1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\n\nfunction DeclinedProposal({ declinedProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n  useEffect(() => {\n    getDeclinedProposal();\n  }, []);\n\n  const getDeclinedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?&status=6`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        declinedProposal(res.data.result.length);\n      }\n    });\n  };\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(\"\");\n\n  useEffect(() => {\n    getCategory();\n  }, []);\n\n  const getCategory = () => {\n    axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setTax(res.data.result);\n      }\n    });\n  };\n\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.DateofProposal);\n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_accept_date);\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"ProposedAmount\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n    },\n    {\n      text: \"Amount Paid\",\n      dataField: \"paid_amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#064606\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#064606\" };\n      },\n    },\n\n    {\n      text: \"Amount Outstanding\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"darkred\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"darkred\" };\n      },\n      formatter: function amountOutstading(cell, row) {\n        var a = row.accepted_amount;\n        var p = row.paid_amount;\n        return a - p;\n      }\n    },\n    {\n      text: \"Date of Payment\",\n      dataField: \"cust_paid_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_paid_date);\n        var oldDate = row.cust_paid_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Completion\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n  ];\n\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getDeclinedProposal();\n  };\n\n \n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/admin/getProposals?&status=6&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setProposalDisplay(res.data.result);\n          }\n        }\n      });\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n  return (\n    <>\n      <Card>\n      <CardHeader>\n      <AdminFilter\n            setData={setProposalDisplay}\n            getData={getDeclinedProposal}\n            declinedProposal=\"declinedProposal\"\n          />\n\n          {/* <div className=\"row\">\n            <div className=\"col-sm-12 d-flex\">\n              <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-inline\">\n                    <div class=\"form-group mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_tax\"\n                        ref={register}\n                        style={{ height: \"35px\" }}\n                        onChange={(e) => setStore(e.target.value)}\n                      >\n                        <option value=\"\">--Select Category--</option>\n                        {tax.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_tax2\"\n                        ref={register}\n                        style={{ height: \"35px\" }}\n                        onChange={(e) => setStore2(e.target.value)}\n                      >\n                        <option value=\"\">--Select Sub-Category--</option>\n                        {tax2.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <label className=\"form-select form-control\">From</label>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <input\n                        type=\"date\"\n                        name=\"p_dateFrom\"\n                        className=\"form-select form-control\"\n                        ref={register}\n                      />\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <label className=\"form-select form-control\">To</label>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <input\n                        type=\"date\"\n                        name=\"p_dateTo\"\n                        className=\"form-select form-control\"\n                        ref={register}\n                      />\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_status\"\n                        ref={register}\n                        style={{ height: \"33px\" }}\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"1\">Pending</option>\n                        <option value=\"2\">Accepted</option>\n                        <option value=\"3\">Declined</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                    Search\n                  </button>\n\n                  <Reset />\n                </form>\n              </div>\n            </div>\n          </div> */}\n        </CardHeader>\n        <CardBody>\n        <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={proposalDisplay}\n            columns={columns}\n            classes=\"table-responsive\"\n          />\n          {/* <Table responsive=\"sm\" bordered>\n          <thead class=\"table_head\">\n              <tr>\n                <th>S.No</th>\n                <th>Date</th>\n                <th>Query No</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n\n                <th>Proposal No.</th>\n                <th>Proposal Sent date</th>\n                <th>Proposed Amount</th>\n                <th>Proposal Status</th>\n                <th>Amount Accepted</th>\n                <th>Assignment Number</th>\n                <th>TL name</th>\n              </tr>\n            </thead>\n            <tbody class=\"table_bdy\">\n              {proposalDisplay.length > 0 ? (\n                proposalDisplay.map((p, i) => (\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.created)}</td>\n                    <th>\n                      <Link to={`/admin/queries/${p.q_id}`}>{p.assign_no}</Link>\n                    </th>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n\n                    <td>{p.proposal_number}</td>\n                    <td>{ChangeFormateDate(p.DateofProposal)}</td>\n                    <td>{p.ProposedAmount}</td>\n                    <td>{p.status}</td>\n                    <td>{p.accepted_amount}</td>\n                    <td></td>\n                    <td>{p.tl_name}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"10\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </Table> */}\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default DeclinedProposal;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AcceptedProposal/AcceptedProposal.js",["1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\n\n\nfunction AcceptedProposal({ acceptedProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const { Option, OptGroup } = Select;\n\n  const [selectedData, setSelectedData] = useState([]);\n\n  useEffect(() => {\n    getAcceptedProposal();\n  }, []);\n  const getAcceptedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?&status=5,7,8`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        acceptedProposal(res.data.result.length);\n      }\n    });\n  };\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(\"\");\n  // useEffect(() => {\n  //   getCategory();\n  // }, []);\n\n  // const getCategory = () => {\n  //   axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n  //     console.log(res);\n  //     if (res.data.code === 1) {\n  //       setTax(res.data.result);\n  //     }\n  //   });\n  // };\n\n  // useEffect(() => {\n  //   const getSubCategory = () => {\n  //     axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n  //       console.log(res);\n  //       if (res.data.code === 1) {\n  //         setTax2(res.data.result);\n  //       }\n  //     });\n  //   };\n  //   getSubCategory();\n  // }, [store]);\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.DateofProposal);\n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_accept_date);\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"ProposedAmount\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n    },\n    {\n      text: \"Amount Paid\",\n      dataField: \"paid_amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#064606\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#064606\" };\n      },\n    },\n\n    {\n      text: \"Amount Outstanding\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"darkred\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"darkred\" };\n      },\n      formatter: function amountOutstading(cell, row) {\n        var a = row.accepted_amount;\n        var p = row.paid_amount;\n        return a - p;\n      }\n    },\n    {\n      text: \"Date of Payment\",\n      dataField: \"cust_paid_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_paid_date);\n        var oldDate = row.cust_paid_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Completion\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n  ];\n\n \n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getAcceptedProposal();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/admin/getProposals?&status=5,7,8&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setProposalDisplay(res.data.result);\n          }\n        }\n      });\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n  return (\n    <>\n      <Card>\n        <CardHeader>\n        <AdminFilter\n            setData={setProposalDisplay}\n            getData={getAcceptedProposal}\n            acceptedProposal=\"acceptedProposal\"\n          />\n          {/* <div className=\"row\">\n            <div className=\"col-sm-12 d-flex\">\n              <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-inline\">\n                    <div class=\"form-group mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_tax\"\n                        ref={register}\n                        style={{ height: \"35px\" }}\n                        onChange={(e) => setStore(e.target.value)}\n                      >\n                        <option value=\"\">--Select Category--</option>\n                        {tax.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_tax2\"\n                        ref={register}\n                        style={{ height: \"35px\" }}\n                        onChange={(e) => setStore2(e.target.value)}\n                      >\n                        <option value=\"\">--Select Sub-Category--</option>\n                        {tax2.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <label className=\"form-select form-control\">From</label>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <input\n                        type=\"date\"\n                        name=\"p_dateFrom\"\n                        className=\"form-select form-control\"\n                        ref={register}\n                      />\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <label className=\"form-select form-control\">To</label>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <input\n                        type=\"date\"\n                        name=\"p_dateTo\"\n                        className=\"form-select form-control\"\n                        ref={register}\n                      />\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_status\"\n                        ref={register}\n                        style={{ height: \"33px\" }}\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"1\">Pending</option>\n                        <option value=\"2\">Accepted</option>\n                        <option value=\"3\">Declined</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                    Search\n                  </button>\n\n                  <Reset />\n                </form>\n              </div>\n            </div>\n          </div> */}\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={proposalDisplay}\n            columns={columns}\n            classes=\"table-responsive\"\n          />\n\n          {/* <Table responsive=\"sm\" bordered>\n          <thead class=\"table_head\">\n              <tr>\n                <th>S.No</th>\n                <th>Date</th>\n                <th>Query No</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th>Proposal No.</th>\n                <th>Proposal Sent date</th>\n                <th>Proposed Amount</th>\n                <th>Proposal Status</th>\n                <th>Amount Accepted</th>\n                <th>Assignment Number</th>\n                <th>TL name</th>\n              </tr>\n            </thead>\n            <tbody class=\"table_bdy\">\n              {proposalDisplay.length > 0 ? (\n                proposalDisplay.map((p, i) => (\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.created)}</td>\n                    <th>\n                      <Link to={`/admin/queries/${p.q_id}`}>{p.assign_no}</Link>\n                    </th>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n\n                    <td>{p.proposal_number}</td>\n                    <td>{ChangeFormateDate(p.DateofProposal)}</td>\n                    <td>{p.ProposedAmount}</td>\n                    <td>{p.status}</td>\n                    <td>{p.accepted_amount}</td>\n                    <td></td>\n                    <td>{p.tl_name}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"10\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </Table> */}\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AcceptedProposal;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AllProposalComponent/AllProposalComponent.js",["1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\n\nfunction AllProposalComponent({ allProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n\n \n  useEffect(() => {\n    getProposalData();\n  }, []);\n\n  const getProposalData = () => {\n    axios.get(`${baseUrl}/admin/getProposals`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        allProposal(res.data.result.length);\n      }\n    });\n  };\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${selectedData}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.DateofProposal);\n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_accept_date);\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"ProposedAmount\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n    },\n    {\n      text: \"Amount Paid\",\n      dataField: \"paid_amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#064606\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#064606\" };\n      },\n    },\n\n    {\n      text: \"Amount Outstanding\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"darkred\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"darkred\" };\n      },\n      formatter: function amountOutstading(cell, row) {\n        var a = row.accepted_amount;\n        var p = row.paid_amount;\n        return a - p;\n      }\n    },\n    {\n      text: \"Date of Payment\",\n      dataField: \"cust_paid_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_paid_date);\n        var oldDate = row.cust_paid_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Completion\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n  ];\n\n\n  //handleCategory\n  const handleCategory = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    console.log(`selected ${value}`);\n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetCategory ..\");\n    setSelectedData([]);\n    setStore2([]);\n    getProposalData();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getProposalData();\n  };\n\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    axios\n      .get(\n        `${baseUrl}/admin/getProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status1=${data.p_status}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setProposalDisplay(res.data.result);\n          }\n        }\n      });\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <div className=\"row\">\n            <div className=\"col-sm-12 d-flex\">\n              <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-inline\">\n                    <div class=\"form-group mb-2\">\n                      <Select\n                        style={{ width: 130 }}\n                        placeholder=\"Select Category\"\n                        defaultValue={[]}\n                        onChange={handleCategory}\n                        value={selectedData}\n                      >\n                        <Option value=\"1\" label=\"Compilance\">\n                          <div className=\"demo-option-label-item\">\n                            Direct Tax\n                          </div>\n                        </Option>\n                        <Option value=\"2\" label=\"Compilance\">\n                          <div className=\"demo-option-label-item\">\n                            Indirect Tax\n                          </div>\n                        </Option>\n                      </Select>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <Select\n                        mode=\"multiple\"\n                        style={{ width: 250 }}\n                        placeholder=\"Select Sub Category\"\n                        defaultValue={[]}\n                        onChange={handleSubCategory}\n                        value={store2}\n                        allowClear\n                      >\n                        {tax2.map((p, index) => (\n                          <Option value={p.id} key={index}>\n                            {p.details}\n                          </Option>\n                        ))}\n                      </Select>\n                    </div>\n                    <div>\n                      <button\n                        type=\"submit\"\n                        class=\"btn btn-primary mb-2 ml-3\"\n                        onClick={resetCategory}\n                      >\n                        X\n                      </button>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <label className=\"form-select form-control\">From</label>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <input\n                        type=\"date\"\n                        name=\"p_dateFrom\"\n                        className=\"form-select form-control\"\n                        ref={register}\n                      />\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <label className=\"form-select form-control\">To</label>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <input\n                        type=\"date\"\n                        name=\"p_dateTo\"\n                        className=\"form-select form-control\"\n                        ref={register}\n                      />\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_status\"\n                        ref={register}\n                        style={{ height: \"33px\" }}\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"1\">Pending</option>\n                        <option value=\"2\">Accepted</option>\n                        <option value=\"3\">Declined</option>\n                      </select>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                      Search\n                    </button>\n\n                    <Reset />\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={proposalDisplay}\n            columns={columns}\n            classes=\"table-responsive\"\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AllProposalComponent;\n\n// headerStyle: () => {\n//   return { width: \"100px\", textAlign: \"center\" };\n// },\n\n// events: {\n//   onClick: (e, column, columnIndex, row, rowIndex) => {\n//     console.log(\"cellContent\", row);\n//     console.log(\"cellContent\", row.q_id);\n//     return (\n//       <div>\n//         <Link to={`/admin/queries/${row.q_id}`}>{row.q_id}</Link>\n//       </div>\n//     );\n//   },\n// },\n\n// const defaultSorted = [\n//   {\n//     dataField: \"assign_no\",\n//     order: \"desc\",\n//   },\n// ];\n\n// const rowEvents = {\n//   onClick: (e, row, rowIndex) => {\n//     console.log(`clicked on row with index: ${rowIndex}`);\n//     console.log(`clicked on row with index: ${e}`);\n//     console.log(`clicked on row with index: ${row}`);\n//   },\n// };\n\n{\n  /* <CardHeader>\n          <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-sm-9 d-flex\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-primary mb-2\">\n                    Search\n                  </button>\n                </form>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n        </CardHeader> */\n}\n\n{\n  /* <Table responsive=\"sm\" bordered>\n            <thead class=\"table_head\">\n              <tr>\n                <th>S.No</th>\n                <th>Date</th>\n                <th>Query No</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th>Proposal No.</th>\n                <th>Proposal Sent date</th>\n                <th>Proposed Amount</th>\n                <th>Proposal Status</th>\n                <th>Amount Accepted</th>\n                <th>Assignment Number</th>\n                <th>TL name</th>\n              </tr>\n            </thead>\n            <tbody class=\"table_bdy\">\n              {proposalDisplay.length > 0 ? (\n                proposalDisplay.map((p, i) => (\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.created)}</td>\n                    <th>\n                      <Link to={`/admin/queries/${p.q_id}`}>{p.assign_no}</Link>\n                    </th>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n\n                    <td>{p.proposal_number}</td>\n                    <td>{ChangeFormateDate(p.DateofProposal)}</td>\n                    <td>{p.ProposedAmount}</td>\n                    <td>{p.status}</td>\n                    <td>{p.accepted_amount}</td>\n                    <td></td>\n                    <td>{p.tl_name}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"10\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </Table> */\n}\n","/var/www/html/Mazars_Pannel/src/components/PendingForPayment/PendingForPayment.js",["1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link, useParams } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\n\nfunction PendingForPayment({ CountPendingForPayment }) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [pendingData, setPendingData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n\n  useEffect(() => {\n    getPendingForPayment();\n  }, []);\n\n  const getPendingForPayment = () => {\n    axios.get(`${baseUrl}/admin/pendingPaymentProposals`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setPendingData(res.data.result);\n        CountPendingForPayment(res.data.result.length);\n      }\n    });\n  };\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(\"\");\n  useEffect(() => {\n    getCategory();\n  }, []);\n\n  const getCategory = () => {\n    axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setTax(res.data.result);\n      }\n    });\n  };\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.DateofProposal);\n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_accept_date);\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"ProposedAmount\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n    },\n    {\n      text: \"Amount Paid\",\n      dataField: \"paid_amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#064606\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#064606\" };\n      },\n    },\n\n    {\n      text: \"Amount Outstanding\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"darkred\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"darkred\" };\n      },\n      formatter: function amountOutstading(cell, row) {\n        var a = row.accepted_amount;\n        var p = row.paid_amount;\n        return a - p;\n      }\n    },\n    {\n      text: \"Date of Payment\",\n      dataField: \"cust_paid_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_paid_date);\n        var oldDate = row.cust_paid_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Completion\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n  ];\n\n\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getPendingForPayment();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/admin/getProposals?&status=5,7&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setPendingData(res.data.result);\n          }\n        }\n      });\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n  return (\n    <>\n      <Card>\n        <CardHeader>\n        <AdminFilter\n            setData={setPendingData}\n            getData={getPendingForPayment}\n            pendingPayment=\"pendingPayment\"\n          />\n          {/* <div className=\"row\">\n            <div className=\"col-sm-12 d-flex\">\n              <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-inline\">\n                    <div class=\"form-group mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_tax\"\n                        ref={register}\n                        style={{ height: \"35px\" }}\n                        onChange={(e) => setStore(e.target.value)}\n                      >\n                        <option value=\"\">--Select Category--</option>\n                        {tax.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_tax2\"\n                        ref={register}\n                        style={{ height: \"35px\" }}\n                        onChange={(e) => setStore2(e.target.value)}\n                      >\n                        <option value=\"\">--Select Sub-Category--</option>\n                        {tax2.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <label className=\"form-select form-control\">From</label>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <input\n                        type=\"date\"\n                        name=\"p_dateFrom\"\n                        className=\"form-select form-control\"\n                        ref={register}\n                      />\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <label className=\"form-select form-control\">To</label>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <input\n                        type=\"date\"\n                        name=\"p_dateTo\"\n                        className=\"form-select form-control\"\n                        ref={register}\n                      />\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_status\"\n                        ref={register}\n                        style={{ height: \"33px\" }}\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"1\">Pending</option>\n                        <option value=\"2\">Accepted</option>\n                        <option value=\"3\">Declined</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                    Search\n                  </button>\n\n                  <Reset />\n                </form>\n              </div>\n            </div>\n          </div> */}\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={pendingData}\n            columns={columns}\n            classes=\"table-responsive\"\n          />\n\n          {/* <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th>S.No</th>\n                <th>Date</th>\n                <th>Query No.</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th>Assignment No</th>\n                <th>Amount Accepted</th>\n                <th>Payment Terms</th>\n                <th>Payments Received</th>\n                <th>Outstanding payment</th>\n              </tr>\n            </thead>\n            <tbody>\n              {pendingData.length > 0 ? (\n                pendingData.map((p, i) => (\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td></td>\n                    <th>\n                      <Link to={`/teamleader/queries/${p.id}`}>\n                        {p.assign_no}\n                      </Link>\n                    </th>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n                    <td></td>\n                    <td>{p.accepted_amount}</td>\n                    <td></td>\n                    <td>{p.paid_amount}</td>\n                    <td>{checkOutstading(p.paid_amount, p.accepted_amount)}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"10\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </Table> */}\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingForPayment;\n","/var/www/html/Mazars_Pannel/src/components/PaidComponent/PaidComponent.js",["1123","1124","1125","1126","1127","1128","1129","1130","1131"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport CommonServices from \"../../common/common\";\nfunction PaidComponent() {\n  const [payment, setPayment] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n  const [paymentcount, setPaymentCount] = useState(\"\");\n  const [pay, setPay] = useState([]);\n\n  useEffect(() => {\n    getPaymentStatus();\n  }, []);\n\n  const getPaymentStatus = () => {\n    axios.get(`${baseUrl}/tl/getUploadedProposals`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setPayment(res.data.result);\n        setPaymentCount(res.data.result.length);\n      }\n    });\n  };\n\n  const [modal, setModal] = useState(false);\n  const toggle = (key) => {\n    console.log(\"key\", key);\n    setModal(!modal);\n\n    fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        setPay(response.payment_detail);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"query_created_date\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.query_created_date);\n        var oldDate = row.query_created_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/admin/queries/${row.assign_id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"created\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_accept_date);\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"amount\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n    },\n    {\n      text: \"Amount Paid\",\n      dataField: \"paid_amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#064606\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#064606\" };\n      },\n    },\n\n    {\n      text: \"Amount Outstanding\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"darkred\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"darkred\" };\n      },\n      formatter: function amountOutstading(cell, row) {\n        console.log(\"dt\", row.paid_amount);\n        console.log(\"dt\", row.accepted_amount);\n        var p = row.paid_amount;\n        var a = row.accepted_amount;\n        return a - p;\n      },\n    },\n    {\n      text: \"Date of Payment\",\n      dataField: \"cust_paid_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_paid_date);\n        var oldDate = row.cust_paid_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Completion\",\n      dataField: \"final_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.final_date);\n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ cursor: \"pointer\" }} title=\"Payment History\">\n              <i\n                class=\"fa fa-credit-card\"\n                style={{ color: \"green\", fontSize: \"16px\" }}\n                onClick={() => toggle(row.assign_id)}\n              ></i>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  console.log(\"pay\", pay);\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"7\">\n              <CardTitle tag=\"h4\">Payment status ({paymentcount})</CardTitle>\n            </Col>\n            <Col md=\"5\"></Col>\n          </Row>\n        </CardHeader>\n\n        <CardHeader>\n          <AdminFilter\n            setData={setPayment}\n            getData={getPaymentStatus}\n            paymentStatus=\"paymentStatus\"\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={payment}\n            columns={columns}\n            classes=\"table-responsive\"\n          />\n\n          <Modal isOpen={modal} fade={false} toggle={toggle}>\n            <ModalHeader toggle={toggle}>History</ModalHeader>\n            <ModalBody>\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"row\">S.No</th>\n                    <th scope=\"row\">Date</th>\n                    <th scope=\"row\">Amount</th>\n                  </tr>\n                </thead>\n                {pay.length > 0\n                  ? pay.map((p, i) => (\n                      <tbody>\n                        <tr>\n                          <td>{i + 1}</td>\n                          <td>{CommonServices.removeTime(p.payment_date)}</td>\n                          <td>{p.paid_amount}</td>\n                        </tr>\n                      </tbody>\n                    ))\n                  : null}\n              </table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={toggle}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default PaidComponent;\n","/var/www/html/Mazars_Pannel/src/pages/TL/FeedbackTab/FeedbackTab.js",["1132","1133"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nfunction FeedbackTab() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [feedbackData, setFeedBackData] = useState([]);\n\n  useEffect(() => {\n    const getFeedback = () => {\n      axios\n        .get(`${baseUrl}/customers/getFeedback?tl_id=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setFeedBackData(res.data.result);\n          }\n        });\n    };\n    getFeedback();\n  }, []);\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Details of feedback\",\n      dataField: \"feedback\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"7\">\n                <CardTitle tag=\"h4\">Feedback Recieved</CardTitle>\n              </Col>\n              <Col md=\"5\"></Col>\n            </Row>\n          </CardHeader>\n          <CardBody>\n            <BootstrapTable\n              bootstrap4\n              keyField=\"id\"\n              data={feedbackData}\n              columns={columns}\n              rowIndex\n            />\n            {/* <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th>Sr. No.</th>\n                  <th>Query No</th>\n                  <th>Customer Name</th>\n                  <th>Details of feedback</th>\n                </tr>\n              </thead>\n              <tbody>\n                {feedbackData.length > 0 ? (\n                  feedbackData.map((p, i) => (\n                    <tr key={i}>\n                      <td>{i + 1}</td>\n                      <td>{p.assign_no}</td>\n                      <td>{p.name}</td>\n                      <td>{p.feedback}</td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"4\">No Records</td>\n                  </tr>\n                )}\n              </tbody>\n            </table> */}\n          </CardBody>\n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default FeedbackTab;\n","/var/www/html/Mazars_Pannel/src/components/PendingForAcceptence/PendingForAcceptence.js",["1134","1135","1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\n\nfunction PendingForAcceptence({ pendingProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n  useEffect(() => {\n    getPendingAcceptedProposal();\n  }, []);\n\n  const getPendingAcceptedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?&status=4`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        pendingProposal(res.data.result.length);\n      }\n    });\n  };\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(\"\");\n\n  useEffect(() => {\n    getCategory();\n  }, []);\n\n  const getCategory = () => {\n    axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setTax(res.data.result);\n      }\n    });\n  };\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.DateofProposal);\n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_accept_date);\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"ProposedAmount\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n    },\n    {\n      text: \"Amount Paid\",\n      dataField: \"paid_amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#064606\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#064606\" };\n      },\n    },\n\n    {\n      text: \"Amount Outstanding\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"darkred\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"darkred\" };\n      },\n      formatter: function amountOutstading(cell, row) {\n        var a = row.accepted_amount;\n        var p = row.paid_amount;\n        return a - p;\n      }\n    },\n    {\n      text: \"Date of Payment\",\n      dataField: \"cust_paid_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_paid_date);\n        var oldDate = row.cust_paid_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Completion\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n  ];\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getPendingAcceptedProposal();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/admin/getProposals?&status=4&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setProposalDisplay(res.data.result);\n          }\n        }\n      });\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setProposalDisplay}\n            getData={getPendingAcceptedProposal}\n            pendingAcceptedProposal=\"pendingAcceptedProposal\"\n          />\n          {/* <div className=\"row\">\n            <div className=\"col-sm-12 d-flex\">\n              <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-inline\">\n                    <div class=\"form-group mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_tax\"\n                        ref={register}\n                        style={{ height: \"35px\" }}\n                        onChange={(e) => setStore(e.target.value)}\n                      >\n                        <option value=\"\">--Select Category--</option>\n                        {tax.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_tax2\"\n                        ref={register}\n                        style={{ height: \"35px\" }}\n                        onChange={(e) => setStore2(e.target.value)}\n                      >\n                        <option value=\"\">--Select Sub-Category--</option>\n                        {tax2.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <label className=\"form-select form-control\">From</label>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <input\n                        type=\"date\"\n                        name=\"p_dateFrom\"\n                        className=\"form-select form-control\"\n                        ref={register}\n                      />\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <label className=\"form-select form-control\">To</label>\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <input\n                        type=\"date\"\n                        name=\"p_dateTo\"\n                        className=\"form-select form-control\"\n                        ref={register}\n                      />\n                    </div>\n\n                    <div class=\"form-group mx-sm-1  mb-2\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_status\"\n                        ref={register}\n                        style={{ height: \"33px\" }}\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"1\">Pending</option>\n                        <option value=\"2\">Accepted</option>\n                        <option value=\"3\">Declined</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                    Search\n                  </button>\n                  <Reset />\n                </form>\n              </div>\n            </div>\n          </div> */}\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={proposalDisplay}\n            columns={columns}\n            classes=\"table-responsive\"\n          />\n\n          {/* <Table responsive=\"sm\" bordered>\n          <thead class=\"table_head\">\n              <tr>\n                <th>S.No</th>\n                <th>Date</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th>Query No</th>\n                <th>Proposal No.</th>\n                <th>Proposal Sent date</th>\n                <th>Proposed Amount</th>\n                <th>Proposal Status</th>\n                <th>Amount Accepted</th>\n                <th>Assignment Number</th>\n                <th>TL name</th>\n              </tr>\n            </thead>\n            <tbody class=\"table_bdy\">\n              {proposalDisplay.length > 0 ? (\n                proposalDisplay.map((p, i) => (\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.created)}</td>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n                    <th>\n                      <Link to={`/admin/queries/${p.q_id}`}>{p.assign_no}</Link>\n                    </th>\n                    <td>{p.proposal_number}</td>\n                    <td>{ChangeFormateDate(p.DateofProposal)}</td>\n                    <td>{p.ProposedAmount}</td>\n                    <td>{p.status}</td>\n                    <td>{p.accepted_amount}</td>\n                    <td></td>\n                    <td>{p.tl_name}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"12\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </Table> */}\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default PendingForAcceptence;\n","/var/www/html/Mazars_Pannel/src/pages/TL/PaymentStatus/PaymentStatus.js",["1151","1152","1153","1154","1155"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\n\nfunction PaymentStatus() {\n  const alert = useAlert();\n  const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const cust_id = window.localStorage.getItem(\"userid\");\n\n  const [pay, setPay] = useState([]);\n  const [count, setCount] = useState(\"\");\n  const [payment, setPayment] = useState([]);\n  const [modal, setModal] = useState(false);\n\n  useEffect(() => {\n    getPaymentStatus();\n  }, []);\n\n  const getPaymentStatus = () => {\n    axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setPayment(res.data.result);\n        setCount(res.data.result.length);\n      }\n    });\n  };\n\n  const toggle = (key) => {\n    console.log(\"key\", key);\n    setModal(!modal);\n\n    fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        setPay(response.payment_detail);\n      })\n      .catch((error) => console.log(error));\n  };\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"query_created_date\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.query_created_date);\n        var oldDate = row.query_created_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/teamleader/queries/${row.assign_id}`}>\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"created\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_accept_date);\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"amount\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n    },\n    {\n      text: \"Amount Paid\",\n      dataField: \"paid_amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#064606\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#064606\" };\n      },\n    },\n\n    {\n      text: \"Amount Outstanding\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"darkred\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"darkred\" };\n      },\n      formatter: function amountOutstading(cell, row) {\n        console.log(\"dt\", row.paid_amount);\n        console.log(\"dt\", row.accepted_amount);\n        var p = row.paid_amount;\n        var a = row.accepted_amount;\n        return a - p;\n      },\n    },\n    {\n      text: \"Date of Payment\",\n      dataField: \"cust_paid_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_paid_date);\n        var oldDate = row.cust_paid_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Completion\",\n      dataField: \"final_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.final_date);\n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Action\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ cursor: \"pointer\" }} title=\"Payment History\">\n              <i\n                class=\"fa fa-credit-card\"\n                style={{ color: \"green\", fontSize: \"16px\" }}\n                onClick={() => toggle(row.assign_id)}\n              ></i>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"7\">\n                <CardTitle tag=\"h4\">Payment Status ({count})</CardTitle>\n              </Col>\n              <Col md=\"5\"></Col>\n            </Row>\n          </CardHeader>\n          <CardHeader>\n            <TeamFilter\n              setData={setPayment}\n              getData={getPaymentStatus}\n              paymentStatus=\"paymentStatus\"\n            />\n          </CardHeader>\n\n          <CardBody>\n            <BootstrapTable\n              bootstrap4\n              keyField=\"id\"\n              data={payment}\n              columns={columns}\n              classes=\"table-responsive\"\n            />\n            <Modal isOpen={modal} fade={false} toggle={toggle}>\n              <ModalHeader toggle={toggle}>History</ModalHeader>\n              <ModalBody>\n                <table class=\"table table-bordered\">\n                  <thead>\n                    <tr>\n                      <th scope=\"row\">S.No</th>\n                      <th scope=\"row\">Date</th>\n                      <th scope=\"row\">Amount</th>\n                    </tr>\n                  </thead>\n                  {pay.length > 0\n                    ? pay.map((p, i) => (\n                        <tbody>\n                          <tr>\n                            <td>{i + 1}</td>\n                            <td>{CommonServices.removeTime(p.payment_date)}</td>\n                            <td>{p.paid_amount}</td>\n                          </tr>\n                        </tbody>\n                      ))\n                    : null}\n                </table>\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"secondary\" onClick={toggle}>\n                  Cancel\n                </Button>\n              </ModalFooter>\n            </Modal>\n          </CardBody>\n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default PaymentStatus;\n","/var/www/html/Mazars_Pannel/src/views/ProposalTab/PaymentModal.js",["1156","1157","1158","1159"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  pay,\n  getProposalData,\n}) {\n  const { handleSubmit, register } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n\n  const { id, amount } = pay;\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"status\", 8);\n    formData.append(\"amount\", value.p_amount);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PaymentPartialAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Payment Done!\");\n          // history.push(\"/customer/queries\");\n\n          getProposalData();\n          paymentHandler();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"sm\">\n        <ModalHeader toggle={paymentHandler}>Payment</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <input\n                type=\"text\"\n                name=\"p_amount\"\n                ref={register}\n                className=\"form-control\"\n                defaultValue={amount}\n                placeholder=\"enter amount\"\n              />\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Pay\n              </button>\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/var/www/html/Mazars_Pannel/src/views/ProposalTab/AcceptModal.js",["1160","1161","1162","1163"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\n\nfunction AcceptModal({ acceptedModal, acceptedHandler, id,getProposalData}) {\n    const { handleSubmit, register, reset } = useForm();\n    const alert = useAlert();\n// console.log(\"accept-id\",id)\n\n    const onSubmit = (value) => {\n      console.log(\"value :\", value);\n\n      let formData = new FormData();\n      formData.append(\"revised_text\", value.p_text);\n      formData.append(\"id\", id);\n    \n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/updateRevisedText`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"res-\", response); \n          if (response.data.code === 1) {\n            alert.success(\"Revision Submitted!\");\n            getProposalData();\n            acceptedHandler();        \n          } \n                      \n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n       });\n  };\n\n    return (\n        <div>\n              <Modal isOpen={acceptedModal} toggle={acceptedHandler} size=\"md\">\n              <ModalHeader toggle={acceptedHandler}>Add message</ModalHeader>\n              <ModalBody>\n                   <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"mb-3\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"p_text\"\n                      ref={register}\n                      placeholder=\"enter message\"\n                    />\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary\"\n                    >\n                      Submit\n                    </button>\n                  </div>\n                </form>\n              </ModalBody>\n            </Modal>\n        </div>\n    );\n}\n\nexport default AcceptModal;","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/AssignmentTab.js",["1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport DraftReportModal from \"./DraftReportUpload\";\nimport FinalReportUpload from \"./FinalReportUpload\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport * as Cookies from \"js-cookie\";\n\nfunction AssignmentTab() {\n  const history = useHistory();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [count, setCount] = useState(\"\");\n  const [assignment, setAssignment] = useState([]);\n  const [id, setId] = useState(\"\");\n  const [finalId, setFinalId] = useState(\"\");\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n\n  const [baseMode, SetbaseMode] = useState(\"avc\");\n  const [transcode, SetTranscode] = useState(\"interop\");\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setAssignment(res.data.result);\n          setCount(res.data.result.length);\n        }\n      });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    console.log(`selected ${value}`);\n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetCategory ..\");\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentList();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    setStatus([]);\n    getAssignmentList();\n  };\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n    console.log(`selected ${value}`);\n    setStatus(value);\n  };\n\n  //columns\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"date_of_query\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.date_of_query);\n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/teamleader/queries/${row.q_id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"200px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                {row.client_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                {row.draft_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                {row.final_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of report :</span>\n                {row.delivery_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\n                {row.other_stage}\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Expected date of delivery\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.Exp_Delivery_Date);\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Actual date of delivery\",\n      dataField: \"final_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.final_date);\n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {!row.final_report == \"\" ? (\n              <div>\n                <a\n                  href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.final_report}`}\n                  target=\"_blank\"\n                >\n                  <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\n                  final\n                </a>\n              </div>\n            ) : row.assignement_draft_report ? (\n              <div>\n                <a\n                  href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assignement_draft_report}`}\n                  target=\"_blank\"\n                >\n                  <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\n                  draft\n                </a>\n              </div>\n            ) : null}\n          </>\n        );\n      },\n    },\n    {\n      text: \"Assignment Stage\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              title=\"Add Assignment stages\"\n              style={{ cursor: \"pointer\", textAlign: \"center\" }}\n            >\n              <Link to={`/teamleader/addassingment/${row.q_id}`}>\n                <i class=\"fa fa-tasks\"></i>\n              </Link>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              {row.accepted_amount == row.paid_amount &&\n              !row.final_report &&\n              !(\n                row.client_discussion == \"completed\" &&\n                row.delivery_report == \"completed\" &&\n                row.draft_report == \"completed\" &&\n                row.final_discussion == \"completed\"\n              ) ? (\n                <div title=\"upload Pdf\">\n                  <p\n                    style={{ cursor: \"pointer\", color: \"green\" }}\n                    onClick={() => uploadDraftReport(row.id)}\n                  >\n                    <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                    draft\n                  </p>\n                </div>\n              ) : null}\n\n              {row.final_report ? null : (\n                <div title=\"upload Pdf\">\n                  <p\n                    style={{ cursor: \"pointer\", color: \"red\" }}\n                    onClick={() => uploadFinalReport(row)}\n                  >\n                    {row.client_discussion == \"completed\" &&\n                    row.delivery_report == \"completed\" &&\n                    row.draft_report == \"completed\" &&\n                    row.final_discussion == \"completed\" &&\n                    row.amount == row.paid_amount ? (\n                      <div>\n                        <i\n                          class=\"fa fa-upload\"\n                          style={{ fontSize: \"16px\" }}\n                        ></i>\n                        final\n                      </div>\n                    ) : null}\n                  </p>\n                </div>\n              )}\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Video Call\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ cursor: \"pointer\" }}>\n              <i\n                class=\"fa fa-video-camera\"\n                style={{ color: \"red\", fontSize: \"16px\" }}\n                onClick={() => handleJoin(row.q_id)}\n              ></i>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  //handleJoin\n  const handleJoin = (id) => {\n    console.log(\"id\", id);\n\n    Cookies.set(\"channel_2\", id);\n    Cookies.set(\"baseMode_2\", baseMode);\n    Cookies.set(\"transcode_2\", transcode);\n    Cookies.set(\"attendeeMode_2\", attendeeMode);\n    Cookies.set(\"videoProfile_2\", videoProfile);\n    history.push(\"/teamleader/meeting\");\n  };\n\n  // draft modal\n  const [draftModal, setDraftModal] = useState(false);\n  const uploadDraftReport = (id) => {\n    console.log(id);\n    setDraftModal(!draftModal);\n    setId(id);\n  };\n\n  // final modal\n  const [fianlModal, setFianlModal] = useState(false);\n\n  const uploadFinalReport = (id) => {\n    console.log(id);\n    setFianlModal(!fianlModal);\n    setFinalId(id);\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\n          userid\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${\n          data.p_dateTo\n        }&assignment_status=${status}&stages_status=${data.p_status}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignment(res.data.result);\n          }\n        }\n      });\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"7\">\n              <CardTitle tag=\"h4\">Assignment ({count})</CardTitle>\n            </Col>\n            <Col md=\"5\"></Col>\n          </Row>\n        </CardHeader>\n\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-inline\">\n              <div class=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 250 }}\n                  placeholder=\"Select Sub Category\"\n                  defaultValue={[]}\n                  onChange={handleSubCategory}\n                  value={store2}\n                  allowClear\n                >\n                  {tax2.map((p, index) => (\n                    <Option value={p.id} key={index}>\n                      {p.details}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 210 }}\n                  placeholder=\"Select stages\"\n                  defaultValue={[]}\n                  onChange={assingmentStatus}\n                  value={status}\n                  allowClear\n                >\n                  <Option value=\"Client_Discussion\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">\n                      Client Discussion\n                    </div>\n                  </Option>\n                  <Option value=\"Draft_Report\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Draft report</div>\n                  </Option>\n                  <Option value=\"Final_Discussion\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">\n                      Final Discussion\n                    </div>\n                  </Option>\n                  <Option value=\"Delivery_of_report\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">\n                      Delivery of report\n                    </div>\n                  </Option>\n                  <Option value=\"Completed\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Completed</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <select\n                  className=\"form-select form-control\"\n                  name=\"p_status\"\n                  ref={register}\n                  style={{ height: \"33px\" }}\n                >\n                  <option value=\"\">--select--</option>\n                  <option value=\"1\">Pending</option>\n                  <option value=\"2\">Complete</option>\n                </select>\n              </div>\n\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={assignment}\n            columns={columns}\n            rowIndex\n          />\n\n          <DraftReportModal\n            draftModal={draftModal}\n            uploadDraftReport={uploadDraftReport}\n            getAssignmentList={getAssignmentList}\n            id={id}\n          />\n\n          <FinalReportUpload\n            fianlModal={fianlModal}\n            uploadFinalReport={uploadFinalReport}\n            getAssignmentList={getAssignmentList}\n            id={finalId}\n          />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AssignmentTab;\n\n// {row.assignement_draft_report || row.final_report ? null : (\n//   <div title=\"upload Pdf\">\n//     <p\n//       style={{ cursor: \"pointer\", color: \"green\" }}\n//       onClick={() => uploadDraftReport(row.id)}\n//     >\n//       <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n//       draft\n//     </p>\n//   </div>\n// )}\n{\n  /* {row.accepted_amount == row.paid_amount &&\n               !row.final_report  row.assignement_draft_report ? (\n                <p>draft report</p>\n              ) : null} */\n}\n","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/DraftReportUpload.js",["1189","1190","1191","1192"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\n\nfunction DraftReport({ draftModal, uploadDraftReport ,id ,getAssignmentList}) {\n  const alert = useAlert();\n    const { handleSubmit, register, reset } = useForm();\n\n    const onSubmit = (value) => {\n      console.log(\"value :\", value);\n\n      let formData = new FormData();\n      formData.append(\"draft_report\", value.p_draft[0]);\n      formData.append(\"id\", id);\n       \n      axios.post(`${baseUrl}/tl/UploadReport`, formData, {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      }).then(response => {\n        console.log(response.data)\n        alert.success(<Msg />);\n        getAssignmentList();\n        uploadDraftReport();\n      });\n       \n  };\n\n//alert msg\n  const Msg = () =>{\n    return(\n      <>\n      <p style={{fontSize:\"12px\"}}>draft Report uploaded</p>\n      </>\n    )\n  }\n    return (\n        <div>\n              <Modal isOpen={draftModal} toggle={uploadDraftReport} size=\"md\">\n              <ModalHeader toggle={uploadDraftReport}>Draft Report</ModalHeader>\n              <ModalBody>\n                   <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"mb-3\">\n                  <input\n                    type=\"file\"\n                    name=\"p_draft\"\n                    ref={register}\n                    className=\"form-control-file\"\n                  />\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary\"\n                    >\n                      Upload\n                    </button>\n                  </div>\n                </form>\n              </ModalBody>\n            </Modal>\n        </div>\n    );\n}\n\nexport default DraftReport;\n\n // let formData = new FormData();\n      // formData.append(\"draft_report\", value.p_draft[0]);\n      // formData.append(\"id\", id);\n    \n      // axios({\n      //   method: \"POST\",\n      //   headers: {\n      //     'content-type': 'multipart/form-data'\n      //   },\n      //   url: `${baseUrl}/tl/UploadReport`,\n      //   data: formData,\n      // })\n      //   .then(function (response) {\n      //     console.log(\"res-\", response);  \n      //     uploadDraftReport();            \n      //   })\n      //   .catch((error) => {\n      //     console.log(\"erroror - \", error);\n      //  });\n\n\n// axios.post(`${baseUrl}/tl/UploadReport`, formData, {\n//   headers: {\n//     'content-type': 'multipart/form-data'\n//   }\n// }).then(response => {\n//   console.log(response.data)\n// });\n\n\n// formData.append('draft_report',{\n//   uri: value.p_draft[0].uri,\n//   name: value.p_draft[0].name,\n//   type: value.p_draft[0].type}\n// );\n\n\n\n// axios({\n//   method: \"post\",\n//   url: \"myurl\",\n//   data: bodyFormData,\n//   headers: { \"Content-Type\": \"multipart/form-data\" },\n// })\n//   .then(function (response) {\n \n//     console.log(response);\n//   })\n//   .catch(function (response) {\n\n//     console.log(response);\n//   });","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/FinalReportUpload.js",["1193","1194","1195","1196"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\n\nfunction DraftReport({ fianlModal, uploadFinalReport, id, getAssignmentList }) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n\n\n  console.log(\"id-\",id)\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"final_report\", value.p_final[0]);\n    formData.append(\"id\", id.id);\n    formData.append(\"q_id\", id.q_id);\n\n    axios\n      .post(`${baseUrl}/tl/UploadReport`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        alert.success(<Msg />);\n        getAssignmentList();\n        uploadFinalReport();\n      });\n  };\n\n  //alert msg\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"12px\" }}>final report uploaded</p>\n      </>\n    );\n  };\n  return (\n    <div>\n      <Modal isOpen={fianlModal} toggle={uploadFinalReport} size=\"md\">\n        <ModalHeader toggle={uploadFinalReport}>Final Report</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <input\n                type=\"file\"\n                name=\"p_final\"\n                ref={register}\n                className=\"form-control-file\"\n              />\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Upload\n              </button>\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default DraftReport;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/PendingForPaymentProposal/PendingForPaymentProposal.js",["1197","1198","1199"],"/var/www/html/Mazars_Pannel/src/pages/TL/SendProposal/SendProposal.js",["1200","1201"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {  useParams } from \"react-router-dom\";\nimport ProposalComponent from \"./ProposalComponent\";\n\n\nfunction SendProposal() {\n    const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  return (\n    <>\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n        <ProposalComponent id={id}/>\n      </Layout>\n    </>\n  );\n}\n\nexport default SendProposal;\n","/var/www/html/Mazars_Pannel/src/views/ProposalReceived/ProposalReceived.js",["1202","1203","1204","1205","1206"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nfunction ProposalReceived() {\n  const [proposalDetails, setProposalDetails] = useState([]);\n\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    const getProposalDetails = () => {\n      axios\n        .get(\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\n            userId\n          )}&assign_id=${id}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setProposalDetails(res.data.result);\n          }\n        });\n    };\n\n    getProposalDetails();\n  }, []);\n\n  //outstanding amount\n  function checkOutstading(p, a) {\n    console.log(\"paid -\", p);\n    console.log(\"acc -\", a);\n    if (p == 0) {\n      return \"0\";\n    } else return a - p;\n  }\n\n\n //change date format\n function ChangeFormateDate(oldDate) {\n  console.log(\"date\",oldDate)\n  if(oldDate == null){\n    return null\n  }\n  return oldDate.toString().split(\"-\").reverse().join(\"-\");\n}\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Proposal Details</p>\n            </Col>\n            <Col\n              md=\"4\"\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            ></Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {proposalDetails.length > 0\n            ? proposalDetails.map((p, i) => (\n                <div class=\"card-body\">\n                  <table class=\"table table-bordered\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Titles</th>\n                        <th scope=\"col\">Data</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <th scope=\"row\">Date</th>\n                        <td>{ChangeFormateDate(p.created)}</td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\">Proposal No</th>\n                        <td>{p.proposal_number}</td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\">Category</th>\n                        <td>{p.parent_id}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Sub Category</th>\n                        <td>{p.cat_name}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Status of Proposal</th>\n                        <td>{p.status}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Date of Proposal</th>\n                        <td>{ChangeFormateDate(p.DateofProposal)}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Proposed Amount</th>\n                        <td>{p.ProposedAmount}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Negotiated Amount</th>\n                        <td>{p.negotiated_amount}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Amount Accepted</th>\n                        <td>{p.accepted_amount}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Amount Paid</th>\n                        <td>{p.paid_amount}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Date of Payment</th>\n                        <td>{ChangeFormateDate(p.pay_date)}</td>\n                      </tr>\n\n                      <tr>\n                        <th scope=\"row\">Amount Outstanding</th>\n                        <td>\n                          {checkOutstading(p.paid_amount, p.accepted_amount)}\n                        </td>\n                      </tr>\n                      <tr>\n                        <th scope=\"row\">Date of acceptance of Proposal</th>\n                        <td>{ChangeFormateDate(p.acpt_reject_time)}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              ))\n            : \"\"}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ProposalReceived;\n","/var/www/html/Mazars_Pannel/src/pages/TL/QueriesTab/QueriesTab.js",["1207","1208","1209","1210"],"import React, { useState } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\n\nimport PendingForAcceptence from \"../PendingForAcceptence/PendingForAcceptence\";\nimport InCompleteData from \"../InCompleteData/InCompleteData\";\nimport CompleteData from \"../CompleteData/CompleteData\";\n\nfunction QueriesTab() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const [pendingAcceptence, setPendingAcceptence] = useState(\"\");\n  const [incomplete, setIncomplete] = useState(\"\");\n  const [complete, setComplete] = useState(\"\");\n\n  const CountPendingForAcceptence = (data) => {\n    setPendingAcceptence(data);\n  };\n\n  const CountIncomplete = (data) => {\n    setIncomplete(data);\n  };\n\n  const CountComplete = (data) => {\n    setComplete(data);\n  };\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  const updateTab = (key) => {\n    setTabIndex(key);\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              Pending for Acceptance ({pendingAcceptence})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress ({incomplete})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Complete ({complete})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <PendingForAcceptence\n              CountPendingForAcceptence={CountPendingForAcceptence}\n              updateTab={updateTab}\n            />\n          </TabPanel>\n          <TabPanel>\n            <InCompleteData CountIncomplete={CountIncomplete} />\n          </TabPanel>\n          <TabPanel>\n            <CompleteData CountComplete={CountComplete} />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n\n// <div class=\"row mt-3\">\n//   <div class=\"col-md-12\">\n//     <ul\n//       class=\"nav nav-pills mb-3\"\n//       style={{ justifyContent: \"space-around\" }}\n//       id=\"pills-tab\"\n//       role=\"tablist\"\n//     >\n//       <li class=\"nav-item\" role=\"presentation\">\n//         <a\n//           class=\"nav-link text-white active\"\n//           id=\"pills-pending-tab\"\n//           data-toggle=\"pill\"\n//           href=\"#pending\"\n//           role=\"tab\"\n//           aria-controls=\"pills-pending\"\n//           aria-selected=\"false\"\n//         >\n//           Pending for Acceptance ({pendingAcceptence})\n//         </a>\n//       </li>\n//       <li class=\"nav-item\" role=\"presentation\">\n//         <a\n//           class=\"nav-link text-white\"\n//           id=\"pills-incomplete-tab\"\n//           data-toggle=\"pill\"\n//           href=\"#incomplete\"\n//           role=\"tab\"\n//           aria-controls=\"pills-incomplete\"\n//           aria-selected=\"false\"\n//         >\n//           Inprogress ({incomplete})\n//         </a>\n//       </li>\n//       <li class=\"nav-item\" role=\"presentation\">\n//         <a\n//           class=\"nav-link text-white\"\n//           id=\"pills-complete-tab\"\n//           data-toggle=\"pill\"\n//           href=\"#complete\"\n//           role=\"tab\"\n//           aria-controls=\"pills-complete\"\n//           aria-selected=\"false\"\n//         >\n//           Complete ({complete})\n//         </a>\n//       </li>\n//     </ul>\n//     <div class=\"tab-content\" id=\"pills-tabContent\">\n//       <div\n//         class=\"tab-pane fade show active\"\n//         id=\"pending\"\n//         role=\"tabpanel\"\n//         aria-labelledby=\"pills-pending-tab\"\n//       >\n//         <PendingForAcceptence\n//           CountPendingForAcceptence={CountPendingForAcceptence}\n//         />\n//       </div>\n\n//       <div\n//         class=\"tab-pane fade\"\n//         id=\"incomplete\"\n//         role=\"tabpanel\"\n//         aria-labelledby=\"pills-incomplete-tab\"\n//       >\n//         <InCompleteData CountIncomplete={CountIncomplete} />\n//       </div>\n\n//       <div\n//         class=\"tab-pane fade\"\n//         id=\"complete\"\n//         role=\"tabpanel\"\n//         aria-labelledby=\"pills-complete-tab\"\n//       >\n//         <CompleteData CountComplete={CountComplete} />\n//       </div>\n//     </div>\n//   </div>\n// </div>;\n{\n  /* <button onClick={() => setTabIndex(1)}>go to 1st tab</button> */\n}\n\n\n// 9837505200\n\n// prashant kaushik\n\n\n// pwd\n\n// noddle oofficer covid 19 rmg\n\n// 7302556474\n// 9411515029","/var/www/html/Mazars_Pannel/src/pages/TL/EditProposal/EditProposal.js",["1211","1212","1213","1214","1215","1216","1217","1218","1219","1220","1221"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\nfunction ProposalComponent() {\n  // const { id } = props;\n  // console.log(id);\n\n  const alert = useAlert();\n  const { register, handleSubmit, reset } = useForm();\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [custId, setCustId] = useState(\"\");\n  const [custname, setCustName] = useState();\n  const [assignId, setAssignID] = useState(\"\");\n  const [assingNo, setAssingNo] = useState(\"\");\n\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [proposal, setProposal] = useState({\n    query: \"\",\n    name: \"\",\n    amount: \"\",\n    payable: \"\",\n    misc1: \"\",\n    misc2: \"\",\n    payable_through: \"\",\n  });\n  const { query, name, amount, misc1, misc2, payable_through } = proposal;\n\n  useEffect(() => {\n    getQuery();\n  }, []);\n\n  const getQuery = () => {\n    axios.get(`${baseUrl}/tl/getProposalDetail?id=${id}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setProposal({\n          name: res.data.result.name,\n          query: res.data.result.assign_no,\n          amount: res.data.result.amount,\n          misc1: res.data.result.misc1,\n          misc2: res.data.result.misc2,\n          payable_through: res.data.result.payable_through,\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\n      console.log(\"res\", res);\n      // setCustName(res.data.name);\n      setCustId(res.data.id);\n    };\n    getUser();\n  }, [id]);\n\n  console.log(assignId);\n\n  const onSubmit = (value) => {\n    console.log(value);\n\n    // var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n    var todaysDate = new Date();\n    let formData = new FormData();\n\n    formData.append(\"assign_no\", value.p_assingment);\n    formData.append(\"name\", value.p_name);\n    // formData.append(\"type\", \"tl\");\n    formData.append(\"assign_id\", id);\n    formData.append(\"amount\", value.p_amount);\n    formData.append(\"payable_through\", value.p_payable);\n    formData.append(\"misc1\", value.misc_1);\n    formData.append(\"misc2\", value.misc_2);\n    // formData.append(\"payable_date\", todaysDate);\n    // formData.append(\"customer_id\", custId);\n    // formData.append(\"assign_id\", assignId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/updateProposal`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          // reset();\n          getQuery();\n          alert.success(<Msg />);\n          history.push(\"/teamleader/proposal\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  //alert msg\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"10px\" }}>proposal updated</p>\n      </>\n    );\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"7\">\n              <div class=\"btn ml-3\">\n                <h4>Edit Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    class=\"form-control\"\n                    value={query}\n                    ref={register}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Customer Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    class=\"form-control\"\n                    value={name}\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Amount</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_amount\"\n                    class=\"form-control\"\n                    ref={register}\n                    defaultValue={amount}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by Through</label>\n                  <select\n                    class=\"form-control\"\n                    name=\"p_payable\"\n                    aria-label=\"Default select example\"\n                    ref={register}\n                    defaultValue={payable_through}\n                  >\n                    <option value=\"\">--select--</option>\n                    {payable.map((p, index) => (\n                      <option key={index} value={p.pay}>\n                        {p.pay}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Misc 1</label>\n                  <input\n                    type=\"text\"\n                    name=\"misc_1\"\n                    class=\"form-control\"\n                    ref={register}\n                    defaultValue={misc1}\n                  />\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Proposal Description</label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"textarea\"\n                    rows=\"3\"\n                    name=\"misc_2\"\n                    defaultValue={misc2}\n                    ref={register}\n                  ></textarea>\n                </div>\n              </div>\n            </div>\n\n            {/* <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by date</label>\n                  <input\n                    type=\"date\"\n                    name=\"p_date\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div> */}\n\n            <br />\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ProposalComponent;\n\nconst payable = [\n  { pay: \"NEFT\" },\n  { pay: \"DEBIT CARD\" },\n  { pay: \"CREDIT CARD\" },\n  { pay: \"UPI\" },\n  { pay: \"WALLET\" },\n];\n","/var/www/html/Mazars_Pannel/src/pages/Admin/PendingReceived/PendingRecevived.js",["1222","1223","1224","1225","1226","1227"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\n\nfunction PendingRecevied() {\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setAssingmentNo(res.data.result[0].assign_no);\n        }\n      });\n    };\n\n    getSubmittedAssingment();\n    getQuery();\n  }, [assingNo]);\n\n  console.log(assingNo);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setDisplayQuery(res.data.result);\n        }\n      });\n  };\n\n     //change date format\n     function ChangeFormateDate(oldDate) {\n      console.log(\"date\", oldDate);\n      if (oldDate == null) {\n        return null;\n      }\n      return oldDate.toString().split(\"-\").reverse().join(\"-\");\n    }\n    \n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              {/* <p>{assingNo}</p> */}\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {submitData.map((p, i) => (\n            <div class=\"card-body\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Titles</th>\n                    <th scope=\"col\">Data</th>\n                  </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope=\"row\">Query No</th>\n                    <td>{p.assign_no}</td>\n                  </tr>\n                <tr>\n                    <th scope=\"row\">Query Status</th>\n                    <td>{p.status}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facts of the case</th>\n                    <td>{p.fact_case}</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      Timelines within which Opinion is Required\n                    </th>\n                    <td colspan=\"1\">{p.Timelines}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">specific questions</th>\n                    <td colspan=\"1\">\n                      {diaplaySpecific.map((p, i) => (\n                        <p>{p.text}</p>\n                      ))}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Documents</th>\n                    <td>\n                      {p.upload_doc_1 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_2 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_3 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Format in which Opinion is required</th>\n                    <td colspan=\"1\">\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                      <p>\n                        {p.softcopy_digitally_assigned === \"1\" &&\n                          \"SoftCopy- Digitally Signed\"}\n                      </p>\n\n                      <p>\n                        {p.printout_physically_assigned === \"1\" &&\n                          \"Printout- Physically Signed\"}\n                      </p>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Action</th>\n                    <td>\n                    {p.allocation_status == \"0\" || p.allocation_status == \"3\"  ? (\n                        <Link to={`/admin/queryassing/${p.id}`}>\n                        <i class=\"fa fa-share\"></i>\n                      </Link>\n                      ) : (                  \n                       null\n                      )}\n                    </td>\n                  </tr>\n                 \n                </tbody>\n              </table>\n\n              <table class=\"table table-bordered\">\n                {displayQuery.length > 0 && (\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                        Additional Queries\n                      </th>\n                      <th scope=\"col\">Date Submission</th>\n                      <th scope=\"col\">Documents</th>\n                    </tr>\n                  </thead>\n                )}\n\n                {displayQuery.map((p, i) => (\n                  <tbody>\n                    <tr key={i}>\n                      <td>{p.additional_queries}</td>\n                      <td>{ChangeFormateDate(p.created)}</td>\n                      <td>\n                        {p.upload_doc == \"\" ? (\n                          \"\"\n                        ) : (\n                          <p>\n                            <a\n                              href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc}`}\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                          </p>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          ))}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default PendingRecevied;\n","/var/www/html/Mazars_Pannel/src/pages/TL/PendingReceived/PendingReceived.js",["1228","1229","1230","1231","1232"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\n\nfunction PendingRecevied() {\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const alert = useAlert();\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  useEffect(() => {\n    getQueryDetails();\n    getAdditionalQuery();\n  }, [assingNo]);\n\n  const getQueryDetails = () => {\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setSubmitData(res.data.result);\n        setDisplaySpecific(res.data.additional_queries);\n        setAssingmentNo(res.data.result[0].assign_no);\n      }\n    });\n  };\n\n  const getAdditionalQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setDisplayQuery(res.data.result);\n        }\n      });\n  };\n\n\n\n\n  const acceptHandler = (key) => {\n    console.log(\"acceptHandler\", key);\n\n    let formData = new FormData();\n    formData.append(\"set\", 1);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"response-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Query accepted\");\n          history.goBack()\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const rejectHandler = (key) => {\n    console.log(\"rejectHandler\", key);\n\n    let formData = new FormData();\n    formData.append(\"set\", 0);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Query rejected\");\n          history.goBack()\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n \n\n     //change date format\n     function ChangeFormateDate(oldDate) {\n      console.log(\"date\", oldDate);\n      if (oldDate == null) {\n        return null;\n      }\n      return oldDate.toString().split(\"-\").reverse().join(\"-\");\n    }\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              {/* <p>{assingNo}</p> */}\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {submitData.map((p, i) => (\n            <div class=\"card-body\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Titles</th>\n                    <th scope=\"col\">Data</th>\n                  </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope=\"row\">Query No</th>\n                    <td>{p.assign_no}</td>\n                  </tr>\n                <tr>\n                    <th scope=\"row\">Query Status</th>\n                    <td>{p.status}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facts of the case</th>\n                    <td>{p.fact_case}</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      Timelines within which Opinion is Required\n                    </th>\n                    <td colspan=\"1\">{p.Timelines}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">specific questions</th>\n                    <td colspan=\"1\">\n                      {diaplaySpecific.map((p, i) => (\n                        <p>{p.text}</p>\n                      ))}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Documents</th>\n                    <td>\n                      {p.upload_doc_1 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_2 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_3 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Format in which Opinion is required</th>\n                    <td colspan=\"1\">\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                      <p>\n                        {p.softcopy_digitally_assigned === \"1\" &&\n                          \"SoftCopy- Digitally Signed\"}\n                      </p>\n\n                      <p>\n                        {p.printout_physically_assigned === \"1\" &&\n                          \"Printout- Physically Signed\"}\n                      </p>\n                    </td>\n                  </tr>\n                  \n                  <tr>\n                    <th scope=\"row\">Accept / Reject</th>\n                    <td>\n                    <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"space-evenly\",\n                          color: \"#6967ce\",\n                          cursor: \"pointer\",\n                        }}\n                        id=\"div1\"\n                      >\n                        <div\n                          id=\"accept\"\n                          title=\"Accept Assignment\"\n                          onClick={() => acceptHandler(p)}\n                        >\n                          <i class=\"fa fa-check\" style={{ color: \"green\" }}></i>\n                        </div>\n                        <div\n                          id=\"reject\"\n                          title=\"Reject Assignment\"\n                          onClick={() => rejectHandler(p)}\n                        >\n                          <i class=\"fa fa-times\" style={{ color: \"red\" }}></i>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n\n              <table class=\"table table-bordered\">\n                {displayQuery.length > 0 && (\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                        Additional Queries\n                      </th>\n                      <th scope=\"col\">Date Submission</th>\n                      <th scope=\"col\">Documents</th>\n                    </tr>\n                  </thead>\n                )}\n\n                {displayQuery.map((p, i) => (\n                  <tbody>\n                    <tr key={i}>\n                      <td>{p.additional_queries}</td>\n                      <td>{ChangeFormateDate(p.created)}</td>\n                      <td>\n                        {p.upload_doc == \"\" ? (\n                          \"\"\n                        ) : (\n                          <p>\n                            <a\n                              href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc}`}\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                          </p>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          ))}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default PendingRecevied;\n","/var/www/html/Mazars_Pannel/src/components/Search-Filter/SearchFilter.js",["1233","1234","1235","1236"],"/var/www/html/Mazars_Pannel/src/components/Admin-Header/NavWrapper.js",["1237","1238","1239","1240","1241","1242"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link, useHistory } from \"react-router-dom\";\n// import CustomerNotification from \"./CustomerNotification\";\n\nfunction NavWrapper(props) {\n  const { color, logout, name, cust, tpdashboard } = props;\n  const history = useHistory();\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const [notification, setNotification] = useState([]);\n  const [countNotification, setCountNotification] = useState(\"\");\n\n  useEffect(() => {\n    getNotification();\n  }, []);\n\n  const getNotification = () => {\n    axios\n      .get(`${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setNotification(res.data.result);\n          setCountNotification(res.data.result.length);\n        }\n      });\n  };\n\n  // readnotification\n  const readNotification = (id) => {\n    axios\n      .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\n      .then(function (response) {\n        console.log(\"delete-\", response);\n        if (response.data.code === 1) {\n          console.log(response.data.result);\n          history.push(\"/customer/proposal\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n      <div class=\"navbar-wrapper\">\n        <div class=\"navbar-container\" style={{ background: color }}>\n          <div class=\"collapse navbar-collapse show\" id=\"navbar-mobile\">\n            <ul class=\"nav navbar-nav mr-auto float-left\">\n              <li class=\"nav-item d-block d-md-none\">\n                <a\n                  class=\"nav-link nav-menu-main menu-toggle hidden-xs is-active\"\n                  href=\"#\"\n                >\n                  <i class=\"fa fa-bars\"></i>\n                </a>\n              </li>\n\n              <li class=\"nav-item dropdown navbar-search\">\n                <ul class=\"dropdown-menu\">\n                  <li class=\"arrow_box\">\n                    <form>\n                      <div class=\"input-group search-box\">\n                        <div class=\"position-relative has-icon-right full-width\">\n                          <input\n                            class=\"form-control\"\n                            id=\"search\"\n                            type=\"text\"\n                            placeholder=\"Search here...\"\n                          />\n                          <div class=\"form-control-position navbar-search-close\">\n                            <i class=\"fa fa-times\"> </i>\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  </li>\n                </ul>\n              </li>\n\n              <li>\n                <h4 class=\"brand-text text-white\">{name}</h4>\n              </li>\n            </ul>\n\n            <ul class=\"nav navbar-nav float-right\">\n              {/* {cust && (\n                <li class=\"dropdown dropdown-notification nav-item\">\n                  {countNotification ? (\n                    <div>\n                      <a\n                        class=\"nav-link nav-link-label\"\n                        href=\"#\"\n                        data-toggle=\"dropdown\"\n                      >\n                        <span class=\"badge badge-light\">\n                          <i class=\"fa fa-bell\" style={{ fontSize: \"16px\" }}>\n                            {countNotification}\n                          </i>\n                        </span>\n                      </a>\n\n                      <div\n                        class=\"dropdown-menu dropdown-menu-right\"\n                        style={{ height: \"300px\", overflowY: \"scroll\" }}\n                      >\n                        <div class=\"arrow_box_right\">\n                          {notification.map((p, i) => (\n                            <div\n                              class=\"dropdown-item\"\n                              style={{ padding: \"0\", fontSize: \"12px\" }}\n                            >\n                              <p\n                                class=\"dropdown-item\"\n                                style={{ cursor: \"pointer\" }}\n                                onClick={() => readNotification(p.id)}\n                              >\n                                {p.message}\n                              </p>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  ) : null}\n                </li>\n              )} */}\n\n              <li class=\"dropdown dropdown-user nav-item\">\n                <a\n                  class=\"dropdown-toggle nav-link dropdown-user-link\"\n                  href=\"#\"\n                  data-toggle=\"dropdown\"\n                  aria-expanded=\"false\"\n                >\n                  {/* <span class=\"pr-2\">{name}</span> */}\n                  <span class=\"avatar avatar-online\">\n                    <img\n                      src=\"https://cdn1.vectorstock.com/i/1000x1000/40/30/user-glyph-icon-web-and-mobile-admin-sign-vector-18444030.jpg\"\n                      alt=\"avatar\"\n                    />\n                    <i style={{ paddingLeft: \"6px\" }}></i>\n                  </span>\n                </a>\n\n                <div class=\"dropdown-menu dropdown-menu-right\">\n                  <div class=\"arrow_box_right\">\n                    {cust && (\n                      <p class=\"dropdown-item\" style={{ cursor: \"pointer\" }}>\n                        <i class=\"fa fa-sign-out\"></i>\n                        <Link to=\"/customer/change-password\">\n                          Change Password\n                        </Link>\n                      </p>\n                    )}\n\n                    {tpdashboard && (\n                      <p class=\"dropdown-item\" style={{ cursor: \"pointer\" }}>\n                        <i class=\"fa fa-sign-out\"></i>\n                        <Link to=\"/taxprofessional/change-password\">\n                          Change Password\n                        </Link>\n                      </p>\n                    )}\n\n                    <p\n                      class=\"dropdown-item\"\n                      onClick={logout}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <i class=\"fa fa-sign-out\"></i>\n                      Logout\n                    </p>\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default NavWrapper;\n","/var/www/html/Mazars_Pannel/src/components/Search-Filter/CustomerFilter.js",["1243","1244","1245","1246","1247","1248","1249","1250","1251"],"/var/www/html/Mazars_Pannel/src/views/ForgetPassword/ForgetPassword.js",["1252","1253","1254"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n// import NewPassword from \"../NewPassword/NewPassword\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n});\n\n\n\nfunction ForgetPassword(props) {\n  const alert = useAlert();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/forgototp`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"otp send your email !\");\n          props.history.push(\"/customer/new-password\");\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);   \n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n        <div className=\"form\">\n        <div className=\"heading\">\n            <h2>Forgot Password</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            \n      \n            <div className=\"mb-3\">\n              <label className=\"form-label\">Email</label>\n              <input\n                type=\"text\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_email,\n                })}\n                name=\"p_email\"\n                ref={register}\n                placeholder=\"Enter Email\"\n              />\n              {errors.p_email && (\n                <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n\n          </form>\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n","/var/www/html/Mazars_Pannel/src/views/NewPassword/NewPassword.js",["1255","1256","1257","1258"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\n\n\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    // formData.append(\"user_id\", value.p_name);\n    formData.append(\"email\", value.p_email);\n    formData.append(\"code\", value.p_code);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"reset password successfully!\");\n          reset();\n          props.history.push(\"/customer/signin\");\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          // alert.error(response.data.result);\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Reset Password</h2>\n          </div>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-group\">\n             \n              <div className=\"mb-3\">\n                <label className=\"form-label\">Email</label>\n                <input\n                  type=\"text\"\n                  className={classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_email,\n                  })}\n                  name=\"p_email\"\n                  placeholder=\"Enter Email\"\n                  ref={register({\n                    required: \"This field is required\",\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: \"Please enter valid email address\",\n                    },\n                  })}\n                />\n                {errors.p_email && (\n                  <div className=\"invalid-feedback\">\n                    {errors.p_email.message}\n                  </div>\n                )}\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label\">OTP</label>\n                <input\n                  type=\"text\"\n                  className={classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_code,\n                  })}\n                  name=\"p_code\"\n                  placeholder=\"Enter otp\"\n                  ref={register({\n                    required: \"This field is required\",\n                  })}\n                />\n                {errors.p_code && (\n                  <div className=\"invalid-feedback\">\n                    {errors.p_code.message}\n                  </div>\n                )}\n              </div>\n              <label className=\"form-label\">New Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_password,\n                })}\n                placeholder=\"Enter Your Password\"\n                name=\"p_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  pattern: {\n                    value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n                    message:\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\n                  },\n                })}\n              />\n              {errors.p_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_password.message}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Confirm Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_confirm_password,\n                })}\n                placeholder=\"Confirm Password\"\n                name=\"p_confirm_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  validate: (value) =>\n                    value === getValues(\"p_password\") ||\n                    \"password doesn 't match\",\n                })}\n              />\n              {errors.p_confirm_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_confirm_password.message}\n                </div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default NewPassword;\n\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required user id\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_code: yup.string().required(\"required otp \"),\n//   // p_password: yup.string().required(\"required password\"),\n//   // p_confirm_password: yup.string().required(\"required confirm password\"),\n// });\n","/var/www/html/Mazars_Pannel/src/views/ChangePassword/ChangePassword.js",["1259","1260","1261"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Layout from \"../../components/Layout/Layout\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required user id\"),\n//   p_password: yup.string().required(\"required password\"),\n//   p_confirm_password: yup.string().required(\"required confirm password\"),\n// });\n\nfunction ChangePassword(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const alert = useAlert();\n  // const { handleSubmit, register, reset, errors } = useForm({\n  //   resolver: yupResolver(Schema),\n  // });\n\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n\n  const [error, setError] = useState(\"\");\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"id\", JSON.parse(userId));\n    formData.append(\"user_id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"rpassword\", value.confirm_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/passChange`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"change password successfully!\");\n          reset();\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n          reset();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Change Password</h2>\n          </div>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-group\">\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Email </label>\n                <input\n                  type=\"text\"\n                  className={classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_email,\n                  })}\n                  name=\"p_email\"\n                  placeholder=\"Enter email id\"\n                  ref={register({\n                    required: \"This field is required\",\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: \"Please enter valid email address\",\n                    },\n                  })}\n                />\n                {errors.p_email && (\n                  <div className=\"invalid-feedback\">\n                    {errors.p_email.message}{\" \"}\n                  </div>\n                )}\n              </div>\n\n              <label className=\"form-label\">New Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_password,\n                })}\n                placeholder=\"Enter Your Password\"\n                name=\"p_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  pattern: {\n                    value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n                    message:\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\n                  },\n                })}\n              />\n              {errors.p_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_password.message}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Confirm Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_confirm_password,\n                })}\n                placeholder=\"Confirm Password\"\n                name=\"p_confirm_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  validate: (value) =>\n                    value === getValues(\"p_password\") ||\n                    \"password doesn 't match\",\n                })}\n              />\n              {errors.p_confirm_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_confirm_password.message}\n                </div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default ChangePassword;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/TeamLeaderTab/Header/index.js",[],["1262","1263"],"/var/www/html/Mazars_Pannel/src/components/FontawsomeIcons/index.js",[],["1264","1265"],"/var/www/html/Mazars_Pannel/src/components/DataTable/Header/index.js",[],["1266","1267"],"/var/www/html/Mazars_Pannel/src/pages/TL/PendingForAllocation/PendingForAllocation.js",["1268","1269","1270","1271","1272","1273","1274","1275"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nfunction PendingForAllocation() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [pendingAllocation, setPendingAllocation] = useState([]);\n\n  useEffect(() => {\n    getPendingForAllocation();\n  }, []);\n\n  const getPendingForAllocation= () => {\n    axios\n      .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setPendingAllocation(res.data.result);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.query_date);\n        var updatedate = row.query_date.split(\" \")[0];\n        console.log(updatedate);\n        if (updatedate == null) {\n          return null;\n        }\n        return updatedate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.Exp_Delivery_Date);\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query Allocation\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n                color: \"green\",\n              }}\n            >\n              <Link to={`/teamleader/queryassing/${row.id}`}>\n                <i class=\"fa fa-share\"></i>\n              </Link>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div>\n      <Card>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={pendingAllocation}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default PendingForAllocation;\n",["1276","1277"],"/var/www/html/Mazars_Pannel/src/pages/TL/PendingForProposal/PendingForProposal.js",["1278","1279","1280","1281","1282","1283","1284","1285"],"/var/www/html/Mazars_Pannel/src/pages/TL/PendingForPayment/PendingForPayment.js",["1286","1287","1288","1289","1290","1291","1292","1293"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\n\nfunction PendingForPayment() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [pendingForPayment, setPendingForPayment] = useState([]);\n\n  useEffect(() => {\n    getPendingForPayment();\n  }, []);\n\n  const getPendingForPayment = () => {\n    axios\n      .get(`${baseUrl}/tl/getProposals?uid=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n            setPendingForPayment(res.data.result);\n        }\n      });\n  };\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      // formatter: function dateFormat(cell, row) {\n      //   console.log(\"dt\", row.query_date);\n      //   var date = row.query_date\n      //   var updatedate = date.split(\" \")[0];\n      //   console.log(updatedate);\n      //   if (updatedate == null) {\n      //     return null;\n      //   }\n      //   return updatedate.toString().split(\"-\").reverse().join(\"-\");\n      // },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },   \n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Assignment No\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Amount Accepted\",\n      dataField: \"accepted_amount\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Payment Terms\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Payments Received\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Outstanding payment\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n  ];\n\n  return (\n    <div>\n      <Card>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={pendingForPayment}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default PendingForPayment;\n","/var/www/html/Mazars_Pannel/src/components/Admin-Header/CustomerNotification.js",["1294","1295","1296"],"/var/www/html/Mazars_Pannel/src/pages/TL/QueryTab2/QueryTab2.js",["1297","1298","1299","1300","1301","1302","1303","1304","1305"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\n\nimport PendingForAcceptence from \"../PendingForAcceptence/PendingForAcceptence\";\nimport InCompleteData from \"../InCompleteData/InCompleteData\";\nimport PendingForPayment from \"../PendingForPayment/PendingForPayment\";\n\n\nfunction QueriesTab() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [pendingAcceptence, setPendingAcceptence] = useState(\"\");\n  const [incomplete, setIncomplete] = useState(\"\");\n  const [complete, setComplete] = useState(\"\");\n\n  const CountPendingForAcceptence = (data) => {\n    setPendingAcceptence(data);\n  };\n\n  const CountIncomplete = (data) => {\n    setIncomplete(data);\n  };\n\n  const CountComplete = (data) => {\n    setComplete(data);\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <ul\n            class=\"nav nav-pills mb-3\"\n            style={{ justifyContent: \"space-around\" }}\n            id=\"pills-tab\"\n            role=\"tablist\"\n          >\n            <li class=\"nav-item\" role=\"presentation\">\n              <a\n                class=\"nav-link text-white active\"\n                id=\"pills-query-tab\"\n                data-toggle=\"pill\"\n                href=\"#query\"\n                role=\"tab\"\n                aria-controls=\"pills-query\"\n                aria-selected=\"false\"\n              >\n                All query\n              </a>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n              <a\n                class=\"nav-link text-white\"\n                id=\"pills-pendingAllocation-tab\"\n                data-toggle=\"pill\"\n                href=\"#pendingAllocation\"\n                role=\"tab\"\n                aria-controls=\"pills-pendingAllocation\"\n                aria-selected=\"false\"\n              >\n                Pending For allocation\n              </a>\n            </li>\n\n            <li class=\"nav-item\" role=\"presentation\">\n              <a\n                class=\"nav-link text-white\"\n                id=\"pills-pendingPayment-tab\"\n                data-toggle=\"pill\"\n                href=\"#pendingPayment\"\n                role=\"tab\"\n                aria-controls=\"pills-pendingPayment\"\n                aria-selected=\"false\"\n              >\n                Pending For Payment\n              </a>\n            </li>\n          </ul>\n\n          <div class=\"tab-content\" id=\"pills-tabContent\">\n            <div\n              class=\"tab-pane fade show active\"\n              id=\"query\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-query-tab\"\n            >\n              <PendingForAcceptence\n                CountPendingForAcceptence={CountPendingForAcceptence}\n              />\n            </div>\n\n            <div\n              class=\"tab-pane fade\"\n              id=\"pendingAllocation\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-pendingAllocation-tab\"\n            >\n              <InCompleteData CountIncomplete={CountIncomplete} />\n            </div>\n\n            <div\n              class=\"tab-pane fade\"\n              id=\"pendingPayment\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-pendingPayment-tab\"\n            >\n              <PendingForPayment />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n","/var/www/html/Mazars_Pannel/src/views/Propposal2/Proposal2.js",["1306","1307","1308","1309","1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320","1321"],"/var/www/html/Mazars_Pannel/src/views/EditQuery/EditQuery.js",["1322","1323","1324","1325","1326","1327","1328"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport * as yup from \"yup\";\nimport { useAlert } from \"react-alert\";\nimport { Card, CardHeader, Row, Col } from \"reactstrap\";\nimport { Spinner } from \"reactstrap\";\nimport Select from \"react-select\";\n\nfunction EditQuery(props) {\n  // const { Option } = Select;\n  const alert = useAlert();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const { handleSubmit, register, errors, reset, control, setValue } = useForm({\n    defaultValues: {\n      users: [{ query: \"\" }],\n    },\n  });\n\n  const { append, remove, fields } = useFieldArray({\n    control,\n    name: \"users\",\n  });\n\n  const userId = window.localStorage.getItem(\"userid\");\n  const category = window.localStorage.getItem(\"category\");\n\n  // const [selectedData, setSelectedData] = useState(\"\");\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [load, setLoad] = useState(false);\n  const [selectedOption, setSelectedOption] = useState([]);\n  const [purposeOption, setPurposeOption] = useState([]);\n\n  useEffect(() => {\n    getQuery();\n  }, []);\n\n  const getQuery = () => {\n    axios.get(`${baseUrl}/customers/getQueryDetails?id=${id}`).then((res) => {\n      console.log(res);\n      console.log(\"result\", res.data.result[0]);\n      console.log(\"result\", res.data.result[0].purpose_opinion);\n\n      // var purposeItem = res.data.result[0].purpose_opinion;\n      // console.log(\"purposeItem-\", typeof purposeItem);\n\n      if (res) {\n        // setLoad(true);\n\n        var specific = res.data.result[0].specific_query;\n        if (specific == \"undefined\") {\n        } else var sepData = JSON.parse(specific);\n        reset({\n          users: sepData,\n        });\n\n        var value = res.data.result[0].assessment_year;\n        var purposeItem = res.data.result[0].purpose_opinion;\n\n        console.log(\"assem\", value);\n        try {\n          var myObj = JSON.parse(value);\n          var myPurpose = JSON.parse(purposeItem);\n\n          setSelectedOption(myObj);\n          setPurposeOption(myPurpose);\n        } catch (e) {\n          return false;\n        }\n\n        console.log(\"purpose\", purpose);\n        console.log(\"purpose[0]\", purpose[0]);\n        setValue(\"fact_case\", res.data.result[0].fact_case);\n        setValue(\"case_name\", res.data.result[0].case_name);\n        setValue(\"p_Softcopy_word\", Boolean(+res.data.result[0].softcopy_word));\n        setValue(\n          \"p_Softcopy_digital\",\n          Boolean(+res.data.result[0].softcopy_digitally_assigned)\n        );\n        setValue(\n          \"p_Softcopy_physical\",\n          Boolean(+res.data.result[0].printout_physically_assigned)\n        );\n        setValue(\"p_timelines\", res.data.result[0].Timelines);\n        setQueryDocs(res.data.queries_document);\n      }\n    });\n  };\n\n  const onSubmit = (value) => {\n    console.log(\"value\", value);\n    setLoad(true);\n    let formData = new FormData();\n\n    var uploadImg = value.upload;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        console.log(\"pics\", value.upload[i].pics[0]);\n\n        let a = value.upload[i].pics[0];\n        formData.append(\"upload_1[]\", a);\n      }\n    }\n    formData.append(\"fact\", value.fact_case);\n    formData.append(\"specific\", JSON.stringify(value.specific));\n    formData.append(\"timelines\", value.p_timelines);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"id\", id);\n    formData.append(\"cid\", JSON.parse(category));\n    formData.append(\"softcopy_word\", Number(value.p_Softcopy_word));\n    formData.append(\n      \"softcopy_digitally_assigned\",\n      Number(value.p_Softcopy_digital)\n    );\n    formData.append(\n      \"printout_physically_assigned\",\n      Number(value.p_Softcopy_physical)\n    );\n    formData.append(\"case_name\", value.case_name);\n    formData.append(\"assessment_year\", JSON.stringify(selectedOption));\n    formData.append(\"purpose\", JSON.stringify(purposeOption));\n\n    axios\n      .post(`${baseUrl}/customers/PostEditQuestion`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"updated\");\n          props.history.push(\"/customer/queries\");\n        } else {\n          setLoad(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Update Query</p>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardHeader>\n          <div class=\"col-xl-8 col-lg-8 col-md-12 py-4\">\n            {load ? (\n              <Spinner size=\"sm\" color=\"primary\" />\n            ) : (\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Facts of the case</label>\n                      <textarea\n                        className=\"form-control\"\n                        id=\"textarea\"\n                        rows=\"6\"\n                        name=\"fact_case\"\n                        ref={register}\n                      ></textarea>\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"question_query mb-2\">\n                      <label className=\"form-label\">\n                        Specific Questions for advisory\n                      </label>\n                      <div\n                        className=\"btn btn-primary\"\n                        onClick={() => append({ query: \"\" })}\n                      >\n                        +\n                      </div>\n                    </div>\n\n                    {fields.map((item, index) => (\n                      <div className=\"question_query_field mb-2\" key={index}>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          ref={register}\n                          name={`specific[${index}].query`}\n                          defaultValue={`${item.query}`}\n                          placeholder=\"Specify your query\"\n                        />\n                        <div\n                          className=\"btn btn-primary ml-2\"\n                          onClick={() => remove(index)}\n                        >\n                          -\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Case name</label>\n                      <input\n                        type=\"text\"\n                        name=\"case_name\"\n                        ref={register}\n                        className=\"form-control\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Assessment year</label>\n\n                      <Select\n                        closeMenuOnSelect={false}\n                        onChange={setSelectedOption}\n                        value={selectedOption}\n                        isMulti\n                        options={assessment_year}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <ImageUploads register={register} control={control} />\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">\n                        Format in which Opinion is required\n                      </label>\n                      <br />\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          name=\"p_Softcopy_word\"\n                          ref={register}\n                        />\n                        <label className=\"form-check-label\">\n                          Softcopy - Word/ Pdf\n                        </label>\n                      </div>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          name=\"p_Softcopy_digital\"\n                          ref={register}\n                        />\n                        <label className=\"form-check-label\">\n                          SoftCopy- Digitally Signed\n                        </label>\n                      </div>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          name=\"p_Softcopy_physical\"\n                          ref={register}\n                        />\n                        <label className=\"form-check-label\">\n                          Printout- Physically Signed\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">\n                        Timelines within which Opinion is Required\n                      </label>\n                      <br />\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"p_timelines\"\n                          ref={register}\n                          value=\"Urgent, (4-5 Working Days)\"\n                          disabled\n                        />\n                        <label>Urgent, (4-5 Working Days)</label>\n                      </div>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"p_timelines\"\n                          ref={register}\n                          value=\"Regular (10-12 Working Days)\"\n                          disabled\n                        />\n                        <label>Regular (10-12 Working Days)</label>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Display Documents</label>\n                      <br />\n\n                      <>\n                        <div>\n                          <table class=\"table table-bordered\">\n                            <tr>\n                              <th scope=\"col\">#</th>\n                              <th scope=\"col\">View</th>\n                            </tr>\n                            {queryDocs.map((p, i) => (\n                              <tr>\n                                <td>{i + 1}</td>\n                                <td>\n                                  <a\n                                    href={`http://65.0.220.156/mazarapi/assets/image/${p.name}`}\n                                    target=\"_blank\"\n                                  >\n                                    <i\n                                      class=\"fa fa-photo\"\n                                      style={{ width: \"50\", height: \"20\" }}\n                                    ></i>\n                                  </a>\n                                </td>\n                              </tr>\n                            ))}\n                          </table>\n                        </div>\n                      </>\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">\n                        Purpose for which Opinion is sought\n                      </label>\n                      <Select\n                        closeMenuOnSelect={false}\n                        onChange={setPurposeOption}\n                        value={purposeOption}\n                        isMulti\n                        options={purpose}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Update\n                </button>\n              </form>\n            )}\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditQuery;\n\nconst ImageUploads = ({ register, control }) => {\n  const { append, fields, remove } = useFieldArray({\n    control,\n    name: \"upload\",\n  });\n\n  return (\n    <>\n      <div className=\"question_query mb-2\">\n        <label className=\"form-label\">Upload Your Document</label>\n        <div className=\"btn btn-primary\" onClick={() => append({ pics: \"\" })}>\n          +\n        </div>\n      </div>\n\n      {fields.map((item, index) => (\n        <div className=\"question_query_field mb-2\" key={index}>\n          <input\n            type=\"file\"\n            name={`upload[${index}].pics`}\n            ref={register()}\n            className=\"form-control-file\"\n            defaultValue={item.pics}\n          />\n          <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\n            -\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n\nconst assessment_year = [\n  {\n    value: \"2010-11\",\n    label: \"2010-11\",\n  },\n  {\n    value: \"2011-12\",\n    label: \"2011-12\",\n  },\n  {\n    value: \"2012-13\",\n    label: \"2012-13\",\n  },\n  {\n    value: \"2013-14\",\n    label: \"2013-14\",\n  },\n  {\n    value: \"2014-15\",\n    label: \"2014-15\",\n  },\n  {\n    value: \"2015-16\",\n    label: \"2015-16\",\n  },\n  {\n    value: \"2016-17\",\n    label: \"2016-17\",\n  },\n  {\n    value: \"2017-18\",\n    label: \"2017-18\",\n  },\n  {\n    value: \"2018-19\",\n    label: \"2018-19\",\n  },\n  {\n    value: \"2019-20\",\n    label: \"2019-20\",\n  },\n  {\n    value: \"2020-21\",\n    label: \"2020-21\",\n  },\n  {\n    value: \"2021-22\",\n    label: \"2021-22\",\n  },\n  {\n    value: \"2022-23\",\n    label: \"2022-23\",\n  },\n  {\n    value: \"2023-24\",\n    label: \"2023-24\",\n  },\n  {\n    value: \"2024-25\",\n    label: \"2024-25\",\n  },\n  {\n    value: \"2025-26\",\n    label: \"2025-26\",\n  },\n  {\n    value: \"2026-27\",\n    label: \"2026-27\",\n  },\n  {\n    value: \"2027-28\",\n    label: \"2027-28\",\n  },\n];\n\nconst purpose = [\n  { value: \"Assessment\", label: \"Assessment\" },\n  { value: \"Appeal\", label: \"Appeal\" },\n  { value: \"Filing before any Court\", label: \"Filing before any Court\" },\n  {\n    value: \"Filing before any Authority\",\n    label: \"Filing before any Authority\",\n  },\n  { value: \"Others\", label: \"Others\" },\n];\n\n// console.log(\"value :\", value);\n\n// console.log(\"arr\", arr);\n// const [user, setUser] = useState({\n//   fact: \"\",\n//   case_assement: \"\",\n//   p_Softcopy_word: \"\",\n//   p_Softcopy_digital: \"\",\n//   p_Softcopy_physical: \"\",\n// });\n// const {\n//   fact,\n//   case_assement,\n//   p_Softcopy_word,\n//   p_Softcopy_digital,\n//   p_Softcopy_physical,\n// } = user;\n{\n  /* <SelectComponent\n                        assessmentYear={assessmentYear}\n                        updateValue={updateValue}\n                      /> */\n}\n","/var/www/html/Mazars_Pannel/src/components/Search-Filter/AdminFilter.js",["1329","1330","1331","1332","1333","1334","1335","1336","1337","1338","1339","1340","1341"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\n\nfunction AdminFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const {\n    setData,\n    getData,\n    acceptedProposal,\n    pendingAcceptedProposal,\n    declinedProposal,\n    pendingPayment,\n    pendingForProposal,\n    pendingAlloation,\n    allQueries,\n    assignment,\n    paymentStatus,\n  } = props;\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    console.log(`selected ${value}`);\n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetCategory ..\");\n    setSelectedData([]);\n    setStore2([]);\n    getData();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getData();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"store2 :\", store2);\n\n    if (acceptedProposal == \"acceptedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getProposals?&status=5,7,8&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n\n    if (pendingAcceptedProposal == \"pendingAcceptedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getProposals?&status=4&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n\n    if (declinedProposal == \"declinedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getProposals?&status=6&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n\n    if (pendingPayment == \"pendingPayment\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getProposals?&status=5,7&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n\n    if (pendingForProposal == \"pendingForProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/pendingProposal?category=${store2}&date1=${data.p_dateFrom}&date2=${data.p_dateTo}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n\n    if (allQueries == \"allQueries\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getAllQueries?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n\n    if (pendingAlloation == \"pendingAlloation\") {\n      axios\n        .get(\n          `${baseUrl}/admin/pendingAllocation?category=${store2}&date1=${data.p_dateFrom}&date2=${data.p_dateTo}&status=${data.p_status}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n\n    if (paymentStatus == \"paymentStatus\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n\n    // if (assignment == \"assignment\") {\n    //   axios\n    //     .get(\n    //       `${baseUrl}/tl/getAssignments?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}`\n    //     )\n    //     .then((res) => {\n    //       console.log(res);\n    //       if (res.data.code === 1) {\n    //         if (res.data.result) {\n    //           setData(res.data.result);\n    //         }\n    //       }\n    //     });\n    // }\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-12 d-flex\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"form-inline\">\n                <div class=\"form-group mb-2\">\n                  <Select\n                    style={{ width: 130 }}\n                    placeholder=\"Select Category\"\n                    defaultValue={[]}\n                    onChange={handleCategory}\n                    value={selectedData}\n                  >\n                    <Option value=\"1\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\n                    </Option>\n                    <Option value=\"2\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\n                    </Option>\n                  </Select>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <Select\n                    mode=\"multiple\"\n                    style={{ width: 250 }}\n                    placeholder=\"Select Sub Category\"\n                    defaultValue={[]}\n                    onChange={handleSubCategory}\n                    value={store2}\n                    allowClear\n                  >\n                    {tax2.map((p, index) => (\n                      <Option value={p.id} key={index}>\n                        {p.details}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n                <div>\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mb-2 ml-3\"\n                    onClick={resetCategory}\n                  >\n                    X\n                  </button>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">From</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateFrom\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">To</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateTo\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  {allQueries == \"allQueries\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Progress</option>\n                      <option value=\"2\">Complete</option>\n                    </select>\n                  )}\n\n                  {pendingAlloation == \"pendingAlloation\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Progress</option>\n                      <option value=\"3\"> Rejected</option>\n                    </select>\n                  )}\n\n                  {paymentStatus == \"paymentStatus\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">UnPaid</option>\n                      <option value=\"2\">Paid</option>\n                    </select>\n                  )}\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                  Search\n                </button>\n\n                <Reset />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AdminFilter;\n","/var/www/html/Mazars_Pannel/src/views/Frsh/Fresh.js",["1342","1343","1344","1345","1346","1347","1348","1349","1350","1351"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Card, CardHeader, Row, Col } from \"reactstrap\";\nimport { useForm, useFieldArray, Controller, useWatch } from \"react-hook-form\";\nimport UserForm from \"./UserForm\";\n\nfunction Fresh() {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const [data, setData] = useState([]);\n\n\n  const { register, control, handleSubmit, reset } = useForm();\n\n  useEffect(() => {\n    getQuery();\n  }, []);\n\n  const getQuery = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader?id=212`).then((res) => {\n      console.log(res);\n      // var value = res.data.result[0].cat_name;\n      if (res.data.code === 1) {\n        setData(res.data.result[0]);\n      }   \n    });\n  };\n\n  const onSubmit = (data) => console.log(\"data\", data);\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n        <UserForm data={data}/>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Fresh;\n\n\n",["1352","1353"],"/var/www/html/Mazars_Pannel/src/views/EditQuery/field.js",[],["1354","1355"],"/var/www/html/Mazars_Pannel/src/components/QueryDetails/QueryDetails.js",["1356","1357"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport BasicQuery from \"./BasicQuery\";\nimport ProposalDetails from \"./ProposalDetails\";\nimport AssignmentDetails from \"./AssignmentDetails\";\nimport AdditionalQuery from \"./AdditionalQuery\";\nimport AddAdditionalQuery from \"./AddAdditionalQuery\";\nimport CommonServices from \"../../common/common\";\n\nfunction QueryDetails({\n  p,\n  diaplaySpecific,\n  diaplayProposal,\n  diaplayHistory,\n  diaplayAssignment,\n  displayQuery,\n  assingNo,\n  getQuery,\n  customerQuery,\n  queryDocs,\n  purpose,\n  paymentDetails,\n  year\n}) {\n  console.log(\"p\", p);\n  const history = useHistory();\n\n  const [addModal, setAddModal] = useState(false);\n  const addHandler = () => setAddModal(!addModal);\n\n  return (\n    <>\n      <div class=\"card\">\n        <div\n          class=\"card-header\"\n          id=\"headingOne\"\n          style={{ padding: \".5rem .1rem\" }}\n        >\n          <h2 class=\"mb-0 query\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                Go Back\n              </button>\n            </div>\n\n            <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n              <p class=\"m-0\" style={{ fontSize: \"15px\" }}>\n                Submitted on\n              </p>\n              <p class=\"m-0\" style={{ fontSize: \"15px\" }}>\n                : {CommonServices.changeFormateDate(p.created)}\n              </p>\n            </div>\n            <div class=\"d-flex\">\n              <div class=\"additional\">\n                {customerQuery == \"customerQuery\" && (\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-info\"\n                    onClick={addHandler}\n                  >\n                    Additional Query\n                  </button>\n                )}\n              </div>\n            </div>\n          </h2>\n        </div>\n\n        <div class=\"card-body\">\n          <BasicQuery\n            p={p}\n            diaplaySpecific={diaplaySpecific}\n            purpose={purpose}\n            queryDocs={queryDocs}\n            year={year}\n          />\n          <ProposalDetails\n            diaplayProposal={diaplayProposal}\n            diaplayHistory={diaplayHistory}\n            paymentDetails={paymentDetails}\n            p={p}\n          />\n          <AssignmentDetails diaplayAssignment={diaplayAssignment} \n          p={p} \n          diaplayProposal={diaplayProposal}\n          />\n          <AdditionalQuery displayQuery={displayQuery} />\n        </div>\n\n        <AddAdditionalQuery\n          addHandler={addHandler}\n          addModal={addModal}\n          assingNo={assingNo}\n          getQuery={getQuery}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default QueryDetails;\n","/var/www/html/Mazars_Pannel/src/components/QueryDetails/BasicQuery.js",["1358","1359","1360"],"import React, { useState, useEffect } from \"react\";\nimport CommonServices from \"../../common/common\";\n\nfunction BasicQuery({ p, diaplaySpecific, queryDocs, year, purpose }) {\n  console.log(\"purpose\", purpose);\n\n  return (\n    <>\n      <div>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"18px\",\n          }}\n        >\n          BASIC INFORMATION\n        </p>\n        <table class=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Titles</th>\n              <th scope=\"col\">Data</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th scope=\"row\">Query No</th>\n              <td>{p.assign_no}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Query Date</th>\n              <td>{CommonServices.changeFormateDate(p.created)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Customer ID</th>\n              <td>{p.user_id}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Category</th>\n              <td>{p.cat_name}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Sub- Category</th>\n              <td>{p.sub_cat_name}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Name of the Case</th>\n              <td>{p.case_name}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Assessment Year</th>\n              <td>\n                {year.map((p, i) => (\n                  <p key={i}>{p.value}</p>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Fact of the Case</th>\n              <td>{p.fact_case}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Uploaded Documents</th>\n              <td>\n                {queryDocs.map((p, i) => (\n                  <p>\n                    <a\n                      href={`http://65.0.220.156/mazarapi/assets/image/${p.name}`}\n                      target=\"_blank\"\n                    >\n                      <i class=\"fa fa-photo\"></i>\n                    </a>\n                  </p>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">specific questions</th>\n              <td colspan=\"1\">\n                {diaplaySpecific.map((p, i) => (\n                  <p>{p.text}</p>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Purpose for which Opinion is sought</th>\n              <td colspan=\"1\">\n                {purpose.map((p, i) => (\n                  <p key={i}>{p.value}</p>\n                ))}\n              </td>\n             \n            </tr>\n            <tr>\n              <th scope=\"row\">Format in which Opinion is required</th>\n              <td colspan=\"1\">\n                <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                <p>\n                  {p.softcopy_digitally_assigned === \"1\" &&\n                    \"SoftCopy- Digitally Signed\"}\n                </p>\n\n                <p>\n                  {p.printout_physically_assigned === \"1\" &&\n                    \"Printout- Physically Signed\"}\n                </p>\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Timelines within which Opinion is Required</th>\n              <td colspan=\"1\">{p.Timelines}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default BasicQuery;\n","/var/www/html/Mazars_Pannel/src/components/QueryDetails/ProposalDetails.js",["1361","1362","1363"],"import React from \"react\";\nimport CommonServices from \"../../common/common\";\n\n\nfunction ProposalDetails({\n  diaplayProposal,\n  diaplayHistory,\n  paymentDetails,\n  p,\n}) {\n  const {\n    amount,\n    accepted_amount,\n    payment_received,\n    cust_accept_date,\n    proposal_date,\n    misc2,\n  } = diaplayProposal;\n\n  const { tlname, date_of_allocation } = diaplayHistory;\n\n  console.log(\"p\", p.query_status);\n\n  // CommonServices.removeTime(proposal_date);\n\n  return (\n    <>\n      <div>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"18px\",\n          }}\n        >\n          PROCESSING OF QUERY\n        </p>\n        <table class=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Titles</th>\n              <th scope=\"col\">Data</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th scope=\"row\">Date of Allocation</th>\n              <td>{CommonServices.changeFormateDate(date_of_allocation)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Name of Team Leader</th>\n              <td>{tlname}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Name of Tax Professional(s)</th>\n              <td></td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Date of Proposal</th>\n              <td>{CommonServices.removeTime(proposal_date)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Proposal Description</th>\n              <td>{misc2}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Proposed Amount</th>\n              <td>{amount}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Proposal Status</th>\n              <td>\n                {p.query_status == \"4\" && \"pending\"}\n                {p.query_status == \"6\" && \"Declined\"}\n                {(p.query_status == \"5\" || p.query_status > 6) && \"Accepted\"}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Amount Accepted</th>\n              <td>{accepted_amount}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Date of Acceptance</th>\n              <td>{CommonServices.removeTime(cust_accept_date)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Payment Terms</th>\n              <td>\n                <tr>\n                  <th>Date</th>\n                  <th>Amount</th>\n                </tr>\n                {paymentDetails.map((pay, i) => (\n                  <tr>\n                    <td>{CommonServices.removeTime(pay.payment_date)}</td>\n                    <td>{pay.paid_amount}</td>\n                  </tr>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Payment Received</th>\n              <td>{payment_received}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Payment Due</th>\n              <td>{accepted_amount - payment_received}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Payment Outstanding</th>\n              <td>{accepted_amount - payment_received}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default ProposalDetails;\n","/var/www/html/Mazars_Pannel/src/components/QueryDetails/AssignmentDetails.js",["1364","1365","1366","1367","1368","1369","1370","1371"],"import React from \"react\";\nimport CommonServices from \"../../common/common\";\n\nfunction AssignmentDetails({ p, diaplayAssignment, diaplayProposal }) {\n  const {\n    assignment_number,\n    assignment_date,\n    date_of_delivery,\n  } = diaplayAssignment;\n\n  const { cust_accept_date } = diaplayProposal;\n\n  const timeTaken = (a, b) => {\n    var date2 = CommonServices.removeTime(a);\n    var date1 = CommonServices.removeTime(b);\n\n    console.log(\"a\", date2);\n    console.log(\"b\", date1);\n\n    // var difference = Math.abs(date2 - date1);\n    // var days = difference / (1000 * 3600 * 24);\n    var difference =  Math.round((date2-date1)/(1000*60*60*24));\n    console.log(difference);\n    // var difference = date2.getTime() - date1.getTime();\n    // return difference;\n  };\n\n\n  return (\n    <>\n      <div>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"18px\",\n          }}\n        >\n          PROCESSING OF ASSIGNMENT\n        </p>\n        <table class=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Titles</th>\n              <th scope=\"col\">Data</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th scope=\"row\">Assignment Number</th>\n              <td>{assignment_number}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Assignment Date</th>\n              <td>{CommonServices.removeTime(assignment_date)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Proposed Date of Completion</th>\n              <td>\n                {p.query_status >= 9 ? (\n                  <p>{CommonServices.removeTime(p.Exp_Delivery_Date)}</p>\n                ) : null}\n              </td>\n            </tr>\n            {/* {p.query_status >= 9 ? ( */}\n            <tr>\n              <th scope=\"row\">Assignment Status</th>\n              <td>\n                <tr>\n                  <th>Assignment Stage</th>\n                  <th>Status</th>\n                </tr>\n                <tr>\n                  <td>Client Discussion</td>\n                  <td>{p.client_discussion}</td>\n                </tr>\n                <tr>\n                  <td>Draft report</td>\n                  <td>{p.draft_report}</td>\n                </tr>\n                <tr>\n                  <td>Final Discussion</td>\n                  <td>{p.final_discussion}</td>\n                </tr>\n                <tr>\n                  <td> Delivery of report</td>\n                  <td>{p.delivery_report}</td>\n                </tr>\n                <tr>\n                  <td>Complete</td>\n                  <td>{p.other_stage}</td>\n                </tr>\n              </td>\n            </tr>\n            {/* ) : null} */}\n            <tr>\n              <th scope=\"row\">Time taken to complete the assignment</th>\n              <td>\n                {p.client_discussion == \"completed\" &&\n                p.delivery_report == \"completed\" &&\n                p.draft_report == \"completed\" &&\n                p.final_discussion == \"completed\" &&\n                p.other_stage == \"completed\"\n                  ? CommonServices.removeTime(p.final_date)\n                  : null}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default AssignmentDetails;\n\n// {timeTaken(p.final_date,cust_accept_date)}\n\n\n\n// function parseDate(str) {\n//   var mdy = str.split('/');\n//   return new Date(mdy[2], mdy[0]-1, mdy[1]);\n// }\n\n// function datediff(first, second) {\n//   // Take the difference between the dates and divide by milliseconds per day.\n//   // Round to nearest whole number to deal with DST.\n//   return Math.round((second-first)/(1000*60*60*24));\n// }\n\n// alert(datediff(parseDate(first.value), parseDate(second.value)));","/var/www/html/Mazars_Pannel/src/components/QueryDetails/AdditionalQuery.js",["1372","1373"],"import React from \"react\";\nimport CommonServices from \"../../common/common\";\n\nfunction AdditionalQuery({ displayQuery }) {\n  return (\n    <>\n      <div>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"18px\",\n          }}\n        >\n          ADDITIONAL QUERIES\n        </p>\n        <table class=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                Additional Queries\n              </th>\n              <th scope=\"col\">Date Submission</th>\n              <th scope=\"col\">Documents</th>\n            </tr>\n          </thead>\n          {displayQuery.map((p, i) => (\n            <tbody>\n              <tr key={i}>\n                <td>{p.additional_queries}</td>\n                <td>{CommonServices.changeFormateDate(p.created)}</td>\n                <td>\n                  {p.upload_doc == \"\" ? (\n                    \"\"\n                  ) : (\n                    <p>\n                      <a\n                        href={`http://65.0.220.156/mazarapi/assets/image/${p.upload_doc}`}\n                        target=\"_blank\"\n                      >\n                        <i class=\"fa fa-photo\"></i>\n                      </a>\n                    </p>\n                  )}\n                </td>\n              </tr>\n            </tbody>\n          ))}\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default AdditionalQuery;\n","/var/www/html/Mazars_Pannel/src/components/QueryDetails/AddAdditionalQuery.js",["1374","1375"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { useAlert } from \"react-alert\";\n\nfunction AddAdditionalQuery({ addHandler, addModal, assingNo, getQuery }) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"assign_no\", assingNo);\n    formData.append(\"query\", value.p_addqueri);\n    formData.append(\"upload\", value.p_upload[0]);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostAdditionalQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(<Msg />);\n          reset();\n          getQuery();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"12px\" }}>Query successfully added!</p>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Modal isOpen={addModal} toggle={addHandler} size=\"md\">\n        <ModalHeader toggle={addHandler}>Add. Query</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Additional Queries</label>\n              <textarea\n                className=\"form-control\"\n                id=\"textarea\"\n                rows=\"6\"\n                name=\"p_addqueri\"\n                ref={register}\n              ></textarea>\n            </div>\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Upload Your Document</label>\n              <input\n                type=\"file\"\n                name=\"p_upload\"\n                ref={register}\n                className=\"form-control-file\"\n              />\n            </div>\n\n            <div class=\"modal-footer\">\n              <button\n                type=\"submit\"\n                onClick={addHandler}\n                className=\"btn btn-primary\"\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </>\n  );\n}\n\nexport default AddAdditionalQuery;\n","/var/www/html/Mazars_Pannel/src/common/common.js",["1376"],"//change date format\n\nconst changeFormateDate = (oldDate) => {\n  console.log(\"date\", oldDate);\n  if (oldDate == null) {\n    return null;\n  }\n  return oldDate.toString().split(\"-\").reverse().join(\"-\");\n};\n\n//remove time with date\nconst removeTime = (oldDate) => {\n  console.log(\"RemoveTime - \", oldDate);\n\n  if (oldDate == null) {\n    return null;\n  }\n  return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n};\n\nexport default {\n  changeFormateDate,\n  removeTime,\n};\n\n// var updatedate = oldDate.split(\" \")[0];\n// var updatedate = oldDate.slice(0, 10);\n","/var/www/html/Mazars_Pannel/src/components/Search-Filter/tlFilter.js",["1377","1378","1379","1380","1381","1382","1383","1384","1385"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\n\nfunction TeamFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const {\n    setData,\n    getData,\n    pendingForAcceptence,\n    inCompleteQuery,\n    completeAssignment,\n    proposal,\n    paymentStatus,\n    assignment,\n  } = props;\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    console.log(`selected ${value}`);\n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetCategory ..\");\n    setSelectedData([]);\n    setStore2([]);\n    getData();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getData();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"store2 :\", store2);\n\n    if (pendingForAcceptence == \"pendingForAcceptence\") {\n      axios\n        .get(\n          `${baseUrl}/tl/pendingQues?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n    if (inCompleteQuery == \"inCompleteQuery\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n    if (completeAssignment == \"completeAssignment\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getCompleteQues?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n\n    if (proposal == \"proposal\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${\n            data.p_dateTo\n          }&status=${data.p_status}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n\n    if (paymentStatus == \"paymentStatus\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-12 d-flex\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"form-inline\">\n                <div class=\"form-group mb-2\">\n                  <Select\n                    style={{ width: 130 }}\n                    placeholder=\"Select Category\"\n                    defaultValue={[]}\n                    onChange={handleCategory}\n                    value={selectedData}\n                  >\n                    <Option value=\"1\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\n                    </Option>\n                    <Option value=\"2\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\n                    </Option>\n                  </Select>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <Select\n                    mode=\"multiple\"\n                    style={{ width: 250 }}\n                    placeholder=\"Select Sub Category\"\n                    defaultValue={[]}\n                    onChange={handleSubCategory}\n                    value={store2}\n                    allowClear\n                  >\n                    {tax2.map((p, index) => (\n                      <Option value={p.id} key={index}>\n                        {p.details}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n\n                <div>\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mb-2 ml-3\"\n                    onClick={resetCategory}\n                  >\n                    X\n                  </button>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">From</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateFrom\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">To</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateTo\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  {proposal == \"proposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Accepted</option>\n                      <option value=\"2\">Pending</option>\n                      <option value=\"3\">Cust Accepted</option>\n                      <option value=\"4\">Declined</option>\n                    </select>\n                  )}\n\n                  {paymentStatus == \"paymentStatus\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">UnPaid</option>\n                      <option value=\"2\">Paid</option>\n                    </select>\n                  )}\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                  Search\n                </button>\n                <Reset />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default TeamFilter;\n","/var/www/html/Mazars_Pannel/src/views/EditQuery/ImageUploads.js",["1386","1387","1388"],"/var/www/html/Mazars_Pannel/src/views/AssignmentTab/PaymentModal.js",["1389","1390","1391","1392","1393","1394"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  pay,\n  getProposalData,\n}) {\n  const { handleSubmit, register } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n  const { id, amount, accepted_amount, paid_amount } = pay;\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"status\", 8);\n    formData.append(\"amount\", value.p_amount);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PaymentPartialAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Payment Done!\");\n          getProposalData();\n          paymentHandler();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"sm\">\n        <ModalHeader toggle={paymentHandler}>Payment</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <tr>\n              <th>Accepted Amount</th>\n              <td>{accepted_amount}</td>\n            </tr>\n            <tr>\n              <th>Paid Amount</th>\n              <td>{paid_amount}</td>\n            </tr>\n          </table>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            {+accepted_amount == +paid_amount ? null : (\n              <div>\n                <div className=\"mb-3\">\n                  <input\n                    type=\"text\"\n                    name=\"p_amount\"\n                    ref={register}\n                    className=\"form-control\"\n                    defaultValue={accepted_amount - paid_amount}\n                    placeholder=\"enter amount\"\n                  />\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Pay\n                  </button>\n                </div>\n              </div>\n            )}\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/Reset.js",["1395","1396"],"import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Select, Form, Input, Button } from \"antd\";\nimport axios from \"axios\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { baseUrl } from \"../../../config/config\";\n\nfunction Reset() {\n  \n  const { Option } = Select;\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState(null);\n  const [value, setValue] = useState({});\n\n\n\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setStore2(value);\n  };\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tl/getTeamLeader?id=243`).then((res) => {\n        console.log(res);\n        setValue(res.data.result[0]);    \n      });\n    };\n\n    getTeamLeader();\n  }, []);\n\n  console.log(\"value -\", value.name);\n  const data1 = value.name;\n  const data2 = value.email;\n  const data3 = value.phone;\n  const data4 = value.parent_id;\n  const data5 = value.cat_name;\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${store2}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [store2]);\n\n  const onFinish = (values) => {\n    console.log(values);\n\n    // let formData = new FormData();\n    // formData.append(\"email\", value.p_email);\n    // formData.append(\"name\", value.p_name);\n    // formData.append(\"phone\", value.p_phone);\n    // formData.append(\"pcat_id\", value.p_tax);\n    // formData.append(\"cat_id\", value.p_tax2);\n    // formData.append(\"id\", id);\n\n    // axios({\n    //   method: \"POST\",\n    //   url: `${baseUrl}/tl/updateTeamLeader`,\n    //   data: formData,\n    // })\n    //   .then(function (response) {\n    //     console.log(\"res-\", response);\n    //     if (response.data.code === 1) {\n    //       alert.success(\"TL updated  !\");\n    //       history.goBack();\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(\"erroror - \", error);\n    //   });\n  };\n\n  if (!(data1 && data2 && data3 && data4 && data5)) return <p>loading</p>;\n  else\n    return (\n      <>\n        <div class=\"container\">\n          <Form\n            name=\"basic\"\n            initialValues={{\n              username: `${data1}`,\n              email: `${data2}`,\n              phone: `${data3}`,\n              category: `${data4}`,\n              sub_category: `${data5}`,\n            }}\n            onFinish={onFinish}\n          >\n            <Form.Item label=\"Username\" name=\"username\">\n              <Input />\n            </Form.Item>\n            <Form.Item name=\"email\" label=\"email \">\n              <Input />\n            </Form.Item>\n\n            <Form.Item name=\"category\" label=\"Category\">\n              <Select onChange={handleChange}>\n                <Option value=\"1\">Direct</Option>\n                <Option value=\"2\">InDirect</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item name=\"sub_category\" label=\"Sub-category\">\n              <Select>\n                <Option value=\"\">--Select Sub-Category--</Option>\n                {tax2.map((p, index) => (\n                  <Option key={index} value={p.id}>\n                    {p.details}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n\n            <Form.Item name=\"phone\" label=\"phone\">\n              <Input/>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n\n          </Form>\n\n          {/* <Form name=\"nest-messages\" onFinish={onFinish}>\n            <Form.Item name={[\"query\", \"name\"]} label=\" name\">\n              <Input />\n            </Form.Item>\n            <Form.Item name={[\"query\", \"email\"]} label=\"email \">\n              <Input defaultValue={data2} />\n            </Form.Item>\n\n            <Form.Item name={[\"query\", \"phone\"]} label=\"phone\">\n              <Input defaultValue={data3} />\n            </Form.Item>\n\n            <Form.Item name={[\"query\", \"pcat_1\"]} label=\"Category\">\n              <Select onChange={handleChange}>\n                <Option value=\"1\">Direct</Option>\n                <Option value=\"2\">InDirect</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item name={[\"query\", \"cat_1\"]} label=\"Sub-category\">\n              <Select defaultValue={data5}>\n                <Option value=\"\">--Select Sub-Category--</Option>\n                {tax2.map((p, index) => (\n                  <Option key={index} value={p.id}>\n                    {p.details}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form> */}\n        </div>\n      </>\n    );\n}\n\nexport default Reset;\n\n// <Option value=\"3\">Assessment</Option>\n// <Option value=\"4\">others</Option>\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import Select from \"react-select\";\n// import { useForm, Controller } from \"react-hook-form\";\n// import { Checkbox, Input } from \"@material-ui/core\";\n// import { Input as AntdInput } from \"antd\";\n\n// import \"./styles.css\";\n\n// const App = () => {\n//   const { control, handleSubmit } = useForm();\n\n//   const onSubmit = data => {\n//     alert(JSON.stringify(data));\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit(onSubmit)}>\n\n//       <label>Ice Cream Preference</label>\n//       <Controller\n//         name=\"iceCreamType\"\n//         as={Select}\n//         options={[\n//           { value: \"chocolate\", label: \"Chocolate\" },\n//           { value: \"strawberry\", label: \"Strawberry\" },\n//           { value: \"vanilla\", label: \"Vanilla\" }\n//         ]}\n//         control={control}\n//         defaultValue={[{ value: \"vanilla\", label: \"Vanilla\" }]}\n//       />\n\n//       <input type=\"submit\" />\n//     </form>\n//   );\n// };\n\n// const rootElement = document.getElementById(\"root\");\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   rootElement\n// );\n","/var/www/html/Mazars_Pannel/src/config/services/QueryDetails.js",["1397"],"import http from \"../http/http-common\";\n\nconst getAll = () => {\n  return http.get(\"/customers/getFeedback\");\n};\n\nexport default {\n  getAll,\n};\n","/var/www/html/Mazars_Pannel/src/config/http/http-common.js",[],"/var/www/html/Mazars_Pannel/src/config/services/TaxProffesional.js",["1398"],"import http from \"../http/http-common\";\n\nconst getAll = () => {\n  return http.get(\"/tp/getTaxProfessional\");\n};\n\nconst get = (id) => {\n  return http.get(`/tp/getTaxProfessional?id=${id}`);\n};\n\nconst create = (data) => {\n  return http.post(\"/tutorials\", data);\n};\n\nconst remove = (id) => {\n  return http.delete(`/tl/deleteTeamLeader?id=${id}`);\n};\n\nconst editTL = (id) => {\n  return http.get(`/tl/getTeamLeader?id=212`);\n};\n\nexport default {\n  getAll,\n  get,\n  create,\n  remove,\n  editTL\n};\n","/var/www/html/Mazars_Pannel/src/views/EditQuery/SelectComponent.js",["1399","1400","1401"],"/var/www/html/Mazars_Pannel/src/views/Frsh/field.js",["1402"],"/var/www/html/Mazars_Pannel/src/pages/Admin/AssignmentTab/Statusfilter.js",["1403","1404","1405","1406","1407","1408","1409"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Select } from \"antd\";\nimport { useForm } from \"react-hook-form\";\n\nfunction Statusfilter({ setData, getData }) {\n  const { Option, OptGroup } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const [selectedData, setSelectedData] = useState([]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"selectedData :\", selectedData);\n    // axios\n    //   .get(\n    //     `${baseUrl}/tl/getAssignments?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}`\n    //   )\n    //   .then((res) => {\n    //     console.log(res);\n    //     if (res.data.code === 1) {\n    //       if (res.data.result) {\n    //         setAssignmentDisplay(res.data.result);\n    //       }\n    //     }\n    //   });\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Select\n          mode=\"multiple\"\n          style={{ width: 210 }}\n          placeholder=\"Select stages\"\n          defaultValue={[]}\n          onChange={handleCategory}\n          value={selectedData}\n        >\n          <Option value=\"1\" label=\"Compilance\">\n            <div className=\"demo-option-label-item\">Client Discussion</div>\n          </Option>\n          <Option value=\"2\" label=\"Compilance\">\n            <div className=\"demo-option-label-item\">Draft report</div>\n          </Option>\n          <Option value=\"3\" label=\"Compilance\">\n            <div className=\"demo-option-label-item\">Final Discussion</div>\n          </Option>\n          <Option value=\"4\" label=\"Compilance\">\n            <div className=\"demo-option-label-item\">Delivery of report</div>\n          </Option>\n          <Option value=\"5\" label=\"Compilance\">\n            <div className=\"demo-option-label-item\">Completed</div>\n          </Option>\n        </Select>\n\n        <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Statusfilter;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/Test.js",["1410"],"/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/Check.js",["1411","1412","1413","1414"],"import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport states from \"./states.json\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nexport default function App({ uid, selectedOption }) {\n  const { register, handleSubmit, reset } = useForm();\n\n  console.log(\"selectedOption\", selectedOption);\n  //   const usersUrl = `${baseUrl}/tl/getTeamLeader?id=${uid}`;\n\n  const [interest, setInterest] = useState(selectedOption);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      //   const res = await axios.get(usersUrl);\n      //   console.log(\"data\", res.data);\n      // var item = res.data.result[0].name\n      //   console.log(\"arr\", item.name);\n      const a = interest.name;\n      console.log(\"a\", a);\n\n      reset({\n        street: \"123 Fake St\",\n        state: \"CO\",\n        // parent: a,\n      });\n    };\n\n    fetchData();\n  }, [reset]);\n\n  function onSubmit(data) {\n    console.log(data);\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div>\n          <label>Street:</label>\n          <input name=\"street\" ref={register} />\n        </div>\n\n        <div>\n          <label>State:</label>\n          <select name=\"state\" ref={register}>\n            <option key=\"\" value=\"\" />\n            {states.map((option) => (\n              <option key={option.id} value={option.id}>\n                {option.value}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentForm/AssignmentForm.js",["1415","1416","1417","1418","1419","1420","1421","1422","1423","1424","1425"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\n\nfunction AssignmentForm(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset, setValue } = useForm();\n  const history = useHistory();\n  const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [assignNo, setAssignNo] = useState(null);\n  const [data, setData] = useState([]);\n  const [store, setStore] = useState(null);\n  const [item, setItem] = useState(null);\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}`)\n      .then((res) => {\n        console.log(res);\n        console.log(res.data.result);\n        if (res.data.code === 1) {\n          setAssignNo(res.data.result[0].assign_no);\n        }\n      });\n  };\n\n  useEffect(() => {\n    getDetails();\n  }, [assignNo]);\n\n  const getDetails = (value) => {\n    console.log(\"value :\", value);\n    let formData = new FormData();\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"uid\", JSON.parse(userid));\n    formData.append(\"stages_type\", \"client_discussion\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/getstagesinfo`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          setData(response.data.result);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"assign_id\", id);\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"uid\", JSON.parse(userid));\n    formData.append(\"stages_type\", \"client_discussion\");\n    formData.append(\"notes\", value.p_notes);\n    formData.append(\"receive_sent_date\", value.p_date);\n    formData.append(\"notes_type\", value.p_type);\n    formData.append(\"type_info\", value.p_info);\n    formData.append(\"upload\", value.p_upload[0]);\n    formData.append(\"send_received\", item);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/addAssignmentStages`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(<Msg />);\n          getDetails();\n          reset();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  //alert msg\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"10px\" }}>success</p>\n      </>\n    );\n  };\n\n  console.log(\"item - \", item);\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Client Discussion Information</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <div class=\"form-group\">\n                    <label>Titles</label>\n                    <textarea\n                      className=\"form-control\"\n                      id=\"textarea\"\n                      rows=\"2\"\n                      name=\"p_notes\"\n                      ref={register}\n                    ></textarea>\n                  </div>\n                </div>\n\n                <div class=\"col-md-4\">\n                  <div class=\"form-group\">\n                    <label>Date</label>\n                    <input\n                      type=\"date\"\n                      name=\"p_date\"\n                      className=\"form-control\"\n                      ref={register}\n                    />\n                  </div>\n                </div>\n\n                <div class=\"col-md-4\">\n                  <div class=\"form-group\">\n                    <label>Upload Documents</label>\n                    <input\n                      type=\"file\"\n                      name=\"p_upload\"\n                      ref={register}\n                      className=\"form-control-file\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <div class=\"form-group\">\n                    <label>Send/Received</label>\n                    <select\n                      class=\"form-control\"\n                      ref={register}\n                      name=\"p_type\"\n                      onChange={(e) => setItem(e.target.value)}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"send\">Send</option>\n                      <option value=\"received\">Received</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div class=\"col-md-4\">\n                  <div class=\"form-group\">\n                    <label>Notes Type</label>\n                    <select\n                      class=\"form-control\"\n                      ref={register}\n                      name=\"p_type\"\n                      onChange={(e) => setStore(e.target.value)}\n                    >\n                      <option value=\"\">--select type--</option>\n                      <option value=\"email\">Email</option>\n                      <option value=\"phone\">Phone</option>\n                      <option value=\"other\">Other</option>\n                    </select>\n                  </div>\n                </div>\n\n                {store == \"email\" && (\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Email</label>\n                      <input\n                        type=\"text\"\n                        name=\"p_info\"\n                        className=\"form-control\"\n                        ref={register}\n                      />\n                    </div>\n                  </div>\n                )}\n\n                {store == \"phone\" && (\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Phone</label>\n                      <input\n                        type=\"text\"\n                        name=\"p_info\"\n                        className=\"form-control\"\n                        ref={register}\n                      />\n                    </div>\n                  </div>\n                )}\n                {store == \"other\" && (\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Notes info</label>\n                      <input\n                        type=\"text\"\n                        name=\"p_info\"\n                        className=\"form-control\"\n                        ref={register}\n                      />\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-md-2\">\n                  <div class=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\">\n                      submit\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </CardHeader>\n\n        <CardBody>\n          <CardHeader>\n            <Row>\n              <Col md=\"4\">\n                <h4>List</h4>\n              </Col>\n            </Row>\n          </CardHeader>\n          <div class=\"my-3\">\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"row\">S.No</th>\n                  <th scope=\"row\">Documents</th>\n                  <th scope=\"row\">Titles</th>\n                  <th scope=\"row\">Notes type</th>\n                  <th scope=\"row\">Notes Info</th>\n                  <th scope=\"row\">Date</th>\n                  <th scope=\"row\">send/Received</th>\n                </tr>\n              </thead>\n              {data.length > 0\n                ? data.map((p, i) => (\n                    <tbody>\n                      <tr>\n                        <td>{i + 1}</td>\n                        <td>\n                          {p.document && (\n                            <p>\n                              <a\n                                href={`http://65.0.220.156/mazarapi/assets/upload/report/${p.document}`}\n                                target=\"_blank\"\n                              >\n                                <i class=\"fa fa-photo\"></i>\n                              </a>\n                            </p>\n                          )}\n                        </td>\n                        <td>{p.notes}</td>\n                        <td>{p.notes_type}</td>\n                        <td>{p.type_info}</td>\n                        <td>{p.receive_sent_date}</td>\n                        <td>{p.send_received}</td>\n                      </tr>\n                    </tbody>\n                  ))\n                : null}\n            </table>\n          </div>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AssignmentForm;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/A.js",["1426","1427","1428","1429"],"import React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nfunction A({interest}) {\n  const { handleSubmit, register, errors, reset, setValue } = useForm();\n\n  return (\n    <div>\n      <select class=\"form-control\" \n      ref={register}\n       name={interest}\n       >\n        <option value=\"pending\">Pending</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n    </div>\n  );\n}\n\nexport default A;\n",["1430","1431"],"/var/www/html/Mazars_Pannel/src/views/Frsh/UserForm.js",["1432","1433"],"import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport states from \"./states.json\";\n\nexport default function UserForm({ data }) {\n  const { register, handleSubmit, reset } = useForm();\n\n  const { cat_id , name } = data;\n  console.log(\"cart\", cat_id);\n\n  useEffect(() => {\n    // This would be a GET call to an endpoint\n    \n    reset({\n      street: \"nks\",\n      state: \"1\",\n    });\n  }, [reset]);\n\n  function onSubmit(data) {\n    console.log(data);\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div>\n          <label>Street:</label>\n          <input name=\"street\" ref={register} />\n        </div>\n\n        <div>\n          <label>State:</label>\n          <select name=\"state\" ref={register}>\n            <option key=\"\" value=\"\" />\n            {/* {states.map((option) => (\n              <option key={option.id} value={option.id}>\n                {option.value}\n              </option>\n            ))} */}\n          </select>\n        </div>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n","/var/www/html/Mazars_Pannel/src/pages/TL/QueriesTab/Tab.js",[],"/var/www/html/Mazars_Pannel/src/agora.config.js",[],"/var/www/html/Mazars_Pannel/src/utils/Validator.js",["1434","1435"],"export default {\n  minLength(value, length) {\n    return value.length < length ?\n      1 : 0\n  },\n  maxLength(value, length) {\n    return value.length > length ?\n      1 : 0\n  },\n  validChar(value) {\n    return !/^[0-9a-zA-Z\\_]+$/.test(value) ?\n      1 : 0\n  },\n  isNonEmpty(value) {\n    return value === '' ?\n      1 : 0\n  }\n}",["1436","1437"],"/var/www/html/Mazars_Pannel/src/utils/Settings.js",[],"/var/www/html/Mazars_Pannel/src/views/VideoCall/VideoCall.js",["1438","1439"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport Index from \"../../components/InputRoom/index\";\n\nfunction VideoCall() {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n        <Index />\n    </Layout>\n  );\n}\n\nexport default VideoCall;\n","/var/www/html/Mazars_Pannel/src/components/InputRoom/index.js",["1440","1441","1442","1443","1444"],"import React from \"react\";\nimport * as Cookies from \"js-cookie\";\n\nimport \"../../assets/fonts/css/icons.css\";\n// import Validator from \"../../utils/Validator\";\n// import { RESOLUTION_ARR } from \"../../utils/Settings\";\nimport \"./index.css\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channel: \"\",\n      baseMode: \"avc\",\n      transcode: \"interop\",\n      attendeeMode: \"video\",\n      videoProfile: \"480p_4\",\n    };\n  }\n\n  // componentDidMount() {\n  //   window.addEventListener(\"keypress\", (e) => {\n  //     e.keyCode === 13 && this.handleJoin();\n  //   });\n  // }\n\n  //pass id\n  // handleChannel = (val, state) => {\n  //   this.setState({\n  //     channel: val,\n  //   });\n  // };\n\n  // handleJoin = () => {\n  //   console.log(this.state);\n  //   Cookies.set(\"channel\", this.state.channel); //input channel name\n  //   Cookies.set(\"baseMode\", this.state.baseMode);\n  //   Cookies.set(\"transcode\", this.state.transcode);\n  //   Cookies.set(\"attendeeMode\", this.state.attendeeMode); // select video call\n  //   Cookies.set(\"videoProfile\", this.state.videoProfile);\n  //   window.location.hash = \"customer/meeting\";\n  // };\n\n  render() {\n    return (\n      <div className=\"wrapper index\">\n        <div className=\"ag-header\"></div>\n        <div className=\"ag-main\">\n          <section className=\"login-wrapper\">\n            <div className=\"login-header\"></div>\n\n            {/* <div className=\"login-body\">\n              <div className=\"columns\">\n                <div className=\"column is-12\">\n                  <InputChannel\n                    onChange={this.handleChannel}\n                    placeholder=\"Input a room name here\"\n                  ></InputChannel>\n                </div>\n              </div>\n\n              <div className=\"columns\">\n                <div className=\"column\">\n                  <div id=\"attendeeMode\" className=\"control\">\n                    <label className=\"radio\">\n                      <input\n                        onChange={(e) =>\n                          this.setState({ attendeeMode: e.target.value })\n                        }\n                        value=\"video\"\n                        type=\"radio\"\n                        name=\"attendee\"\n                        defaultChecked\n                      />\n                      <span className=\"radio-btn\"></span>\n                      <span className=\"radio-msg\">\n                        Video Call : join with video call\n                      </span>\n                    </label>\n                    <br />\n                  </div>\n                </div>\n              </div>\n            </div> */}\n\n            <div className=\"login-footer\">\n              <a\n                // onClick={this.handleJoin}\n                className=\"ag-rounded button is-info\"\n              >\n                Join\n              </a>\n            </div>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Index;\n\n// class InputChannel extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       state: \"\",\n//     };\n//   }\n\n//   handleChange = (e) => {\n//     this.props.onChange(e.target.value);\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"channel-wrapper control has-icons-left\">\n//         <input\n//           onInput={this.handleChange}\n//           id=\"channel\"\n//           className={\"ag-rounded input \" + this.state.state}\n//           type=\"text\"\n//           placeholder={this.props.placeholder}\n//         />\n\n//       </div>\n//     );\n//   }\n// }\n{\n  /* <span className=\"validate-icon\">{validateIcon}</span> */\n}\n// let validateIcon = \"\";\n// switch (this.state.state) {\n//   default:\n//   case \"\":\n//     validateIcon = \"\";\n//     break;\n//   case \"is-success\":\n//     validateIcon = <i className=\"ag-icon ag-icon-valid\"></i>;\n//     break;\n//   case \"is-danger\":\n//     validateIcon = <i className=\"ag-icon ag-icon-invalid\"></i>;\n//     break;\n// }\n{\n  /* <label className=\"radio\">\n                      <input\n                        onChange={(e) =>\n                          this.setState({ attendeeMode: e.target.value })\n                        }\n                        value=\"audio-only\"\n                        type=\"radio\"\n                        name=\"attendee\"\n                      />\n                      <span className=\"radio-btn\"></span>\n                      <span className=\"radio-img audio\"></span>\n                      <span className=\"radio-msg\">\n                        Audio-only : join with audio call\n                      </span>\n                    </label>\n                    <br />\n                    <label className=\"radio\">\n                      <input\n                        onChange={(e) =>\n                          this.setState({ attendeeMode: e.target.value })\n                        }\n                        value=\"audience\"\n                        type=\"radio\"\n                        name=\"attendee\"\n                      />\n                      <span className=\"radio-btn\"></span>\n                      <span className=\"radio-img audience\"></span>\n                      <span className=\"radio-msg\">\n                        Audience : join as an audience\n                      </span>\n                    </label> */\n}\n{\n  /* <div className=\"columns\">\n                <div className=\"column is-7\">\n                  <BaseOptions\n                    onChange={(val) => this.setState({ baseMode: val })}\n                  ></BaseOptions>\n                </div>\n                <div className=\"column is-5\">\n                  <AdvancedOptions\n                    onRadioChange={(val) => this.setState({ transcode: val })}\n                    onSelectChange={(val) =>\n                      this.setState({ videoProfile: val })\n                    }\n                  ></AdvancedOptions>\n                </div>\n              </div> */\n}\n// class BaseOptions extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this._options = [\n//       {\n//         label: \"Agora Video Call\",\n//         value: \"avc\",\n//         content: \"One to one and group calls\",\n//       },\n//       {\n//         label: \"Agora Live\",\n//         value: \"al\",\n//         content:\n//           \"Enabling real-time interactions between the host and the audience\",\n//       },\n//     ];\n//     this.state = {\n//       active: false,\n//       message: \"Agora Video Call\",\n//     };\n//   }\n\n//   handleSelect = (item) => {\n//     let msg = item.label;\n//     let val = item.value;\n//     this.setState({\n//       message: msg,\n//       active: false,\n//     });\n//     this.props.onChange(val);\n//   };\n\n//   render() {\n//     const options = this._options.map((item, index) => {\n//       return (\n//         <div\n//           className=\"dropdown-item\"\n//           key={index}\n//           onClick={(e) => this.handleSelect(item, e)}\n//         >\n//           <p>{item.label}</p>\n//           <hr />\n//           <p>{item.content}</p>\n//         </div>\n//       );\n//     });\n\n//     return (\n//       <div className={this.state.active ? \"dropdown is-active\" : \"dropdown\"}>\n//         <div\n//           className=\"dropdown-trigger\"\n//           onClick={() => this.setState({ active: !this.state.active })}\n//         >\n//           <a\n//             id=\"baseMode\"\n//             className=\"ag-rounded button\"\n//             aria-haspopup=\"true\"\n//             aria-controls=\"baseModeOptions\"\n//           >\n//             <span id=\"baseOptionLabel\">{this.state.message}</span>\n//             <span className=\"icon is-small\">\n//               <i className=\"ag-icon ag-icon-arrow-down\" aria-hidden=\"true\"></i>\n//             </span>\n//           </a>\n//         </div>\n//         <div className=\"dropdown-menu\" id=\"baseModeOptions\" role=\"menu\">\n//           <div className=\"dropdown-content\">{options}</div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// class AdvancedOptions extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       active: false,\n//     };\n//   }\n\n//   handleRadio = (e) => {\n//     this.props.onRadioChange(e.target.value);\n//   };\n\n//   handleSelect = (e) => {\n//     this.props.onSelectChange(e.target.value);\n//   };\n\n//   render() {\n//     const options = Object.entries(RESOLUTION_ARR).map((item, index) => {\n//       return (\n//         <option key={index} value={item[0].split(\",\")[0]}>\n//           {item[1][0]}x {item[1][1]}, {item[1][2]}fps, {item[1][3]}kbps\n//         </option>\n//       );\n//     });\n//     return (\n//       <div className={this.state.active ? \"dropdown is-active\" : \"dropdown\"}>\n//         <div\n//           className=\"dropdown-trigger\"\n//           onClick={() => this.setState({ active: !this.state.active })}\n//         >\n//           <a\n//             id=\"advancedProfile\"\n//             className=\"ag-rounded button\"\n//             aria-haspopup=\"true\"\n//             aria-controls=\"advancedOptions\"\n//           >\n//             <span>Advanced</span>\n//           </a>\n//         </div>\n//         <div className=\"dropdown-menu\" id=\"advancedOptions\" role=\"menu\">\n//           <div className=\"dropdown-content\">\n//             <div className=\"dropdown-item\">\n//               <div className=\"control\">\n//                 <label className=\"radio\">\n//                   <input\n//                     value=\"\"\n//                     type=\"radio\"\n//                     name=\"transcode\"\n//                     onChange={this.handleRadio}\n//                   />\n//                   <span>VP8-only</span>\n//                 </label>\n//                 <label className=\"radio\">\n//                   <input\n//                     value=\"interop\"\n//                     type=\"radio\"\n//                     defaultChecked\n//                     onChange={this.handleRadio}\n//                     name=\"transcode\"\n//                   />\n//                   <span>VP8 &amp; H264</span>\n//                 </label>\n//                 <label className=\"radio\">\n//                   <input\n//                     value=\"h264_interop\"\n//                     type=\"radio\"\n//                     onChange={this.handleRadio}\n//                     name=\"transcode\"\n//                   />\n//                   <span>H264-only</span>\n//                 </label>\n//               </div>\n//             </div>\n//             <div className=\"dropdown-item\">\n//               <div className=\"select is-rounded\">\n//                 <select\n//                   onChange={this.handleSelect}\n//                   defaultValue=\"480p_4\"\n//                   id=\"videoProfile\"\n//                   className=\"ag-rounded is-clipped\"\n//                 >\n//                   {options}\n//                 </select>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n","/var/www/html/Mazars_Pannel/src/views/MeetingComponent/MeetingComponent.js",["1445","1446"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport Meeting from \"../../components/meeting/index\";\n\nfunction MeetingComponent(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Meeting />\n    </Layout>\n  );\n}\n\nexport default MeetingComponent;\n","/var/www/html/Mazars_Pannel/src/components/meeting/index.jsx",[],"/var/www/html/Mazars_Pannel/src/components/AgoraVideoCall/index.jsx",["1447","1448","1449","1450","1451","1452","1453","1454"],"import React from \"react\";\nimport { merge } from \"lodash\";\nimport AgoraRTC from \"agora-rtc-sdk\";\n\nimport \"./canvas.css\";\nimport \"../../assets/fonts/css/icons.css\";\n\nconst tile_canvas = {\n  \"1\": [\"span 12/span 24\"],\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\n  \"4\": [\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12/7/13\",\n  ],\n  \"5\": [\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"6\": [\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"7\": [\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 9/span 16/10/21\",\n  ],\n};\n\n/**\n * @prop appId uid\n * @prop transcode attendeeMode videoProfile channel baseMode\n */\n\n\nclass AgoraCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.client = {};\n    this.localStream = {};\n    this.shareClient = {};\n    this.shareStream = {};\n    this.state = {\n      displayMode: \"pip\",\n      streamList: [],\n      readyState: false,\n      stateSharing: false,\n    };\n  }\n\n  componentWillMount() {\n    let $ = this.props;\n    // init AgoraRTC local client\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\n    this.client.init($.appId, () => {\n      console.log(\"AgoraRTC client initialized\");\n      this.subscribeStreamEvents();\n\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\n        this.state.uid = uid;\n        console.log(\"User \" + uid + \" join channel successfully\");\n        console.log(\"At \" + new Date().toLocaleTimeString());\n        // create local stream\n        // It is not recommended to setState in function addStream\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\n        this.localStream.init(\n          () => {\n            if ($.attendeeMode !== \"audience\") {\n              this.addStream(this.localStream, true);\n              this.client.publish(this.localStream, (err) => {\n                console.log(\"Publish local stream error: \" + err);\n              });\n            }\n            this.setState({ readyState: true });\n          },\n          (err) => {\n            console.log(\"getUserMedia failed\", err);\n            this.setState({ readyState: true });\n          }\n        );\n      });\n    });\n  }\n\n  componentDidMount() {\n    // add listener to control btn group\n    let canvas = document.querySelector(\"#ag-canvas\");\n    let btnGroup = document.querySelector(\".ag-btn-group\");\n    canvas.addEventListener(\"mousemove\", () => {\n      if (global._toolbarToggle) {\n        clearTimeout(global._toolbarToggle);\n      }\n      btnGroup.classList.add(\"active\");\n      global._toolbarToggle = setTimeout(function () {\n        btnGroup.classList.remove(\"active\");\n      }, 2000);\n    });\n  }\n\n  // componentWillUnmount () {\n  //     // remove listener\n  //     let canvas = document.querySelector('#ag-canvas')\n  //     canvas.removeEventListener('mousemove')\n  // }\n\n  componentDidUpdate() {\n    // rerendering\n    let canvas = document.querySelector(\"#ag-canvas\");\n    // pip mode (can only use when less than 4 people in channel)\n    if (this.state.displayMode === \"pip\") {\n      let no = this.state.streamList.length;\n      if (no > 4) {\n        this.setState({ displayMode: \"tile\" });\n        return;\n      }\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n        }\n        if (index === no - 1) {\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n        } else {\n          dom.setAttribute(\n            \"style\",\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n          );\n        }\n\n        item.player.resize && item.player.resize();\n      });\n    }\n    // tile mode\n    else if (this.state.displayMode === \"tile\") {\n      let no = this.state.streamList.length;\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n        }\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n        item.player.resize && item.player.resize();\n      });\n    }\n    // screen share mode (tbd)\n    else if (this.state.displayMode === \"share\") {\n    }\n  }\n\n  componentWillUnmount() {\n    this.client && this.client.unpublish(this.localStream);\n    // this.localStream && this.localStream.close();\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n    }\n    this.client &&\n      this.client.leave(\n        () => {\n          console.log(\"Client succeed to leave.\");\n        },\n        () => {\n          console.log(\"Client failed to leave.\");\n        }\n      );\n  }\n\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: true,\n      screen: false,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n\n  subscribeStreamEvents = () => {\n    let rt = this;\n    rt.client.on(\"stream-added\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"New stream added: \" + stream.getId());\n      console.log(\"At \" + new Date().toLocaleTimeString());\n      console.log(\"Subscribe \", stream);\n      rt.client.subscribe(stream, function (err) {\n        console.log(\"Subscribe stream failed\", err);\n      });\n    });\n\n    rt.client.on(\"peer-leave\", function (evt) {\n      console.log(\"Peer has left: \" + evt.uid);\n      console.log(new Date().toLocaleTimeString());\n      console.log(evt);\n      rt.removeStream(evt.uid);\n    });\n\n    rt.client.on(\"stream-subscribed\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"Got stream-subscribed event\");\n      console.log(new Date().toLocaleTimeString());\n      console.log(\"Subscribe remote stream successfully: \" + stream.getId());\n      console.log(evt);\n      rt.addStream(stream);\n    });\n\n    rt.client.on(\"stream-removed\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"Stream removed: \" + stream.getId());\n      console.log(new Date().toLocaleTimeString());\n      console.log(evt);\n      rt.removeStream(stream.getId());\n    });\n  };\n\n  removeStream = (uid) => {\n    this.state.streamList.map((item, index) => {\n      if (item.getId() === uid) {\n        item.close();\n        let element = document.querySelector(\"#ag-item-\" + uid);\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n        let tempList = [...this.state.streamList];\n        tempList.splice(index, 1);\n        this.setState({\n          streamList: tempList,\n        });\n      }\n    });\n  };\n\n  addStream = (stream, push = false) => {\n    let repeatition = this.state.streamList.some((item) => {\n      return item.getId() === stream.getId();\n    });\n    if (repeatition) {\n      return;\n    }\n    if (push) {\n      this.setState({\n        streamList: this.state.streamList.concat([stream]),\n      });\n    } else {\n      this.setState({\n        streamList: [stream].concat(this.state.streamList),\n      });\n    }\n  };\n\n  handleCamera = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isVideoOn()\n      ? this.localStream.disableVideo()\n      : this.localStream.enableVideo();\n  };\n\n  handleMic = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isAudioOn()\n      ? this.localStream.disableAudio()\n      : this.localStream.enableAudio();\n  };\n\n  switchDisplay = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    if (this.state.displayMode === \"pip\") {\n      this.setState({ displayMode: \"tile\" });\n    } else if (this.state.displayMode === \"tile\") {\n      this.setState({ displayMode: \"pip\" });\n    } else if (this.state.displayMode === \"share\") {\n      // do nothing or alert, tbd\n    } else {\n      console.error(\"Display Mode can only be tile/pip/share\");\n    }\n  };\n\n  hideRemote = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    let list;\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\n    list = Array.from(\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n    );\n    list.map((item) => {\n      if (item.style.display !== \"none\") {\n        item.style.display = \"none\";\n      } else {\n        item.style.display = \"block\";\n      }\n    });\n  };\n\n  handleExit = (e) => {\n    if (e.currentTarget.classList.contains(\"disabled\")) {\n      return;\n    }\n    try {\n      this.client && this.client.unpublish(this.localStream);\n      this.localStream && this.localStream.close();\n      if (this.state.stateSharing) {\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\n        this.shareStream && this.shareStream.close();\n      }\n      this.client &&\n        this.client.leave(\n          () => {\n            console.log(\"Client succeed to leave.\");\n          },\n          () => {\n            console.log(\"Client failed to leave.\");\n          }\n        );\n    } finally {\n      this.setState({ readyState: false });\n      this.client = null;\n      this.localStream = null;\n      // redirect to index\n      window.location.hash = \"/customer/assignment\";\n    }\n  };\n\n  sharingScreen = (e) => {\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n      this.state.stateSharing = false;\n    } else {\n      this.state.stateSharing = true;\n      let $ = this.props;\n      // init AgoraRTC local client\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\n\n      this.shareClient.init($.appId, () => {\n        console.log(\"AgoraRTC client initialized\");\n\n        this.subscribeStreamEvents();\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\n          this.state.uid = uid;\n          console.log(\"User \" + uid + \" join channel successfully\");\n          console.log(\"At \" + new Date().toLocaleTimeString());\n          // create local stream\n          // It is not recommended to setState in function addStream\n          \n          this.shareStream = this.streamInitSharing(\n            uid,\n            $.attendeeMode,\n            $.videoProfile\n          );\n          this.shareStream.init(\n            () => {\n              if ($.attendeeMode !== \"audience\") {\n                this.addStream(this.shareStream, true);\n                this.shareClient.publish(this.shareStream, (err) => {\n                  console.log(\"Publish local stream error: \" + err);\n                });\n              }\n              this.setState({ readyState: true });\n            },\n            (err) => {\n              console.log(\"getUserMedia failed\", err);\n              this.setState({ readyState: true });\n            }\n          );\n        });\n      });\n    }\n  };\n\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: false,\n      screen: true,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n  render() {\n\n    const style = {\n      display: \"grid\",\n      gridGap: \"50px 26px\",\n      alignItems: \"center\",\n      justifyItems: \"center\",\n      gridTemplateRows: \"repeat(12, auto)\",\n      gridTemplateColumns: \"repeat(24, auto)\",\n    };\n    \n    const videoControlBtn =\n      this.props.attendeeMode === \"video\" ? (\n        <span\n          onClick={this.handleCamera}\n          className=\"ag-btn videoControlBtn\"\n          title=\"Enable/Disable Video\"\n        >\n          <i className=\"ag-icon ag-icon-camera\"></i>\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const audioControlBtn =\n      this.props.attendeeMode !== \"audience\" ? (\n        <span\n          onClick={this.handleMic}\n          className=\"ag-btn audioControlBtn\"\n          title=\"Enable/Disable Audio\"\n        >\n          <i className=\"ag-icon ag-icon-mic\"></i>\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const switchDisplayBtn = (\n      <span\n        onClick={this.switchDisplay}\n        className={\n          this.state.streamList.length > 4\n            ? \"ag-btn displayModeBtn disabled\"\n            : \"ag-btn displayModeBtn\"\n        }\n        title=\"Switch Display Mode\"\n      >\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\n      </span>\n    );\n\n\n    const hideRemoteBtn = (\n      <span\n        className={\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\n            ? \"ag-btn disableRemoteBtn disabled\"\n            : \"ag-btn disableRemoteBtn\"\n        }\n        onClick={this.hideRemote}\n        title=\"Hide Remote Stream\"\n      >\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\n      </span>\n    );\n\n    const exitBtn = (\n      <span\n        onClick={this.handleExit}\n        className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Exit\"\n      >\n        <i className=\"ag-icon ag-icon-leave\"></i>\n      </span>\n    );\n\n    return (\n      <div id=\"ag-canvas\" style={style}>\n        <div className=\"ag-btn-group\">\n          {exitBtn}\n          {videoControlBtn}\n          {audioControlBtn}\n          {\n            <span\n              onClick={this.sharingScreen}\n              className=\"ag-btn shareScreenBtn\"\n              title=\"Share/unShare Screen\"\n            >\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\n            </span>\n          }\n          {switchDisplayBtn}\n          {hideRemoteBtn}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AgoraCanvas;\n","/var/www/html/Mazars_Pannel/src/pages/TL/MeetingComponent/MeetingComponent.js",["1455","1456"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport Meeting from \"../meeting/index\";\n\nfunction MeetingComponent(props) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Meeting />\n    </Layout>\n  );\n}\n\nexport default MeetingComponent;\n","/var/www/html/Mazars_Pannel/src/pages/TL/meeting/index.jsx",[],"/var/www/html/Mazars_Pannel/src/pages/TL/AgoraVideoCall/index.jsx",["1457","1458","1459","1460","1461","1462","1463","1464"],"import React from \"react\";\nimport { merge } from \"lodash\";\nimport AgoraRTC from \"agora-rtc-sdk\";\n\nimport \"./canvas.css\";\nimport \"../../../assets/fonts/css/icons.css\";\n\nconst tile_canvas = {\n  \"1\": [\"span 12/span 24\"],\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\n  \"4\": [\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12/7/13\",\n  ],\n  \"5\": [\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"6\": [\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"7\": [\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 9/span 16/10/21\",\n  ],\n};\n\n/**\n * @prop appId uid\n * @prop transcode attendeeMode videoProfile channel baseMode\n */\n\n\nclass AgoraCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.client = {};\n    this.localStream = {};\n    this.shareClient = {};\n    this.shareStream = {};\n    this.state = {\n      displayMode: \"pip\",\n      streamList: [],\n      readyState: false,\n      stateSharing: false,\n    };\n  }\n\n  componentWillMount() {\n    let $ = this.props;\n    // init AgoraRTC local client\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\n    this.client.init($.appId, () => {\n      console.log(\"AgoraRTC client initialized\");\n      this.subscribeStreamEvents();\n\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\n        this.state.uid = uid;\n        console.log(\"User \" + uid + \" join channel successfully\");\n        console.log(\"At \" + new Date().toLocaleTimeString());\n        // create local stream\n        // It is not recommended to setState in function addStream\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\n        this.localStream.init(\n          () => {\n            if ($.attendeeMode !== \"audience\") {\n              this.addStream(this.localStream, true);\n              this.client.publish(this.localStream, (err) => {\n                console.log(\"Publish local stream error: \" + err);\n              });\n            }\n            this.setState({ readyState: true });\n          },\n          (err) => {\n            console.log(\"getUserMedia failed\", err);\n            this.setState({ readyState: true });\n          }\n        );\n      });\n    });\n  }\n\n  componentDidMount() {\n    // add listener to control btn group\n    let canvas = document.querySelector(\"#ag-canvas\");\n    let btnGroup = document.querySelector(\".ag-btn-group\");\n    canvas.addEventListener(\"mousemove\", () => {\n      if (global._toolbarToggle) {\n        clearTimeout(global._toolbarToggle);\n      }\n      btnGroup.classList.add(\"active\");\n      global._toolbarToggle = setTimeout(function () {\n        btnGroup.classList.remove(\"active\");\n      }, 2000);\n    });\n  }\n\n  // componentWillUnmount () {\n  //     // remove listener\n  //     let canvas = document.querySelector('#ag-canvas')\n  //     canvas.removeEventListener('mousemove')\n  // }\n\n  componentDidUpdate() {\n    // rerendering\n    let canvas = document.querySelector(\"#ag-canvas\");\n    // pip mode (can only use when less than 4 people in channel)\n    if (this.state.displayMode === \"pip\") {\n      let no = this.state.streamList.length;\n      if (no > 4) {\n        this.setState({ displayMode: \"tile\" });\n        return;\n      }\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n        }\n        if (index === no - 1) {\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n        } else {\n          dom.setAttribute(\n            \"style\",\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n          );\n        }\n\n        item.player.resize && item.player.resize();\n      });\n    }\n    // tile mode\n    else if (this.state.displayMode === \"tile\") {\n      let no = this.state.streamList.length;\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n        }\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n        item.player.resize && item.player.resize();\n      });\n    }\n    // screen share mode (tbd)\n    else if (this.state.displayMode === \"share\") {\n    }\n  }\n\n  componentWillUnmount() {\n    this.client && this.client.unpublish(this.localStream);\n    this.localStream && this.localStream.close();\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n    }\n    this.client &&\n      this.client.leave(\n        () => {\n          console.log(\"Client succeed to leave.\");\n        },\n        () => {\n          console.log(\"Client failed to leave.\");\n        }\n      );\n  }\n\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: true,\n      screen: false,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n\n  subscribeStreamEvents = () => {\n    let rt = this;\n    rt.client.on(\"stream-added\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"New stream added: \" + stream.getId());\n      console.log(\"At \" + new Date().toLocaleTimeString());\n      console.log(\"Subscribe \", stream);\n      rt.client.subscribe(stream, function (err) {\n        console.log(\"Subscribe stream failed\", err);\n      });\n    });\n\n    rt.client.on(\"peer-leave\", function (evt) {\n      console.log(\"Peer has left: \" + evt.uid);\n      console.log(new Date().toLocaleTimeString());\n      console.log(evt);\n      rt.removeStream(evt.uid);\n    });\n\n    rt.client.on(\"stream-subscribed\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"Got stream-subscribed event\");\n      console.log(new Date().toLocaleTimeString());\n      console.log(\"Subscribe remote stream successfully: \" + stream.getId());\n      console.log(evt);\n      rt.addStream(stream);\n    });\n\n    rt.client.on(\"stream-removed\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"Stream removed: \" + stream.getId());\n      console.log(new Date().toLocaleTimeString());\n      console.log(evt);\n      rt.removeStream(stream.getId());\n    });\n  };\n\n  removeStream = (uid) => {\n    this.state.streamList.map((item, index) => {\n      if (item.getId() === uid) {\n        item.close();\n        let element = document.querySelector(\"#ag-item-\" + uid);\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n        let tempList = [...this.state.streamList];\n        tempList.splice(index, 1);\n        this.setState({\n          streamList: tempList,\n        });\n      }\n    });\n  };\n\n  addStream = (stream, push = false) => {\n    let repeatition = this.state.streamList.some((item) => {\n      return item.getId() === stream.getId();\n    });\n    if (repeatition) {\n      return;\n    }\n    if (push) {\n      this.setState({\n        streamList: this.state.streamList.concat([stream]),\n      });\n    } else {\n      this.setState({\n        streamList: [stream].concat(this.state.streamList),\n      });\n    }\n  };\n\n  handleCamera = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isVideoOn()\n      ? this.localStream.disableVideo()\n      : this.localStream.enableVideo();\n  };\n\n  handleMic = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isAudioOn()\n      ? this.localStream.disableAudio()\n      : this.localStream.enableAudio();\n  };\n\n  switchDisplay = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    if (this.state.displayMode === \"pip\") {\n      this.setState({ displayMode: \"tile\" });\n    } else if (this.state.displayMode === \"tile\") {\n      this.setState({ displayMode: \"pip\" });\n    } else if (this.state.displayMode === \"share\") {\n      // do nothing or alert, tbd\n    } else {\n      console.error(\"Display Mode can only be tile/pip/share\");\n    }\n  };\n\n  hideRemote = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    let list;\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\n    list = Array.from(\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n    );\n    list.map((item) => {\n      if (item.style.display !== \"none\") {\n        item.style.display = \"none\";\n      } else {\n        item.style.display = \"block\";\n      }\n    });\n  };\n\n  handleExit = (e) => {\n    if (e.currentTarget.classList.contains(\"disabled\")) {\n      return;\n    }\n    try {\n      this.client && this.client.unpublish(this.localStream);\n      this.localStream && this.localStream.close();\n      if (this.state.stateSharing) {\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\n        this.shareStream && this.shareStream.close();\n      }\n      this.client &&\n        this.client.leave(\n          () => {\n            console.log(\"Client succeed to leave.\");\n          },\n          () => {\n            console.log(\"Client failed to leave.\");\n          }\n        );\n    } finally {\n      this.setState({ readyState: false });\n      this.client = null;\n      this.localStream = null;\n      // redirect to index\n      window.location.hash = \"/teamleader/assignment\";\n    }\n  };\n\n  sharingScreen = (e) => {\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n      this.state.stateSharing = false;\n    } else {\n      this.state.stateSharing = true;\n      let $ = this.props;\n      // init AgoraRTC local client\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\n\n      this.shareClient.init($.appId, () => {\n        console.log(\"AgoraRTC client initialized\");\n\n        this.subscribeStreamEvents();\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\n          this.state.uid = uid;\n          console.log(\"User \" + uid + \" join channel successfully\");\n          console.log(\"At \" + new Date().toLocaleTimeString());\n          // create local stream\n          // It is not recommended to setState in function addStream\n          \n          this.shareStream = this.streamInitSharing(\n            uid,\n            $.attendeeMode,\n            $.videoProfile\n          );\n          this.shareStream.init(\n            () => {\n              if ($.attendeeMode !== \"audience\") {\n                this.addStream(this.shareStream, true);\n                this.shareClient.publish(this.shareStream, (err) => {\n                  console.log(\"Publish local stream error: \" + err);\n                });\n              }\n              this.setState({ readyState: true });\n            },\n            (err) => {\n              console.log(\"getUserMedia failed\", err);\n              this.setState({ readyState: true });\n            }\n          );\n        });\n      });\n    }\n  };\n\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: false,\n      screen: true,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n  render() {\n\n    const style = {\n      display: \"grid\",\n      gridGap: \"50px 26px\",\n      alignItems: \"center\",\n      justifyItems: \"center\",\n      gridTemplateRows: \"repeat(12, auto)\",\n      gridTemplateColumns: \"repeat(24, auto)\",\n    };\n    \n    const videoControlBtn =\n      this.props.attendeeMode === \"video\" ? (\n        <span\n          onClick={this.handleCamera}\n          className=\"ag-btn videoControlBtn\"\n          title=\"Enable/Disable Video\"\n        >\n          <i className=\"ag-icon ag-icon-camera\"></i>\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const audioControlBtn =\n      this.props.attendeeMode !== \"audience\" ? (\n        <span\n          onClick={this.handleMic}\n          className=\"ag-btn audioControlBtn\"\n          title=\"Enable/Disable Audio\"\n        >\n          <i className=\"ag-icon ag-icon-mic\"></i>\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const switchDisplayBtn = (\n      <span\n        onClick={this.switchDisplay}\n        className={\n          this.state.streamList.length > 4\n            ? \"ag-btn displayModeBtn disabled\"\n            : \"ag-btn displayModeBtn\"\n        }\n        title=\"Switch Display Mode\"\n      >\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\n      </span>\n    );\n\n\n    const hideRemoteBtn = (\n      <span\n        className={\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\n            ? \"ag-btn disableRemoteBtn disabled\"\n            : \"ag-btn disableRemoteBtn\"\n        }\n        onClick={this.hideRemote}\n        title=\"Hide Remote Stream\"\n      >\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\n      </span>\n    );\n\n    const exitBtn = (\n      <span\n        onClick={this.handleExit}\n        className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Exit\"\n      >\n        <i className=\"ag-icon ag-icon-leave\"></i>\n      </span>\n    );\n\n    return (\n      <div id=\"ag-canvas\" style={style}>\n        <div className=\"ag-btn-group\">\n          {exitBtn}\n          {videoControlBtn}\n          {audioControlBtn}\n          {\n            <span\n              onClick={this.sharingScreen}\n              className=\"ag-btn shareScreenBtn\"\n              title=\"Share/unShare Screen\"\n            >\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\n            </span>\n          }\n          {switchDisplayBtn}\n          {hideRemoteBtn}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AgoraCanvas;\n","/var/www/html/Mazars_Pannel/src/pages/TP/Start/Start.js",[],"/var/www/html/Mazars_Pannel/src/pages/TP/Login/Login.js",["1465","1466"],"import React, { useState } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  password: yup\n    .string()\n    .required(\"required password\")\n    .min(5, \"at least 5 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\nfunction Login(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"type\", \"tp\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/login`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Login successfully !\");\n          localStorage.setItem(\n            \"tpkey\",\n            JSON.stringify(response.data[\"user id\"])\n          );\n          props.history.push(\"/taxprofessional/queriestab\");\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n      <Header mtp=\"mtp\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>MTP Login</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email</label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    type=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    name=\"password\"\n                    placeholder=\"Enter Password\"\n                    ref={register}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Login;\n","/var/www/html/Mazars_Pannel/src/pages/TP/Dashboard/Dashboard.js",["1467","1468","1469","1470"],"import React, { useState } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\n// import \"../../../../node_modules/react-tabs/style/react-tabs.css\";\n\nimport Layout from \"../../../components/Layout/Layout\";\n\nfunction Dashboard() {\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n   padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n   padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              Pending for Acceptance\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>Inprogress</Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>Complete</Tab>\n          </TabList>\n\n          <TabPanel>\n            <p> Pending for Acceptance</p>\n            <button onClick={() => setTabIndex(1)}>go to 1st tab</button>\n          </TabPanel>\n          <TabPanel>\n            <p>Inprogress tab</p>\n          </TabPanel>\n          <TabPanel>\n            <p>Complete tab</p>\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Dashboard;\n\n{\n  /* <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              Pending for acceptance\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>Inprogress</Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>Complete</Tab> */\n}\n\n// <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n// <TabList\n//   style={{\n//     listStyleType: \"none\",\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//   }}\n// >\n//   <Tab\n//     style={{\n//       border: \"1px solid black\",\n//       padding: \"12px 24px\",\n//       borderRadius: \"18px\",\n//       width: \"200px\",\n//       textAlign: \"center\",\n//     }}\n//   >\n//     Pending for Acceptance\n//   </Tab>\n//   <Tab\n//     style={{\n//       border: \"1px solid black\",\n//       padding: \"12px 24px\",\n//       borderRadius: \"18px\",\n//       width: \"200px\",\n//       textAlign: \"center\",\n//     }}\n//   >\n//     Inprogress\n//   </Tab>\n//   <Tab\n//     style={{\n//       border: \"1px solid black\",\n//       padding: \"12px 24px\",\n//       borderRadius: \"18px\",\n//       width: \"200px\",\n//       textAlign: \"center\",\n//     }}\n//   >\n//     Complete\n//   </Tab>\n// </TabList>\n\n//         <TabPanel>\n//           <p>Pending tab</p>\n//         </TabPanel>\n//         <TabPanel>\n//           <p>Inprogress tab</p>\n//           <button onClick={() => setTabIndex(0)}>go to 1st tab</button>\n//           <button onClick={() => setTabIndex(2)}>go to 3rd tab</button>\n//         </TabPanel>\n//         <TabPanel>\n//           <p>Complete tab</p>\n//         </TabPanel>\n//       </Tabs>\n","/var/www/html/Mazars_Pannel/src/pages/TP/QueriesRecevied/QueriesRecevied.js",["1471"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams } from \"react-router-dom\";\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\n\n\nfunction QueriesRecevied() {\n  const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tlname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/customers/getQueryDetails?id=${id}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setPaymentDetails(res.data.payment_detail);\n          setAssingmentNo(res.data.result[0].assign_no);\n\n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n\n          console.log(\"purposeItem-\", typeof purposeItem);\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            var myYear = JSON.parse(assementItem);\n            setPurpose(myPurpose);\n            setYear(myYear);\n          } catch (e) {\n            return false;\n          }\n\n          if (res.data.proposal_queries.length > 0) {\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              misc2: res.data.proposal_queries[0].misc2,\n            });\n          }\n\n          if (res.data.assignment.length > 0) {\n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n          if (res.data.history_queries.length > 0) {\n            setDisplayHistory({\n              tlname: res.data.history_queries[0].tname,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n          }\n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n        }\n      });\n    };\n    getQuery();\n    getSubmittedAssingment();\n  }, [assingNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setDisplayQuery(res.data.result);\n        }\n      });\n  };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"schedule\">\n            <h3>Query Detail</h3>\n          </div>\n        </div>\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          {submitData.map((p, index) => (\n            <QueryDetails\n              p={p}\n              key={index}\n              diaplaySpecific={diaplaySpecific}\n              diaplayProposal={diaplayProposal}\n              diaplayHistory={diaplayHistory}\n              diaplayAssignment={diaplayAssignment}\n              displayQuery={displayQuery}\n              getQuery={getQuery}\n              assingNo={assingNo}\n              queryDocs={queryDocs}\n              paymentDetails={paymentDetails}\n              purpose={purpose}\n              year={year}\n            />\n          ))}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n","/var/www/html/Mazars_Pannel/src/pages/TL/SendProposal/ProposalComponent.js",["1472","1473","1474","1475","1476"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\nfunction ProposalComponent(props) {\n  const { id } = props;\n  console.log(id);\n\n  const alert = useAlert();\n  const { register, handleSubmit, reset } = useForm();\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [custId, setCustId] = useState(\"\");\n  const [custname, setCustName] = useState();\n  const [assignId, setAssignID] = useState(\"\");\n  const [assingNo, setAssingNo] = useState(\"\");\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const getQuery = () => {\n      axios\n        .get(\n          `${baseUrl}/tl/pendingTlProposal?tl_id=${JSON.parse(\n            userid\n          )}&assign_id=${id}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result.length > 0) {\n              setAssingNo(res.data.result[0].assign_no);\n              setAssignID(res.data.result[0].id);\n            }\n          }\n        });\n    };\n    getQuery();\n  }, []);\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\n      console.log(\"res\", res);\n      setCustName(res.data.name);\n      setCustId(res.data.id);\n    };\n\n    getUser();\n  }, [id]);\n\n  const onSubmit = (value) => {\n    console.log(value);\n\n    // var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n    var todaysDate = new Date();\n\n    let formData = new FormData();\n\n    formData.append(\"assign_no\", assingNo);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"type\", \"tl\");\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"amount\", value.p_amount);\n    formData.append(\"payable\", value.p_payable);\n    formData.append(\"misc1\", value.misc_1);\n    formData.append(\"misc2\", value.misc_2);\n    formData.append(\"payable_date\", todaysDate);\n    formData.append(\"customer_id\", custId);\n    formData.append(\"assign_id\", assignId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/uploadProposal`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          reset();\n          alert.success(<Msg />);\n          history.push(\"/teamleader/proposal\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  //alert msg\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"10px\" }}>proposal successfully sent</p>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"7\">\n              <div class=\"btn ml-3\">\n                <h4>Prepare Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    class=\"form-control\"\n                    value={assingNo}\n                    ref={register}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Customer Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    class=\"form-control\"\n                    value={custname}\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Amount</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_amount\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by Through</label>\n                  <select\n                    class=\"form-control\"\n                    name=\"p_payable\"\n                    aria-label=\"Default select example\"\n                    ref={register}\n                  >\n                    <option value=\"\">--select--</option>\n                    {payable.map((p, index) => (\n                      <option key={index} value={p.pay}>\n                        {p.pay}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Misc 1</label>\n                  <input\n                    type=\"text\"\n                    name=\"misc_1\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Proposal Description</label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"textarea\"\n                    rows=\"3\"\n                    name=\"misc_2\"\n                    ref={register}\n                  ></textarea>\n                </div>\n              </div>\n            </div>\n\n            {/* <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by date</label>\n                  <input\n                    type=\"date\"\n                    name=\"p_date\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div> */}\n\n            <br />\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default ProposalComponent;\n\nconst payable = [\n  { pay: \"NEFT\" },\n  { pay: \"DEBIT CARD\" },\n  { pay: \"CREDIT CARD\" },\n  { pay: \"UPI\" },\n  { pay: \"WALLET\" },\n];\n\n{\n  /* <div class=\"col-md-8\">\n        <div>\n          <h3>Send Proposal</h3>\n          <br />\n\n          \n        \n        </div>\n      </div> */\n}\n\n// const handleImage = (e) =>{\n//   let files = e.target.files\n//    console.log(files)\n\n//   let reader = new FileReader();\n//   reader.readAsDataURL(files[0])\n\n//  reader.onload = (e) => {\n//  console.log(\"img\", e.target.result)\n// }\n\n/* <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label>Proposal File</label>\n                <input type=\"file\" name=\"p_image\" ref={register} />\n              </div>\n            </div> */\n\n// const Schema = yup.object().shape({\n//     p_assingment: yup.string().required(\"required assingment\"),\n//     p_name: yup.string().required(\"required name\"),\n//     p_document: yup.string().required(\"required file\"),\n//   });\n\n// {\n//   Object.entries(res.data.result).map(([key, value]) => {\n//     console.log(\"val\", value.name);\n//     setCustName(value.name);\n//   });\n// }\n\n{\n  /* <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_assingment\"\n                    onChange={(e) => getID(e.target.value)}\n                  >\n                    <option value=\"\">--select--</option>\n                    {incompleteData.map((p, index) => (\n                      <option key={index} value={p.id}>\n                        {p.assign_no}\n                      </option>\n                    ))}\n                  </select> */\n}\n\n// const getID = (key) => {\n//     setId(key);\n//     incompleteData.filter((data) => {\n//       if (data.id == key) {\n//         console.log(\"assingNo\", data.assign_no);\n//         setAssingNo(data.assign_no);\n//         setAssignID(data.id);\n//       }\n//     });\n//   };\n","/var/www/html/Mazars_Pannel/src/pages/TP/QueriesTab/QueriesTab.js",["1477","1478","1479","1480","1481","1482"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\n\nimport InComplete from \"../InComplete/InComplete\";\nimport Complete from \"../Complete/Complete\";\n\nfunction QueriesTab() {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  // const [pendingAcceptence, setPendingAcceptence] = useState(\"\");\n  // const [incomplete, setIncomplete] = useState(\"\");\n  // const [complete, setComplete] = useState(\"\");\n\n  // const CountPendingForAcceptence = (data) => {\n  //   setPendingAcceptence(data);\n  // };\n\n  // const CountIncomplete = (data) => {\n  //   setIncomplete(data);\n  // };\n\n  // const CountComplete = (data) => {\n  //   setComplete(data);\n  // };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <ul\n            class=\"nav nav-pills mb-3\"\n            style={{ justifyContent: \"space-around\" }}\n            id=\"pills-tab\"\n            role=\"tablist\"\n          >\n            <li class=\"nav-item\" role=\"presentation\">\n              <a\n                class=\"nav-link text-white active\"\n                id=\"pills-incomplete-tab\"\n                data-toggle=\"pill\"\n                href=\"#incomplete\"\n                role=\"tab\"\n                aria-controls=\"pills-incomplete\"\n                aria-selected=\"false\"\n              >\n                Inprogress\n              </a>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n              <a\n                class=\"nav-link text-white\"\n                id=\"pills-complete-tab\"\n                data-toggle=\"pill\"\n                href=\"#complete\"\n                role=\"tab\"\n                aria-controls=\"pills-complete\"\n                aria-selected=\"false\"\n              >\n                Complete\n              </a>\n            </li>\n          </ul>\n          <div class=\"tab-content\" id=\"pills-tabContent\">\n            <div\n              class=\"tab-pane fade show active\"\n              id=\"incomplete\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-incomplete-tab\"\n            >\n              <InComplete />\n            </div>\n\n            <div\n              class=\"tab-pane fade\"\n              id=\"complete\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-complete-tab\"\n            >\n              <Complete />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n","/var/www/html/Mazars_Pannel/src/pages/TP/InComplete/InComplete.js",["1483","1484","1485","1486","1487"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Tpfilter from \"../../../components/Search-Filter/tpfilter\";\n\nfunction InComplete() {\n  const [incompleteData, setInCompleteData] = useState([]);\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  useEffect(() => {\n    getIncomplete();\n  }, []);\n\n  const getIncomplete = () => {\n    axios\n      .get(`${baseUrl}/tp/GetIncompleteQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          //   CountIncomplete(res.data.result.length);\n          setInCompleteData(res.data.result);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/taxprofessional/queries/${row.id}`}>\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <Tpfilter\n            setData={setInCompleteData}\n            getData={getIncomplete}\n            inCompleteQuery=\"inCompleteQuery\"\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={incompleteData}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default InComplete;\n","/var/www/html/Mazars_Pannel/src/pages/TP/Complete/Complete.js",["1488","1489","1490","1491","1492"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Tpfilter from \"../../../components/Search-Filter/tpfilter\";\n\nfunction Complete() {\n  const [completeData, setCompleteData] = useState([]);\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  useEffect(() => {\n    getComplete();\n  }, []);\n\n  const getComplete = () => {\n    axios\n      .get(`${baseUrl}/tp/GetCompleteQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          //   CountIncomplete(res.data.result.length);\n          setCompleteData(res.data.result);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/taxprofessional/queries/${row.id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Card>\n      <CardHeader>\n          <Tpfilter\n            setData={setCompleteData}\n            getData={getComplete}\n            completeAssignment=\"completeAssignment\"\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={completeData}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default Complete;\n","/var/www/html/Mazars_Pannel/src/pages/TP/Proposal/Proposal.js",["1493","1494","1495","1496"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Tpfilter from \"../../../components/Search-Filter/tpfilter\";\n\nfunction Proposal() {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [proposal, setProposal] = useState([]);\n  const [count, setCount] = useState(\"\");\n\n  useEffect(() => {\n    getProposalList();\n  }, []);\n\n  const getProposalList = () => {\n    axios\n      .get(`${baseUrl}/tp/getProposalTp?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setProposal(res.data.result);\n          setCount(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      dataField: \"query_date\",\n      text: \"Date\",\n      sort: true,\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.query_date);\n        var oldDate = row.query_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/taxprofessional/queries/${row.id}`}>\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {row.status == \"Cust Accepted\" || row.status == \"Pending\" ? (\n              <Link to={`/taxprofessional/edit-proposal/${row.id}`}>\n                <i\n                  className=\"fa fa-edit\"\n                  style={{\n                    fontSize: 18,\n                    cursor: \"pointer\",\n                    marginLeft: \"8px\",\n                    color: \"green\",\n                  }}\n                ></i>\n              </Link>\n            ) : row.status == \"Accepted\" ? (\n              <Link to={`/taxprofessional/sendproposal/${row.id}`}>\n                <i\n                  class=\"fa fa-mail-forward\"\n                  style={{\n                    fontSize: 14,\n                    cursor: \"pointer\",\n                    marginLeft: \"8px\",\n                  }}\n                ></i>\n              </Link>\n            ) : null}\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"9\">\n              <CardTitle tag=\"h4\">List of Proposals ({count})</CardTitle>\n            </Col>\n            <Col md=\"3\"></Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <Tpfilter\n            setData={setProposal}\n            getData={getProposalList}\n            proposal=\"proposal\"\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={proposal}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Proposal;\n","/var/www/html/Mazars_Pannel/src/pages/TP/SendProposal/SendProposal.js",[],"/var/www/html/Mazars_Pannel/src/pages/TP/SendProposal/ProposalComponent.js",["1497","1498","1499","1500","1501"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\nfunction ProposalComponent(props) {\n  const { id } = props;\n  console.log(id);\n\n  const alert = useAlert();\n  const { register, handleSubmit, reset } = useForm();\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [custId, setCustId] = useState(\"\");\n  const [custname, setCustName] = useState();\n  const [assignId, setAssignID] = useState(\"\");\n  const [assingNo, setAssingNo] = useState(\"\");\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const getQuery = () => {\n      axios\n        .get(\n          `${baseUrl}/tl/pendingTlProposal?tl_id=${JSON.parse(\n            userid\n          )}&assign_id=${id}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result.length > 0) {\n              setAssingNo(res.data.result[0].assign_no);\n              setAssignID(res.data.result[0].id);\n            }\n          }\n        });\n    };\n    getQuery();\n  }, []);\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\n      console.log(\"res\", res);\n      setCustName(res.data.name);\n      setCustId(res.data.id);\n    };\n\n    getUser();\n  }, [id]);\n\n  const onSubmit = (value) => {\n    console.log(value);\n\n    // var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n    var todaysDate = new Date();\n\n    let formData = new FormData();\n\n    formData.append(\"assign_no\", assingNo);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"type\", \"tl\");\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"amount\", value.p_amount);\n    formData.append(\"payable\", value.p_payable);\n    formData.append(\"misc1\", value.misc_1);\n    formData.append(\"misc2\", value.misc_2);\n    formData.append(\"payable_date\", todaysDate);\n    formData.append(\"customer_id\", custId);\n    formData.append(\"assign_id\", assignId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/uploadProposal`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          reset();\n          alert.success(<Msg />);\n          history.push(\"/taxprofessional/proposal\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  //alert msg\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"10px\" }}>proposal successfully sent</p>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"7\">\n              <div class=\"btn ml-3\">\n                <h4>Prepare Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    class=\"form-control\"\n                    value={assingNo}\n                    ref={register}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Customer Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    class=\"form-control\"\n                    value={custname}\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Amount</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_amount\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by Through</label>\n                  <select\n                    class=\"form-control\"\n                    name=\"p_payable\"\n                    aria-label=\"Default select example\"\n                    ref={register}\n                  >\n                    <option value=\"\">--select--</option>\n                    {payable.map((p, index) => (\n                      <option key={index} value={p.pay}>\n                        {p.pay}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Misc 1</label>\n                  <input\n                    type=\"text\"\n                    name=\"misc_1\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Proposal Description</label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"textarea\"\n                    rows=\"3\"\n                    name=\"misc_2\"\n                    ref={register}\n                  ></textarea>\n                </div>\n              </div>\n            </div>\n\n            {/* <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by date</label>\n                  <input\n                    type=\"date\"\n                    name=\"p_date\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div> */}\n\n            <br />\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default ProposalComponent;\n\nconst payable = [\n  { pay: \"NEFT\" },\n  { pay: \"DEBIT CARD\" },\n  { pay: \"CREDIT CARD\" },\n  { pay: \"UPI\" },\n  { pay: \"WALLET\" },\n];\n\n{\n  /* <div class=\"col-md-8\">\n        <div>\n          <h3>Send Proposal</h3>\n          <br />\n\n          \n        \n        </div>\n      </div> */\n}\n\n// const handleImage = (e) =>{\n//   let files = e.target.files\n//    console.log(files)\n\n//   let reader = new FileReader();\n//   reader.readAsDataURL(files[0])\n\n//  reader.onload = (e) => {\n//  console.log(\"img\", e.target.result)\n// }\n\n/* <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label>Proposal File</label>\n                <input type=\"file\" name=\"p_image\" ref={register} />\n              </div>\n            </div> */\n\n// const Schema = yup.object().shape({\n//     p_assingment: yup.string().required(\"required assingment\"),\n//     p_name: yup.string().required(\"required name\"),\n//     p_document: yup.string().required(\"required file\"),\n//   });\n\n// {\n//   Object.entries(res.data.result).map(([key, value]) => {\n//     console.log(\"val\", value.name);\n//     setCustName(value.name);\n//   });\n// }\n\n{\n  /* <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_assingment\"\n                    onChange={(e) => getID(e.target.value)}\n                  >\n                    <option value=\"\">--select--</option>\n                    {incompleteData.map((p, index) => (\n                      <option key={index} value={p.id}>\n                        {p.assign_no}\n                      </option>\n                    ))}\n                  </select> */\n}\n\n// const getID = (key) => {\n//     setId(key);\n//     incompleteData.filter((data) => {\n//       if (data.id == key) {\n//         console.log(\"assingNo\", data.assign_no);\n//         setAssingNo(data.assign_no);\n//         setAssignID(data.id);\n//       }\n//     });\n//   };\n","/var/www/html/Mazars_Pannel/src/pages/TP/EditProposal/EditProposal.js",["1502","1503","1504","1505","1506","1507","1508","1509","1510","1511","1512"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\nfunction ProposalComponent() {\n  // const { id } = props;\n  // console.log(id);\n\n  const alert = useAlert();\n  const { register, handleSubmit, reset } = useForm();\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [custId, setCustId] = useState(\"\");\n  const [custname, setCustName] = useState();\n  const [assignId, setAssignID] = useState(\"\");\n  const [assingNo, setAssingNo] = useState(\"\");\n\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [proposal, setProposal] = useState({\n    query: \"\",\n    name: \"\",\n    amount: \"\",\n    payable: \"\",\n    misc1: \"\",\n    misc2: \"\",\n    payable_through: \"\",\n  });\n  const { query, name, amount, misc1, misc2, payable_through } = proposal;\n\n  useEffect(() => {\n    getQuery();\n  }, []);\n\n  const getQuery = () => {\n    axios.get(`${baseUrl}/tl/getProposalDetail?id=${id}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setProposal({\n          name: res.data.result.name,\n          query: res.data.result.assign_no,\n          amount: res.data.result.amount,\n          misc1: res.data.result.misc1,\n          misc2: res.data.result.misc2,\n          payable_through: res.data.result.payable_through,\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\n      console.log(\"res\", res);\n      // setCustName(res.data.name);\n      setCustId(res.data.id);\n    };\n    getUser();\n  }, [id]);\n\n  console.log(assignId);\n\n  const onSubmit = (value) => {\n    console.log(value);\n\n    // var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n    var todaysDate = new Date();\n    let formData = new FormData();\n\n    formData.append(\"assign_no\", value.p_assingment);\n    formData.append(\"name\", value.p_name);\n    // formData.append(\"type\", \"tl\");\n    formData.append(\"assign_id\", id);\n    formData.append(\"amount\", value.p_amount);\n    formData.append(\"payable_through\", value.p_payable);\n    formData.append(\"misc1\", value.misc_1);\n    formData.append(\"misc2\", value.misc_2);\n    // formData.append(\"payable_date\", todaysDate);\n    // formData.append(\"customer_id\", custId);\n    // formData.append(\"assign_id\", assignId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/updateProposal`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          // reset();\n          getQuery();\n          alert.success(<Msg />);\n          history.push(\"/taxprofessional/proposal\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  //alert msg\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"10px\" }}>proposal updated</p>\n      </>\n    );\n  };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"7\">\n              <div class=\"btn ml-3\">\n                <h4>Edit Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    class=\"form-control\"\n                    value={query}\n                    ref={register}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Customer Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    class=\"form-control\"\n                    value={name}\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Amount</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_amount\"\n                    class=\"form-control\"\n                    ref={register}\n                    defaultValue={amount}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by Through</label>\n                  <select\n                    class=\"form-control\"\n                    name=\"p_payable\"\n                    aria-label=\"Default select example\"\n                    ref={register}\n                    defaultValue={payable_through}\n                  >\n                    <option value=\"\">--select--</option>\n                    {payable.map((p, index) => (\n                      <option key={index} value={p.pay}>\n                        {p.pay}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Misc 1</label>\n                  <input\n                    type=\"text\"\n                    name=\"misc_1\"\n                    class=\"form-control\"\n                    ref={register}\n                    defaultValue={misc1}\n                  />\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Proposal Description</label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"textarea\"\n                    rows=\"3\"\n                    name=\"misc_2\"\n                    defaultValue={misc2}\n                    ref={register}\n                  ></textarea>\n                </div>\n              </div>\n            </div>\n\n            {/* <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by date</label>\n                  <input\n                    type=\"date\"\n                    name=\"p_date\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div> */}\n\n            <br />\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ProposalComponent;\n\nconst payable = [\n  { pay: \"NEFT\" },\n  { pay: \"DEBIT CARD\" },\n  { pay: \"CREDIT CARD\" },\n  { pay: \"UPI\" },\n  { pay: \"WALLET\" },\n];\n","/var/www/html/Mazars_Pannel/src/components/Search-Filter/tpfilter.js",["1513","1514","1515","1516","1517"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\n\n\nfunction TaxProfessionalFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const {\n    setData,\n    getData,\n    inCompleteQuery,\n    completeAssignment,\n    proposal,\n  } = props;\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    console.log(`selected ${value}`);\n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetCategory ..\");\n    setSelectedData([]);\n    setStore2([]);\n    getData();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    getData();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"store2 :\", store2);\n\n    if (inCompleteQuery == \"inCompleteQuery\") {\n      axios\n        .get(\n          `${baseUrl}/tp/GetIncompleteQues?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n\n    if (completeAssignment == \"completeAssignment\") {\n      axios\n        .get(\n          `${baseUrl}/tp/GetCompleteQues?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n\n    if (proposal == \"proposal\") {\n      axios\n        .get(\n          `${baseUrl}/tp/GetIncompleteQues?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${\n            data.p_dateTo\n          }&status=${data.p_status}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-12 d-flex\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"form-inline\">\n                <div class=\"form-group mb-2\">\n                  <Select\n                    style={{ width: 130 }}\n                    placeholder=\"Select Category\"\n                    defaultValue={[]}\n                    onChange={handleCategory}\n                    value={selectedData}\n                  >\n                    <Option value=\"1\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\n                    </Option>\n                    <Option value=\"2\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\n                    </Option>\n                  </Select>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <Select\n                    mode=\"multiple\"\n                    style={{ width: 250 }}\n                    placeholder=\"Select Sub Category\"\n                    defaultValue={[]}\n                    onChange={handleSubCategory}\n                    value={store2}\n                    allowClear\n                  >\n                    {tax2.map((p, index) => (\n                      <Option value={p.id} key={index}>\n                        {p.details}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n\n                <div>\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mb-2 ml-3\"\n                    onClick={resetCategory}\n                  >\n                    X\n                  </button>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">From</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateFrom\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">To</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateTo\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  {proposal == \"proposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Accepted</option>\n                      <option value=\"2\">Pending</option>\n                      <option value=\"3\">Cust Accepted</option>\n                      <option value=\"4\">Declined</option>\n                    </select>\n                  )}\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                  Search\n                </button>\n                <Reset />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n\nexport default TaxProfessionalFilter;\n","/var/www/html/Mazars_Pannel/src/pages/TP/ChangePassword/ChangePassword.js",["1518","1519","1520","1521","1522","1523","1524","1525"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\n// import \"../../assets/css/style.css\";\n// import \"../../assets/css/media.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required user id\"),\n//   p_password: yup.string().required(\"required password\"),\n//   p_confirm_password: yup.string().required(\"required confirm password\"),\n// });\n\nfunction ChangePassword(props) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const alert = useAlert();\n  // const { handleSubmit, register, reset, errors } = useForm({\n  //   resolver: yupResolver(Schema),\n  // });\n\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n\n  const [error, setError] = useState(\"\");\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"user_id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"rpassword\", value.confirm_password);\n\n    // axios({\n    //   method: \"POST\",\n    //   url: `${baseUrl}/customers/passChange`,\n    //   data: formData,\n    // })\n    //   .then(function (response) {\n    //     console.log(\"res-\", response);\n    //     if (response.data.code === 1) {\n    //       alert.success(\"change password successfully!\");\n    //       reset();\n    //     } else if (response.data.code === 0) {\n    //       console.log(response.data.result);\n\n    //       Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n    //       reset();\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(\"erroror - \", error);\n    //   });\n  };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Change Password</h2>\n          </div>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-group\">\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Email </label>\n                <input\n                  type=\"text\"\n                  className={classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_email,\n                  })}\n                  name=\"p_email\"\n                  placeholder=\"Enter email id\"\n                  ref={register({\n                    required: \"This field is required\",\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: \"Please enter valid email address\",\n                    },\n                  })}\n                />\n                {errors.p_email && (\n                  <div className=\"invalid-feedback\">\n                    {errors.p_email.message}{\" \"}\n                  </div>\n                )}\n              </div>\n\n              <label className=\"form-label\">New Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_password,\n                })}\n                placeholder=\"Enter Your Password\"\n                name=\"p_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  pattern: {\n                    value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n                    message:\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\n                  },\n                })}\n              />\n              {errors.p_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_password.message}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Confirm Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_confirm_password,\n                })}\n                placeholder=\"Confirm Password\"\n                name=\"p_confirm_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  validate: (value) =>\n                    value === getValues(\"p_password\") ||\n                    \"password doesn 't match\",\n                })}\n              />\n              {errors.p_confirm_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_confirm_password.message}\n                </div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default ChangePassword;\n","/var/www/html/Mazars_Pannel/src/views/Schedule/schedule.js",["1526","1527","1528","1529","1530"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport Demo from \"./demo\";\n\nfunction Schedule() {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"7\">\n              <CardTitle tag=\"h4\">Schedule </CardTitle>\n            </Col>\n            <Col md=\"5\"></Col>\n          </Row>\n        </CardHeader>\n        <Demo />\n        <CardBody></CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Schedule;\n","/var/www/html/Mazars_Pannel/src/views/Schedule/demo.js",["1531","1532","1533","1534"],"/var/www/html/Mazars_Pannel/src/views/Schedule/appoinments.js",[],["1535","1536"],"/var/www/html/Mazars_Pannel/src/pages/TL/ViewReport/ViewReport.js",["1537","1538","1539","1540","1541","1542"],"/var/www/html/Mazars_Pannel/src/pages/TL/Schedule/Schedule.js",["1543","1544"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Demo from \"./Demo\";\n\nfunction Schedule() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n\n    return (\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"7\">\n              <CardTitle tag=\"h4\">Schedule </CardTitle>\n            </Col>\n            <Col md=\"5\"></Col>\n          </Row>\n        </CardHeader>\n        <Demo />\n      </Card>\n    </Layout>\n    );\n}\n\nexport default Schedule;","/var/www/html/Mazars_Pannel/src/pages/TL/Schedule/Demo.js",["1545","1546","1547","1548","1549","1550"],"/var/www/html/Mazars_Pannel/src/pages/TL/Schedule/appoinments.js",[],{"ruleId":"1551","replacedBy":"1552"},{"ruleId":"1553","replacedBy":"1554"},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1559","line":109,"column":8,"nodeType":"1557","messageId":"1558","endLine":109,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1560","line":110,"column":8,"nodeType":"1557","messageId":"1558","endLine":110,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1561","line":111,"column":8,"nodeType":"1557","messageId":"1558","endLine":111,"endColumn":22},{"ruleId":"1562","severity":1,"message":"1563","line":236,"column":11,"nodeType":"1564","messageId":"1565","endLine":250,"endColumn":78},{"ruleId":"1562","severity":1,"message":"1563","line":251,"column":11,"nodeType":"1564","messageId":"1565","endLine":251,"endColumn":19},{"ruleId":"1566","severity":1,"message":"1567","line":135,"column":26,"nodeType":"1568","messageId":"1569","endLine":135,"endColumn":28},{"ruleId":"1570","severity":1,"message":"1571","line":136,"column":19,"nodeType":"1572","messageId":"1573","endLine":136,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1574","line":6,"column":10,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1575","line":7,"column":13,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1576","line":17,"column":36,"nodeType":"1557","messageId":"1558","endLine":17,"endColumn":42},{"ruleId":"1555","severity":1,"message":"1574","line":7,"column":10,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1575","line":8,"column":13,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1576","line":18,"column":36,"nodeType":"1557","messageId":"1558","endLine":18,"endColumn":42},{"ruleId":"1555","severity":1,"message":"1556","line":2,"column":27,"nodeType":"1557","messageId":"1558","endLine":2,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1577","line":24,"column":35,"nodeType":"1557","messageId":"1558","endLine":24,"endColumn":40},{"ruleId":"1578","severity":1,"message":"1579","line":67,"column":6,"nodeType":"1580","endLine":67,"endColumn":8,"suggestions":"1581"},{"ruleId":"1555","severity":1,"message":"1582","line":3,"column":10,"nodeType":"1557","messageId":"1558","endLine":3,"endColumn":14},{"ruleId":"1578","severity":1,"message":"1583","line":108,"column":6,"nodeType":"1580","endLine":108,"endColumn":16,"suggestions":"1584"},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1574","line":5,"column":10,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1575","line":8,"column":13,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1585","line":13,"column":3,"nodeType":"1557","messageId":"1558","endLine":13,"endColumn":11},{"ruleId":"1555","severity":1,"message":"1586","line":14,"column":3,"nodeType":"1557","messageId":"1558","endLine":14,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1587","line":17,"column":3,"nodeType":"1557","messageId":"1558","endLine":17,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1576","line":27,"column":35,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":41},{"ruleId":"1562","severity":1,"message":"1563","line":425,"column":1,"nodeType":"1564","messageId":"1565","endLine":456,"endColumn":2},{"ruleId":"1562","severity":1,"message":"1563","line":464,"column":1,"nodeType":"1564","messageId":"1565","endLine":475,"endColumn":2},{"ruleId":"1562","severity":1,"message":"1563","line":476,"column":1,"nodeType":"1564","messageId":"1565","endLine":487,"endColumn":2},{"ruleId":"1562","severity":1,"message":"1563","line":488,"column":1,"nodeType":"1564","messageId":"1565","endLine":543,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1556","line":2,"column":27,"nodeType":"1557","messageId":"1558","endLine":2,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1574","line":3,"column":10,"nodeType":"1557","messageId":"1558","endLine":3,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1575","line":4,"column":13,"nodeType":"1557","messageId":"1558","endLine":4,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1588","line":9,"column":41,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":52},{"ruleId":"1555","severity":1,"message":"1576","line":16,"column":35,"nodeType":"1557","messageId":"1558","endLine":16,"endColumn":41},{"ruleId":"1562","severity":1,"message":"1563","line":429,"column":1,"nodeType":"1564","messageId":"1565","endLine":450,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1574","line":3,"column":10,"nodeType":"1557","messageId":"1558","endLine":3,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1575","line":4,"column":13,"nodeType":"1557","messageId":"1558","endLine":4,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1576","line":19,"column":35,"nodeType":"1557","messageId":"1558","endLine":19,"endColumn":41},{"ruleId":"1578","severity":1,"message":"1579","line":38,"column":6,"nodeType":"1580","endLine":38,"endColumn":8,"suggestions":"1589"},{"ruleId":"1555","severity":1,"message":"1585","line":6,"column":3,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":11},{"ruleId":"1555","severity":1,"message":"1586","line":7,"column":3,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1587","line":10,"column":3,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1587","line":13,"column":3,"nodeType":"1557","messageId":"1558","endLine":13,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1590","line":16,"column":8,"nodeType":"1557","messageId":"1558","endLine":16,"endColumn":19},{"ruleId":"1555","severity":1,"message":"1591","line":21,"column":8,"nodeType":"1557","messageId":"1558","endLine":21,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1592","line":30,"column":10,"nodeType":"1557","messageId":"1558","endLine":30,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1593","line":30,"column":14,"nodeType":"1557","messageId":"1558","endLine":30,"endColumn":19},{"ruleId":"1555","severity":1,"message":"1594","line":31,"column":10,"nodeType":"1557","messageId":"1558","endLine":31,"endColumn":16},{"ruleId":"1578","severity":1,"message":"1595","line":56,"column":6,"nodeType":"1580","endLine":56,"endColumn":8,"suggestions":"1596"},{"ruleId":"1562","severity":1,"message":"1563","line":445,"column":1,"nodeType":"1564","messageId":"1565","endLine":452,"endColumn":2},{"ruleId":"1562","severity":1,"message":"1563","line":454,"column":1,"nodeType":"1564","messageId":"1565","endLine":465,"endColumn":2},{"ruleId":"1562","severity":1,"message":"1563","line":467,"column":1,"nodeType":"1564","messageId":"1565","endLine":585,"endColumn":2},{"ruleId":"1562","severity":1,"message":"1563","line":587,"column":1,"nodeType":"1564","messageId":"1565","endLine":708,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1587","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1597","line":26,"column":20,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":31},{"ruleId":"1555","severity":1,"message":"1598","line":27,"column":21,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1599","line":28,"column":24,"nodeType":"1557","messageId":"1558","endLine":28,"endColumn":39},{"ruleId":"1555","severity":1,"message":"1600","line":29,"column":24,"nodeType":"1557","messageId":"1558","endLine":29,"endColumn":39},{"ruleId":"1578","severity":1,"message":"1601","line":55,"column":6,"nodeType":"1580","endLine":55,"endColumn":8,"suggestions":"1602"},{"ruleId":"1570","severity":1,"message":"1571","line":166,"column":40,"nodeType":"1572","messageId":"1573","endLine":166,"endColumn":42},{"ruleId":"1570","severity":1,"message":"1571","line":182,"column":32,"nodeType":"1572","messageId":"1573","endLine":182,"endColumn":34},{"ruleId":"1603","severity":1,"message":"1604","line":184,"column":17,"nodeType":"1605","endLine":187,"endColumn":18},{"ruleId":"1603","severity":1,"message":"1604","line":194,"column":17,"nodeType":"1605","endLine":197,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1563","line":324,"column":1,"nodeType":"1564","messageId":"1565","endLine":326,"endColumn":2},{"ruleId":"1562","severity":1,"message":"1563","line":345,"column":1,"nodeType":"1564","messageId":"1565","endLine":423,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1606","line":1,"column":38,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":45},{"ruleId":"1555","severity":1,"message":"1587","line":13,"column":3,"nodeType":"1557","messageId":"1558","endLine":13,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1607","line":21,"column":9,"nodeType":"1557","messageId":"1558","endLine":21,"endColumn":14},{"ruleId":"1578","severity":1,"message":"1608","line":28,"column":6,"nodeType":"1580","endLine":28,"endColumn":8,"suggestions":"1609"},{"ruleId":"1578","severity":1,"message":"1610","line":150,"column":6,"nodeType":"1580","endLine":150,"endColumn":8,"suggestions":"1611"},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1577","line":26,"column":35,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":40},{"ruleId":"1555","severity":1,"message":"1577","line":32,"column":35,"nodeType":"1557","messageId":"1558","endLine":32,"endColumn":40},{"ruleId":"1555","severity":1,"message":"1613","line":42,"column":10,"nodeType":"1557","messageId":"1558","endLine":42,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1585","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":11},{"ruleId":"1555","severity":1,"message":"1586","line":13,"column":3,"nodeType":"1557","messageId":"1558","endLine":13,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":14,"column":3,"nodeType":"1557","messageId":"1558","endLine":14,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":15,"column":3,"nodeType":"1557","messageId":"1558","endLine":15,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":16,"column":3,"nodeType":"1557","messageId":"1558","endLine":16,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1616","line":17,"column":3,"nodeType":"1557","messageId":"1558","endLine":17,"endColumn":10},{"ruleId":"1555","severity":1,"message":"1577","line":38,"column":35,"nodeType":"1557","messageId":"1558","endLine":38,"endColumn":40},{"ruleId":"1555","severity":1,"message":"1613","line":50,"column":10,"nodeType":"1557","messageId":"1558","endLine":50,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1582","line":6,"column":10,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1617","line":6,"column":27,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":37},{"ruleId":"1555","severity":1,"message":"1618","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":7},{"ruleId":"1555","severity":1,"message":"1619","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1585","line":10,"column":3,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":11},{"ruleId":"1555","severity":1,"message":"1586","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":13,"column":3,"nodeType":"1557","messageId":"1558","endLine":13,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":14,"column":3,"nodeType":"1557","messageId":"1558","endLine":14,"endColumn":8},{"ruleId":"1578","severity":1,"message":"1583","line":112,"column":6,"nodeType":"1580","endLine":112,"endColumn":16,"suggestions":"1620"},{"ruleId":"1562","severity":1,"message":"1563","line":159,"column":1,"nodeType":"1564","messageId":"1565","endLine":317,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1621","line":3,"column":8,"nodeType":"1557","messageId":"1558","endLine":3,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1622","line":4,"column":10,"nodeType":"1557","messageId":"1558","endLine":4,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1623","line":8,"column":8,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":24},{"ruleId":"1555","severity":1,"message":"1624","line":3,"column":10,"nodeType":"1557","messageId":"1558","endLine":3,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1574","line":4,"column":10,"nodeType":"1557","messageId":"1558","endLine":4,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1575","line":5,"column":13,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1585","line":13,"column":3,"nodeType":"1557","messageId":"1558","endLine":13,"endColumn":11},{"ruleId":"1555","severity":1,"message":"1586","line":14,"column":3,"nodeType":"1557","messageId":"1558","endLine":14,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":15,"column":3,"nodeType":"1557","messageId":"1558","endLine":15,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":16,"column":3,"nodeType":"1557","messageId":"1558","endLine":16,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":17,"column":3,"nodeType":"1557","messageId":"1558","endLine":17,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1616","line":18,"column":3,"nodeType":"1557","messageId":"1558","endLine":18,"endColumn":10},{"ruleId":"1555","severity":1,"message":"1613","line":36,"column":10,"nodeType":"1557","messageId":"1558","endLine":36,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1625","line":36,"column":18,"nodeType":"1557","messageId":"1558","endLine":36,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1624","line":3,"column":10,"nodeType":"1557","messageId":"1558","endLine":3,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1574","line":4,"column":10,"nodeType":"1557","messageId":"1558","endLine":4,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1575","line":5,"column":13,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1585","line":13,"column":3,"nodeType":"1557","messageId":"1558","endLine":13,"endColumn":11},{"ruleId":"1555","severity":1,"message":"1586","line":14,"column":3,"nodeType":"1557","messageId":"1558","endLine":14,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":15,"column":3,"nodeType":"1557","messageId":"1558","endLine":15,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":16,"column":3,"nodeType":"1557","messageId":"1558","endLine":16,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":17,"column":3,"nodeType":"1557","messageId":"1558","endLine":17,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1616","line":18,"column":3,"nodeType":"1557","messageId":"1558","endLine":18,"endColumn":10},{"ruleId":"1555","severity":1,"message":"1626","line":20,"column":8,"nodeType":"1557","messageId":"1558","endLine":20,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1613","line":35,"column":10,"nodeType":"1557","messageId":"1558","endLine":35,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1625","line":35,"column":18,"nodeType":"1557","messageId":"1558","endLine":35,"endColumn":27},{"ruleId":"1578","severity":1,"message":"1627","line":45,"column":6,"nodeType":"1580","endLine":45,"endColumn":10,"suggestions":"1628"},{"ruleId":"1562","severity":1,"message":"1563","line":266,"column":1,"nodeType":"1564","messageId":"1565","endLine":359,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1585","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":11},{"ruleId":"1555","severity":1,"message":"1586","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1587","line":15,"column":3,"nodeType":"1557","messageId":"1558","endLine":15,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1616","line":16,"column":3,"nodeType":"1557","messageId":"1558","endLine":16,"endColumn":10},{"ruleId":"1555","severity":1,"message":"1576","line":21,"column":35,"nodeType":"1557","messageId":"1558","endLine":21,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1629","line":38,"column":9,"nodeType":"1557","messageId":"1558","endLine":38,"endColumn":14},{"ruleId":"1578","severity":1,"message":"1630","line":51,"column":6,"nodeType":"1580","endLine":51,"endColumn":8,"suggestions":"1631"},{"ruleId":"1578","severity":1,"message":"1632","line":77,"column":6,"nodeType":"1580","endLine":77,"endColumn":15,"suggestions":"1633"},{"ruleId":"1570","severity":1,"message":"1571","line":100,"column":22,"nodeType":"1572","messageId":"1573","endLine":100,"endColumn":24},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1621","line":3,"column":8,"nodeType":"1557","messageId":"1558","endLine":3,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1622","line":4,"column":10,"nodeType":"1557","messageId":"1558","endLine":4,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1618","line":6,"column":3,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":7},{"ruleId":"1555","severity":1,"message":"1619","line":7,"column":3,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1585","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":11},{"ruleId":"1555","severity":1,"message":"1586","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":10,"column":3,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1582","line":14,"column":10,"nodeType":"1557","messageId":"1558","endLine":14,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1634","line":22,"column":9,"nodeType":"1557","messageId":"1558","endLine":22,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1587","line":10,"column":3,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1607","line":21,"column":9,"nodeType":"1557","messageId":"1558","endLine":21,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1587","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1635","line":19,"column":8,"nodeType":"1557","messageId":"1558","endLine":19,"endColumn":19},{"ruleId":"1555","severity":1,"message":"1636","line":20,"column":8,"nodeType":"1557","messageId":"1558","endLine":20,"endColumn":20},{"ruleId":"1555","severity":1,"message":"1576","line":26,"column":35,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1637","line":27,"column":19,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":27},{"ruleId":"1570","severity":1,"message":"1571","line":222,"column":40,"nodeType":"1572","messageId":"1573","endLine":222,"endColumn":42},{"ruleId":"1570","severity":1,"message":"1571","line":238,"column":32,"nodeType":"1572","messageId":"1573","endLine":238,"endColumn":34},{"ruleId":"1603","severity":1,"message":"1604","line":240,"column":17,"nodeType":"1605","endLine":243,"endColumn":18},{"ruleId":"1603","severity":1,"message":"1604","line":250,"column":17,"nodeType":"1605","endLine":253,"endColumn":18},{"ruleId":"1562","severity":1,"message":"1563","line":448,"column":1,"nodeType":"1564","messageId":"1565","endLine":454,"endColumn":2},{"ruleId":"1562","severity":1,"message":"1563","line":455,"column":1,"nodeType":"1564","messageId":"1565","endLine":480,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1587","line":15,"column":3,"nodeType":"1557","messageId":"1558","endLine":15,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1607","line":20,"column":9,"nodeType":"1557","messageId":"1558","endLine":20,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1563","line":205,"column":1,"nodeType":"1564","messageId":"1565","endLine":254,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1621","line":2,"column":8,"nodeType":"1557","messageId":"1558","endLine":2,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1622","line":3,"column":10,"nodeType":"1557","messageId":"1558","endLine":3,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1587","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":8},{"ruleId":"1578","severity":1,"message":"1638","line":57,"column":6,"nodeType":"1580","endLine":57,"endColumn":8,"suggestions":"1639"},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":15,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1577","line":24,"column":35,"nodeType":"1557","messageId":"1558","endLine":24,"endColumn":40},{"ruleId":"1555","severity":1,"message":"1582","line":4,"column":10,"nodeType":"1557","messageId":"1558","endLine":4,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1587","line":14,"column":3,"nodeType":"1557","messageId":"1558","endLine":14,"endColumn":8},{"ruleId":"1578","severity":1,"message":"1640","line":27,"column":6,"nodeType":"1580","endLine":27,"endColumn":8,"suggestions":"1641"},{"ruleId":"1555","severity":1,"message":"1642","line":78,"column":9,"nodeType":"1557","messageId":"1558","endLine":78,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1585","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":11},{"ruleId":"1555","severity":1,"message":"1586","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1587","line":15,"column":3,"nodeType":"1557","messageId":"1558","endLine":15,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1616","line":16,"column":3,"nodeType":"1557","messageId":"1558","endLine":16,"endColumn":10},{"ruleId":"1555","severity":1,"message":"1576","line":21,"column":35,"nodeType":"1557","messageId":"1558","endLine":21,"endColumn":41},{"ruleId":"1578","severity":1,"message":"1643","line":29,"column":6,"nodeType":"1580","endLine":29,"endColumn":8,"suggestions":"1644"},{"ruleId":"1570","severity":1,"message":"1571","line":110,"column":38,"nodeType":"1572","messageId":"1573","endLine":110,"endColumn":40},{"ruleId":"1570","severity":1,"message":"1571","line":111,"column":35,"nodeType":"1572","messageId":"1573","endLine":111,"endColumn":37},{"ruleId":"1570","severity":1,"message":"1571","line":112,"column":32,"nodeType":"1572","messageId":"1573","endLine":112,"endColumn":34},{"ruleId":"1570","severity":1,"message":"1571","line":113,"column":36,"nodeType":"1572","messageId":"1573","endLine":113,"endColumn":38},{"ruleId":"1570","severity":1,"message":"1571","line":114,"column":31,"nodeType":"1572","messageId":"1573","endLine":114,"endColumn":33},{"ruleId":"1570","severity":1,"message":"1571","line":299,"column":46,"nodeType":"1572","messageId":"1573","endLine":299,"endColumn":48},{"ruleId":"1555","severity":1,"message":"1585","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":11},{"ruleId":"1555","severity":1,"message":"1586","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1587","line":15,"column":3,"nodeType":"1557","messageId":"1558","endLine":15,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1616","line":16,"column":3,"nodeType":"1557","messageId":"1558","endLine":16,"endColumn":10},{"ruleId":"1555","severity":1,"message":"1576","line":21,"column":35,"nodeType":"1557","messageId":"1558","endLine":21,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1645","line":39,"column":9,"nodeType":"1557","messageId":"1558","endLine":39,"endColumn":14},{"ruleId":"1578","severity":1,"message":"1646","line":53,"column":6,"nodeType":"1580","endLine":53,"endColumn":8,"suggestions":"1647"},{"ruleId":"1578","severity":1,"message":"1632","line":82,"column":6,"nodeType":"1580","endLine":82,"endColumn":15,"suggestions":"1648"},{"ruleId":"1570","severity":1,"message":"1571","line":106,"column":22,"nodeType":"1572","messageId":"1573","endLine":106,"endColumn":24},{"ruleId":"1555","severity":1,"message":"1574","line":5,"column":10,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1575","line":6,"column":13,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1576","line":27,"column":35,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":41},{"ruleId":"1578","severity":1,"message":"1649","line":19,"column":6,"nodeType":"1580","endLine":19,"endColumn":8,"suggestions":"1650"},{"ruleId":"1570","severity":1,"message":"1571","line":114,"column":25,"nodeType":"1572","messageId":"1573","endLine":114,"endColumn":27},{"ruleId":"1570","severity":1,"message":"1571","line":114,"column":58,"nodeType":"1572","messageId":"1573","endLine":114,"endColumn":60},{"ruleId":"1570","severity":1,"message":"1571","line":126,"column":28,"nodeType":"1572","messageId":"1573","endLine":126,"endColumn":30},{"ruleId":"1555","severity":1,"message":"1576","line":13,"column":35,"nodeType":"1557","messageId":"1558","endLine":13,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1577","line":13,"column":43,"nodeType":"1557","messageId":"1558","endLine":13,"endColumn":48},{"ruleId":"1578","severity":1,"message":"1583","line":102,"column":6,"nodeType":"1580","endLine":102,"endColumn":16,"suggestions":"1651"},{"ruleId":"1555","severity":1,"message":"1582","line":3,"column":10,"nodeType":"1557","messageId":"1558","endLine":3,"endColumn":14},{"ruleId":"1652","severity":1,"message":"1653","line":35,"column":15,"nodeType":"1557","messageId":"1654","endLine":35,"endColumn":19},{"ruleId":"1555","severity":1,"message":"1655","line":3,"column":10,"nodeType":"1557","messageId":"1558","endLine":3,"endColumn":15},{"ruleId":"1656","severity":1,"message":"1657","line":33,"column":15,"nodeType":"1605","endLine":33,"endColumn":48},{"ruleId":"1555","severity":1,"message":"1576","line":12,"column":35,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1577","line":12,"column":43,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":48},{"ruleId":"1555","severity":1,"message":"1586","line":6,"column":3,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":7,"column":3,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1658","line":23,"column":11,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1659","line":23,"column":25,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1576","line":23,"column":35,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1660","line":24,"column":11,"nodeType":"1557","messageId":"1558","endLine":24,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1637","line":24,"column":19,"nodeType":"1557","messageId":"1558","endLine":24,"endColumn":27},{"ruleId":"1578","severity":1,"message":"1661","line":29,"column":6,"nodeType":"1580","endLine":29,"endColumn":8,"suggestions":"1662"},{"ruleId":"1555","severity":1,"message":"1663","line":168,"column":12,"nodeType":"1557","messageId":"1558","endLine":168,"endColumn":29},{"ruleId":"1555","severity":1,"message":"1664","line":173,"column":9,"nodeType":"1557","messageId":"1558","endLine":173,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1665","line":180,"column":9,"nodeType":"1557","messageId":"1558","endLine":180,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1666","line":187,"column":9,"nodeType":"1557","messageId":"1558","endLine":187,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1667","line":193,"column":9,"nodeType":"1557","messageId":"1558","endLine":193,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1586","line":6,"column":3,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":7,"column":3,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1658","line":23,"column":11,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1659","line":23,"column":25,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1576","line":23,"column":35,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1577","line":23,"column":43,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":48},{"ruleId":"1555","severity":1,"message":"1660","line":24,"column":11,"nodeType":"1557","messageId":"1558","endLine":24,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1637","line":24,"column":19,"nodeType":"1557","messageId":"1558","endLine":24,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1668","line":25,"column":10,"nodeType":"1557","messageId":"1558","endLine":25,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1669","line":25,"column":24,"nodeType":"1557","messageId":"1558","endLine":25,"endColumn":39},{"ruleId":"1578","severity":1,"message":"1670","line":29,"column":6,"nodeType":"1580","endLine":29,"endColumn":8,"suggestions":"1671"},{"ruleId":"1570","severity":1,"message":"1571","line":143,"column":32,"nodeType":"1572","messageId":"1573","endLine":143,"endColumn":34},{"ruleId":"1555","severity":1,"message":"1617","line":4,"column":16,"nodeType":"1557","messageId":"1558","endLine":4,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1586","line":10,"column":3,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":13,"column":3,"nodeType":"1557","messageId":"1558","endLine":13,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1658","line":26,"column":11,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1659","line":26,"column":25,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1576","line":26,"column":35,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1577","line":26,"column":43,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":48},{"ruleId":"1555","severity":1,"message":"1660","line":27,"column":11,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1637","line":27,"column":19,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1668","line":28,"column":10,"nodeType":"1557","messageId":"1558","endLine":28,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1669","line":28,"column":24,"nodeType":"1557","messageId":"1558","endLine":28,"endColumn":39},{"ruleId":"1578","severity":1,"message":"1672","line":32,"column":6,"nodeType":"1580","endLine":32,"endColumn":8,"suggestions":"1673"},{"ruleId":"1562","severity":1,"message":"1563","line":253,"column":1,"nodeType":"1564","messageId":"1565","endLine":255,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1586","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":10,"column":3,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1586","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":10,"column":3,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1658","line":22,"column":11,"nodeType":"1557","messageId":"1558","endLine":22,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1659","line":22,"column":25,"nodeType":"1557","messageId":"1558","endLine":22,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1576","line":22,"column":35,"nodeType":"1557","messageId":"1558","endLine":22,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1660","line":23,"column":11,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1637","line":23,"column":19,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1668","line":24,"column":10,"nodeType":"1557","messageId":"1558","endLine":24,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1669","line":24,"column":24,"nodeType":"1557","messageId":"1558","endLine":24,"endColumn":39},{"ruleId":"1555","severity":1,"message":"1674","line":27,"column":10,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1675","line":28,"column":10,"nodeType":"1557","messageId":"1558","endLine":28,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1676","line":30,"column":17,"nodeType":"1557","messageId":"1558","endLine":30,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1625","line":31,"column":18,"nodeType":"1557","messageId":"1558","endLine":31,"endColumn":27},{"ruleId":"1578","severity":1,"message":"1677","line":35,"column":6,"nodeType":"1580","endLine":35,"endColumn":8,"suggestions":"1678"},{"ruleId":"1555","severity":1,"message":"1667","line":158,"column":9,"nodeType":"1557","messageId":"1558","endLine":158,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1679","line":178,"column":9,"nodeType":"1557","messageId":"1558","endLine":178,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1563","line":309,"column":1,"nodeType":"1564","messageId":"1565","endLine":365,"endColumn":2},{"ruleId":"1562","severity":1,"message":"1563","line":367,"column":1,"nodeType":"1564","messageId":"1565","endLine":402,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1586","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":10,"column":3,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1658","line":26,"column":11,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1659","line":26,"column":25,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1576","line":26,"column":35,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1660","line":27,"column":11,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1637","line":27,"column":19,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1669","line":30,"column":24,"nodeType":"1557","messageId":"1558","endLine":30,"endColumn":39},{"ruleId":"1578","severity":1,"message":"1680","line":54,"column":6,"nodeType":"1580","endLine":54,"endColumn":8,"suggestions":"1681"},{"ruleId":"1555","severity":1,"message":"1674","line":56,"column":10,"nodeType":"1557","messageId":"1558","endLine":56,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1675","line":57,"column":10,"nodeType":"1557","messageId":"1558","endLine":57,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1676","line":59,"column":17,"nodeType":"1557","messageId":"1558","endLine":59,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1625","line":60,"column":18,"nodeType":"1557","messageId":"1558","endLine":60,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1667","line":191,"column":9,"nodeType":"1557","messageId":"1558","endLine":191,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1679","line":217,"column":9,"nodeType":"1557","messageId":"1558","endLine":217,"endColumn":14},{"ruleId":"1562","severity":1,"message":"1563","line":420,"column":1,"nodeType":"1564","messageId":"1565","endLine":426,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1586","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":10,"column":3,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1658","line":26,"column":11,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1659","line":26,"column":25,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1576","line":26,"column":35,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1577","line":26,"column":43,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":48},{"ruleId":"1555","severity":1,"message":"1660","line":27,"column":11,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1637","line":27,"column":19,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1668","line":30,"column":10,"nodeType":"1557","messageId":"1558","endLine":30,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1669","line":30,"column":24,"nodeType":"1557","messageId":"1558","endLine":30,"endColumn":39},{"ruleId":"1578","severity":1,"message":"1682","line":55,"column":6,"nodeType":"1580","endLine":55,"endColumn":8,"suggestions":"1683"},{"ruleId":"1555","severity":1,"message":"1674","line":71,"column":10,"nodeType":"1557","messageId":"1558","endLine":71,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1675","line":72,"column":10,"nodeType":"1557","messageId":"1558","endLine":72,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1676","line":74,"column":17,"nodeType":"1557","messageId":"1558","endLine":74,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1613","line":75,"column":10,"nodeType":"1557","messageId":"1558","endLine":75,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1625","line":75,"column":18,"nodeType":"1557","messageId":"1558","endLine":75,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1586","line":6,"column":3,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":7,"column":3,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1658","line":22,"column":11,"nodeType":"1557","messageId":"1558","endLine":22,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1659","line":22,"column":25,"nodeType":"1557","messageId":"1558","endLine":22,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1576","line":22,"column":35,"nodeType":"1557","messageId":"1558","endLine":22,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1660","line":23,"column":11,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1637","line":23,"column":19,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1669","line":24,"column":24,"nodeType":"1557","messageId":"1558","endLine":24,"endColumn":39},{"ruleId":"1578","severity":1,"message":"1684","line":27,"column":6,"nodeType":"1580","endLine":27,"endColumn":8,"suggestions":"1685"},{"ruleId":"1555","severity":1,"message":"1674","line":39,"column":10,"nodeType":"1557","messageId":"1558","endLine":39,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1675","line":40,"column":10,"nodeType":"1557","messageId":"1558","endLine":40,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1676","line":42,"column":17,"nodeType":"1557","messageId":"1558","endLine":42,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1625","line":43,"column":18,"nodeType":"1557","messageId":"1558","endLine":43,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1667","line":301,"column":9,"nodeType":"1557","messageId":"1558","endLine":301,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1679","line":318,"column":9,"nodeType":"1557","messageId":"1558","endLine":318,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1586","line":6,"column":3,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":7,"column":3,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1658","line":23,"column":11,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1659","line":23,"column":25,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1576","line":23,"column":35,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1660","line":25,"column":11,"nodeType":"1557","messageId":"1558","endLine":25,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1637","line":25,"column":19,"nodeType":"1557","messageId":"1558","endLine":25,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1669","line":27,"column":24,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":39},{"ruleId":"1578","severity":1,"message":"1686","line":31,"column":6,"nodeType":"1580","endLine":31,"endColumn":8,"suggestions":"1687"},{"ruleId":"1555","severity":1,"message":"1674","line":42,"column":10,"nodeType":"1557","messageId":"1558","endLine":42,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1688","line":42,"column":15,"nodeType":"1557","messageId":"1558","endLine":42,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1675","line":43,"column":10,"nodeType":"1557","messageId":"1558","endLine":43,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1689","line":43,"column":16,"nodeType":"1557","messageId":"1558","endLine":43,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1690","line":45,"column":10,"nodeType":"1557","messageId":"1558","endLine":45,"endColumn":15},{"ruleId":"1555","severity":1,"message":"1676","line":45,"column":17,"nodeType":"1557","messageId":"1558","endLine":45,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1625","line":46,"column":18,"nodeType":"1557","messageId":"1558","endLine":46,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1667","line":300,"column":9,"nodeType":"1557","messageId":"1558","endLine":300,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1679","line":317,"column":9,"nodeType":"1557","messageId":"1558","endLine":317,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1586","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":10,"column":3,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1691","line":16,"column":16,"nodeType":"1557","messageId":"1558","endLine":16,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1635","line":17,"column":8,"nodeType":"1557","messageId":"1558","endLine":17,"endColumn":19},{"ruleId":"1555","severity":1,"message":"1576","line":23,"column":35,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1637","line":24,"column":19,"nodeType":"1557","messageId":"1558","endLine":24,"endColumn":27},{"ruleId":"1578","severity":1,"message":"1595","line":29,"column":6,"nodeType":"1580","endLine":29,"endColumn":8,"suggestions":"1692"},{"ruleId":"1562","severity":1,"message":"1563","line":490,"column":1,"nodeType":"1564","messageId":"1565","endLine":604,"endColumn":2},{"ruleId":"1562","severity":1,"message":"1563","line":606,"column":1,"nodeType":"1564","messageId":"1565","endLine":652,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1586","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":10,"column":3,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1693","line":16,"column":16,"nodeType":"1557","messageId":"1558","endLine":16,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1658","line":21,"column":11,"nodeType":"1557","messageId":"1558","endLine":21,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1659","line":21,"column":25,"nodeType":"1557","messageId":"1558","endLine":21,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1576","line":21,"column":35,"nodeType":"1557","messageId":"1558","endLine":21,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1660","line":22,"column":11,"nodeType":"1557","messageId":"1558","endLine":22,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1637","line":22,"column":19,"nodeType":"1557","messageId":"1558","endLine":22,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1669","line":24,"column":24,"nodeType":"1557","messageId":"1558","endLine":24,"endColumn":39},{"ruleId":"1578","severity":1,"message":"1694","line":28,"column":6,"nodeType":"1580","endLine":28,"endColumn":8,"suggestions":"1695"},{"ruleId":"1555","severity":1,"message":"1674","line":40,"column":10,"nodeType":"1557","messageId":"1558","endLine":40,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1675","line":41,"column":10,"nodeType":"1557","messageId":"1558","endLine":41,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1676","line":43,"column":17,"nodeType":"1557","messageId":"1558","endLine":43,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1625","line":44,"column":18,"nodeType":"1557","messageId":"1558","endLine":44,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1667","line":298,"column":9,"nodeType":"1557","messageId":"1558","endLine":298,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1679","line":315,"column":9,"nodeType":"1557","messageId":"1558","endLine":315,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1658","line":26,"column":11,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1659","line":26,"column":25,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1576","line":26,"column":35,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1577","line":26,"column":43,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":48},{"ruleId":"1555","severity":1,"message":"1660","line":27,"column":11,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1637","line":27,"column":19,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1668","line":28,"column":10,"nodeType":"1557","messageId":"1558","endLine":28,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1669","line":28,"column":24,"nodeType":"1557","messageId":"1558","endLine":28,"endColumn":39},{"ruleId":"1570","severity":1,"message":"1571","line":275,"column":40,"nodeType":"1572","messageId":"1573","endLine":275,"endColumn":42},{"ruleId":"1555","severity":1,"message":"1587","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":8},{"ruleId":"1578","severity":1,"message":"1638","line":34,"column":6,"nodeType":"1580","endLine":34,"endColumn":8,"suggestions":"1696"},{"ruleId":"1555","severity":1,"message":"1586","line":6,"column":3,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":7,"column":3,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1658","line":22,"column":11,"nodeType":"1557","messageId":"1558","endLine":22,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1659","line":22,"column":25,"nodeType":"1557","messageId":"1558","endLine":22,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1576","line":22,"column":35,"nodeType":"1557","messageId":"1558","endLine":22,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1660","line":23,"column":11,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1637","line":23,"column":19,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1669","line":24,"column":24,"nodeType":"1557","messageId":"1558","endLine":24,"endColumn":39},{"ruleId":"1578","severity":1,"message":"1697","line":27,"column":6,"nodeType":"1580","endLine":27,"endColumn":8,"suggestions":"1698"},{"ruleId":"1555","severity":1,"message":"1674","line":39,"column":10,"nodeType":"1557","messageId":"1558","endLine":39,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1675","line":40,"column":10,"nodeType":"1557","messageId":"1558","endLine":40,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1676","line":42,"column":17,"nodeType":"1557","messageId":"1558","endLine":42,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1625","line":43,"column":18,"nodeType":"1557","messageId":"1558","endLine":43,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1667","line":296,"column":9,"nodeType":"1557","messageId":"1558","endLine":296,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1679","line":313,"column":9,"nodeType":"1557","messageId":"1558","endLine":313,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1607","line":25,"column":9,"nodeType":"1557","messageId":"1558","endLine":25,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1592","line":26,"column":11,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1699","line":28,"column":9,"nodeType":"1557","messageId":"1558","endLine":28,"endColumn":16},{"ruleId":"1578","severity":1,"message":"1700","line":37,"column":6,"nodeType":"1580","endLine":37,"endColumn":8,"suggestions":"1701"},{"ruleId":"1570","severity":1,"message":"1571","line":278,"column":40,"nodeType":"1572","messageId":"1573","endLine":278,"endColumn":42},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1588","line":2,"column":41,"nodeType":"1557","messageId":"1558","endLine":2,"endColumn":52},{"ruleId":"1555","severity":1,"message":"1702","line":17,"column":9,"nodeType":"1557","messageId":"1558","endLine":17,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1588","line":2,"column":41,"nodeType":"1557","messageId":"1558","endLine":2,"endColumn":52},{"ruleId":"1555","severity":1,"message":"1577","line":9,"column":37,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":42},{"ruleId":"1555","severity":1,"message":"1587","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1616","line":13,"column":3,"nodeType":"1557","messageId":"1558","endLine":13,"endColumn":10},{"ruleId":"1555","severity":1,"message":"1703","line":22,"column":8,"nodeType":"1557","messageId":"1558","endLine":22,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1576","line":28,"column":35,"nodeType":"1557","messageId":"1558","endLine":28,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1637","line":29,"column":19,"nodeType":"1557","messageId":"1558","endLine":29,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1597","line":40,"column":20,"nodeType":"1557","messageId":"1558","endLine":40,"endColumn":31},{"ruleId":"1555","severity":1,"message":"1598","line":41,"column":21,"nodeType":"1557","messageId":"1558","endLine":41,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1599","line":42,"column":24,"nodeType":"1557","messageId":"1558","endLine":42,"endColumn":39},{"ruleId":"1555","severity":1,"message":"1600","line":43,"column":24,"nodeType":"1557","messageId":"1558","endLine":43,"endColumn":39},{"ruleId":"1578","severity":1,"message":"1643","line":47,"column":6,"nodeType":"1580","endLine":47,"endColumn":8,"suggestions":"1704"},{"ruleId":"1570","severity":1,"message":"1571","line":235,"column":40,"nodeType":"1572","messageId":"1573","endLine":235,"endColumn":42},{"ruleId":"1570","severity":1,"message":"1571","line":250,"column":32,"nodeType":"1572","messageId":"1573","endLine":250,"endColumn":34},{"ruleId":"1603","severity":1,"message":"1604","line":252,"column":17,"nodeType":"1605","endLine":255,"endColumn":18},{"ruleId":"1603","severity":1,"message":"1604","line":262,"column":17,"nodeType":"1605","endLine":265,"endColumn":18},{"ruleId":"1570","severity":1,"message":"1571","line":310,"column":36,"nodeType":"1572","messageId":"1573","endLine":310,"endColumn":38},{"ruleId":"1570","severity":1,"message":"1571","line":313,"column":39,"nodeType":"1572","messageId":"1573","endLine":313,"endColumn":41},{"ruleId":"1570","severity":1,"message":"1571","line":314,"column":37,"nodeType":"1572","messageId":"1573","endLine":314,"endColumn":39},{"ruleId":"1570","severity":1,"message":"1571","line":315,"column":34,"nodeType":"1572","messageId":"1573","endLine":315,"endColumn":36},{"ruleId":"1570","severity":1,"message":"1571","line":316,"column":38,"nodeType":"1572","messageId":"1573","endLine":316,"endColumn":40},{"ruleId":"1570","severity":1,"message":"1571","line":335,"column":44,"nodeType":"1572","messageId":"1573","endLine":335,"endColumn":46},{"ruleId":"1570","severity":1,"message":"1571","line":336,"column":41,"nodeType":"1572","messageId":"1573","endLine":336,"endColumn":43},{"ruleId":"1570","severity":1,"message":"1571","line":337,"column":38,"nodeType":"1572","messageId":"1573","endLine":337,"endColumn":40},{"ruleId":"1570","severity":1,"message":"1571","line":338,"column":42,"nodeType":"1572","messageId":"1573","endLine":338,"endColumn":44},{"ruleId":"1570","severity":1,"message":"1571","line":339,"column":32,"nodeType":"1572","messageId":"1573","endLine":339,"endColumn":34},{"ruleId":"1562","severity":1,"message":"1563","line":624,"column":1,"nodeType":"1564","messageId":"1565","endLine":629,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1588","line":2,"column":41,"nodeType":"1557","messageId":"1558","endLine":2,"endColumn":52},{"ruleId":"1555","severity":1,"message":"1577","line":10,"column":37,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":42},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1588","line":2,"column":41,"nodeType":"1557","messageId":"1558","endLine":2,"endColumn":52},{"ruleId":"1555","severity":1,"message":"1577","line":10,"column":35,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":40},{"ruleId":"1555","severity":1,"message":"1586","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":10,"column":3,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1705","line":5,"column":10,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1586","line":10,"column":3,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1587","line":13,"column":3,"nodeType":"1557","messageId":"1558","endLine":13,"endColumn":8},{"ruleId":"1578","severity":1,"message":"1706","line":42,"column":6,"nodeType":"1580","endLine":42,"endColumn":8,"suggestions":"1707"},{"ruleId":"1570","severity":1,"message":"1571","line":48,"column":11,"nodeType":"1572","messageId":"1573","endLine":48,"endColumn":13},{"ruleId":"1570","severity":1,"message":"1571","line":63,"column":34,"nodeType":"1572","messageId":"1573","endLine":63,"endColumn":36},{"ruleId":"1570","severity":1,"message":"1571","line":66,"column":34,"nodeType":"1572","messageId":"1573","endLine":66,"endColumn":36},{"ruleId":"1570","severity":1,"message":"1571","line":69,"column":34,"nodeType":"1572","messageId":"1573","endLine":69,"endColumn":36},{"ruleId":"1562","severity":1,"message":"1563","line":175,"column":1,"nodeType":"1564","messageId":"1565","endLine":177,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1586","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1587","line":15,"column":3,"nodeType":"1557","messageId":"1558","endLine":15,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1577","line":23,"column":35,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":40},{"ruleId":"1555","severity":1,"message":"1708","line":26,"column":10,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1709","line":27,"column":10,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1710","line":27,"column":20,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":31},{"ruleId":"1555","severity":1,"message":"1711","line":28,"column":20,"nodeType":"1557","messageId":"1558","endLine":28,"endColumn":31},{"ruleId":"1555","severity":1,"message":"1712","line":29,"column":10,"nodeType":"1557","messageId":"1558","endLine":29,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1713","line":29,"column":20,"nodeType":"1557","messageId":"1558","endLine":29,"endColumn":31},{"ruleId":"1578","severity":1,"message":"1632","line":47,"column":6,"nodeType":"1580","endLine":47,"endColumn":8,"suggestions":"1714"},{"ruleId":"1555","severity":1,"message":"1715","line":81,"column":9,"nodeType":"1557","messageId":"1558","endLine":81,"endColumn":19},{"ruleId":"1555","severity":1,"message":"1586","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1587","line":14,"column":3,"nodeType":"1557","messageId":"1558","endLine":14,"endColumn":8},{"ruleId":"1578","severity":1,"message":"1583","line":42,"column":6,"nodeType":"1580","endLine":42,"endColumn":16,"suggestions":"1716"},{"ruleId":"1570","severity":1,"message":"1571","line":186,"column":42,"nodeType":"1572","messageId":"1573","endLine":186,"endColumn":44},{"ruleId":"1570","severity":1,"message":"1571","line":186,"column":72,"nodeType":"1572","messageId":"1573","endLine":186,"endColumn":74},{"ruleId":"1570","severity":1,"message":"1571","line":218,"column":39,"nodeType":"1572","messageId":"1573","endLine":218,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1582","line":6,"column":10,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1586","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1587","line":14,"column":3,"nodeType":"1557","messageId":"1558","endLine":14,"endColumn":8},{"ruleId":"1578","severity":1,"message":"1717","line":32,"column":6,"nodeType":"1580","endLine":32,"endColumn":16,"suggestions":"1718"},{"ruleId":"1570","severity":1,"message":"1571","line":290,"column":39,"nodeType":"1572","messageId":"1573","endLine":290,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1576","line":9,"column":35,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":41},{"ruleId":"1570","severity":1,"message":"1571","line":43,"column":18,"nodeType":"1572","messageId":"1573","endLine":43,"endColumn":20},{"ruleId":"1570","severity":1,"message":"1571","line":58,"column":27,"nodeType":"1572","messageId":"1573","endLine":58,"endColumn":29},{"ruleId":"1555","severity":1,"message":"1719","line":12,"column":10,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1720","line":13,"column":10,"nodeType":"1557","messageId":"1558","endLine":13,"endColumn":27},{"ruleId":"1578","severity":1,"message":"1721","line":17,"column":6,"nodeType":"1580","endLine":17,"endColumn":8,"suggestions":"1722"},{"ruleId":"1555","severity":1,"message":"1723","line":32,"column":9,"nodeType":"1557","messageId":"1558","endLine":32,"endColumn":25},{"ruleId":"1656","severity":1,"message":"1724","line":54,"column":17,"nodeType":"1605","endLine":57,"endColumn":18},{"ruleId":"1656","severity":1,"message":"1724","line":133,"column":17,"nodeType":"1605","endLine":138,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1576","line":9,"column":35,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":41},{"ruleId":"1570","severity":1,"message":"1571","line":64,"column":15,"nodeType":"1572","messageId":"1573","endLine":64,"endColumn":17},{"ruleId":"1570","severity":1,"message":"1571","line":83,"column":18,"nodeType":"1572","messageId":"1573","endLine":83,"endColumn":20},{"ruleId":"1570","severity":1,"message":"1571","line":102,"column":20,"nodeType":"1572","messageId":"1573","endLine":102,"endColumn":22},{"ruleId":"1570","severity":1,"message":"1571","line":215,"column":26,"nodeType":"1572","messageId":"1573","endLine":215,"endColumn":28},{"ruleId":"1570","severity":1,"message":"1571","line":228,"column":31,"nodeType":"1572","messageId":"1573","endLine":228,"endColumn":33},{"ruleId":"1570","severity":1,"message":"1571","line":240,"column":29,"nodeType":"1572","messageId":"1573","endLine":240,"endColumn":31},{"ruleId":"1562","severity":1,"message":"1563","line":270,"column":1,"nodeType":"1564","messageId":"1565","endLine":285,"endColumn":2},{"ruleId":"1562","severity":1,"message":"1563","line":286,"column":1,"nodeType":"1564","messageId":"1565","endLine":301,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1612","line":2,"column":17,"nodeType":"1557","messageId":"1558","endLine":2,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":2,"column":27,"nodeType":"1557","messageId":"1558","endLine":2,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1577","line":25,"column":35,"nodeType":"1557","messageId":"1558","endLine":25,"endColumn":40},{"ruleId":"1555","severity":1,"message":"1612","line":2,"column":17,"nodeType":"1557","messageId":"1558","endLine":2,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":2,"column":27,"nodeType":"1557","messageId":"1558","endLine":2,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1574","line":10,"column":10,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1575","line":11,"column":13,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1556","line":2,"column":27,"nodeType":"1557","messageId":"1558","endLine":2,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1725","line":28,"column":10,"nodeType":"1557","messageId":"1558","endLine":28,"endColumn":15},{"ruleId":"1555","severity":1,"message":"1726","line":28,"column":17,"nodeType":"1557","messageId":"1558","endLine":28,"endColumn":25},{"ruleId":"1551","replacedBy":"1727"},{"ruleId":"1553","replacedBy":"1728"},{"ruleId":"1551","replacedBy":"1729"},{"ruleId":"1553","replacedBy":"1730"},{"ruleId":"1551","replacedBy":"1731"},{"ruleId":"1553","replacedBy":"1732"},{"ruleId":"1555","severity":1,"message":"1619","line":4,"column":3,"nodeType":"1557","messageId":"1558","endLine":4,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1586","line":6,"column":3,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":7,"column":3,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1624","line":14,"column":10,"nodeType":"1557","messageId":"1558","endLine":14,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1733","line":16,"column":10,"nodeType":"1557","messageId":"1558","endLine":16,"endColumn":16},{"ruleId":"1578","severity":1,"message":"1682","line":26,"column":6,"nodeType":"1580","endLine":26,"endColumn":8,"suggestions":"1734"},{"ruleId":"1551","replacedBy":"1735"},{"ruleId":"1553","replacedBy":"1736"},{"ruleId":"1555","severity":1,"message":"1619","line":4,"column":3,"nodeType":"1557","messageId":"1558","endLine":4,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1586","line":6,"column":3,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":7,"column":3,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1624","line":14,"column":10,"nodeType":"1557","messageId":"1558","endLine":14,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1733","line":16,"column":10,"nodeType":"1557","messageId":"1558","endLine":16,"endColumn":16},{"ruleId":"1578","severity":1,"message":"1737","line":27,"column":6,"nodeType":"1580","endLine":27,"endColumn":8,"suggestions":"1738"},{"ruleId":"1555","severity":1,"message":"1619","line":4,"column":3,"nodeType":"1557","messageId":"1558","endLine":4,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1586","line":6,"column":3,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":7,"column":3,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1624","line":14,"column":10,"nodeType":"1557","messageId":"1558","endLine":14,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1733","line":16,"column":10,"nodeType":"1557","messageId":"1558","endLine":16,"endColumn":16},{"ruleId":"1578","severity":1,"message":"1694","line":26,"column":6,"nodeType":"1580","endLine":26,"endColumn":8,"suggestions":"1739"},{"ruleId":"1555","severity":1,"message":"1719","line":7,"column":10,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":22},{"ruleId":"1578","severity":1,"message":"1721","line":11,"column":6,"nodeType":"1580","endLine":11,"endColumn":8,"suggestions":"1740"},{"ruleId":"1562","severity":1,"message":"1563","line":47,"column":1,"nodeType":"1564","messageId":"1565","endLine":49,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1621","line":4,"column":8,"nodeType":"1557","messageId":"1558","endLine":4,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1622","line":5,"column":10,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1582","line":6,"column":10,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1705","line":7,"column":10,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1741","line":17,"column":10,"nodeType":"1557","messageId":"1558","endLine":17,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1742","line":18,"column":10,"nodeType":"1557","messageId":"1558","endLine":18,"endColumn":20},{"ruleId":"1555","severity":1,"message":"1743","line":19,"column":10,"nodeType":"1557","messageId":"1558","endLine":19,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1744","line":29,"column":9,"nodeType":"1557","messageId":"1558","endLine":29,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1606","line":1,"column":38,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":45},{"ruleId":"1555","severity":1,"message":"1745","line":2,"column":8,"nodeType":"1557","messageId":"1558","endLine":2,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1705","line":5,"column":10,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1618","line":7,"column":3,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":7},{"ruleId":"1555","severity":1,"message":"1619","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1585","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":11},{"ruleId":"1555","severity":1,"message":"1586","line":10,"column":3,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":13,"column":3,"nodeType":"1557","messageId":"1558","endLine":13,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1582","line":15,"column":10,"nodeType":"1557","messageId":"1558","endLine":15,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1746","line":16,"column":8,"nodeType":"1557","messageId":"1558","endLine":16,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1747","line":17,"column":8,"nodeType":"1557","messageId":"1558","endLine":17,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1748","line":21,"column":10,"nodeType":"1557","messageId":"1558","endLine":21,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1749","line":21,"column":24,"nodeType":"1557","messageId":"1558","endLine":21,"endColumn":38},{"ruleId":"1555","severity":1,"message":"1574","line":5,"column":10,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1575","line":8,"column":13,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1576","line":20,"column":35,"nodeType":"1557","messageId":"1558","endLine":20,"endColumn":41},{"ruleId":"1578","severity":1,"message":"1632","line":42,"column":6,"nodeType":"1580","endLine":42,"endColumn":8,"suggestions":"1750"},{"ruleId":"1570","severity":1,"message":"1571","line":57,"column":22,"nodeType":"1572","messageId":"1573","endLine":57,"endColumn":24},{"ruleId":"1603","severity":1,"message":"1604","line":338,"column":35,"nodeType":"1605","endLine":341,"endColumn":36},{"ruleId":"1562","severity":1,"message":"1563","line":522,"column":1,"nodeType":"1564","messageId":"1565","endLine":527,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1576","line":9,"column":35,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1751","line":21,"column":5,"nodeType":"1557","messageId":"1558","endLine":21,"endColumn":15},{"ruleId":"1570","severity":1,"message":"1571","line":75,"column":26,"nodeType":"1572","messageId":"1573","endLine":75,"endColumn":28},{"ruleId":"1570","severity":1,"message":"1571","line":90,"column":33,"nodeType":"1572","messageId":"1573","endLine":90,"endColumn":35},{"ruleId":"1570","severity":1,"message":"1571","line":105,"column":26,"nodeType":"1572","messageId":"1573","endLine":105,"endColumn":28},{"ruleId":"1570","severity":1,"message":"1571","line":120,"column":24,"nodeType":"1572","messageId":"1573","endLine":120,"endColumn":26},{"ruleId":"1570","severity":1,"message":"1571","line":135,"column":28,"nodeType":"1572","messageId":"1573","endLine":135,"endColumn":30},{"ruleId":"1570","severity":1,"message":"1571","line":150,"column":20,"nodeType":"1572","messageId":"1573","endLine":150,"endColumn":22},{"ruleId":"1570","severity":1,"message":"1571","line":165,"column":26,"nodeType":"1572","messageId":"1573","endLine":165,"endColumn":28},{"ruleId":"1570","severity":1,"message":"1571","line":180,"column":23,"nodeType":"1572","messageId":"1573","endLine":180,"endColumn":25},{"ruleId":"1570","severity":1,"message":"1571","line":303,"column":31,"nodeType":"1572","messageId":"1573","endLine":303,"endColumn":33},{"ruleId":"1570","severity":1,"message":"1571","line":316,"column":37,"nodeType":"1572","messageId":"1573","endLine":316,"endColumn":39},{"ruleId":"1570","severity":1,"message":"1571","line":329,"column":34,"nodeType":"1572","messageId":"1573","endLine":329,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1614","line":5,"column":28,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":31},{"ruleId":"1555","severity":1,"message":"1615","line":5,"column":33,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1752","line":6,"column":19,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":32},{"ruleId":"1555","severity":1,"message":"1753","line":6,"column":34,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":44},{"ruleId":"1555","severity":1,"message":"1754","line":6,"column":46,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":54},{"ruleId":"1555","severity":1,"message":"1659","line":15,"column":11,"nodeType":"1557","messageId":"1558","endLine":15,"endColumn":19},{"ruleId":"1555","severity":1,"message":"1755","line":15,"column":21,"nodeType":"1557","messageId":"1558","endLine":15,"endColumn":28},{"ruleId":"1555","severity":1,"message":"1658","line":15,"column":30,"nodeType":"1557","messageId":"1558","endLine":15,"endColumn":42},{"ruleId":"1555","severity":1,"message":"1577","line":15,"column":44,"nodeType":"1557","messageId":"1558","endLine":15,"endColumn":49},{"ruleId":"1555","severity":1,"message":"1667","line":31,"column":9,"nodeType":"1557","messageId":"1558","endLine":31,"endColumn":17},{"ruleId":"1551","replacedBy":"1756"},{"ruleId":"1553","replacedBy":"1757"},{"ruleId":"1551","replacedBy":"1758"},{"ruleId":"1553","replacedBy":"1759"},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1570","severity":1,"message":"1571","line":59,"column":32,"nodeType":"1572","messageId":"1573","endLine":59,"endColumn":34},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1603","severity":1,"message":"1604","line":68,"column":21,"nodeType":"1605","endLine":71,"endColumn":22},{"ruleId":"1570","severity":1,"message":"1571","line":73,"column":33,"nodeType":"1572","messageId":"1573","endLine":73,"endColumn":35},{"ruleId":"1570","severity":1,"message":"1571","line":74,"column":33,"nodeType":"1572","messageId":"1573","endLine":74,"endColumn":35},{"ruleId":"1570","severity":1,"message":"1571","line":75,"column":34,"nodeType":"1572","messageId":"1573","endLine":75,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1760","line":8,"column":5,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1761","line":11,"column":11,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1762","line":13,"column":9,"nodeType":"1557","messageId":"1558","endLine":13,"endColumn":18},{"ruleId":"1570","severity":1,"message":"1571","line":99,"column":38,"nodeType":"1572","messageId":"1573","endLine":99,"endColumn":40},{"ruleId":"1570","severity":1,"message":"1571","line":100,"column":35,"nodeType":"1572","messageId":"1573","endLine":100,"endColumn":37},{"ruleId":"1570","severity":1,"message":"1571","line":101,"column":32,"nodeType":"1572","messageId":"1573","endLine":101,"endColumn":34},{"ruleId":"1570","severity":1,"message":"1571","line":102,"column":36,"nodeType":"1572","messageId":"1573","endLine":102,"endColumn":38},{"ruleId":"1570","severity":1,"message":"1571","line":103,"column":31,"nodeType":"1572","messageId":"1573","endLine":103,"endColumn":33},{"ruleId":"1570","severity":1,"message":"1571","line":33,"column":33,"nodeType":"1572","messageId":"1573","endLine":33,"endColumn":35},{"ruleId":"1603","severity":1,"message":"1604","line":37,"column":23,"nodeType":"1605","endLine":40,"endColumn":24},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1763","severity":1,"message":"1764","line":21,"column":1,"nodeType":"1765","endLine":24,"endColumn":3},{"ruleId":"1555","severity":1,"message":"1576","line":9,"column":35,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1751","line":19,"column":5,"nodeType":"1557","messageId":"1558","endLine":19,"endColumn":15},{"ruleId":"1570","severity":1,"message":"1571","line":72,"column":30,"nodeType":"1572","messageId":"1573","endLine":72,"endColumn":32},{"ruleId":"1570","severity":1,"message":"1571","line":88,"column":25,"nodeType":"1572","messageId":"1573","endLine":88,"endColumn":27},{"ruleId":"1570","severity":1,"message":"1571","line":104,"column":28,"nodeType":"1572","messageId":"1573","endLine":104,"endColumn":30},{"ruleId":"1570","severity":1,"message":"1571","line":121,"column":18,"nodeType":"1572","messageId":"1573","endLine":121,"endColumn":20},{"ruleId":"1570","severity":1,"message":"1571","line":140,"column":23,"nodeType":"1572","messageId":"1573","endLine":140,"endColumn":25},{"ruleId":"1570","severity":1,"message":"1571","line":249,"column":29,"nodeType":"1572","messageId":"1573","endLine":249,"endColumn":31},{"ruleId":"1570","severity":1,"message":"1571","line":264,"column":34,"nodeType":"1572","messageId":"1573","endLine":264,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1576","line":6,"column":24,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":30},{"ruleId":"1555","severity":1,"message":"1577","line":6,"column":32,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":37},{"ruleId":"1555","severity":1,"message":"1766","line":6,"column":48,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":56},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1588","line":2,"column":41,"nodeType":"1557","messageId":"1558","endLine":2,"endColumn":52},{"ruleId":"1555","severity":1,"message":"1702","line":17,"column":9,"nodeType":"1557","messageId":"1558","endLine":17,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1767","line":18,"column":15,"nodeType":"1557","messageId":"1558","endLine":18,"endColumn":21},{"ruleId":"1570","severity":1,"message":"1571","line":62,"column":31,"nodeType":"1572","messageId":"1573","endLine":62,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1693","line":5,"column":10,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":19},{"ruleId":"1555","severity":1,"message":"1617","line":5,"column":21,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":31},{"ruleId":"1763","severity":1,"message":"1764","line":7,"column":1,"nodeType":"1765","endLine":9,"endColumn":3},{"ruleId":"1763","severity":1,"message":"1764","line":23,"column":1,"nodeType":"1765","endLine":29,"endColumn":3},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1562","severity":1,"message":"1563","line":91,"column":1,"nodeType":"1564","messageId":"1565","endLine":96,"endColumn":2},{"ruleId":"1768","severity":2,"message":"1769","line":22,"column":2,"nodeType":"1770","messageId":"1771","endLine":259,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1621","line":2,"column":8,"nodeType":"1557","messageId":"1558","endLine":2,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1622","line":3,"column":10,"nodeType":"1557","messageId":"1558","endLine":3,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1637","line":8,"column":19,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1659","line":9,"column":25,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1576","line":9,"column":35,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1577","line":9,"column":43,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":48},{"ruleId":null,"fatal":true,"severity":2,"message":"1772","line":43,"column":9},{"ruleId":"1555","severity":1,"message":"1621","line":4,"column":8,"nodeType":"1557","messageId":"1558","endLine":4,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1622","line":5,"column":10,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1773","line":13,"column":20,"nodeType":"1557","messageId":"1558","endLine":13,"endColumn":31},{"ruleId":"1578","severity":1,"message":"1774","line":32,"column":6,"nodeType":"1580","endLine":32,"endColumn":13,"suggestions":"1775"},{"ruleId":"1555","severity":1,"message":"1586","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1587","line":14,"column":3,"nodeType":"1557","messageId":"1558","endLine":14,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1616","line":15,"column":3,"nodeType":"1557","messageId":"1558","endLine":15,"endColumn":10},{"ruleId":"1555","severity":1,"message":"1576","line":21,"column":35,"nodeType":"1557","messageId":"1558","endLine":21,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1766","line":21,"column":50,"nodeType":"1557","messageId":"1558","endLine":21,"endColumn":58},{"ruleId":"1578","severity":1,"message":"1643","line":32,"column":6,"nodeType":"1580","endLine":32,"endColumn":8,"suggestions":"1776"},{"ruleId":"1578","severity":1,"message":"1777","line":48,"column":6,"nodeType":"1580","endLine":48,"endColumn":16,"suggestions":"1778"},{"ruleId":"1570","severity":1,"message":"1571","line":211,"column":24,"nodeType":"1572","messageId":"1573","endLine":211,"endColumn":26},{"ruleId":"1570","severity":1,"message":"1571","line":225,"column":24,"nodeType":"1572","messageId":"1573","endLine":225,"endColumn":26},{"ruleId":"1570","severity":1,"message":"1571","line":238,"column":24,"nodeType":"1572","messageId":"1573","endLine":238,"endColumn":26},{"ruleId":"1603","severity":1,"message":"1604","line":295,"column":31,"nodeType":"1605","endLine":298,"endColumn":32},{"ruleId":"1555","severity":1,"message":"1658","line":5,"column":11,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1576","line":5,"column":35,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1577","line":5,"column":43,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":48},{"ruleId":"1555","severity":1,"message":"1766","line":5,"column":50,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":58},{"ruleId":"1551","replacedBy":"1779"},{"ruleId":"1553","replacedBy":"1780"},{"ruleId":"1555","severity":1,"message":"1781","line":3,"column":8,"nodeType":"1557","messageId":"1558","endLine":3,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1782","line":8,"column":20,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":24},{"ruleId":"1763","severity":1,"message":"1764","line":1,"column":1,"nodeType":"1765","endLine":18,"endColumn":2},{"ruleId":"1783","severity":1,"message":"1784","line":11,"column":25,"nodeType":"1785","messageId":"1786","endLine":11,"endColumn":26,"suggestions":"1787"},{"ruleId":"1551","replacedBy":"1788"},{"ruleId":"1553","replacedBy":"1789"},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1790","line":2,"column":13,"nodeType":"1557","messageId":"1558","endLine":2,"endColumn":20},{"ruleId":"1656","severity":1,"message":"1657","line":87,"column":15,"nodeType":"1605","endLine":90,"endColumn":16},{"ruleId":"1562","severity":1,"message":"1563","line":130,"column":1,"nodeType":"1564","messageId":"1565","endLine":132,"endColumn":2},{"ruleId":"1562","severity":1,"message":"1563","line":146,"column":1,"nodeType":"1564","messageId":"1565","endLine":178,"endColumn":2},{"ruleId":"1562","severity":1,"message":"1563","line":179,"column":1,"nodeType":"1564","messageId":"1565","endLine":195,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1791","severity":1,"message":"1792","line":74,"column":9,"nodeType":"1793","endLine":74,"endColumn":19},{"ruleId":"1566","severity":1,"message":"1794","line":130,"column":47,"nodeType":"1568","messageId":"1569","endLine":130,"endColumn":49},{"ruleId":"1566","severity":1,"message":"1794","line":156,"column":47,"nodeType":"1568","messageId":"1569","endLine":156,"endColumn":49},{"ruleId":"1566","severity":1,"message":"1794","line":258,"column":45,"nodeType":"1568","messageId":"1569","endLine":258,"endColumn":47},{"ruleId":"1566","severity":1,"message":"1794","line":336,"column":21,"nodeType":"1568","messageId":"1569","endLine":336,"endColumn":23},{"ruleId":"1791","severity":1,"message":"1792","line":378,"column":7,"nodeType":"1793","endLine":378,"endColumn":17},{"ruleId":"1791","severity":1,"message":"1792","line":380,"column":7,"nodeType":"1793","endLine":380,"endColumn":17},{"ruleId":"1791","severity":1,"message":"1792","line":390,"column":11,"nodeType":"1793","endLine":390,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1791","severity":1,"message":"1792","line":74,"column":9,"nodeType":"1793","endLine":74,"endColumn":19},{"ruleId":"1566","severity":1,"message":"1794","line":130,"column":47,"nodeType":"1568","messageId":"1569","endLine":130,"endColumn":49},{"ruleId":"1566","severity":1,"message":"1794","line":156,"column":47,"nodeType":"1568","messageId":"1569","endLine":156,"endColumn":49},{"ruleId":"1566","severity":1,"message":"1794","line":258,"column":45,"nodeType":"1568","messageId":"1569","endLine":258,"endColumn":47},{"ruleId":"1566","severity":1,"message":"1794","line":336,"column":21,"nodeType":"1568","messageId":"1569","endLine":336,"endColumn":23},{"ruleId":"1791","severity":1,"message":"1792","line":378,"column":7,"nodeType":"1793","endLine":378,"endColumn":17},{"ruleId":"1791","severity":1,"message":"1792","line":380,"column":7,"nodeType":"1793","endLine":380,"endColumn":17},{"ruleId":"1791","severity":1,"message":"1792","line":390,"column":11,"nodeType":"1793","endLine":390,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1577","line":24,"column":35,"nodeType":"1557","messageId":"1558","endLine":24,"endColumn":40},{"ruleId":"1570","severity":1,"message":"1571","line":42,"column":34,"nodeType":"1572","messageId":"1573","endLine":42,"endColumn":36},{"ruleId":"1570","severity":1,"message":"1571","line":45,"column":34,"nodeType":"1572","messageId":"1573","endLine":45,"endColumn":36},{"ruleId":"1570","severity":1,"message":"1571","line":46,"column":34,"nodeType":"1572","messageId":"1573","endLine":46,"endColumn":36},{"ruleId":"1562","severity":1,"message":"1563","line":67,"column":1,"nodeType":"1564","messageId":"1565","endLine":73,"endColumn":2},{"ruleId":"1578","severity":1,"message":"1583","line":103,"column":6,"nodeType":"1580","endLine":103,"endColumn":16,"suggestions":"1795"},{"ruleId":"1555","severity":1,"message":"1586","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1587","line":14,"column":3,"nodeType":"1557","messageId":"1558","endLine":14,"endColumn":8},{"ruleId":"1578","severity":1,"message":"1796","line":51,"column":6,"nodeType":"1580","endLine":51,"endColumn":8,"suggestions":"1797"},{"ruleId":"1562","severity":1,"message":"1563","line":259,"column":1,"nodeType":"1564","messageId":"1565","endLine":269,"endColumn":2},{"ruleId":"1562","severity":1,"message":"1563","line":302,"column":1,"nodeType":"1564","messageId":"1565","endLine":316,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1621","line":4,"column":8,"nodeType":"1557","messageId":"1558","endLine":4,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1622","line":5,"column":10,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1582","line":6,"column":10,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1705","line":7,"column":10,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1586","line":6,"column":3,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":7,"column":3,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":8},{"ruleId":"1578","severity":1,"message":"1798","line":23,"column":6,"nodeType":"1580","endLine":23,"endColumn":8,"suggestions":"1799"},{"ruleId":"1555","severity":1,"message":"1586","line":6,"column":3,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1614","line":7,"column":3,"nodeType":"1557","messageId":"1558","endLine":7,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1615","line":8,"column":3,"nodeType":"1557","messageId":"1558","endLine":8,"endColumn":6},{"ruleId":"1555","severity":1,"message":"1587","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":8},{"ruleId":"1578","severity":1,"message":"1800","line":23,"column":6,"nodeType":"1580","endLine":23,"endColumn":8,"suggestions":"1801"},{"ruleId":"1578","severity":1,"message":"1649","line":18,"column":6,"nodeType":"1580","endLine":18,"endColumn":8,"suggestions":"1802"},{"ruleId":"1570","severity":1,"message":"1571","line":115,"column":25,"nodeType":"1572","messageId":"1573","endLine":115,"endColumn":27},{"ruleId":"1570","severity":1,"message":"1571","line":115,"column":58,"nodeType":"1572","messageId":"1573","endLine":115,"endColumn":60},{"ruleId":"1570","severity":1,"message":"1571","line":127,"column":28,"nodeType":"1572","messageId":"1573","endLine":127,"endColumn":30},{"ruleId":"1555","severity":1,"message":"1586","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1587","line":14,"column":3,"nodeType":"1557","messageId":"1558","endLine":14,"endColumn":8},{"ruleId":"1578","severity":1,"message":"1796","line":51,"column":6,"nodeType":"1580","endLine":51,"endColumn":8,"suggestions":"1803"},{"ruleId":"1562","severity":1,"message":"1563","line":259,"column":1,"nodeType":"1564","messageId":"1565","endLine":269,"endColumn":2},{"ruleId":"1562","severity":1,"message":"1563","line":302,"column":1,"nodeType":"1564","messageId":"1565","endLine":316,"endColumn":2},{"ruleId":"1555","severity":1,"message":"1586","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1587","line":15,"column":3,"nodeType":"1557","messageId":"1558","endLine":15,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1577","line":23,"column":35,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":40},{"ruleId":"1555","severity":1,"message":"1708","line":26,"column":10,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1709","line":27,"column":10,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1710","line":27,"column":20,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":31},{"ruleId":"1555","severity":1,"message":"1711","line":28,"column":20,"nodeType":"1557","messageId":"1558","endLine":28,"endColumn":31},{"ruleId":"1555","severity":1,"message":"1712","line":29,"column":10,"nodeType":"1557","messageId":"1558","endLine":29,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1713","line":29,"column":20,"nodeType":"1557","messageId":"1558","endLine":29,"endColumn":31},{"ruleId":"1578","severity":1,"message":"1632","line":47,"column":6,"nodeType":"1580","endLine":47,"endColumn":8,"suggestions":"1804"},{"ruleId":"1555","severity":1,"message":"1715","line":81,"column":9,"nodeType":"1557","messageId":"1558","endLine":81,"endColumn":19},{"ruleId":"1555","severity":1,"message":"1576","line":10,"column":35,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":41},{"ruleId":"1570","severity":1,"message":"1571","line":70,"column":25,"nodeType":"1572","messageId":"1573","endLine":70,"endColumn":27},{"ruleId":"1570","severity":1,"message":"1571","line":87,"column":28,"nodeType":"1572","messageId":"1573","endLine":87,"endColumn":30},{"ruleId":"1570","severity":1,"message":"1571","line":104,"column":18,"nodeType":"1572","messageId":"1573","endLine":104,"endColumn":20},{"ruleId":"1570","severity":1,"message":"1571","line":219,"column":29,"nodeType":"1572","messageId":"1573","endLine":219,"endColumn":31},{"ruleId":"1555","severity":1,"message":"1556","line":2,"column":27,"nodeType":"1557","messageId":"1558","endLine":2,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1621","line":5,"column":8,"nodeType":"1557","messageId":"1558","endLine":5,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1622","line":6,"column":10,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1805","line":10,"column":8,"nodeType":"1557","messageId":"1558","endLine":10,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1607","line":21,"column":9,"nodeType":"1557","messageId":"1558","endLine":21,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1577","line":26,"column":54,"nodeType":"1557","messageId":"1558","endLine":26,"endColumn":59},{"ruleId":"1555","severity":1,"message":"1725","line":28,"column":10,"nodeType":"1557","messageId":"1558","endLine":28,"endColumn":15},{"ruleId":"1555","severity":1,"message":"1726","line":28,"column":17,"nodeType":"1557","messageId":"1558","endLine":28,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1621","line":3,"column":8,"nodeType":"1557","messageId":"1558","endLine":3,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1622","line":4,"column":10,"nodeType":"1557","messageId":"1558","endLine":4,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1587","line":12,"column":3,"nodeType":"1557","messageId":"1558","endLine":12,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1806","line":6,"column":3,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":20},{"ruleId":"1555","severity":1,"message":"1807","line":29,"column":10,"nodeType":"1557","messageId":"1558","endLine":29,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1808","line":39,"column":23,"nodeType":"1557","messageId":"1558","endLine":39,"endColumn":37},{"ruleId":"1578","severity":1,"message":"1809","line":44,"column":6,"nodeType":"1580","endLine":44,"endColumn":8,"suggestions":"1810"},{"ruleId":"1551","replacedBy":"1811"},{"ruleId":"1553","replacedBy":"1812"},{"ruleId":"1555","severity":1,"message":"1705","line":6,"column":10,"nodeType":"1557","messageId":"1558","endLine":6,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1586","line":11,"column":3,"nodeType":"1557","messageId":"1558","endLine":11,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1587","line":14,"column":3,"nodeType":"1557","messageId":"1558","endLine":14,"endColumn":8},{"ruleId":"1555","severity":1,"message":"1616","line":15,"column":3,"nodeType":"1557","messageId":"1558","endLine":15,"endColumn":10},{"ruleId":"1578","severity":1,"message":"1813","line":26,"column":6,"nodeType":"1580","endLine":26,"endColumn":8,"suggestions":"1814"},{"ruleId":"1603","severity":1,"message":"1604","line":86,"column":31,"nodeType":"1605","endLine":89,"endColumn":32},{"ruleId":"1555","severity":1,"message":"1612","line":1,"column":17,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":1,"column":27,"nodeType":"1557","messageId":"1558","endLine":1,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1815","line":9,"column":3,"nodeType":"1557","messageId":"1558","endLine":9,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1816","line":14,"column":3,"nodeType":"1557","messageId":"1558","endLine":14,"endColumn":19},{"ruleId":"1555","severity":1,"message":"1817","line":22,"column":10,"nodeType":"1557","messageId":"1558","endLine":22,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1818","line":22,"column":24,"nodeType":"1557","messageId":"1558","endLine":22,"endColumn":37},{"ruleId":"1555","severity":1,"message":"1808","line":37,"column":23,"nodeType":"1557","messageId":"1558","endLine":37,"endColumn":37},{"ruleId":"1578","severity":1,"message":"1809","line":42,"column":6,"nodeType":"1580","endLine":42,"endColumn":8,"suggestions":"1819"},"no-native-reassign",["1820"],"no-negated-in-lhs",["1821"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'PrivateRouteAdmin' is defined but never used.","'PrivateRouteTL' is defined but never used.","'PrivateRouteTP' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'yupResolver' is defined but never used.","'yup' is defined but never used.","'errors' is assigned a value but never used.","'reset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["1822"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'getQuery' and 'id'. Either include them or remove the dependency array.",["1823"],"'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Table' is defined but never used.","'ModalFooter' is defined but never used.",["1824"],"'AcceptModal' is defined but never used.","'CommonServices' is defined but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'reject' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalData'. Either include it or remove the dependency array.",["1825"],"'SetbaseMode' is assigned a value but never used.","'SetTranscode' is assigned a value but never used.","'SetAttendeeMode' is assigned a value but never used.","'SetVideoProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAssignmentData'. Either include it or remove the dependency array.",["1826"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'useMemo' is defined but never used.","'alert' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQueriesData'. Either include it or remove the dependency array.",["1827"],"React Hook useEffect has a missing dependency: 'inprogress.total_complete'. Either include it or remove the dependency array.",["1828"],"'useState' is defined but never used.","'store2' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Tooltip' is defined but never used.","'useHistory' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.",["1829"],"'axios' is defined but never used.","'baseUrl' is defined but never used.","'AcceptedProposal' is defined but never used.","'useForm' is defined but never used.","'setStore2' is assigned a value but never used.","'Reset' is defined but never used.","React Hook useEffect has a missing dependency: 'getTeamLeader'. Either include it or remove the dependency array.",["1830"],"'tlkey' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQueryData'. Either include it or remove the dependency array.",["1831"],"React Hook useEffect has a missing dependency: 'getQuery'. Either include it or remove the dependency array.",["1832"],"'count_PFA' is assigned a value but never used.","'AdminFilter' is defined but never used.","'Statusfilter' is defined but never used.","'OptGroup' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["1833"],"React Hook useEffect has a missing dependency: 'getTaxProf'. Either include it or remove the dependency array.",["1834"],"'del' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAssignmentList'. Either include it or remove the dependency array.",["1835"],"'tpkey' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQueryData' and 'getTaxProfession'. Either include them or remove the dependency array.",["1836"],["1837"],"React Hook useEffect has a missing dependency: 'getProposalList'. Either include it or remove the dependency array.",["1838"],["1839"],"no-use-before-define","'name' was used before it was defined.","usedBeforeDefined","'Badge' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'handleSubmit' is assigned a value but never used.","'register' is assigned a value but never used.","'Option' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCompleteAssingment'. Either include it or remove the dependency array.",["1840"],"'ChangeFormateDate' is defined but never used.","'handleChange' is assigned a value but never used.","'resetData' is assigned a value but never used.","'resetCategory' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'selectedData' is assigned a value but never used.","'setSelectedData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getInCompleteAssingment'. Either include it or remove the dependency array.",["1841"],"React Hook useEffect has a missing dependency: 'getPendingforAcceptance'. Either include it or remove the dependency array.",["1842"],"'tax' is assigned a value but never used.","'tax2' is assigned a value but never used.","'setStore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllQueriesData'. Either include it or remove the dependency array.",["1843"],"'Reset' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPendingForProposals'. Either include it or remove the dependency array.",["1844"],"React Hook useEffect has a missing dependency: 'getPendingForAllocation'. Either include it or remove the dependency array.",["1845"],"React Hook useEffect has a missing dependency: 'getDeclinedProposal'. Either include it or remove the dependency array.",["1846"],"React Hook useEffect has a missing dependency: 'getAcceptedProposal'. Either include it or remove the dependency array.",["1847"],"'setTax' is assigned a value but never used.","'setTax2' is assigned a value but never used.","'store' is assigned a value but never used.","'NavLink' is defined but never used.",["1848"],"'useParams' is defined but never used.","React Hook useEffect has a missing dependency: 'getPendingForPayment'. Either include it or remove the dependency array.",["1849"],["1850"],"React Hook useEffect has a missing dependency: 'getPendingAcceptedProposal'. Either include it or remove the dependency array.",["1851"],"'cust_id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPaymentStatus'. Either include it or remove the dependency array.",["1852"],"'history' is assigned a value but never used.","'TeamFilter' is defined but never used.",["1853"],"'useAlert' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'userId'. Either include them or remove the dependency array.",["1854"],"'custId' is assigned a value but never used.","'custname' is assigned a value but never used.","'setCustName' is assigned a value but never used.","'setAssignID' is assigned a value but never used.","'assingNo' is assigned a value but never used.","'setAssingNo' is assigned a value but never used.",["1855"],"'todaysDate' is assigned a value but never used.",["1856"],"React Hook useEffect has missing dependencies: 'getAdditionalQuery' and 'getQueryDetails'. Either include them or remove the dependency array.",["1857"],"'notification' is assigned a value but never used.","'countNotification' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getNotification'. Either include it or remove the dependency array.",["1858"],"'readNotification' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'error' is assigned a value but never used.","'setError' is assigned a value but never used.",["1820"],["1821"],["1820"],["1821"],["1820"],["1821"],"'Select' is defined but never used.",["1859"],["1820"],["1821"],"React Hook useEffect has a missing dependency: 'getPendingForProposal'. Either include it or remove the dependency array.",["1860"],["1861"],["1862"],"'pendingAcceptence' is assigned a value but never used.","'incomplete' is assigned a value but never used.","'complete' is assigned a value but never used.","'CountComplete' is assigned a value but never used.","'Layout' is defined but never used.","'CustomerFilter' is defined but never used.","'BootstrapTable' is defined but never used.","'uploadedImgs' is assigned a value but never used.","'setUplodedImgs' is assigned a value but never used.",["1863"],"'assignment' is assigned a value but never used.","'useFieldArray' is defined but never used.","'Controller' is defined but never used.","'useWatch' is defined but never used.","'control' is assigned a value but never used.",["1820"],["1821"],["1820"],["1821"],"'date_of_delivery' is assigned a value but never used.","'cust_accept_date' is assigned a value but never used.","'timeTaken' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setValue' is assigned a value but never used.","'amount' is assigned a value but never used.","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 41 | \u001b[39m        \u001b[90m//         {course.courseName}\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 42 | \u001b[39m        \u001b[90m//     </option>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 43 | \u001b[39m        )\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 44 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 45 | \u001b[39m        \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m 46 | \u001b[39m            \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","'setInterest' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'interest.name'. Either include it or remove the dependency array.",["1864"],["1865"],"React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.",["1866"],["1820"],["1821"],"'states' is defined but never used.","'name' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\_.","Literal","unnecessaryEscape",["1867","1868"],["1820"],["1821"],"'Cookies' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","Array.prototype.map() expects a return value from arrow function.",["1869"],"React Hook useEffect has missing dependencies: 'id' and 'userid'. Either include them or remove the dependency array.",["1870"],"React Hook useEffect has a missing dependency: 'getIncomplete'. Either include it or remove the dependency array.",["1871"],"React Hook useEffect has a missing dependency: 'getComplete'. Either include it or remove the dependency array.",["1872"],["1873"],["1874"],["1875"],"'Swal' is defined but never used.","'IntegratedEditing' is defined but never used.","'loading' is assigned a value but never used.","'setCurrentDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAssignmentNo' and 'getData'. Either include them or remove the dependency array.",["1876"],["1820"],["1821"],"React Hook useEffect has a missing dependency: 'getReport'. Either include it or remove the dependency array.",["1877"],"'MonthView' is defined but never used.","'DragDropProvider' is defined but never used.","'appointments' is defined but never used.","'resourcesData' is defined but never used.",["1878"],"no-global-assign","no-unsafe-negation",{"desc":"1879","fix":"1880"},{"desc":"1881","fix":"1882"},{"desc":"1879","fix":"1883"},{"desc":"1884","fix":"1885"},{"desc":"1886","fix":"1887"},{"desc":"1888","fix":"1889"},{"desc":"1890","fix":"1891"},{"desc":"1881","fix":"1892"},{"desc":"1893","fix":"1894"},{"desc":"1895","fix":"1896"},{"desc":"1897","fix":"1898"},{"desc":"1899","fix":"1900"},{"desc":"1901","fix":"1902"},{"desc":"1903","fix":"1904"},{"desc":"1905","fix":"1906"},{"desc":"1897","fix":"1907"},{"desc":"1908","fix":"1909"},{"desc":"1881","fix":"1910"},{"desc":"1911","fix":"1912"},{"desc":"1913","fix":"1914"},{"desc":"1915","fix":"1916"},{"desc":"1917","fix":"1918"},{"desc":"1919","fix":"1920"},{"desc":"1921","fix":"1922"},{"desc":"1923","fix":"1924"},{"desc":"1925","fix":"1926"},{"desc":"1884","fix":"1927"},{"desc":"1928","fix":"1929"},{"desc":"1899","fix":"1930"},{"desc":"1931","fix":"1932"},{"desc":"1933","fix":"1934"},{"desc":"1903","fix":"1935"},{"desc":"1936","fix":"1937"},{"desc":"1938","fix":"1939"},{"desc":"1881","fix":"1940"},{"desc":"1941","fix":"1942"},{"desc":"1943","fix":"1944"},{"desc":"1921","fix":"1945"},{"desc":"1946","fix":"1947"},{"desc":"1928","fix":"1948"},{"desc":"1943","fix":"1949"},{"desc":"1938","fix":"1950"},{"desc":"1951","fix":"1952"},{"desc":"1903","fix":"1953"},{"desc":"1954","fix":"1955"},{"messageId":"1956","fix":"1957","desc":"1958"},{"messageId":"1959","fix":"1960","desc":"1961"},{"desc":"1881","fix":"1962"},{"desc":"1963","fix":"1964"},{"desc":"1965","fix":"1966"},{"desc":"1967","fix":"1968"},{"desc":"1908","fix":"1969"},{"desc":"1963","fix":"1970"},{"desc":"1938","fix":"1971"},{"desc":"1972","fix":"1973"},{"desc":"1974","fix":"1975"},{"desc":"1972","fix":"1976"},"Update the dependencies array to be: [userId]",{"range":"1977","text":"1978"},"Update the dependencies array to be: [assingNo, getQuery, id]",{"range":"1979","text":"1980"},{"range":"1981","text":"1978"},"Update the dependencies array to be: [getProposalData]",{"range":"1982","text":"1983"},"Update the dependencies array to be: [getAssignmentData]",{"range":"1984","text":"1985"},"Update the dependencies array to be: [getQueriesData]",{"range":"1986","text":"1987"},"Update the dependencies array to be: [inprogress.total_complete]",{"range":"1988","text":"1989"},{"range":"1990","text":"1980"},"Update the dependencies array to be: [getTeamLeader, id]",{"range":"1991","text":"1992"},"Update the dependencies array to be: [getQueryData]",{"range":"1993","text":"1994"},"Update the dependencies array to be: [getQuery, queryNo]",{"range":"1995","text":"1996"},"Update the dependencies array to be: [userid]",{"range":"1997","text":"1998"},"Update the dependencies array to be: [getTaxProf]",{"range":"1999","text":"2000"},"Update the dependencies array to be: [getAssignmentList]",{"range":"2001","text":"2002"},"Update the dependencies array to be: [getQueryData, getTaxProfession]",{"range":"2003","text":"2004"},{"range":"2005","text":"1996"},"Update the dependencies array to be: [getProposalList]",{"range":"2006","text":"2007"},{"range":"2008","text":"1980"},"Update the dependencies array to be: [getCompleteAssingment]",{"range":"2009","text":"2010"},"Update the dependencies array to be: [getInCompleteAssingment]",{"range":"2011","text":"2012"},"Update the dependencies array to be: [getPendingforAcceptance]",{"range":"2013","text":"2014"},"Update the dependencies array to be: [getAllQueriesData]",{"range":"2015","text":"2016"},"Update the dependencies array to be: [getPendingForProposals]",{"range":"2017","text":"2018"},"Update the dependencies array to be: [getPendingForAllocation]",{"range":"2019","text":"2020"},"Update the dependencies array to be: [getDeclinedProposal]",{"range":"2021","text":"2022"},"Update the dependencies array to be: [getAcceptedProposal]",{"range":"2023","text":"2024"},{"range":"2025","text":"1983"},"Update the dependencies array to be: [getPendingForPayment]",{"range":"2026","text":"2027"},{"range":"2028","text":"1998"},"Update the dependencies array to be: [getPendingAcceptedProposal]",{"range":"2029","text":"2030"},"Update the dependencies array to be: [getPaymentStatus]",{"range":"2031","text":"2032"},{"range":"2033","text":"2002"},"Update the dependencies array to be: [id, userId]",{"range":"2034","text":"2035"},"Update the dependencies array to be: [getQuery]",{"range":"2036","text":"2037"},{"range":"2038","text":"1980"},"Update the dependencies array to be: [assingNo, getAdditionalQuery, getQueryDetails]",{"range":"2039","text":"2040"},"Update the dependencies array to be: [getNotification]",{"range":"2041","text":"2042"},{"range":"2043","text":"2020"},"Update the dependencies array to be: [getPendingForProposal]",{"range":"2044","text":"2045"},{"range":"2046","text":"2027"},{"range":"2047","text":"2042"},{"range":"2048","text":"2037"},"Update the dependencies array to be: [interest.name, reset]",{"range":"2049","text":"2050"},{"range":"2051","text":"2002"},"Update the dependencies array to be: [assignNo, getDetails]",{"range":"2052","text":"2053"},"removeEscape",{"range":"2054","text":"2055"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"2056","text":"2057"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"2058","text":"1980"},"Update the dependencies array to be: [id, userid]",{"range":"2059","text":"2060"},"Update the dependencies array to be: [getIncomplete]",{"range":"2061","text":"2062"},"Update the dependencies array to be: [getComplete]",{"range":"2063","text":"2064"},{"range":"2065","text":"2007"},{"range":"2066","text":"2060"},{"range":"2067","text":"2037"},"Update the dependencies array to be: [getAssignmentNo, getData]",{"range":"2068","text":"2069"},"Update the dependencies array to be: [getReport]",{"range":"2070","text":"2071"},{"range":"2072","text":"2069"},[1837,1839],"[userId]",[3632,3642],"[assingNo, getQuery, id]",[1116,1118],[1516,1518],"[getProposalData]",[1520,1522],"[getAssignmentData]",[789,791],"[getQueriesData]",[4534,4536],"[inprogress.total_complete]",[3696,3706],[1158,1162],"[getTeamLeader, id]",[1296,1298],"[getQueryData]",[1926,1935],"[getQuery, queryNo]",[1595,1597],"[userid]",[680,682],"[getTaxProf]",[800,802],"[getAssignmentList]",[1334,1336],"[getQueryData, getTaxProfession]",[2088,2097],[677,679],"[getProposalList]",[3564,3574],[867,869],"[getCompleteAssingment]",[877,879],"[getInCompleteAssingment]",[979,981],"[getPendingforAcceptance]",[1035,1037],"[getAllQueriesData]",[1439,1441],"[getPendingForProposals]",[1438,1440],"[getPendingForAllocation]",[826,828],"[getDeclinedProposal]",[830,832],"[getAcceptedProposal]",[778,780],[832,834],"[getPendingForPayment]",[814,816],[830,832],"[getPendingAcceptedProposal]",[1029,1031],"[getPaymentStatus]",[1582,1584],[1000,1002],"[id, userId]",[1182,1184],"[getQuery]",[1182,1192],[885,895],"[assingNo, getAdditionalQuery, getQueryDetails]",[591,593],"[getNotification]",[644,646],[643,645],"[getPendingForProposal]",[638,640],[322,324],[1367,1369],[917,924],"[interest.name, reset]",[916,918],[1277,1287],"[assignNo, getDetails]",[224,225],"",[224,224],"\\",[3565,3575],[1305,1307],"[id, userid]",[581,583],"[getIncomplete]",[573,575],"[getComplete]",[646,648],[1305,1307],[1182,1184],[1114,1116],"[getAssignmentNo, getData]",[619,621],"[getReport]",[1135,1137]]