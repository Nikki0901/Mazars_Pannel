[{"/var/www/html/Mazars_Pannel/src/index.js":"1","/var/www/html/Mazars_Pannel/src/reportWebVitals.js":"2","/var/www/html/Mazars_Pannel/src/App.js":"3","/var/www/html/Mazars_Pannel/src/Service/PrivateRouteAdmin.js":"4","/var/www/html/Mazars_Pannel/src/Service/PrivateRouteTP.js":"5","/var/www/html/Mazars_Pannel/src/Service/PrivateRouteTL.js":"6","/var/www/html/Mazars_Pannel/src/views/SignUpForm/SignUp.js":"7","/var/www/html/Mazars_Pannel/src/views/VrerifyOtpLogin/VerifyOtpLogin.js":"8","/var/www/html/Mazars_Pannel/src/views/VerifyOtp/VerifyOtp.js":"9","/var/www/html/Mazars_Pannel/src/views/SignInForm/SignIn.js":"10","/var/www/html/Mazars_Pannel/src/views/RegisterYourSelf/RegisterYourSelf.js":"11","/var/www/html/Mazars_Pannel/src/views/Start/Start.js":"12","/var/www/html/Mazars_Pannel/src/views/Dashboard/Dashboard.js":"13","/var/www/html/Mazars_Pannel/src/views/MyAssingment/MyAssingment.js":"14","/var/www/html/Mazars_Pannel/src/views/AddFressAssignment/AddFreshAssingment.js":"15","/var/www/html/Mazars_Pannel/src/views/QuestionnairePage/QuestionnairePage.js":"16","/var/www/html/Mazars_Pannel/src/views/Feedback/Feedback.js":"17","/var/www/html/Mazars_Pannel/src/views/SelectCategoryPage/SelectCategoryPage.js":"18","/var/www/html/Mazars_Pannel/src/views/ProposalTab/ProposalTab.js":"19","/var/www/html/Mazars_Pannel/src/views/AssignmentTab/AssignmentTab.js":"20","/var/www/html/Mazars_Pannel/src/views/QueriesTab/QueriesTab.js":"21","/var/www/html/Mazars_Pannel/src/components/Layout/Layout.js":"22","/var/www/html/Mazars_Pannel/src/pages/Admin/Start/Start.js":"23","/var/www/html/Mazars_Pannel/src/pages/Admin/Dashboard/Dashboard.js":"24","/var/www/html/Mazars_Pannel/src/pages/Admin/Login/Login.js":"25","/var/www/html/Mazars_Pannel/src/pages/Admin/AddNewTeamLeader/AddNewTeamLeader.js":"26","/var/www/html/Mazars_Pannel/src/pages/Admin/AddNewTaxProf/AddNewTaxProf.js":"27","/var/www/html/Mazars_Pannel/src/pages/Admin/QueriesRecevied/QueriesRecevied.js":"28","/var/www/html/Mazars_Pannel/src/pages/Admin/Proposal/Proposal.js":"29","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTP/EditTP.js":"30","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/EditTL.js":"31","/var/www/html/Mazars_Pannel/src/pages/Admin/PaymentStatusTab/PaymentStatusTab.js":"32","/var/www/html/Mazars_Pannel/src/pages/Admin/QueryAssingment/QueryAssingment.js":"33","/var/www/html/Mazars_Pannel/src/pages/Admin/QueriesTab/QueriesTab.js":"34","/var/www/html/Mazars_Pannel/src/pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab.js":"35","/var/www/html/Mazars_Pannel/src/pages/TL/Start/Start.js":"36","/var/www/html/Mazars_Pannel/src/pages/Admin/TeamLeaderTab/TeamLeaderTab.js":"37","/var/www/html/Mazars_Pannel/src/pages/Admin/FeedbackTab/FeedbackTab.js":"38","/var/www/html/Mazars_Pannel/src/pages/TL/Dashboard/Dashboard.js":"39","/var/www/html/Mazars_Pannel/src/pages/TL/Login/Login.js":"40","/var/www/html/Mazars_Pannel/src/pages/TL/AddTeamProf/AddTeamProf.js":"41","/var/www/html/Mazars_Pannel/src/pages/TL/AddAssingmentStages/AddAssingmentStages.js":"42","/var/www/html/Mazars_Pannel/src/pages/TL/QueryAssingment/QueryAssingment.js":"43","/var/www/html/Mazars_Pannel/src/pages/TL/AddNew/AddNew.js":"44","/var/www/html/Mazars_Pannel/src/pages/TL/Proposal/Proposal.js":"45","/var/www/html/Mazars_Pannel/src/pages/TL/EditTP/EditTP.js":"46","/var/www/html/Mazars_Pannel/src/pages/TL/QueriesRecevied/QueriesRecevied.js":"47","/var/www/html/Mazars_Pannel/src/components/Footer/Footer.js":"48","/var/www/html/Mazars_Pannel/src/components/Header/Header.js":"49","/var/www/html/Mazars_Pannel/src/config/config.js":"50","/var/www/html/Mazars_Pannel/src/components/Admin-Header/Admin-Header.js":"51","/var/www/html/Mazars_Pannel/src/components/Admin-Sidebar/Admin-Sidebar.js":"52","/var/www/html/Mazars_Pannel/src/components/CategorySelect/CategorySelect.js":"53","/var/www/html/Mazars_Pannel/src/pages/TL/CompleteData/CompleteData.js":"54","/var/www/html/Mazars_Pannel/src/pages/TL/InCompleteData/InCompleteData.js":"55","/var/www/html/Mazars_Pannel/src/pages/TL/PendingForAcceptence/PendingForAcceptence.js":"56","/var/www/html/Mazars_Pannel/src/components/AllQueriesData/AllQueriesData.js":"57","/var/www/html/Mazars_Pannel/src/components/PendingForProposals/PendingForProposals.js":"58","/var/www/html/Mazars_Pannel/src/components/PendingForAllocation/PendingForAllocation.js":"59","/var/www/html/Mazars_Pannel/src/pages/Admin/DeclinedProposal/DeclinedPropoal.js":"60","/var/www/html/Mazars_Pannel/src/pages/Admin/AcceptedProposal/AcceptedProposal.js":"61","/var/www/html/Mazars_Pannel/src/pages/Admin/AllProposalComponent/AllProposalComponent.js":"62","/var/www/html/Mazars_Pannel/src/components/PaidComponent/PaidComponent.js":"63","/var/www/html/Mazars_Pannel/src/pages/TL/FeedbackTab/FeedbackTab.js":"64","/var/www/html/Mazars_Pannel/src/components/PendingForAcceptence/PendingForAcceptence.js":"65","/var/www/html/Mazars_Pannel/src/pages/TL/PaymentStatus/PaymentStatus.js":"66","/var/www/html/Mazars_Pannel/src/views/ProposalTab/AcceptModal.js":"67","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/AssignmentTab.js":"68","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/DraftReportUpload.js":"69","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/FinalReportUpload.js":"70","/var/www/html/Mazars_Pannel/src/pages/TL/SendProposal/SendProposal.js":"71","/var/www/html/Mazars_Pannel/src/pages/TL/QueriesTab/QueriesTab.js":"72","/var/www/html/Mazars_Pannel/src/pages/TL/EditProposal/EditProposal.js":"73","/var/www/html/Mazars_Pannel/src/pages/Admin/PendingReceived/PendingRecevived.js":"74","/var/www/html/Mazars_Pannel/src/pages/TL/PendingReceived/PendingReceived.js":"75","/var/www/html/Mazars_Pannel/src/components/Search-Filter/SearchFilter.js":"76","/var/www/html/Mazars_Pannel/src/components/Admin-Header/NavWrapper.js":"77","/var/www/html/Mazars_Pannel/src/components/Search-Filter/CustomerFilter.js":"78","/var/www/html/Mazars_Pannel/src/views/ForgetPassword/ForgetPassword.js":"79","/var/www/html/Mazars_Pannel/src/views/NewPassword/NewPassword.js":"80","/var/www/html/Mazars_Pannel/src/views/ChangePassword/ChangePassword.js":"81","/var/www/html/Mazars_Pannel/src/pages/Admin/TeamLeaderTab/Header/index.js":"82","/var/www/html/Mazars_Pannel/src/components/FontawsomeIcons/index.js":"83","/var/www/html/Mazars_Pannel/src/components/DataTable/Header/index.js":"84","/var/www/html/Mazars_Pannel/src/pages/TL/PendingForAllocation/PendingForAllocation.js":"85","/var/www/html/Mazars_Pannel/src/pages/TL/PendingForProposal/PendingForProposal.js":"86","/var/www/html/Mazars_Pannel/src/pages/TL/PendingForPayment/PendingForPayment.js":"87","/var/www/html/Mazars_Pannel/src/components/Admin-Header/CustomerNotification.js":"88","/var/www/html/Mazars_Pannel/src/pages/TL/QueryTab2/QueryTab2.js":"89","/var/www/html/Mazars_Pannel/src/views/EditQuery/EditQuery.js":"90","/var/www/html/Mazars_Pannel/src/components/Search-Filter/AdminFilter.js":"91","/var/www/html/Mazars_Pannel/src/views/Frsh/Fresh.js":"92","/var/www/html/Mazars_Pannel/src/views/EditQuery/field.js":"93","/var/www/html/Mazars_Pannel/src/components/QueryDetails/QueryDetails.js":"94","/var/www/html/Mazars_Pannel/src/components/QueryDetails/BasicQuery.js":"95","/var/www/html/Mazars_Pannel/src/components/QueryDetails/ProposalDetails.js":"96","/var/www/html/Mazars_Pannel/src/components/QueryDetails/AssignmentDetails.js":"97","/var/www/html/Mazars_Pannel/src/components/QueryDetails/AdditionalQuery.js":"98","/var/www/html/Mazars_Pannel/src/components/QueryDetails/AddAdditionalQuery.js":"99","/var/www/html/Mazars_Pannel/src/common/common.js":"100","/var/www/html/Mazars_Pannel/src/components/Search-Filter/tlFilter.js":"101","/var/www/html/Mazars_Pannel/src/views/EditQuery/ImageUploads.js":"102","/var/www/html/Mazars_Pannel/src/views/AssignmentTab/PaymentModal.js":"103","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/Reset.js":"104","/var/www/html/Mazars_Pannel/src/config/services/QueryDetails.js":"105","/var/www/html/Mazars_Pannel/src/config/http/http-common.js":"106","/var/www/html/Mazars_Pannel/src/config/services/TaxProffesional.js":"107","/var/www/html/Mazars_Pannel/src/views/EditQuery/SelectComponent.js":"108","/var/www/html/Mazars_Pannel/src/views/Frsh/field.js":"109","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/Test.js":"110","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/Check.js":"111","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentForm/AssignmentForm.js":"112","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/A.js":"113","/var/www/html/Mazars_Pannel/src/views/Frsh/UserForm.js":"114","/var/www/html/Mazars_Pannel/src/pages/TL/QueriesTab/Tab.js":"115","/var/www/html/Mazars_Pannel/src/agora.config.js":"116","/var/www/html/Mazars_Pannel/src/utils/Validator.js":"117","/var/www/html/Mazars_Pannel/src/utils/Settings.js":"118","/var/www/html/Mazars_Pannel/src/views/VideoCall/VideoCall.js":"119","/var/www/html/Mazars_Pannel/src/components/InputRoom/index.js":"120","/var/www/html/Mazars_Pannel/src/views/MeetingComponent/MeetingComponent.js":"121","/var/www/html/Mazars_Pannel/src/components/meeting/index.jsx":"122","/var/www/html/Mazars_Pannel/src/components/AgoraVideoCall/index.jsx":"123","/var/www/html/Mazars_Pannel/src/pages/TL/MeetingComponent/MeetingComponent.js":"124","/var/www/html/Mazars_Pannel/src/pages/TL/meeting/index.jsx":"125","/var/www/html/Mazars_Pannel/src/pages/TL/AgoraVideoCall/index.jsx":"126","/var/www/html/Mazars_Pannel/src/pages/TP/Start/Start.js":"127","/var/www/html/Mazars_Pannel/src/pages/TP/Login/Login.js":"128","/var/www/html/Mazars_Pannel/src/pages/TP/Dashboard/Dashboard.js":"129","/var/www/html/Mazars_Pannel/src/pages/TP/QueriesRecevied/QueriesRecevied.js":"130","/var/www/html/Mazars_Pannel/src/pages/TL/SendProposal/ProposalComponent.js":"131","/var/www/html/Mazars_Pannel/src/pages/TP/QueriesTab/QueriesTab.js":"132","/var/www/html/Mazars_Pannel/src/pages/TP/InComplete/InComplete.js":"133","/var/www/html/Mazars_Pannel/src/pages/TP/Complete/Complete.js":"134","/var/www/html/Mazars_Pannel/src/pages/TP/Proposal/Proposal.js":"135","/var/www/html/Mazars_Pannel/src/pages/TP/SendProposal/SendProposal.js":"136","/var/www/html/Mazars_Pannel/src/pages/TP/SendProposal/ProposalComponent.js":"137","/var/www/html/Mazars_Pannel/src/pages/TP/EditProposal/EditProposal.js":"138","/var/www/html/Mazars_Pannel/src/components/Search-Filter/tpfilter.js":"139","/var/www/html/Mazars_Pannel/src/pages/TP/ChangePassword/ChangePassword.js":"140","/var/www/html/Mazars_Pannel/src/views/Schedule/schedule.js":"141","/var/www/html/Mazars_Pannel/src/views/Schedule/demo.js":"142","/var/www/html/Mazars_Pannel/src/views/Schedule/appoinments.js":"143","/var/www/html/Mazars_Pannel/src/pages/TL/ViewReport/ViewReport.js":"144","/var/www/html/Mazars_Pannel/src/pages/TL/Schedule/Schedule.js":"145","/var/www/html/Mazars_Pannel/src/pages/TL/Schedule/Demo.js":"146","/var/www/html/Mazars_Pannel/src/pages/TL/Schedule/appoinments.js":"147","/var/www/html/Mazars_Pannel/src/pages/TL/PendingForAcceptence/RejectedModal.js":"148","/var/www/html/Mazars_Pannel/src/views/EditQuery/DeleteQuery.js":"149","/var/www/html/Mazars_Pannel/src/views/ProposalTab/ChatComponent.js":"150","/var/www/html/Mazars_Pannel/src/components/PendingForAllocation/History.js":"151","/var/www/html/Mazars_Pannel/src/pages/TL/Proposal/ChatHistory.js":"152","/var/www/html/Mazars_Pannel/src/views/AssignmentTab/RejectModal.js":"153","/var/www/html/Mazars_Pannel/src/pages/Admin/ForgetPassword/ForgetPassword.js":"154","/var/www/html/Mazars_Pannel/src/pages/Admin/NewPassword/NewPassword.js":"155","/var/www/html/Mazars_Pannel/src/pages/TL/ForgetPassword/ForgetPassword.js":"156","/var/www/html/Mazars_Pannel/src/pages/TL/NewPassword/NewPassword.js":"157","/var/www/html/Mazars_Pannel/src/pages/TP/ForgetPassword/ForgetPassword.js":"158","/var/www/html/Mazars_Pannel/src/pages/TP/NewPassword/NewPassword.js":"159","/var/www/html/Mazars_Pannel/src/pages/TL/ViewNotification/ViewNotification.js":"160","/var/www/html/Mazars_Pannel/src/views/ViewNotification/ViewNotification.js":"161","/var/www/html/Mazars_Pannel/src/pages/Admin/QueryRejection/QueryRejection.js":"162","/var/www/html/Mazars_Pannel/src/Service/PrivateRouteUser.js":"163","/var/www/html/Mazars_Pannel/src/views/Chatting/Chatting.js":"164","/var/www/html/Mazars_Pannel/src/components/PageNotFound/PageNotFound.js":"165","/var/www/html/Mazars_Pannel/src/components/Admin-Footer/Admin-Footer.js":"166","/var/www/html/Mazars_Pannel/src/pages/TL/Chatting/Chatting.js":"167","/var/www/html/Mazars_Pannel/src/views/Message/Message.js":"168","/var/www/html/Mazars_Pannel/src/pages/TL/Message/Message.js":"169","/var/www/html/Mazars_Pannel/src/views/ProposalView/ProposalView.js":"170","/var/www/html/Mazars_Pannel/src/views/ProposalView/TermsConditions.js":"171","/var/www/html/Mazars_Pannel/src/pages/TL/SendProposal/Payment.js":"172","/var/www/html/Mazars_Pannel/src/pages/TL/EditProposal/Payment.js":"173","/var/www/html/Mazars_Pannel/src/pages/TL/EditProposal/DropDown.js":"174","/var/www/html/Mazars_Pannel/src/views/Message/PaymentModal.js":"175","/var/www/html/Mazars_Pannel/src/pages/TL/Message/PaymentModal.js":"176","/var/www/html/Mazars_Pannel/src/pages/TL/PaymentStatus/PaymentModal.js":"177","/var/www/html/Mazars_Pannel/src/components/DeclinedQueries/DeclinedQueries.js":"178","/var/www/html/Mazars_Pannel/src/pages/Admin/AssignmentTab/index.js":"179","/var/www/html/Mazars_Pannel/src/pages/Admin/AssignmentTab/AllAssignment.js":"180","/var/www/html/Mazars_Pannel/src/pages/Admin/AssignmentTab/DraftReport.js":"181","/var/www/html/Mazars_Pannel/src/pages/Admin/AssignmentTab/FinalReport.js":"182","/var/www/html/Mazars_Pannel/src/pages/Admin/Schedule/Schedule.js":"183","/var/www/html/Mazars_Pannel/src/pages/Admin/Schedule/Demo.js":"184","/var/www/html/Mazars_Pannel/src/pages/Admin/MeetingComponent/MeetingComponent.js":"185","/var/www/html/Mazars_Pannel/src/pages/Admin/meeting/index.jsx":"186","/var/www/html/Mazars_Pannel/src/pages/Admin/AgoraVideoCall/index.jsx":"187","/var/www/html/Mazars_Pannel/src/views/FeedbackData/FeedbackData.js":"188","/var/www/html/Mazars_Pannel/src/pages/Admin/Chatting/Chatting.js":"189","/var/www/html/Mazars_Pannel/src/pages/Admin/Message/Message.js":"190","/var/www/html/Mazars_Pannel/src/pages/Admin/Message/PaymentModal.js":"191","/var/www/html/Mazars_Pannel/src/pages/Admin/ViewNotification/ViewNotification.js":"192","/var/www/html/Mazars_Pannel/src/components/QueryDetails/DraftReports.js":"193","/var/www/html/Mazars_Pannel/src/pages/Admin/Schedule/appoinments.js":"194","/var/www/html/Mazars_Pannel/src/components/QueryDetails/Feedback.js":"195","/var/www/html/Mazars_Pannel/src/views/QueriesTab/AllQueriesData.js":"196","/var/www/html/Mazars_Pannel/src/views/QueriesTab/DeclinedQueries.js":"197","/var/www/html/Mazars_Pannel/src/views/PaymentStatus/PaymentStatus.js":"198","/var/www/html/Mazars_Pannel/src/views/PaymentStatus/PaymentModal.js":"199","/var/www/html/Mazars_Pannel/src/views/QueriesTab/InprogressProposal.js":"200","/var/www/html/Mazars_Pannel/src/views/QueriesTab/InprogressAllocation.js":"201","/var/www/html/Mazars_Pannel/src/views/ProposalTab/AllProposal.js":"202","/var/www/html/Mazars_Pannel/src/views/ProposalTab/InprogressProposal.js":"203","/var/www/html/Mazars_Pannel/src/views/ProposalTab/AcceptedProposal.js":"204","/var/www/html/Mazars_Pannel/src/views/ProposalTab/DeclinedProposal.js":"205","/var/www/html/Mazars_Pannel/src/views/AssignmentTab/ViewAllReport.js":"206","/var/www/html/Mazars_Pannel/src/common/Alerts.js":"207","/var/www/html/Mazars_Pannel/src/components/Records/Records.js":"208","/var/www/html/Mazars_Pannel/src/views/QueriesTab/AdditionalQueryModal.js":"209","/var/www/html/Mazars_Pannel/src/pages/Admin/AssignmentTab/ViewAllReport.js":"210"},{"size":478,"mtime":1617278663546,"results":"211","hashOfConfig":"212"},{"size":362,"mtime":1614851778954,"results":"213","hashOfConfig":"212"},{"size":16059,"mtime":1626094544980,"results":"214","hashOfConfig":"212"},{"size":478,"mtime":1614851778946,"results":"215","hashOfConfig":"212"},{"size":477,"mtime":1614851778946,"results":"216","hashOfConfig":"212"},{"size":474,"mtime":1614851778946,"results":"217","hashOfConfig":"212"},{"size":11254,"mtime":1626146393950,"results":"218","hashOfConfig":"212"},{"size":2878,"mtime":1614851778974,"results":"219","hashOfConfig":"212"},{"size":2941,"mtime":1614851778974,"results":"220","hashOfConfig":"212"},{"size":5273,"mtime":1626064713237,"results":"221","hashOfConfig":"212"},{"size":1622,"mtime":1626099441329,"results":"222","hashOfConfig":"212"},{"size":428,"mtime":1614851778974,"results":"223","hashOfConfig":"212"},{"size":10604,"mtime":1626338693394,"results":"224","hashOfConfig":"212"},{"size":7247,"mtime":1626325710967,"results":"225","hashOfConfig":"212"},{"size":16858,"mtime":1626148393777,"results":"226","hashOfConfig":"212"},{"size":13392,"mtime":1626062037180,"results":"227","hashOfConfig":"212"},{"size":4574,"mtime":1626148951823,"results":"228","hashOfConfig":"212"},{"size":1149,"mtime":1617794091180,"results":"229","hashOfConfig":"212"},{"size":4075,"mtime":1626062560944,"results":"230","hashOfConfig":"212"},{"size":15308,"mtime":1626341369891,"results":"231","hashOfConfig":"212"},{"size":3929,"mtime":1626243954403,"results":"232","hashOfConfig":"212"},{"size":961,"mtime":1626094597950,"results":"233","hashOfConfig":"212"},{"size":441,"mtime":1614851778954,"results":"234","hashOfConfig":"212"},{"size":18876,"mtime":1626340501651,"results":"235","hashOfConfig":"212"},{"size":4677,"mtime":1626026678344,"results":"236","hashOfConfig":"212"},{"size":8681,"mtime":1626063401425,"results":"237","hashOfConfig":"212"},{"size":10091,"mtime":1626063485031,"results":"238","hashOfConfig":"212"},{"size":13288,"mtime":1626253561401,"results":"239","hashOfConfig":"212"},{"size":4857,"mtime":1625209201676,"results":"240","hashOfConfig":"212"},{"size":9015,"mtime":1626063575703,"results":"241","hashOfConfig":"212"},{"size":12446,"mtime":1626063581443,"results":"242","hashOfConfig":"212"},{"size":1771,"mtime":1616490776680,"results":"243","hashOfConfig":"212"},{"size":10265,"mtime":1626063789252,"results":"244","hashOfConfig":"212"},{"size":4351,"mtime":1626075058074,"results":"245","hashOfConfig":"212"},{"size":4993,"mtime":1618466657378,"results":"246","hashOfConfig":"212"},{"size":441,"mtime":1623128431058,"results":"247","hashOfConfig":"212"},{"size":7698,"mtime":1623311360580,"results":"248","hashOfConfig":"212"},{"size":4672,"mtime":1626075881948,"results":"249","hashOfConfig":"212"},{"size":10959,"mtime":1624804720952,"results":"250","hashOfConfig":"212"},{"size":4635,"mtime":1626026596404,"results":"251","hashOfConfig":"212"},{"size":3255,"mtime":1617355602949,"results":"252","hashOfConfig":"212"},{"size":18718,"mtime":1625753057971,"results":"253","hashOfConfig":"212"},{"size":9012,"mtime":1626063760265,"results":"254","hashOfConfig":"212"},{"size":3551,"mtime":1615879752967,"results":"255","hashOfConfig":"212"},{"size":6828,"mtime":1625720742724,"results":"256","hashOfConfig":"212"},{"size":3762,"mtime":1615970498309,"results":"257","hashOfConfig":"212"},{"size":12441,"mtime":1626247957255,"results":"258","hashOfConfig":"212"},{"size":277,"mtime":1614851778950,"results":"259","hashOfConfig":"212"},{"size":3067,"mtime":1618371790010,"results":"260","hashOfConfig":"212"},{"size":398,"mtime":1626153744006,"results":"261","hashOfConfig":"212"},{"size":2912,"mtime":1626075885712,"results":"262","hashOfConfig":"212"},{"size":11755,"mtime":1625932849329,"results":"263","hashOfConfig":"212"},{"size":4456,"mtime":1616228161004,"results":"264","hashOfConfig":"212"},{"size":5039,"mtime":1623826266440,"results":"265","hashOfConfig":"212"},{"size":4915,"mtime":1624874109238,"results":"266","hashOfConfig":"212"},{"size":6889,"mtime":1623840549147,"results":"267","hashOfConfig":"212"},{"size":5404,"mtime":1626084500066,"results":"268","hashOfConfig":"212"},{"size":6597,"mtime":1626265695294,"results":"269","hashOfConfig":"212"},{"size":8418,"mtime":1626085229627,"results":"270","hashOfConfig":"212"},{"size":6826,"mtime":1626339027397,"results":"271","hashOfConfig":"212"},{"size":6620,"mtime":1626085368995,"results":"272","hashOfConfig":"212"},{"size":15329,"mtime":1626085414112,"results":"273","hashOfConfig":"212"},{"size":10582,"mtime":1626085584197,"results":"274","hashOfConfig":"212"},{"size":4263,"mtime":1625753459902,"results":"275","hashOfConfig":"212"},{"size":7264,"mtime":1626085235959,"results":"276","hashOfConfig":"212"},{"size":10962,"mtime":1624872015610,"results":"277","hashOfConfig":"212"},{"size":2162,"mtime":1616481101031,"results":"278","hashOfConfig":"212"},{"size":19875,"mtime":1626103179729,"results":"279","hashOfConfig":"212"},{"size":3396,"mtime":1626270875651,"results":"280","hashOfConfig":"212"},{"size":2203,"mtime":1626270892887,"results":"281","hashOfConfig":"212"},{"size":498,"mtime":1620035402952,"results":"282","hashOfConfig":"212"},{"size":6310,"mtime":1623840551911,"results":"283","hashOfConfig":"212"},{"size":12198,"mtime":1626069254693,"results":"284","hashOfConfig":"212"},{"size":7921,"mtime":1617601644511,"results":"285","hashOfConfig":"212"},{"size":9993,"mtime":1617601736579,"results":"286","hashOfConfig":"212"},{"size":5607,"mtime":1616317663631,"results":"287","hashOfConfig":"212"},{"size":8611,"mtime":1626075865876,"results":"288","hashOfConfig":"212"},{"size":15265,"mtime":1626245520100,"results":"289","hashOfConfig":"212"},{"size":3453,"mtime":1626072705140,"results":"290","hashOfConfig":"212"},{"size":11322,"mtime":1626082018264,"results":"291","hashOfConfig":"212"},{"size":6371,"mtime":1626082369336,"results":"292","hashOfConfig":"212"},{"size":1402,"mtime":1617189136106,"results":"293","hashOfConfig":"212"},{"size":580,"mtime":1617173766607,"results":"294","hashOfConfig":"212"},{"size":1403,"mtime":1617200404439,"results":"295","hashOfConfig":"212"},{"size":3879,"mtime":1617606931448,"results":"296","hashOfConfig":"212"},{"size":2843,"mtime":1617608128881,"results":"297","hashOfConfig":"212"},{"size":3686,"mtime":1617629971613,"results":"298","hashOfConfig":"212"},{"size":3640,"mtime":1625624676855,"results":"299","hashOfConfig":"212"},{"size":3607,"mtime":1617629055950,"results":"300","hashOfConfig":"212"},{"size":17278,"mtime":1626074825009,"results":"301","hashOfConfig":"212"},{"size":14206,"mtime":1626086362629,"results":"302","hashOfConfig":"212"},{"size":1125,"mtime":1618834878585,"results":"303","hashOfConfig":"212"},{"size":714,"mtime":1618471404856,"results":"304","hashOfConfig":"212"},{"size":7202,"mtime":1626268441552,"results":"305","hashOfConfig":"212"},{"size":3977,"mtime":1626338097242,"results":"306","hashOfConfig":"212"},{"size":6615,"mtime":1626240477292,"results":"307","hashOfConfig":"212"},{"size":5592,"mtime":1626325707683,"results":"308","hashOfConfig":"212"},{"size":1599,"mtime":1625740245288,"results":"309","hashOfConfig":"212"},{"size":2096,"mtime":1626258445832,"results":"310","hashOfConfig":"212"},{"size":996,"mtime":1626010128152,"results":"311","hashOfConfig":"212"},{"size":9338,"mtime":1625380395723,"results":"312","hashOfConfig":"212"},{"size":1096,"mtime":1618318238088,"results":"313","hashOfConfig":"212"},{"size":4957,"mtime":1626152525838,"results":"314","hashOfConfig":"212"},{"size":6275,"mtime":1618980765956,"results":"315","hashOfConfig":"212"},{"size":143,"mtime":1618427724194,"results":"316","hashOfConfig":"212"},{"size":184,"mtime":1619779294628,"results":"317","hashOfConfig":"212"},{"size":490,"mtime":1618831813912,"results":"318","hashOfConfig":"212"},{"size":1492,"mtime":1618513964346,"results":"319","hashOfConfig":"212"},{"size":786,"mtime":1618834447140,"results":"320","hashOfConfig":"212"},{"size":4246,"mtime":1618809486986,"results":"321","hashOfConfig":"212"},{"size":1592,"mtime":1618824771538,"results":"322","hashOfConfig":"212"},{"size":13847,"mtime":1625994803041,"results":"323","hashOfConfig":"212"},{"size":435,"mtime":1618829532985,"results":"324","hashOfConfig":"212"},{"size":1108,"mtime":1618895550304,"results":"325","hashOfConfig":"212"},{"size":2209,"mtime":1618902471690,"results":"326","hashOfConfig":"212"},{"size":123,"mtime":1619793371051,"results":"327","hashOfConfig":"212"},{"size":327,"mtime":1619454422947,"results":"328","hashOfConfig":"212"},{"size":1396,"mtime":1619454422943,"results":"329","hashOfConfig":"212"},{"size":380,"mtime":1619590569747,"results":"330","hashOfConfig":"212"},{"size":10903,"mtime":1619774599924,"results":"331","hashOfConfig":"212"},{"size":399,"mtime":1619590371055,"results":"332","hashOfConfig":"212"},{"size":1578,"mtime":1620022201914,"results":"333","hashOfConfig":"212"},{"size":15437,"mtime":1620033923670,"results":"334","hashOfConfig":"212"},{"size":381,"mtime":1619783791541,"results":"335","hashOfConfig":"212"},{"size":1664,"mtime":1620022347453,"results":"336","hashOfConfig":"212"},{"size":15437,"mtime":1624547545518,"results":"337","hashOfConfig":"212"},{"size":467,"mtime":1620034695974,"results":"338","hashOfConfig":"212"},{"size":4643,"mtime":1626026607044,"results":"339","hashOfConfig":"212"},{"size":4665,"mtime":1622537355632,"results":"340","hashOfConfig":"212"},{"size":6293,"mtime":1626153564549,"results":"341","hashOfConfig":"212"},{"size":13126,"mtime":1626172197635,"results":"342","hashOfConfig":"212"},{"size":2664,"mtime":1620039057582,"results":"343","hashOfConfig":"212"},{"size":2888,"mtime":1620197070257,"results":"344","hashOfConfig":"212"},{"size":2842,"mtime":1620195854590,"results":"345","hashOfConfig":"212"},{"size":4453,"mtime":1620280888613,"results":"346","hashOfConfig":"212"},{"size":470,"mtime":1620217914350,"results":"347","hashOfConfig":"212"},{"size":8780,"mtime":1620276097955,"results":"348","hashOfConfig":"212"},{"size":7646,"mtime":1620229700361,"results":"349","hashOfConfig":"212"},{"size":7061,"mtime":1622788734616,"results":"350","hashOfConfig":"212"},{"size":5192,"mtime":1620218280913,"results":"351","hashOfConfig":"212"},{"size":788,"mtime":1622112917106,"results":"352","hashOfConfig":"212"},{"size":8331,"mtime":1626104617467,"results":"353","hashOfConfig":"212"},{"size":330,"mtime":1622006875731,"results":"354","hashOfConfig":"212"},{"size":2949,"mtime":1625994735036,"results":"355","hashOfConfig":"212"},{"size":668,"mtime":1621936623992,"results":"356","hashOfConfig":"212"},{"size":10409,"mtime":1626338664965,"results":"357","hashOfConfig":"212"},{"size":1212,"mtime":1623061748521,"results":"358","hashOfConfig":"212"},{"size":2653,"mtime":1622786798058,"results":"359","hashOfConfig":"212"},{"size":1769,"mtime":1622691613187,"results":"360","hashOfConfig":"212"},{"size":2629,"mtime":1626064230104,"results":"361","hashOfConfig":"212"},{"size":1745,"mtime":1624249004199,"results":"362","hashOfConfig":"212"},{"size":1705,"mtime":1623328471221,"results":"363","hashOfConfig":"212"},{"size":2751,"mtime":1626064482771,"results":"364","hashOfConfig":"212"},{"size":2874,"mtime":1624255876546,"results":"365","hashOfConfig":"212"},{"size":5969,"mtime":1623334234449,"results":"366","hashOfConfig":"212"},{"size":2872,"mtime":1624255840705,"results":"367","hashOfConfig":"212"},{"size":6026,"mtime":1623383150179,"results":"368","hashOfConfig":"212"},{"size":2872,"mtime":1624255908475,"results":"369","hashOfConfig":"212"},{"size":6032,"mtime":1623383263689,"results":"370","hashOfConfig":"212"},{"size":3369,"mtime":1626086975432,"results":"371","hashOfConfig":"212"},{"size":2917,"mtime":1625484913495,"results":"372","hashOfConfig":"212"},{"size":4117,"mtime":1626080533569,"results":"373","hashOfConfig":"212"},{"size":478,"mtime":1614851778946,"results":"374","hashOfConfig":"212"},{"size":5903,"mtime":1626149090696,"results":"375","hashOfConfig":"212"},{"size":209,"mtime":1623923417322,"results":"376","hashOfConfig":"212"},{"size":434,"mtime":1623923707983,"results":"377","hashOfConfig":"212"},{"size":5332,"mtime":1626065578427,"results":"378","hashOfConfig":"212"},{"size":8064,"mtime":1625753240477,"results":"379","hashOfConfig":"212"},{"size":5963,"mtime":1625753345853,"results":"380","hashOfConfig":"212"},{"size":9119,"mtime":1626239789299,"results":"381","hashOfConfig":"212"},{"size":18019,"mtime":1626100235921,"results":"382","hashOfConfig":"212"},{"size":2844,"mtime":1625723269657,"results":"383","hashOfConfig":"212"},{"size":3597,"mtime":1624960947533,"results":"384","hashOfConfig":"212"},{"size":627,"mtime":1624791516242,"results":"385","hashOfConfig":"212"},{"size":2227,"mtime":1624851832266,"results":"386","hashOfConfig":"212"},{"size":2222,"mtime":1624854013284,"results":"387","hashOfConfig":"212"},{"size":2227,"mtime":1626066463715,"results":"388","hashOfConfig":"212"},{"size":4335,"mtime":1626085277907,"results":"389","hashOfConfig":"212"},{"size":3734,"mtime":1625209278498,"results":"390","hashOfConfig":"212"},{"size":18336,"mtime":1626268891719,"results":"391","hashOfConfig":"212"},{"size":11780,"mtime":1626090986055,"results":"392","hashOfConfig":"212"},{"size":11789,"mtime":1626090999006,"results":"393","hashOfConfig":"212"},{"size":670,"mtime":1625142931226,"results":"394","hashOfConfig":"212"},{"size":17543,"mtime":1626338660568,"results":"395","hashOfConfig":"212"},{"size":393,"mtime":1625142747585,"results":"396","hashOfConfig":"212"},{"size":1664,"mtime":1625137174601,"results":"397","hashOfConfig":"212"},{"size":15432,"mtime":1625142484496,"results":"398","hashOfConfig":"212"},{"size":3913,"mtime":1625725309813,"results":"399","hashOfConfig":"212"},{"size":7351,"mtime":1626065344632,"results":"400","hashOfConfig":"212"},{"size":6193,"mtime":1625753263890,"results":"401","hashOfConfig":"212"},{"size":2230,"mtime":1625242722085,"results":"402","hashOfConfig":"212"},{"size":3207,"mtime":1626086957273,"results":"403","hashOfConfig":"212"},{"size":2654,"mtime":1625458690493,"results":"404","hashOfConfig":"212"},{"size":1212,"mtime":1625479858551,"results":"405","hashOfConfig":"212"},{"size":1451,"mtime":1626268471988,"results":"406","hashOfConfig":"212"},{"size":15276,"mtime":1626339170689,"results":"407","hashOfConfig":"212"},{"size":4668,"mtime":1626263367417,"results":"408","hashOfConfig":"212"},{"size":11177,"mtime":1626084115124,"results":"409","hashOfConfig":"212"},{"size":2193,"mtime":1626084062204,"results":"410","hashOfConfig":"212"},{"size":4353,"mtime":1626243941636,"results":"411","hashOfConfig":"212"},{"size":4945,"mtime":1626266101666,"results":"412","hashOfConfig":"212"},{"size":14627,"mtime":1626339240159,"results":"413","hashOfConfig":"212"},{"size":10654,"mtime":1626090258983,"results":"414","hashOfConfig":"212"},{"size":10646,"mtime":1626090234777,"results":"415","hashOfConfig":"212"},{"size":10640,"mtime":1626339000384,"results":"416","hashOfConfig":"212"},{"size":3021,"mtime":1626325434648,"results":"417","hashOfConfig":"212"},{"size":1595,"mtime":1626338696922,"results":"418","hashOfConfig":"212"},{"size":438,"mtime":1626083722909,"results":"419","hashOfConfig":"212"},{"size":2379,"mtime":1626262448373,"results":"420","hashOfConfig":"212"},{"size":3027,"mtime":1626325475464,"results":"421","hashOfConfig":"212"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},"1lex05f",{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"424"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"424"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"424"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"424"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"424"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"454","messages":"455","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"456","messages":"457","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"424"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"424"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"424"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"424"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"424"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"473","messages":"474","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"424"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"424"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"483","messages":"484","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"424"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"424"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"424"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"424"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"424"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"424"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"424"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"424"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"424"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"424"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"424"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"424"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"424"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"424"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"424"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"424"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"424"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"424"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"424"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"424"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"424"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"424"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"424"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"424"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"424"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"424"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"424"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"424"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"424"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582","usedDeprecatedRules":"424"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"424"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"424"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"424"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"424"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"424"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"424"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"424"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"606","messages":"607","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"424"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"424"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"424"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"424"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"424"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"424"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"424"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"424"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"632","messages":"633","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"424"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637","usedDeprecatedRules":"424"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"424"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"424"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"424"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"649"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"652"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"655"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658","usedDeprecatedRules":"659"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"662","messages":"663","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"664","usedDeprecatedRules":"424"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"667","usedDeprecatedRules":"424"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670","usedDeprecatedRules":"424"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"424"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"676","usedDeprecatedRules":"424"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"680"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"683"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"424"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"689","usedDeprecatedRules":"424"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692","usedDeprecatedRules":"424"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"695","messages":"696","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"424"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"424"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"424"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"424"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"709","messages":"710","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"424"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"714","usedDeprecatedRules":"424"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"717","usedDeprecatedRules":"424"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"424"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"725","messages":"726","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"727","messages":"728","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"729","messages":"730","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"731","usedDeprecatedRules":"680"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"734","usedDeprecatedRules":"424"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"737","usedDeprecatedRules":"738"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"741","usedDeprecatedRules":"680"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"748","usedDeprecatedRules":"749"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"749"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"754","usedDeprecatedRules":"424"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"757","usedDeprecatedRules":"424"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"760","usedDeprecatedRules":"424"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"765","usedDeprecatedRules":"424"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"768","usedDeprecatedRules":"424"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773","usedDeprecatedRules":"424"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778","usedDeprecatedRules":"424"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781","usedDeprecatedRules":"424"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"784","usedDeprecatedRules":"424"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"787","usedDeprecatedRules":"424"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"790","usedDeprecatedRules":"424"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"793","usedDeprecatedRules":"424"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"796","usedDeprecatedRules":"424"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"799","usedDeprecatedRules":"424"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"804","usedDeprecatedRules":"424"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"807","usedDeprecatedRules":"424"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"810","usedDeprecatedRules":"424"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"813","usedDeprecatedRules":"424"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"816","usedDeprecatedRules":"424"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"819","usedDeprecatedRules":"424"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"822"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"825","usedDeprecatedRules":"424"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"828","usedDeprecatedRules":"424"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"831","usedDeprecatedRules":"424"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"834","messages":"835","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"836","usedDeprecatedRules":"424"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839","usedDeprecatedRules":"424"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842","usedDeprecatedRules":"424"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"845","usedDeprecatedRules":"424"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"848","usedDeprecatedRules":"424"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"851","usedDeprecatedRules":"424"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"854","usedDeprecatedRules":"424"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"857","usedDeprecatedRules":"424"},{"filePath":"858","messages":"859","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"860","usedDeprecatedRules":"424"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"863","usedDeprecatedRules":"424"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"866","usedDeprecatedRules":"424"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"869","usedDeprecatedRules":"424"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872","usedDeprecatedRules":"424"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"875","usedDeprecatedRules":"424"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"878","usedDeprecatedRules":"424"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"883","usedDeprecatedRules":"424"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"890","usedDeprecatedRules":"424"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"893","usedDeprecatedRules":"424"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"896","usedDeprecatedRules":"424"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"899","usedDeprecatedRules":"424"},{"filePath":"900","messages":"901","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"902","usedDeprecatedRules":"424"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"905","usedDeprecatedRules":"424"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"908","usedDeprecatedRules":"424"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"911","messages":"912","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"913","usedDeprecatedRules":"424"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"916","usedDeprecatedRules":"424"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"919","usedDeprecatedRules":"424"},{"filePath":"920","messages":"921","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"922","usedDeprecatedRules":"424"},{"filePath":"923","messages":"924","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"925","usedDeprecatedRules":"424"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"928","usedDeprecatedRules":"424"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"931","usedDeprecatedRules":"424"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"934","usedDeprecatedRules":"424"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"937","usedDeprecatedRules":"424"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"940","usedDeprecatedRules":"424"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"943","usedDeprecatedRules":"424"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"948","usedDeprecatedRules":"424"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"951","usedDeprecatedRules":"424"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"954","usedDeprecatedRules":"424"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"957","usedDeprecatedRules":"424"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"960","messages":"961","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"962","usedDeprecatedRules":"424"},{"filePath":"963","messages":"964","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"965","usedDeprecatedRules":"424"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"968"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"971","usedDeprecatedRules":"424"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"974","usedDeprecatedRules":"424"},{"filePath":"975","messages":"976","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"977","usedDeprecatedRules":"424"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"980","usedDeprecatedRules":"424"},{"filePath":"981","messages":"982","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"983","usedDeprecatedRules":"424"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"986","usedDeprecatedRules":"424"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"989","usedDeprecatedRules":"424"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"992","messages":"993","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"994","usedDeprecatedRules":"424"},{"filePath":"995","messages":"996","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"997","usedDeprecatedRules":"424"},{"filePath":"998","messages":"999","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"424"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1008","usedDeprecatedRules":"424"},{"filePath":"1009","messages":"1010","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/var/www/html/Mazars_Pannel/src/index.js",[],["1011","1012"],"/var/www/html/Mazars_Pannel/src/reportWebVitals.js",[],"/var/www/html/Mazars_Pannel/src/App.js",["1013","1014","1015","1016","1017","1018","1019"],"import React, { useEffect } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { positions, Provider, transitions } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n// import 'bulma/css/bulma.css'\nimport PageNotFound from './components/PageNotFound/PageNotFound'\n\n\n\n//user routes\nimport Signin from './views/SignInForm/SignIn'\nimport SignUp from './views/SignUpForm/SignUp'\nimport VerifyOtp from './views/VerifyOtp/VerifyOtp'\nimport VerifyOtpLogin from './views/VrerifyOtpLogin/VerifyOtpLogin'\nimport RegisterYourSelf from './views/RegisterYourSelf/RegisterYourSelf'\nimport Start from './views/Start/Start'\nimport Dashboard from './views/Dashboard/Dashboard'\nimport MyAssingment from './views/MyAssingment/MyAssingment'\nimport AddFreshAssingment from './views/AddFressAssignment/AddFreshAssingment'\nimport QuestionnairePage from './views/QuestionnairePage/QuestionnairePage'\nimport Layout from './components/Layout/Layout'\nimport SelectCategoryPage from './views/SelectCategoryPage/SelectCategoryPage'\nimport QueriesTab from './views/QueriesTab/QueriesTab'\nimport ProposalTab from './views/ProposalTab/ProposalTab'\nimport AssignmentTab from './views/AssignmentTab/AssignmentTab'\nimport ProposalReceived from './views/ProposalView/ProposalView'\nimport ForgetPassword from './views/ForgetPassword/ForgetPassword'\nimport NewPassword from './views/NewPassword/NewPassword'\nimport ChangePassword from './views/ChangePassword/ChangePassword'\nimport EditQuery from './views/EditQuery/EditQuery'\nimport VideoCall from './views/VideoCall/VideoCall'\nimport MeetingComponent from './views/MeetingComponent/MeetingComponent'\nimport schedule from './views/Schedule/schedule'\nimport ViewNotification from './views/ViewNotification/ViewNotification'\nimport Chatting from './views/Chatting/Chatting'\nimport Message from './views/Message/Message'\nimport ProposalView from './views/ProposalView/ProposalView'\nimport Feedback from './views/Feedback/Feedback'\nimport FeedbackData from './views/FeedbackData/FeedbackData'\nimport PaymentStatus from './views/PaymentStatus/PaymentStatus'\n\n\n\n//admin routes\nimport AdminStart from './pages/Admin/Start/Start'\nimport AdminLogin from './pages/Admin/Login/Login'\nimport AdminDashboard from './pages/Admin/Dashboard/Dashboard'\nimport AdminNewTeamLeader from './pages/Admin/AddNewTeamLeader/AddNewTeamLeader'\nimport AdminNewTaxProf from './pages/Admin/AddNewTaxProf/AddNewTaxProf'\nimport AdminProposal from './pages/Admin/Proposal/Proposal'\nimport AdminQueriesRecevied from './pages/Admin/QueriesRecevied/QueriesRecevied'\nimport AdminQueryAssingment from './pages/Admin/QueryAssingment/QueryAssingment'\nimport AdminEditTL from './pages/Admin/EditTL/EditTL'\nimport AdminEditTP from './pages/Admin/EditTP/EditTP'\nimport AdminQueriesTab from './pages/Admin/QueriesTab/QueriesTab'\nimport AdminAssignmentTab from './pages/Admin/AssignmentTab/index'\nimport AdminPaymentStatusTab from './pages/Admin/PaymentStatusTab/PaymentStatusTab'\nimport AdminTeamLeaderTab from './pages/Admin/TeamLeaderTab/TeamLeaderTab'\nimport AdminTaxProfessionalsTab from './pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab'\nimport AdminFeedbackTab from './pages/Admin/FeedbackTab/FeedbackTab'\nimport AdminPendingRecevived from './pages/Admin/PendingReceived/PendingRecevived'\nimport AdminForgetPassword from './pages/Admin/ForgetPassword/ForgetPassword'\nimport AdminNewPassword from './pages/Admin/NewPassword/NewPassword'\nimport AdminQueryRejection from './pages/Admin/QueryRejection/QueryRejection'\nimport AdminSchedule from './pages/Admin/Schedule/Schedule'\nimport AdminMeetingComponent from './pages/Admin/MeetingComponent/MeetingComponent'\nimport AdminChatting from './pages/Admin/Chatting/Chatting'\nimport AdminMessage from './pages/Admin/Message/Message'\nimport AdminViewNotification from './pages/Admin/ViewNotification/ViewNotification'\n\n\n\n\n//TL routes\nimport TlStart from './pages/TL/Start/Start'\nimport TlLogin from './pages/TL/Login/Login'\nimport TlDashboard from './pages/TL/Dashboard/Dashboard'\nimport TlAddAssingmentStages from './pages/TL/AddAssingmentStages/AddAssingmentStages'\nimport TlAddNew from './pages/TL/AddNew/AddNew'\nimport TlAddTeamProf from './pages/TL/AddTeamProf/AddTeamProf'\nimport TlProposal from './pages/TL/Proposal/Proposal'\nimport TlQueriesRecevied from './pages/TL/QueriesRecevied/QueriesRecevied'\nimport TlQueryAssingment from './pages/TL/QueryAssingment/QueryAssingment'\nimport TlEditTP from './pages/TL/EditTP/EditTP'\nimport TlFeedbackTab from './pages/TL/FeedbackTab/FeedbackTab'\nimport TlPaymentStatus from './pages/TL/PaymentStatus/PaymentStatus'\nimport TlAssignmentTab from './pages/TL/AssignmentTab/AssignmentTab'\nimport TlSendProposal from './pages/TL/SendProposal/SendProposal'\nimport TlQueriesTab from './pages/TL/QueriesTab/QueriesTab'\nimport TlEditProposal from './pages/TL/EditProposal/EditProposal'\nimport TlPendingReceived from './pages/TL//PendingReceived/PendingReceived'\nimport TlQueryTab2 from './pages/TL/QueryTab2/QueryTab2'\nimport TlAssignmentForm from './pages/TL/AssignmentForm/AssignmentForm'\nimport TlViewReport from './pages/TL/ViewReport/ViewReport'\nimport TlForgetPassword from './pages/TL/ForgetPassword/ForgetPassword'\nimport TlNewPassword from './pages/TL/NewPassword/NewPassword'\nimport TlViewNotification from './pages/TL/ViewNotification/ViewNotification'\nimport TlChatting from './pages/TL/Chatting/Chatting'\nimport TlMessage from './pages/TL/Message/Message'\nimport TlSchedule from './pages/TL/Schedule/Schedule'\nimport TlMeetingComponent from './pages/TL/MeetingComponent/MeetingComponent'\n\n\n\n\n\n\n\n\n// TP routes\nimport TpStart from './pages/TP/Start/Start'\nimport TpLogin from './pages/TP/Login/Login'\nimport TpQueriesRecevied from './pages/TP/QueriesRecevied/QueriesRecevied'\nimport TpQueriesTab from './pages/TP/QueriesTab/QueriesTab'\nimport TpProposal from './pages/TP/Proposal/Proposal'\nimport TpSendProposal from './pages/TP/SendProposal/SendProposal'\nimport TpEditProposal from './pages/TP/EditProposal/EditProposal'\nimport TpChangePassword from './pages/TP/ChangePassword/ChangePassword'\nimport TpDashboard from './pages/TP/Dashboard/Dashboard'\nimport TpForgetPassword from './pages/TP/ForgetPassword/ForgetPassword'\nimport TpNewPassword from './pages/TP/NewPassword/NewPassword'\n\n\n\n\n//private routes\nimport PrivateRouteUser from './Service/PrivateRouteUser'\nimport PrivateRouteAdmin from './Service/PrivateRouteAdmin'\nimport PrivateRouteTL from './Service/PrivateRouteTL'\nimport PrivateRouteTP from './Service/PrivateRouteTP'\n\n\nconst options = {\n  timeout: 4000,\n  position: positions.TOP_CENTER,\n  offset: \"80px\",\n  transition: transitions.SCALE,\n};\n\n\nfunction App() {\n  return (\n    <div>\n      <Provider template={AlertTemplate} {...options}>\n        <Router>\n          <Switch>\n\n            <Route exact path=\"/\" component={Start} />\n            <Route exact path=\"/customer/signin\" component={Signin} />\n            <Route exact path=\"/customer/signup\" component={SignUp} />\n            <Route exact path=\"/customer/register-yourself\" component={RegisterYourSelf} />\n            <Route exact path=\"/customer/verify-otp\" component={VerifyOtp} />\n            <Route exact path=\"/customer/otp\" component={VerifyOtpLogin} />\n            <Route exact path=\"/customer/questionnaire-page\" component={QuestionnairePage} />\n            <Route exact path=\"/customer/dashboard\" component={Dashboard} />\n            <Route exact path=\"/customer/my-assingment/:id\" component={MyAssingment} />\n            <Route exact path=\"/customer/addfresh\" component={AddFreshAssingment} />\n            <Route exact path=\"/customer/select-category\" component={SelectCategoryPage} />\n            <Route exact path=\"/customer/dashboard\" component={Layout} />\n            <Route exact path=\"/customer/queries\" component={QueriesTab} />\n            <Route exact path=\"/customer/proposal\" component={ProposalTab} />\n            <Route exact path=\"/customer/assignment\" component={AssignmentTab} />\n            <Route exact path=\"/customer/proposal-received/:id\" component={ProposalReceived} />\n            <Route exact path=\"/customer/forget-password\" component={ForgetPassword} />\n            <Route exact path=\"/customer/new-password/:id\" component={NewPassword} />\n            <Route exact path=\"/customer/change-password\" component={ChangePassword} />\n            <Route exact path=\"/customer/edit-query/:id\" component={EditQuery} />\n            <Route exact path=\"/customer/video-call\" component={VideoCall} />\n            <Route exact path=\"/customer/meeting\" component={MeetingComponent} />\n            <Route exact path=\"/customer/schedule\" component={schedule} />\n            <Route exact path=\"/customer/view-notification/:id\" component={ViewNotification} />\n            <Route exact path=\"/customer/proposal_view/:id\" component={ProposalView} />\n            <Route exact path=\"/customer/message\" component={Message} />\n            <Route exact path=\"/customer/chatting/:id\" component={Chatting} />\n            <Route exact path=\"/customer/feedback/:id\" component={Feedback} />\n            <Route exact path=\"/customer/feedback-data\" component={FeedbackData} />\n            <Route exact path=\"/customer/paymentstatus\" component={PaymentStatus} />\n\n\n\n\n            <Route exact path=\"/admin/start\" component={AdminStart} />\n            <Route exact path=\"/admin/login\" component={AdminLogin} />\n            <Route exact path=\"/admin/dashboard\" component={AdminDashboard} />\n            <Route exact path=\"/admin/addnewtl\" component={AdminNewTeamLeader} />\n            <Route exact path=\"/admin/addnewtp\" component={AdminNewTaxProf} />\n            <Route exact path=\"/admin/teamleaders\" component={AdminTeamLeaderTab} />\n            <Route exact path=\"/admin/taxprofessionals\" component={AdminTaxProfessionalsTab} />\n            <Route exact path=\"/admin/proposal\" component={AdminProposal} />\n            <Route exact path=\"/admin/queries/:id\" component={AdminQueriesRecevied} />\n            <Route exact path=\"/admin/queryassing/:id\" component={AdminQueryAssingment} />\n            <Route exact path=\"/admin/queriestab\" component={AdminQueriesTab} />\n            <Route exact path=\"/admin/feedback\" component={AdminFeedbackTab} />\n            <Route exact path=\"/admin/paymentstatus\" component={AdminPaymentStatusTab} />\n            <Route exact path=\"/admin/assignment\" component={AdminAssignmentTab} />\n            <Route exact path=\"/admin/edittl/:id\" component={AdminEditTL} />\n            <Route exact path=\"/admin/edittp/:id\" component={AdminEditTP} />\n            <Route exact path=\"/admin/pending/:id\" component={AdminPendingRecevived} />\n            <Route exact path=\"/admin/forget-password\" component={AdminForgetPassword} />\n            <Route exact path=\"/admin/new-password\" component={AdminNewPassword} />\n            <Route exact path=\"/admin/query_rejection/:id\" component={AdminQueryRejection} />\n            <Route exact path=\"/admin/schedule\" component={AdminSchedule} />\n            <Route exact path=\"/admin/meeting\" component={AdminMeetingComponent} />\n            <Route exact path=\"/admin/chatting/:id\" component={AdminChatting} />\n            <Route exact path=\"/admin/message\" component={AdminMessage} />\n            <Route exact path=\"/admin/view-notification/:id\" component={AdminViewNotification} />\n\n\n\n            <Route exact path=\"/teamleader/start\" component={TlStart} />\n            <Route exact path=\"/teamleader/login\" component={TlLogin} />\n            <Route exact path=\"/teamleader/dashboard\" component={TlDashboard} />\n            <Route exact path=\"/teamleader/addnew\" component={TlAddNew} />\n            <Route exact path=\"/teamleader/addteamprof\" component={TlAddTeamProf} />\n            <Route exact path=\"/teamleader/proposal\" component={TlProposal} />\n            <Route exact path=\"/teamleader/addassingment/:id\" component={TlAddAssingmentStages} />\n            <Route exact path=\"/teamleader/queries/:id\" component={TlQueriesRecevied} />\n            <Route exact path=\"/teamleader/queryassing/:id\" component={TlQueryAssingment} />\n            <Route exact path=\"/teamleader/edittp/:id\" component={TlEditTP} />\n            <Route exact path=\"/teamleader/feedback\" component={TlFeedbackTab} />\n            <Route exact path=\"/teamleader/paymentstatus\" component={TlPaymentStatus} />\n            <Route exact path=\"/teamleader/assignment\" component={TlAssignmentTab} />\n            <Route exact path=\"/teamleader/sendproposal/:id\" component={TlSendProposal} />\n            <Route exact path=\"/teamleader/queriestab\" component={TlQueriesTab} />\n            <Route exact path=\"/teamleader/edit-proposal/:id\" component={TlEditProposal} />\n            <Route exact path=\"/teamleader/pending/:id\" component={TlPendingReceived} />\n            <Route exact path=\"/teamleader/queriestab2\" component={TlQueryTab2} />\n            <Route exact path=\"/teamleader/assignment-form/:id\" component={TlAssignmentForm} />\n            <Route exact path=\"/teamleader/meeting\" component={TlMeetingComponent} />\n            <Route exact path=\"/teamleader/view-report/:id\" component={TlViewReport} />\n            <Route exact path=\"/teamleader/schedule\" component={TlSchedule} />\n            <Route exact path=\"/teamleader/forget-password\" component={TlForgetPassword} />\n            <Route exact path=\"/teamleader/new-password/:id\" component={TlNewPassword} />\n            <Route exact path=\"/teamleader/view-notification/:id\" component={TlViewNotification} />\n            <Route exact path=\"/teamleader/chatting/:id\" component={TlChatting} />\n            <Route exact path=\"/teamleader/message\" component={TlMessage} />\n\n\n\n\n\n\n            <Route exact path=\"/taxprofessional/start\" component={TpStart} />\n            <Route exact path=\"/taxprofessional/login\" component={TpLogin} />\n            <Route exact path=\"/taxprofessional/queries/:id\" component={TpQueriesRecevied} />\n            <Route exact path=\"/taxprofessional/queriestab\" component={TpQueriesTab} />\n            <Route exact path=\"/taxprofessional/proposal\" component={TpProposal} />\n            <Route exact path=\"/taxprofessional/sendproposal/:id\" component={TpSendProposal} />\n            <Route exact path=\"/taxprofessional/edit-proposal/:id\" component={TpEditProposal} />\n            <Route exact path=\"/taxprofessional/change-password\" component={TpChangePassword} />\n            <Route exact path=\"/taxprofessional/dashboard\" component={TpDashboard} />\n            <Route exact path=\"/taxprofessional/forget-password\" component={TpForgetPassword} />\n            <Route exact path=\"/taxprofessional/new-password/:id\" component={TpNewPassword} />\n\n            <Route exact path=\"/*\" component={PageNotFound} />\n\n          </Switch>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n{/* <Route exact path=\"/\" component={Start} />\n          <Route exact path=\"/abc\" component={Layout} />\n\n          <Route exact path=\"/signin\" component={Signin} />\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route exact path=\"/register-yourself\" component={RegisterYourSelf} />\n          <Route exact path=\"/verify-otp\" component={VerifyOtp} />\n          <Route exact path=\"/otp\" component={VerifyOtpLogin} />\n          <Route exact path=\"/questionnaire-page\" component={QuestionnairePage} />\n             \n          <Route exact path=\"/questionnaire\" component={Questionnaire} />    \n          <Route exact path=\"/feedback\" component={Feedback} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/my-assingment/:id\" component={MyAssingment} />\n          <Route exact path=\"/addfresh\" component={AddFreshAssingment} /> */}\n{/*  */ }\n\n  // <Switch>\n      //   <Route exact path=\"/\" component={Login} />\n      //   <PrivateRoute\n      //     path=\"/admin\"\n      //     render={(props) => <AdminLayout {...props} />}\n      //   />\n\n\n      // </Switch>","/var/www/html/Mazars_Pannel/src/Service/PrivateRouteAdmin.js",[],"/var/www/html/Mazars_Pannel/src/Service/PrivateRouteTP.js",[],"/var/www/html/Mazars_Pannel/src/Service/PrivateRouteTL.js",[],"/var/www/html/Mazars_Pannel/src/views/SignUpForm/SignUp.js",["1020","1021","1022","1023"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Spinner } from \"reactstrap\";\nimport Alerts from \"../../common/Alerts\";\n\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_profession: yup.string().required(\"required proffesion\"),\n  p_state: yup.string().required(\"required state\"),\n  p_city: yup.string().required(\"required city\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n  p_password: yup\n    .string()\n    .required(\"required password\")\n    .min(5, \"at least 5 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\nfunction SignUp(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [states, setStates] = useState([]);\n  const [city, setCity] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [load, setLoad] = useState(false);\n  const [store, setStore] = useState(0);\n\n\n  useEffect(() => {\n    const getStates = () => {\n      // console.log(`${baseUrl}/customers/getState`)\n      axios.get(`${baseUrl}/customers/getState`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setStates(res.data.result);\n        }\n      });\n    };\n    getStates();\n  }, []);\n\n  useEffect(() => {\n    const getCity = () => {\n      axios\n        .get(`${baseUrl}/customers/getCity?state_id=${store}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setCity(res.data.result);\n          }\n        });\n    };\n\n    getCity();\n  }, [store]);\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    // setLoad(true);\n\n    let formData = new FormData();\n    formData.append(\"name\", value.p_name);\n    formData.append(\"email\", value.p_email);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"occupation\", value.p_profession);\n    formData.append(\"state\", value.p_state);\n    formData.append(\"city\", value.p_city);\n    formData.append(\"password\", value.p_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/signup`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n\n        if (response.data.code === 1) {\n\n          var variable = \"Signup successfully.\"\n          Alerts.SuccessNormal(variable)\n\n          localStorage.setItem(\"userid\", JSON.stringify(response.data.id));\n          localStorage.setItem(\n            \"userNameId\",\n            JSON.stringify(response.data.user_id)\n          );\n          localStorage.setItem(\"name\", JSON.stringify(response.data.name));\n          props.history.push(\"/customer/questionnaire-page\");\n        } else if (response.data.code === 0) {\n          console.log(\"res -\", response.data.result);\n          setLoad(false);\n          Swal.fire(\n            \"Oops\",\n            `error :        \n          ${response.data.message[0] ? response.data.message[0] : \"\"} \n\n          ${response.data.message[0] && response.data.message[1] ? \"and\" : \"\"} \n\n            ${response.data.message[1] ? response.data.message[1] : \"\"} \n            `,\n            \"error\"\n          );\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n  const getID = (key) => {\n    setStore(key);\n\n    states.filter((data) => {\n      if (data.id == key) {\n        console.log(\"Name\", data.name);\n        setName(data.name);\n      }\n    });\n  };\n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Customer Register</h2>\n          </div>\n          {load ? (\n            <Spinner size=\"sm\" color=\"primary\" />\n          ) : (\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Name</label>\n                    <input\n                      type=\"text\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_name,\n                      })}\n                      name=\"p_name\"\n                      ref={register}\n                      placeholder=\"Enter Name\"\n                    />\n                    {errors.p_name && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_name.message}{\" \"}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Email</label>\n                    <input\n                      type=\"text\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_email,\n                      })}\n                      name=\"p_email\"\n                      ref={register}\n                      placeholder=\"Enter Email\"\n                    />\n                    {errors.p_email && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_email.message}{\" \"}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Phone number</label>\n                    <input\n                      type=\"text\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_phone,\n                      })}\n                      name=\"p_phone\"\n                      ref={register}\n                      placeholder=\"Phone number\"\n                    />\n                    {errors.p_phone && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_phone.message}{\" \"}\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Occupation/ Profession</label>\n                    <br />\n                    <select\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_profession,\n                      })}\n                      name=\"p_profession\"\n                      aria-label=\"Default select example\"\n                      ref={register}\n                    >\n                      <option value=\"\">--select--</option>\n                      {professionName.map((p, index) => (\n                        <option key={index} value={p.city}>\n                          {p.city}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.p_profession && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_profession.message}{\" \"}\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">State</label>\n                    <select\n                      id=\"state\"\n                      name=\"p_state\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_state,\n                      })}\n                      ref={register}\n                      onChange={(e) => getID(e.target.value)}\n                    >\n                      <option value=\"\">--select--</option>\n                      {states.map((p) => (\n                        <option key={p.id} value={p.id}>\n                          {p.name}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.p_state && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_state.message}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">City</label>\n\n                    <select\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_city,\n                      })}\n                      name=\"p_city\"\n                      ref={register}\n                    >\n                      <option value=\"\">--select--</option>\n                      {city.map((p, index) => (\n                        <option key={index} value={p.city}>\n                          {p.city}\n                        </option>\n                      ))}\n                    </select>\n                    {errors.p_city && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_city.message}\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <div class=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Password</label>\n                    <input\n                      type=\"password\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_password,\n                      })}\n                      name=\"p_password\"\n                      ref={register}\n                      placeholder=\"Enter Password\"\n                    />\n                    {errors.p_password && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_password.message}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n          )}\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default SignUp;\n\nconst professionName = [\n  { city: \"CA\" },\n  { city: \"NON-CA\" },\n  { city: \"CFO\" },\n  { city: \"CEO\" },\n  { city: \"FINANCE HEAD\" },\n  { city: \"ACCOUNTS MANAGER\" },\n  { city: \"ACCOUNTANT\" },\n  { city: \"TAX PROFESSIONAL\" },\n  { city: \"OTHERS\" },\n];\n\n// Swal.fire(\n//   'Oops...',\n//   \"Errorr : <br/>\"\n//  +response.data.message[0]+\n//   \"<br/>\"\n//   +response.data.message[1] ,\n//   'error')\n","/var/www/html/Mazars_Pannel/src/views/VrerifyOtpLogin/VerifyOtpLogin.js",["1024","1025","1026"],"import React , {useEffect , useState} from 'react'\nimport Header from \"../../components/Header/Header\";\nimport Footer from '../../components/Footer/Footer'\nimport axios from 'axios'\nimport { baseUrl } from \"../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\n\n// const Schema = yup.object().shape({\n//   p_otp: yup.string().required(\"required otp\"),\n// });\n\n\nfunction VerifyOtp(props) {\n\n  const { handleSubmit, register,  errors  } = useForm();\n\n  const[time, setTime] = useState('')\n  const[disabled, setDisabled] = useState(false)\n\n  \n  useEffect(() => {\n    console.log(\"call useEffect\")\n\n    var timerOn = true;\n\n    function timer(remaining) {\n    // var m = Math.floor(remaining / 60);\n    var s = remaining % 60;\n    \n    // m = m < 10 ? '0' + m : m;\n    s = s < 10 ? '0' + s : s;\n      setTime(s)\n\n      remaining -= 1;\n  \n    if(remaining >= 0 && timerOn) {\n      setTimeout(function() {\n          timer(remaining);\n      }, 1000);\n      return;\n    }\n    setDisabled(true)\n    }\n  \n    timer(60);\n  }, []);\n \n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n  \n    let formData = new FormData();\n    formData.append(\"otp\", value.p_otp);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/auth/validateOTP`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);   \n        if (response.data.code === 1) {\n          props.history.push(\"/customer/dashboard\");\n          } \n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  }\n\n\n  const resendOtp = () => {\n    props.history.push(\"/customer/signin\");\n  }\n\n\n\n  return (\n    <>\n    <Header cust_sign=\"cust_sign\"/>\n    <div class=\"container\">\n      <div class=\"otp\">\n        <div class=\"heading text-center\">\n          <h2>Verify Your OTP</h2>\n        </div>\n        <form onSubmit={handleSubmit(onSubmit)}>\n        { \n              disabled ? \n              null\n            : \n            <div class=\"form-group\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"otp\"\n              placeholder=\"Enter Your OTP Here\"\n              ref={register}\n              name=\"p_otp\"\n            />\n         \n            <small class=\"text-center\">           \n              Note: OTP is valid for {time} seconds.\n            </small>\n          </div>\n            }\n\n          <div class=\"text-center\">\n\n          { \n              disabled ?\n              <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>RESEND OTP</button>           \n              :\n              <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button> \n            }\n          </div>\n        </form>\n      </div>\n    </div>\n    <Footer />\n    </>\n  );\n}\n\nexport default VerifyOtp;\n","/var/www/html/Mazars_Pannel/src/views/VerifyOtp/VerifyOtp.js",["1027","1028","1029"],"import React , {useEffect , useState} from 'react'\nimport { useForm } from \"react-hook-form\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from '../../components/Footer/Footer'\nimport axios from 'axios'\nimport { baseUrl } from \"../../config/config\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\n\n// const Schema = yup.object().shape({\n//   p_otp: yup.string().required(\"required otp\"),\n// });\n\n\nfunction VerifyOtp(props) {\n\n  const { handleSubmit, register,  errors  } = useForm();\n\n  const[time, setTime] = useState('')\n  const[disabled, setDisabled] = useState(false)\n\n\n  useEffect(() => {\n    console.log(\"call useEffect\")\n\n    var timerOn = true;\n\n    function timer(remaining) {\n    // var m = Math.floor(remaining / 60);\n    var s = remaining % 60;\n    \n    // m = m < 10 ? '0' + m : m;\n    s = s < 10 ? '0' + s : s;\n      setTime(s)\n\n      remaining -= 1;\n  \n    if(remaining >= 0 && timerOn) {\n      setTimeout(function() {\n          timer(remaining);\n      }, 1000);\n      return;\n    }\n\n    setDisabled(true)\n    \n    }\n    \n\n    timer(60);\n  }, []);\n \n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n  \n    let formData = new FormData();\n    formData.append(\"otp\", value.p_otp);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/auth/validateOTP`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);   \n        if (response.data.code === 1) {\n          props.history.push(\"/customer/questionnaire-page\");\n          } \n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  }\n\n    const resendOtp = () => {\n      \n      props.history.push(\"/customer/signup\");\n    }\n\n  return (\n    <>\n<Header cust_sign=\"cust_sign\"/>\n    <div class=\"container\">\n      <div class=\"otp\">\n        <div class=\"heading text-center\">\n          <h2>Verify Your OTP</h2>\n        </div>\n        <form onSubmit={handleSubmit(onSubmit)}>\n        { \n              disabled ? \n              null\n            : \n            <div class=\"form-group\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"otp\"\n              placeholder=\"Enter Your OTP Here\"\n              ref={register}\n              name=\"p_otp\"\n            />\n          \n            <small class=\"text-center\">           \n              Note: OTP is valid for {time} seconds.\n            </small>\n          </div>\n            }\n         \n\n          <div class=\"text-center\">\n\n            { \n              disabled ?\n              <button type=\"submit\" class=\"btn btn-success\" onClick={resendOtp}>RESEND OTP</button>           \n              :\n              <button type=\"submit\" class=\"btn btn-primary\">VERIFY OTP</button> \n            }\n            \n\n            \n          </div>\n        </form>\n      </div>\n    </div>\n    <Footer />\n    </>\n  );\n}\n\nexport default VerifyOtp;\n","/var/www/html/Mazars_Pannel/src/views/SignInForm/SignIn.js",["1030","1031","1032"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { Spinner } from \"reactstrap\";\nimport Alerts from \"../../common/Alerts\";\n\n\n\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_password: yup.string().required(\"required password\"),\n});\n\n\nfunction SignIn(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [load, setLoad] = useState(false);\n  const [email, setEmail] = useState(null);\n\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    setLoad(true);\n\n    let formData = new FormData();\n    formData.append(\"user_id\", value.p_email);\n    formData.append(\"password\", value.p_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/login`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          Alerts.SuccessLogin()\n          localStorage.setItem(\"userid\", JSON.stringify(response.data.user_id));\n          localStorage.setItem(\"name\", JSON.stringify(response.data.name));\n          props.history.push(\"/customer/dashboard\");\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          setLoad(false);\n          Alerts.ErrorLogin()\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const handleChange = (e) => {\n    console.log(\"val-\", e.target.value);\n    setEmail(e.target.value);\n  };\n\n  console.log(\"email\", email);\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Customer Login</h2>\n          </div>\n\n          {load ? (\n            <Spinner size=\"sm\" color=\"primary\" />\n          ) : (\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Email</label>\n                    <input\n                      type=\"text\"\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_email,\n                      })}\n                      name=\"p_email\"\n                      ref={register}\n                      placeholder=\"Enter Email\"\n                      onChange={(e) => handleChange(e)}\n                    />\n                    {errors.p_email && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_email.message}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-md-12\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Password</label>\n                    <input\n                      type={isPasswordShow ? \"text\" : \"password\"}\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.p_password,\n                      })}\n                      name=\"p_password\"\n                      placeholder=\"Enter Password\"\n                      ref={register}\n                    />\n                    <i\n                      className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                      onClick={togglePasssword}\n                    />\n                    {errors.p_password && (\n                      <div className=\"invalid-feedback\">\n                        {errors.p_password.message}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n\n              <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n                <Link\n                  to={{\n                    pathname: \"/customer/forget-password\",\n                    email: `${email}`,\n                  }}\n                >\n                  Forgot Password\n                </Link>\n              </div>\n            </form>\n          )}\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default SignIn;\n\n\n\n// <Link\n//   to={{\n//     pathname: \"/customer/forget-password\",\n//     email: `${email}`,\n//   }}\n// >\n//   Forgot Password\n// </Link>;\n\n{\n  /* <Link \n                to={`/customer/forget-password`}\n                >Forgot Password</Link> */\n}\n","/var/www/html/Mazars_Pannel/src/views/RegisterYourSelf/RegisterYourSelf.js",[],"/var/www/html/Mazars_Pannel/src/views/Start/Start.js",[],"/var/www/html/Mazars_Pannel/src/views/Dashboard/Dashboard.js",["1033","1034"],"/var/www/html/Mazars_Pannel/src/views/MyAssingment/MyAssingment.js",["1035","1036"],"/var/www/html/Mazars_Pannel/src/views/AddFressAssignment/AddFreshAssingment.js",["1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport axios from \"axios\";\nimport { baseUrl ,ImageUrl} from \"../../config/config\";\nimport * as yup from \"yup\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport { Spinner } from \"reactstrap\";\nimport Alerts from \"../../common/Alerts\";\n\n\nfunction AddFreshAssingment(props) {\n  const alert = useAlert();\n  const history = useHistory();\n  const [load, setLoad] = useState(false);\n\n  const { handleSubmit, register, errors, reset, control } = useForm({\n    defaultValues: {\n      users: [{ query: \"\" }],\n    },\n  });\n\n  const { append, remove, fields } = useFieldArray({\n    control,\n    name: \"users\",\n  });\n\n  const userId = window.localStorage.getItem(\"userid\");\n  const category = window.localStorage.getItem(\"category\");\n  const [selectedOption, setSelectedOption] = useState([]);\n  const [purposeOption, setPurposeOption] = useState([]);\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    setLoad(true);\n\n    let formData = new FormData();\n\n    var uploadImg = value.upload;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let a = value.upload[i].pics[0];\n        formData.append(\"upload_1[]\", a);\n      }\n    }\n\n    formData.append(\"fact\", value.p_fact);\n    formData.append(\"specific\", JSON.stringify(value.users));\n    formData.append(\"timelines\", value.p_timelines);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"cid\", JSON.parse(category));\n    formData.append(\"softcopy_word\", Number(value.p_format_word));\n    formData.append(\n      \"softcopy_digitally_assigned\",\n      Number(value.p_format_digital)\n    );\n    formData.append(\n      \"printout_physically_assigned\",\n      Number(value.p_format_physically)\n    );\n    formData.append(\"case_name\", value.p_case_name);\n    formData.append(\"assessment_year\", JSON.stringify(selectedOption));\n    formData.append(\"purpose\", JSON.stringify(purposeOption));\n\n    axios\n      .post(`${baseUrl}/customers/PostQuestion`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        console.log(\"msg-\", response.data.message[0]);\n\n        if (response.data.code === 1) {\n          reset();\n          var msg = response.data.message\n\n          var variable = \"Query Successfully Added\"\n          Alerts.SuccessMsg(variable, msg)\n\n          props.history.push(\"/customer/queries\");\n        } else {\n          setLoad(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const Msg = ({ msg }) => {\n    return (\n      <>\n        <p style={{ fontSize: \"12px\" }}>Query successfully added! {msg}</p>\n      </>\n    );\n  };\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Add Fresh Query</p>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardHeader>\n          <div class=\"col-xl-8 col-lg-8 col-md-12 py-4\">\n            {load ? (\n              <Spinner size=\"sm\" color=\"primary\" />\n            ) : (\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Facts of the case</label>\n                      <textarea\n                        className=\"form-control\"\n                        id=\"textarea\"\n                        rows=\"6\"\n                        name=\"p_fact\"\n                        ref={register}\n                      ></textarea>\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"question_query mb-2\">\n                      <label className=\"form-label\">\n                        Specific Questions for advisory\n                      </label>\n                      <div\n                        className=\"btn btn-primary\"\n                        onClick={() => append({ query: \"\" })}\n                      >\n                        +\n                      </div>\n                    </div>\n\n                    {fields.map((item, index) => (\n                      <div className=\"question_query_field mb-2\" key={index}>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          ref={register}\n                          name={`users[${index}].query`}\n                          placeholder=\"Specify your query\"\n                          defaultValue={`${item.query}`}\n                        />\n                        <div\n                          className=\"btn btn-primary ml-2\"\n                          onClick={() => remove(index)}\n                        >\n                          -\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Case name</label>\n                      <input\n                        type=\"text\"\n                        name=\"p_case_name\"\n                        ref={register}\n                        className=\"form-control\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Assessment year</label>\n                      <Select\n                        closeMenuOnSelect={false}\n                        onChange={setSelectedOption}\n                        isMulti\n                        options={assessment_year}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <ImageUploads register={register} control={control} />\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">\n                        Format in which Opinion is required\n                      </label>\n                      <br />\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          name=\"p_format_word\"\n                          ref={register}\n                        />\n                        <label className=\"form-check-label\">\n                          Softcopy - Word/ Pdf\n                        </label>\n                      </div>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          name=\"p_format_digital\"\n                          ref={register}\n                        />\n                        <label className=\"form-check-label\">\n                          SoftCopy- Digitally Signed\n                        </label>\n                      </div>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          name=\"p_format_physically\"\n                          ref={register}\n                        />\n                        <label className=\"form-check-label\">\n                          Printout- Physically Signed\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">\n                        Timelines within which Opinion is Required\n                      </label>\n                      <br />\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"p_timelines\"\n                          ref={register}\n                          value=\"Urgent, (4-5 Working Days)\"\n                          defaultChecked\n                        />\n                        <label>Urgent, (4-5 Working Days)</label>\n                      </div>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"p_timelines\"\n                          ref={register}\n                          value=\"Regular (10-12 Working Days)\"\n                        />\n                        <label>Regular (10-12 Working Days)</label>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">\n                        Purpose for which Opinion is sought\n                      </label>\n                      <Select\n                        closeMenuOnSelect={false}\n                        onChange={setPurposeOption}\n                        isMulti\n                        options={purpose}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Submit\n                </button>\n              </form>\n            )}\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddFreshAssingment;\n\nconst purpose = [\n  { value: \"Assessment\", label: \"Assessment\" },\n  { value: \"Appeal\", label: \"Appeal\" },\n  { value: \"Filing before any Court\", label: \"Filing before any Court\" },\n  {\n    value: \"Filing before any Authority\",\n    label: \"Filing before any Authority\",\n  },\n  { value: \"Others\", label: \"Others\" },\n];\n\nconst assessment_year = [\n  {\n    value: \"2010-11\",\n    label: \"2010-11\",\n  },\n  {\n    value: \"2011-12\",\n    label: \"2011-12\",\n  },\n  {\n    value: \"2012-13\",\n    label: \"2012-13\",\n  },\n  {\n    value: \"2013-14\",\n    label: \"2013-14\",\n  },\n  {\n    value: \"2014-15\",\n    label: \"2014-15\",\n  },\n  {\n    value: \"2015-16\",\n    label: \"2015-16\",\n  },\n  {\n    value: \"2016-17\",\n    label: \"2016-17\",\n  },\n  {\n    value: \"2017-18\",\n    label: \"2017-18\",\n  },\n  {\n    value: \"2018-19\",\n    label: \"2018-19\",\n  },\n  {\n    value: \"2019-20\",\n    label: \"2019-20\",\n  },\n  {\n    value: \"2020-21\",\n    label: \"2020-21\",\n  },\n  {\n    value: \"2021-22\",\n    label: \"2021-22\",\n  },\n  {\n    value: \"2022-23\",\n    label: \"2022-23\",\n  }\n];\nconst ImageUploads = ({ register, control }) => {\n  const { append, fields, remove } = useFieldArray({\n    control,\n    name: \"upload\",\n  });\n  return (\n    <>\n      <div className=\"question_query mb-2\">\n        <label className=\"form-label\">Upload Your Document</label>\n        <div className=\"btn btn-primary\" onClick={() => append({ pics: \"\" })}>\n          +\n        </div>\n      </div>\n\n      {fields.map((item, index) => (\n        <div className=\"question_query_field mb-2\" key={index}>\n          <input\n            type=\"file\"\n            name={`upload[${index}].pics`}\n            ref={register()}\n            className=\"form-control-file manage_file\"\n            defaultValue={item.pics}\n          />\n          <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\n            -\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n\n\n\n// formData.append(\"purpose\", value.p_purpose);\n// console.log(\"arr\",arr);\n\n// for (let i = 0; i < multipleFiles.length; i++) {\n//   formData.append('upload_1', multipleFiles[i]);\n// }\n\n{\n  /* <div className=\"question_query mb-2\">\n                  <label className=\"form-label\">\n                    multiple upload\n                  </label>\n                  <div\n                    className=\"btn btn-primary\"\n                    onClick={() => append({ img: \"\" })}\n                  >\n                    +\n                  </div>\n                </div>\n\n                {fields.length > 0 &&\n                  fields.map((item, i) => (\n                    <div className=\"question_query_field mb-2\" key={i}>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        ref={register}\n                        name={`pics[${i}].img`}\n                        placeholder=\"img\"\n                      />\n                      <div\n                        className=\"btn btn-primary ml-2\"\n                        onClick={() => remove(i)}\n                      >\n                        -\n                      </div>\n                    </div>\n                  ))} */\n}\n\n// const children = [];\n// for (let i = 1; i < 20; i++) {\n//   children.push(\n//     <Option key={i}>{i}</Option>\n//   );\n// }\n{\n  /* <select\n                    className=\"form-select form-control\"\n                    name=\"p_assessment_year\"\n                    aria-label=\"Default select example\"\n                    ref={register}\n                  >\n                    <option value=\"\">--select--</option>\n                    <option value=\"2010\">2010</option>\n                   \n                  </select> */\n}\n{\n  /* <Select\n                      mode=\"tags\"\n                      style={{ width: \"100%\" }}\n                      onChange={handleChange}\n                      allowClear\n                    >\n                      {assessment_year.map((p, i) => (\n                        <Option key={p.year}>{p.year}</Option>\n                      ))}\n                    </Select> */\n}\n{\n  /* <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        name=\"p_assessment\"\n                        ref={register}\n                        value=\"Assessment\"\n                      />\n                      <label className=\"form-check-label\">Assessment</label>\n                    </div>\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        name=\"p_appeal\"\n                        ref={register}\n                        value=\"Appeal\"\n                      />\n                      <label className=\"form-check-label\">Appeal</label>\n                    </div>\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        name=\"p_court\"\n                        ref={register}\n                        value=\"Filing before any Court\"\n                      />\n                      <label className=\"form-check-label\">\n                        Filing before any Court\n                      </label>\n                    </div>\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        name=\"p_authority\"\n                        ref={register}\n                        value=\"Filing before any Authority\"\n                      />\n                      <label className=\"form-check-label\">\n                        Filing before any Authority\n                      </label>\n                    </div>\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        name=\"p_others\"\n                        ref={register}\n                        value=\"Others\"\n                      />\n                      <label className=\"form-check-label\">Others</label>\n                    </div> */\n}\n// defaultValue={[...yearOption]}\n","/var/www/html/Mazars_Pannel/src/views/QuestionnairePage/QuestionnairePage.js",["1051","1052","1053","1054","1055","1056","1057","1058"],"import { useForm, useFieldArray } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport Select from \"react-select\";\nimport { Spinner } from \"reactstrap\";\nimport Alerts from \"../../common/Alerts\";\n\nfunction Questionnaire(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset, control } = useForm();\n  const { append, remove, fields } = useFieldArray({\n    control,\n    name: \"specific\",\n  });\n  const userId = window.localStorage.getItem(\"userid\");\n  const category = window.localStorage.getItem(\"category\");\n  const userNameId = window.localStorage.getItem(\"name\");\n  const [selectedOption, setSelectedOption] = useState([]);\n  const [purposeOption, setPurposeOption] = useState([]);\n\n  const [modal, setModal] = useState(true);\n  const toggle = () => setModal(!modal);\n  const [load, setLoad] = useState(false);\n\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    setLoad(true);\n\n    let formData = new FormData();\n\n    var uploadImg = value.upload;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        console.log(\"pics\", value.upload[i].pics[0]);\n        let a = value.upload[i].pics[0];\n        formData.append(\"upload_1[]\", a);\n      }\n    }\n\n    formData.append(\"fact\", value.p_fact);\n    formData.append(\"specific\", JSON.stringify(value.specific));\n    formData.append(\"timelines\", value.p_timelines);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"cid\", JSON.parse(category));\n    formData.append(\"softcopy_word\", Number(value.p_format_word));\n    formData.append(\n      \"softcopy_digitally_assigned\",\n      Number(value.p_format_digital)\n    );\n    formData.append(\n      \"printout_physically_assigned\",\n      Number(value.p_format_physically)\n    );\n\n    formData.append(\"case_name\", value.p_case_name);\n    formData.append(\"assessment_year\", JSON.stringify(selectedOption));\n    formData.append(\"purpose\", JSON.stringify(purposeOption));\n    axios\n      .post(`${baseUrl}/customers/PostQuestion`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          var msg = response.data.message\n          reset();\n          var variable = \"Query Successfully Added\"\n          Alerts.SuccessMsg(variable, msg)\n\n          props.history.push(\"/customer/dashboard\");\n        } else {\n          setLoad(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n  //alert msg\n  const Msg = ({ msg }) => {\n    return (\n      <>\n        <p style={{ fontSize: \"12px\" }}>Query successfully added! {msg}</p>\n      </>\n    );\n  };\n\n\n  const SuccessMesg = () => {\n    return (\n      <>\n        <Modal isOpen={modal} toggle={toggle} size=\"sm\">\n          <ModalHeader toggle={toggle}></ModalHeader>\n\n          <ModalBody>\n            <br />\n            <div class=\"modal-body\">\n              <h1 style={{ textAlign: \"center\", fontSize: \"1.5rem\" }}>\n                {JSON.parse(userNameId)} , You have Successfully Registered\n              </h1>\n            </div>\n          </ModalBody>\n        </Modal>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Header id={JSON.parse(userNameId)} />\n      <div className=\"container\">\n        {SuccessMesg()}\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Basic Questionnaire</h2>\n          </div>\n          {load ? (\n            <Spinner size=\"sm\" color=\"primary\" />\n          ) : (\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Facts of the case</label>\n                    <textarea\n                      className=\"form-control\"\n                      id=\"textarea\"\n                      rows=\"6\"\n                      name=\"p_fact\"\n                      ref={register}\n                    ></textarea>\n                  </div>\n                </div>\n\n                <div className=\"col-md-6\">\n                  <div className=\"question_query mb-2\">\n                    <label className=\"form-label\">\n                      Specific Questions for advisory\n                    </label>\n                    <div\n                      className=\"btn btn-primary\"\n                      onClick={() => append({ query: \"\" })}\n                    >\n                      +\n                    </div>\n                  </div>\n\n                  {fields.length > 0 &&\n                    fields.map((item, index) => (\n                      <div>\n                        {fields.length < 5 ? (\n                          <div\n                            className=\"question_query_field mb-2\"\n                            key={index}\n                          >\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              ref={register}\n                              name={`specific[${index}].query`}\n                              placeholder=\"Specify your query\"\n                            />\n                            <div\n                              className=\"btn btn-primary ml-2\"\n                              onClick={() => remove(index)}\n                            >\n                              -\n                            </div>\n                          </div>\n                        ) : null}\n                      </div>\n                    ))}\n                </div>\n\n                <div className=\"col-md-6\">\n                  <ImageUploads register={register} control={control} />\n                </div>\n\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Case name</label>\n                    <input\n                      type=\"text\"\n                      name=\"p_case_name\"\n                      ref={register}\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">Assessment year</label>\n                    <Select\n                      closeMenuOnSelect={false}\n                      onChange={setSelectedOption}\n                      isMulti\n                      options={assessment_year}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">\n                      Format in which Opinion is required\n                    </label>\n                    <br />\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        name=\"p_format_word\"\n                        ref={register}\n                      // value=\"1\"\n                      />\n                      <label className=\"form-check-label\">\n                        Softcopy - Word/ Pdf\n                      </label>\n                    </div>\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        name=\"p_format_digital\"\n                        ref={register}\n                      // value=\"1\"\n                      />\n                      <label className=\"form-check-label\">\n                        SoftCopy- Digitally Signed\n                      </label>\n                    </div>\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"checkbox\"\n                        name=\"p_format_physically\"\n                        ref={register}\n                      // value=\"1\"\n                      />\n                      <label className=\"form-check-label\">\n                        Printout- Physically Signed\n                      </label>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">\n                      Timelines within which Opinion is Required\n                    </label>\n                    <br />\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"p_timelines\"\n                        ref={register}\n                        value=\"Urgent, (4-5 Working Days)\"\n                        defaultChecked\n                      />\n                      <label>Urgent, (4-5 Working Days)</label>\n                    </div>\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"p_timelines\"\n                        ref={register}\n                        value=\"Regular (10-12 Working Days)\"\n                      />\n                      <label>Regular (10-12 Working Days)</label>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-md-6\">\n                  <div className=\"mb-3\">\n                    <label className=\"form-label\">\n                      Purpose for which Opinion is sought\n                    </label>\n                    <Select\n                      closeMenuOnSelect={false}\n                      onChange={setPurposeOption}\n                      isMulti\n                      options={purpose}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n          )}\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Questionnaire;\n\nconst purpose = [\n  { value: \"Assessment\", label: \"Assessment\" },\n  { value: \"Appeal\", label: \"Appeal\" },\n  { value: \"Filing before any Court\", label: \"Filing before any Court\" },\n  {\n    value: \"Filing before any Authority\",\n    label: \"Filing before any Authority\",\n  },\n  { value: \"Others\", label: \"Others\" },\n];\n\nconst assessment_year = [\n  {\n    value: \"2010-11\",\n    label: \"2010-11\",\n  },\n  {\n    value: \"2011-12\",\n    label: \"2011-12\",\n  },\n  {\n    value: \"2012-13\",\n    label: \"2012-13\",\n  },\n  {\n    value: \"2013-14\",\n    label: \"2013-14\",\n  },\n  {\n    value: \"2014-15\",\n    label: \"2014-15\",\n  },\n  {\n    value: \"2015-16\",\n    label: \"2015-16\",\n  },\n  {\n    value: \"2016-17\",\n    label: \"2016-17\",\n  },\n  {\n    value: \"2017-18\",\n    label: \"2017-18\",\n  },\n  {\n    value: \"2018-19\",\n    label: \"2018-19\",\n  },\n  {\n    value: \"2019-20\",\n    label: \"2019-20\",\n  },\n  {\n    value: \"2020-21\",\n    label: \"2020-21\",\n  },\n  {\n    value: \"2021-22\",\n    label: \"2021-22\",\n  },\n  {\n    value: \"2022-23\",\n    label: \"2022-23\",\n  }\n];\n\nconst ImageUploads = ({ register, control }) => {\n  const { append, fields, remove } = useFieldArray({\n    control,\n    name: \"upload\",\n  });\n  return (\n    <>\n      <div className=\"question_query mb-2\">\n        <label className=\"form-label\">Upload Your Document</label>\n        <div className=\"btn btn-primary\" onClick={() => append({ pics: \"\" })}>\n          +\n        </div>\n      </div>\n\n      {fields.map((item, index) => (\n        <div className=\"question_query_field mb-2\" key={index}>\n          <input\n            type=\"file\"\n            name={`upload[${index}].pics`}\n            ref={register()}\n            className=\"form-control-file manage_file\"\n            defaultValue={item.pics}\n          />\n          <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\n            -\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n\n\n\n{\n  /* <div className=\"col-md-6\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">\n                    Purpose for which Opinion is sought\n                  </label>\n                  <select\n                    className=\"form-select form-control\"\n                    name=\"p_purpose\"\n                    aria-label=\"Default select example\"\n                    ref={register}\n                  >\n                    <option value=\"\">--select--</option>\n                    {Opinion.map((p, i) => (\n                      <option key={i} value={p.sought}>\n                        {p.sought}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div> */\n}\n","/var/www/html/Mazars_Pannel/src/views/Feedback/Feedback.js",["1059","1060","1061","1062"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\n\nconst Schema = yup.object().shape({\n  p_feedback: yup.string().required(\"required feedback\"),\n});\n\n\nfunction Feedback({ props }) {\n\n  console.log(\"pp\", props);\n\n\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const history = useHistory();\n  const { id } = useParams();\n\n  const userId = window.localStorage.getItem(\"userid\");\n\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"assign_no\", id);\n    formData.append(\"feedback\", value.p_feedback);\n    formData.append(\"user_id\", JSON.parse(userId));\n    // formData.append(\"tl_id\", value.p_teamleader);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostUserFeedback`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          reset();\n          var variable = \"Feedback Successfully Sent \"\n          Alerts.SuccessNormal(variable)\n\n          // props.history.push(routes);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <ArrowBackIcon />\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Feedback</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_query\"\n                    className=\"form-control\"\n                    ref={register}\n                    value={id}\n                    disabled\n                  />\n                </div>\n\n\n                <div class=\"form-group\">\n                  <label>Feedback</label>\n                  <textarea\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_feedback,\n                    })}\n                    placeholder=\"Feedback text here\"\n                    rows=\"5\"\n                    ref={register}\n                    name=\"p_feedback\"\n                  ></textarea>\n                  {errors.p_feedback && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_feedback.message}\n                    </div>\n                  )}\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  submit\n                </button>\n              </div>\n            </div>\n\n          </form>\n        </CardBody>\n      </Card>\n\n    </Layout>\n  );\n}\n\nexport default Feedback;\n\n\n{/* <select\n                      class=\"form-control\"\n                      name=\"p_assignment\"\n                      ref={register}\n                    >\n                      <option value=\"\">--select--</option>\n\n                      {assignment.map((p, i) => (\n                        <option key={i} value={p.assign_no}>\n                          {p.assign_no}\n                        </option>\n                      ))}\n                    </select> */}\n // useEffect(() => {\n  //   const getAssingment = () => {\n  //     axios.get(`${baseUrl}/customers/getAssignedAssignments?user=${JSON.parse(userId)}`).then((res) => {\n  //       console.log(res);\n  //       if (res.data.code === 1) {\n  //         setAssingment(res.data.result);\n  //       }\n  //     });\n  //   };\n\n  //   getAssingment();\n  // }, []);\n","/var/www/html/Mazars_Pannel/src/views/SelectCategoryPage/SelectCategoryPage.js",["1063","1064","1065"],"import React from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport CategorySelect from \"../../components/CategorySelect/CategorySelect\";\n\nfunction SelectCategoryPage() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const history = useHistory();\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Select Category</p>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <CategorySelect addfreshbtn=\"addfreshbtn\" />\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default SelectCategoryPage;\n","/var/www/html/Mazars_Pannel/src/views/ProposalTab/ProposalTab.js",["1066","1067","1068","1069","1070"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\n\nimport AllProposal from \"./AllProposal\";\nimport InprogressProposal from \"./InprogressProposal\";\nimport AcceptedProposal from \"./AcceptedProposal\";\nimport DeclinedProposal from \"./DeclinedProposal\";\n\n\n\n\nfunction Proposal(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n  const [allProposalCount, setAllProposalCount] = useState(\"\");\n  const [inprogressProposalCount, setInprogressProposalCount] = useState(\"\");\n  const [acceptedProposalCount, setAcceptedProposalCount] = useState(\"\");\n  const [declinedProposalCount, setDeclinedProposalCount] = useState(\"\");\n\n\n  useEffect(() => {\n    getAllProposal();\n    getInprogressProposal();\n    getAcceptedProposal();\n    getDeclinedProposal();\n  }, []);\n\n\n  const getAllProposal = () => {\n    axios\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}`)\n      .then((res) => {\n        console.log(res);\n        setAllProposalCount(res.data.result.length);\n      });\n  };\n\n  const getInprogressProposal = () => {\n    axios\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=1`)\n      .then((response) => {\n        console.log(\"code---\", response);\n        if (response.data.code === 1) {\n          setInprogressProposalCount(response.data.result.length);\n        }\n      })\n  };\n\n  const getAcceptedProposal = () => {\n    axios\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=2`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setAcceptedProposalCount(res.data.result.length);\n        }\n      });\n  };\n\n  const getDeclinedProposal = () => {\n    axios\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=3`)\n      .then((response) => {\n        console.log(\"code---\", response);\n        if (response.data.code === 1) {\n          setDeclinedProposalCount(response.data.result.length);\n        }\n      })\n  };\n\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n\n  console.log(\"allProposalCount\", allProposalCount)\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Proposals ({allProposalCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Proposals ({inprogressProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Accepted; Proposals ({acceptedProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n              Declined; Proposals ({declinedProposalCount})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <InprogressProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <AcceptedProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <DeclinedProposal />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Proposal;\n\n\n\n\n","/var/www/html/Mazars_Pannel/src/views/AssignmentTab/AssignmentTab.js",["1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084"],"/var/www/html/Mazars_Pannel/src/views/QueriesTab/QueriesTab.js",["1085","1086","1087","1088","1089","1090"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\nimport AllQueriesData from \"./AllQueriesData\";\nimport InprogressAllocation from \"./InprogressAllocation\";\nimport InprogressProposal from \"./InprogressProposal\";\nimport DeclinedQueries from \"./DeclinedQueries\";\n\n\n\n\nfunction QueriesTab(props) {\n\n  const userId = window.localStorage.getItem(\"userid\");\n\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n  const [allQueriesCount, setAllQueriesCount] = useState(\"\");\n  const [inprogressAllocation, setInprogressAllocation] = useState(\"\");\n  const [inprogressProposal, setInprogressProposal] = useState(\"\");\n  const [declined, setDeclined] = useState(\"\");\n\n\n  useEffect(() => {\n    CountAllQuery();\n    CountInprogressAllocation();\n    CountInprogressProposal();\n    CountDeclined();\n  }, []);\n\n\n  const CountAllQuery = (data) => {\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setAllQueriesCount(res.data.result.length);\n        }\n      });\n  };\n\n  const CountInprogressAllocation = () => {\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=1`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setInprogressAllocation(res.data.result.length);\n      }\n    });\n  };\n\n  const CountInprogressProposal = () => {\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=2`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setInprogressProposal(res.data.result.length);\n      }\n    });\n  };\n\n  const CountDeclined = () => {\n    axios.get(`${baseUrl}/customers/declinedQueries?uid=${JSON.parse(userId)}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setDeclined(res.data.result.length);\n      }\n    });\n  };\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Queries ({allQueriesCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Queries({inprogressAllocation})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Completed; Queries ({inprogressProposal})\n            </Tab>\n\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n              Declined; Queries ({declined})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllQueriesData />\n          </TabPanel>\n\n          <TabPanel>\n            <InprogressAllocation />\n          </TabPanel>\n\n          <TabPanel>\n            <InprogressProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <DeclinedQueries />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n\n\n\n","/var/www/html/Mazars_Pannel/src/components/Layout/Layout.js",["1091"],"import Sidebar from \"../Admin-Sidebar/Admin-Sidebar\";\nimport Header from \"../Admin-Header/Admin-Header\";\nimport Footer from \"../Admin-Footer/Admin-Footer\";\n\n\n\nfunction Layout(props) {\n  // console.log(props)\n  const {\n    custDashboard, adminDashboard, TLDashboard,\n    TPDashboard,\n    custUserId, adminUserId, TLuserId, TPuserId } = props\n  return (\n    <>\n      <Header\n        custUserId={custUserId}\n        adminUserId={adminUserId}\n        TLuserId={TLuserId}\n        TPuserId={TPuserId}\n      />\n\n      <Sidebar\n        custDashboard={custDashboard}\n        adminDashboard={adminDashboard}\n        TLDashboard={TLDashboard}\n        TPDashboard={TPDashboard}\n      />\n\n      <div class=\"app-content content\" style={{ marginTop: \"100px\" }}>\n        <div class=\"content-wrapper\">\n          <div class=\"content-body\">\n            {props.children}\n          </div>\n        </div>\n      </div>\n\n      {/* <Footer /> */}\n    </>\n  );\n}\n\nexport default Layout;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/Start/Start.js",[],"/var/www/html/Mazars_Pannel/src/pages/Admin/Dashboard/Dashboard.js",["1092","1093"],"/var/www/html/Mazars_Pannel/src/pages/Admin/Login/Login.js",["1094","1095","1096"],"import React, { useState } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\n\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  password: yup\n    .string()\n    .required(\"required password\")\n    .min(5, \"at least 5 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\nfunction Login(props) {\n  const alert = useAlert();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [email, setEmail] = useState(null);\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"userid\", value.p_email);\n    formData.append(\"password\", value.password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/login`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          Alerts.SuccessLogin()\n\n          localStorage.setItem(\n            \"adminkey\",\n            JSON.stringify(response.data[\"user id\"])\n          );\n          props.history.push(\"/admin/dashboard\");\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          Alerts.ErrorLogin()\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n  const handleChange = (e) => {\n    console.log(\"val-\", e.target.value);\n    setEmail(e.target.value);\n  };\n  return (\n    <>\n      <Header admin=\"admin\" />\n      <div class=\"container\">\n        <div class=\"form\">\n          <div class=\"heading\">\n            <h2>ADMIN LOGIN</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email</label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    name=\"password\"\n                    placeholder=\"Enter Password\"\n                    ref={register}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n\n            <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n              <Link\n                to={{\n                  pathname: \"/admin/forget-password\",\n                  email: `${email}`,\n                }}\n              >\n                Forgot Password\n              </Link>\n\n              {/* <Link to={`/admin/forget-password`}>Forgot Password</Link> */}\n            </div>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Login;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AddNewTeamLeader/AddNewTeamLeader.js",["1097","1098","1099"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { Card, CardHeader } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\n\n\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n  p_tax: yup.string().required(\"required category\"),\n  p_tax2: yup.string().required(\"required sub category\"),\n});\n\n\nfunction AddNew() {\n  const alert = useAlert();\n  const history = useHistory();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"pcat_id\", value.p_tax);\n    formData.append(\"cat_id\", value.p_tax2);\n    formData.append(\"type\", \"tl\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AddTeamLead`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n\n          var variable = \"Team Leader Created Successfully\"\n          Alerts.SuccessNormal(variable)\n\n          history.goBack();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Add New Team Leader</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardHeader>\n          <div class=\"row mt-3\">\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Name</label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_name,\n                        })}\n                        name=\"p_name\"\n                        ref={register}\n                      />\n                      {errors.p_name && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_name.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Phone Number</label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_phone,\n                        })}\n                        name=\"p_phone\"\n                        ref={register}\n                      />\n                      {errors.p_phone && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_phone.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Category</label>\n                      <select\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_tax,\n                        })}\n                        name=\"p_tax\"\n                        ref={register}\n                        onChange={(e) => setStore(e.target.value)}\n                      >\n                        <option value=\"\">--Select Category--</option>\n                        {tax.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.p_tax && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_tax.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Sub Category</label>\n                      <select\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_tax2,\n                        })}\n                        name=\"p_tax2\"\n                        ref={register}\n                        onChange={(e) => setStore2(e.target.value)}\n                      >\n                        <option value=\"\">--Select Sub-Category--</option>\n                        {tax2.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.p_tax2 && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_tax2.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-12\">\n                    <div class=\"form-group\">\n                      <label>Email</label>\n                      <input\n                        type=\"email\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        ref={register}\n                      />\n                      {errors.p_email && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_email.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Submit\n                </button>\n              </form>\n            </div>\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddNew;\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required name\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_phone: yup\n//   .string()\n//   .required(\"required phone no\")\n//   .matches(/^[0-9]+$/, \"Must be only digits\")\n//   .min(10, \"Must be exactly 10 digits\")\n//   .max(20, \"max 20 digits\"),\n// });\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AddNewTaxProf/AddNewTaxProf.js",["1100","1101","1102","1103","1104","1105","1106","1107","1108"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../../common/Alerts\";\n\nconst Schema = yup.object().shape({\n  p_name: yup.string().required(\"required name\"),\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  p_phone: yup\n    .string()\n    .required(\"required phone no\")\n    .matches(/^[0-9]+$/, \"Must be only digits\")\n    .min(10, \"Must be exactly 10 digits\")\n    .max(20, \"max 20 digits\"),\n  p_tax: yup.string().required(\"required category\"),\n  p_tax2: yup.string().required(\"required sub category\"),\n  p_teamleader: yup.string().required(\"required sub teamleader\"),\n});\n\nfunction AddNew() {\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const [teamleader, setTeamLeader] = useState([]);\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const history = useHistory();\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTeamLeader(res.data.result);\n        }\n      });\n    };\n    getTeamLeader();\n  }, []);\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"pcat_id\", value.p_tax);\n    formData.append(\"cat_id\", value.p_tax2);\n    formData.append(\"type\", \"tp\");\n    formData.append(\"tp_id\", value.p_teamleader);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/AddTaxProfessional`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n\n          var variable = \"Tax Professional Created Successfully\"\n          Alerts.SuccessNormal(variable)\n\n          history.goBack();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Add New Tax Professionals</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardHeader>\n          <div class=\"row mt-3\">\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Name</label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_name,\n                        })}\n                        name=\"p_name\"\n                        ref={register}\n                      />\n                      {errors.p_name && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_name.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Phone Number</label>\n                      <input\n                        type=\"text\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_phone,\n                        })}\n                        name=\"p_phone\"\n                        ref={register}\n                      />\n                      {errors.p_phone && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_phone.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Email</label>\n                      <input\n                        type=\"email\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_email,\n                        })}\n                        name=\"p_email\"\n                        ref={register}\n                      />\n                      {errors.p_email && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_email.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Select teamleader</label>\n                      <select\n                        name=\"p_teamleader\"\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_teamleader,\n                        })}\n                        ref={register}\n                      >\n                        <option value=\"\">--select--</option>\n                        {teamleader.map((p) => (\n                          <option key={p.Id} value={p.id}>\n                            {p.name}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.p_teamleader && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_teamleader.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Category</label>\n                      <select\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_tax,\n                        })}\n                        name=\"p_tax\"\n                        ref={register}\n                        onChange={(e) => setStore(e.target.value)}\n                      >\n                        <option value=\"\">--Select Category--</option>\n                        {tax.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.p_tax && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_tax.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label>Sub Category</label>\n                      <select\n                        className={classNames(\"form-control\", {\n                          \"is-invalid\": errors.p_tax2,\n                        })}\n                        name=\"p_tax2\"\n                        ref={register}\n                        onChange={(e) => setStore2(e.target.value)}\n                      >\n                        <option value=\"\">--Select Sub-Category--</option>\n                        {tax2.map((p, index) => (\n                          <option key={index} value={p.id}>\n                            {p.details}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.p_tax2 && (\n                        <div className=\"invalid-feedback\">\n                          {errors.p_tax2.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddNew;\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required name\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_phone: yup\n//   .string()\n//   .required(\"required phone no\")\n//   .matches(/^[0-9]+$/, \"Must be only digits\")\n//   .min(10, \"Must be exactly 10 digits\")\n//   .max(20, \"max 20 digits\"),\n// });\n","/var/www/html/Mazars_Pannel/src/pages/Admin/QueriesRecevied/QueriesRecevied.js",["1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\n\nfunction QueriesRecevied(props) {\n  console.log(\"props\", props);\n\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [feedback, setFeedback] = useState([]);\n  const [reports, setReports] = useState([]);\n\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tlname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/getQueryDetails?id=${id}`).then((res) => {\n        console.log(\"admin QD\", res);\n        if (res.data.code === 1) {\n\n          if (res.data.result) {\n            if (res.data.result[0].name == null) {\n              console.log(\"null\")\n            }\n            else {\n              setSubmitData(res.data.result);\n            }\n          }\n          \n          if (res.data.additional_queries) {\n            setDisplaySpecific(res.data.additional_queries);\n          }\n          if (res.data.payment_detail) {\n            setPaymentDetails(res.data.payment_detail);\n          }\n          if (res.data.feedback_detail) {\n            setFeedback(res.data.feedback_detail);\n          }\n          if (res.data.result[0].assign_no) {\n            setAssingmentNo(res.data.result[0].assign_no);\n          }\n\n          if (res.data.reports) {\n            setReports(res.data.reports);\n          }\n\n\n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n\n          console.log(\"purposeItem-\", typeof purposeItem);\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            var myYear = JSON.parse(assementItem);\n            setPurpose(myPurpose);\n            setYear(myYear);\n          } catch (e) {\n            return false;\n          }\n\n          if (res.data.proposal_queries.length > 0) {\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              description: res.data.proposal_queries[0].description,\n\n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n            });\n          }\n\n          if (res.data.assignment.length > 0) {\n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n          if (res.data.history_queries.length > 0) {\n            setDisplayHistory({\n              tlname: res.data.history_queries[0].tname,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n          }\n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n\n\n        }\n      });\n    };\n    getQuery();\n    getSubmittedAssingment();\n  }, [assingNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setDisplayQuery(res.data.result);\n        }\n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"schedule\">\n            <h3>Query Detail</h3>\n          </div>\n        </div>\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          <div class=\"card\">\n            <div\n              class=\"card-header\"\n              id=\"headingOne\"\n              style={{ padding: \".5rem .1rem\" }}\n            >\n              <h2 class=\"mb-0 query ml-3\">\n                <Link\n                  to={{\n                    pathname: `/admin/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n              </h2>\n            </div>\n\n            {submitData.map((p, index) => (\n              <QueryDetails\n                p={p}\n                key={index}\n                diaplaySpecific={diaplaySpecific}\n                diaplayProposal={diaplayProposal}\n                diaplayHistory={diaplayHistory}\n                diaplayAssignment={diaplayAssignment}\n                displayQuery={displayQuery}\n                getQuery={getQuery}\n                assingNo={assingNo}\n                queryDocs={queryDocs}\n                paymentDetails={paymentDetails}\n                purpose={purpose}\n                year={year}\n                feedback={feedback}\n                reports={reports}\n\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n\n{\n  /* <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{fontSize:\"20px\"}}>Query Details</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {submitData.map((p, i) => (\n            <div class=\"card-body\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Titles</th>\n                    <th scope=\"col\">Data</th>\n                  </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope=\"row\">Query No</th>\n                    <td>{p.assign_no}</td>\n                  </tr>\n                <tr>\n                    <th scope=\"row\">Query Status</th>\n                    <td>{p.status}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facts of the case</th>\n                    <td>{p.fact_case}</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      Timelines within which Opinion is Required\n                    </th>\n                    <td colspan=\"1\">{p.Timelines}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">specific questions</th>\n                    <td colspan=\"1\">\n                      {diaplaySpecific.map((p, i) => (\n                        <p>{p.text}</p>\n                      ))}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Documents</th>\n                    <td>\n                      {p.upload_doc_1 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_2 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_3 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Format in which Opinion is required</th>\n                    <td colspan=\"1\">\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                      <p>\n                        {p.softcopy_digitally_assigned === \"1\" &&\n                          \"SoftCopy- Digitally Signed\"}\n                      </p>\n\n                      <p>\n                        {p.printout_physically_assigned === \"1\" &&\n                          \"Printout- Physically Signed\"}\n                      </p>\n                    </td>\n                  </tr>\n                  \n                </tbody>\n              </table>\n\n              <table class=\"table table-bordered\">\n                {displayQuery.length > 0 && (\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                        Additional Queries\n                      </th>\n                      <th scope=\"col\">Date Submission</th>\n                      <th scope=\"col\">Documents</th>\n                    </tr>\n                  </thead>\n                )}\n\n                {displayQuery.map((p, i) => (\n                  <tbody>\n                    <tr key={i}>\n                      <td>{p.additional_queries}</td>\n                      <td>{ChangeFormateDate(p.created)}</td>\n                      <td>\n                          {p.upload_doc == \"\" ? (\n                            \"\"\n                          ) : (\n                            <p>\n                              <a\n                                href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc}`}\n                              >\n                                <i class=\"fa fa-photo\"></i>\n                              </a>\n                            </p>\n                          )}\n                        </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          ))}\n        </CardBody>\n      </Card> */\n}\n// useEffect(() => {\n//   const getSubmittedAssingment = () => {\n//     axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n//       console.log(res);\n//       if (res.data.code === 1) {\n//         setSubmitData(res.data.result);\n//         setDisplaySpecific(res.data.additional_queries);\n//         setAssingmentNo(res.data.result[0].assign_no);\n//       }\n//     });\n//   };\n\n//   getSubmittedAssingment();\n//   getQuery();\n// }, [assingNo]);\n\n// console.log(assingNo);\n\n{\n  /* <button\n                  class=\"btn btn-success\"\n                  onClick={() => history.goBack(\"4\")}\n                >\n                  Go Back\n                </button> */\n}\n","/var/www/html/Mazars_Pannel/src/pages/Admin/Proposal/Proposal.js",["1120","1121","1122","1123"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\nimport AllProposalComponent from \"../AllProposalComponent/AllProposalComponent\";\nimport PendingForAcceptence from \"../../../components/PendingForAcceptence/PendingForAcceptence\";\nimport AcceptedProposal from \"../AcceptedProposal/AcceptedProposal\";\nimport DeclinedPropoal from \"../DeclinedProposal/DeclinedPropoal\";\n\nfunction Proposal(props) {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [allProposalCount, setAllProposalCount] = useState(\"\");\n  const [pendingProposalCount, setPendingProposalCount] = useState(\"\");\n  const [acceptedProposalCount, setAcceptedProposalCount] = useState(\"\");\n  const [declinedProposalCount, setDeclinedProposalCount] = useState(\"\");\n\n  useEffect(() => {\n    const getAllProposal = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setAllProposalCount(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getAcceptedProposal = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals?status1=2`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setAcceptedProposalCount(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getDeclinedProposal = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals?&status=6`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setDeclinedProposalCount(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getPendingForAcceptence = () => {\n      axios\n        .get(`${baseUrl}/admin/getProposals?status1=1`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setPendingProposalCount(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    getAllProposal();\n    getAcceptedProposal();\n    getDeclinedProposal();\n    getPendingForAcceptence();\n  }, []);\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Proposals ({allProposalCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Proposals ({pendingProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Accepted; Proposals ({acceptedProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n              Customer Declined; Proposals ({declinedProposalCount})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllProposalComponent />\n          </TabPanel>\n\n          <TabPanel>\n            <PendingForAcceptence />\n          </TabPanel>\n\n          <TabPanel>\n            <AcceptedProposal />\n          </TabPanel>\n\n          <TabPanel>\n            <DeclinedPropoal />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Proposal;\n\n\n// const allProposal = (data) => {\n//   setAllProposalCount(data);\n// };\n\n// const pendingProposal = (data) => {\n//   setPendingProposalCount(data);\n// };\n\n// const acceptedProposal = (data) => {\n//   setAcceptedProposalCount(data);\n// };\n\n// const declinedProposal = (data) => {\n//   setDeclinedProposalCount(data);\n// };\n","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTP/EditTP.js",["1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { Select, Form, Input, Button } from \"antd\";\nimport TaxProffesionalService from \"../../../config/services/TaxProffesional\";\nimport Alerts from \"../../../common/Alerts\";\n\n\nfunction EditTP() {\n  const { Option } = Select;\n  const { id } = useParams();\n  const history = useHistory();\n  const alert = useAlert();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n  const [value, setValue] = useState({});\n  const [teamleader, setTeamLeader] = useState([]);\n\n  useEffect(() => {\n    getTutorial(id);\n  }, [id]);\n\n  const getTutorial = (id) => {\n    TaxProffesionalService.get(id)\n      .then((res) => {\n        console.log(res.data);\n        if (res.data.code === 1) {\n          setValue(res.data.result[0]);\n          setStore(res.data.result[0].pcat_id);\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTeamLeader(res.data.result);\n        }\n      });\n    };\n    getTeamLeader();\n  }, []);\n\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setStore(value);\n  };\n\n  // console.log(\"value -\", value.name);\n  const data1 = value.name;\n  const data2 = value.email;\n  const data3 = value.phone;\n  const data4 = value.pcat_id;\n  const data5 = value.cat_id;\n  const data6 = value.tl_id;\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n\n  const onFinish = (value) => {\n    console.log(\"value :\", value);\n    let formData = new FormData();\n\n    formData.append(\"email\", value.email);\n    formData.append(\"name\", value.name);\n    formData.append(\"phone\", value.phone);\n    formData.append(\"pcat_id\", value.category);\n    formData.append(\"cat_id\", value.sub_category);\n    formData.append(\"id\", id);\n    formData.append(\"tp_id\", value.select_teamleader);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/updateTP`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          var variable = \"Tax Professional Updated Successfully\"\n          Alerts.SuccessNormal(variable)\n          history.goBack();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Edit Tax Professional</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        {!data1 ? (\n          <CardHeader>loading ...</CardHeader>\n        ) : (\n          <CardHeader>\n            <div class=\"row mt-3\">\n              <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n              <div class=\"col-lg-8 col-xl-8 col-md-12\">\n                <Form\n                  name=\"basic\"\n                  initialValues={{\n                    name: `${data1}`,\n                    email: `${data2}`,\n                    phone: `${data3}`,\n                    category: `${data4}`,\n                    sub_category: `${data5}`,\n                    select_teamleader: `${data6}`,\n                  }}\n                  onFinish={onFinish}\n                >\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Name</label>\n                        <Form.Item name=\"name\">\n                          <Input />\n                        </Form.Item>\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Phone Number</label>\n                        <Form.Item name=\"phone\">\n                          <Input />\n                        </Form.Item>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Email</label>\n                        <Form.Item name=\"email\">\n                          <Input />\n                        </Form.Item>\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Select teamleader</label>\n                        <Form.Item name=\"select_teamleader\">\n                          <Select>\n                            <Option value=\"\">--select--</Option>\n                            {teamleader.map((p, index) => (\n                              <Option key={p.Id} value={p.id}>\n                                {p.name}\n                              </Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Category</label>\n                        <Form.Item name=\"category\">\n                          <Select onChange={handleChange}>\n                            <Option value=\"\">--Select Category--</Option>\n                            {tax.map((p, index) => (\n                              <Option key={index} value={p.id}>\n                                {p.details}\n                              </Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Sub Category</label>\n                        <Form.Item name=\"sub_category\">\n                          <Select>\n                            <Option value=\"\">--Select Sub-Category--</Option>\n                            {tax2.map((p, index) => (\n                              <Option key={index} value={p.id}>\n                                {p.details}\n                              </Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <Form.Item>\n                          <Button type=\"primary\" htmlType=\"submit\">\n                            Update\n                          </Button>\n                        </Form.Item>\n                      </div>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </CardHeader>\n        )}\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditTP;\n\n\n// useEffect(() => {\n//   const getTaxProfessional = () => {\n//     axios.get(`${baseUrl}/tp/getTaxProfessional?id=${id}`).then((res) => {\n//       console.log(res);\n//       if (res.data.code === 1) {\n//         setUser({\n//           name: res.data.result[0].name,\n//           email: res.data.result[0].email,\n//           phone: res.data.result[0].phone,\n//         });\n//       }\n//     });\n//   };\n\n//   getTaxProfessional();\n// }, [id]);\n","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/EditTL.js",["1136","1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport Reset from \"./Reset\";\nimport { Select, Form, Input, Button } from \"antd\";\nimport Alerts from \"../../../common/Alerts\";\n\nfunction EditTL() {\n  const { Option } = Select;\n  const { id } = useParams();\n  const history = useHistory();\n  const alert = useAlert();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n  const [value, setValue] = useState({});\n\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setStore(value);\n  };\n\n  useEffect(() => {\n    getTeamLeader();\n  }, [id]);\n\n  const getTeamLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader?id=${id}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n      setValue(res.data.result[0]);\n      setStore(res.data.result[0].pcat_id);\n      }\n    });\n  };\n  console.log(\"value -\", value.name);\n  const data1 = value.name;\n  const data2 = value.email;\n  const data3 = value.phone;\n  const data4 = value.pcat_id;\n  const data5 = value.cat_id;\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n\n\n  const onFinish = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"email\", value.email);\n    formData.append(\"name\", value.name);\n    formData.append(\"phone\", value.phone);\n    formData.append(\"pcat_id\", value.category);\n    formData.append(\"cat_id\", value.sub_category);\n    formData.append(\"id\", id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/updateTeamLeader`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          \n          var variable = \"Team Leader Updated Successfully\"\n          Alerts.SuccessNormal(variable)\n          history.goBack();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <div class=\"col-md-12 d-flex\">\n            <div>\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </div>\n            <div class=\"text-center ml-5\">\n              <h4>Edit Team Leader</h4>\n            </div>\n          </div>\n        </CardHeader>\n\n        {!data1 ? (\n          <CardHeader>loading ...</CardHeader>\n        ) : (\n          <CardHeader>\n            <div class=\"row mt-3\">\n              <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n              <div class=\"col-lg-8 col-xl-8 col-md-12\">\n                <Form\n                  name=\"basic\"\n                  initialValues={{\n                    name: `${data1}`,\n                    email: `${data2}`,\n                    phone: `${data3}`,\n                    category: `${data4}`,\n                    sub_category: `${data5}`,\n                  }}\n                  onFinish={onFinish}\n                >\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Name</label>\n                        <Form.Item name=\"name\">\n                          <Input />\n                        </Form.Item>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Phone Number</label>\n                        <Form.Item name=\"phone\">\n                          <Input />\n                        </Form.Item>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Category</label>\n                        <div class=\"form-group\">\n                          <Form.Item name=\"category\">\n                            <Select onChange={handleChange}>\n                              <Option value=\"\">--Select Category--</Option>\n                              {tax.map((p, index) => (\n                                <Option key={index} value={p.id}>\n                                  {p.details}\n                                </Option>\n                              ))}\n                            </Select>\n                          </Form.Item>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Sub Category</label>\n                        <Form.Item name=\"sub_category\">\n                          <Select>\n                            <Option value=\"\">--Select Sub-Category--</Option>\n                            {tax2.map((p, index) => (\n                              <Option key={index} value={p.id}>\n                                {p.details}\n                              </Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group\">\n                        <label>Email</label>\n                        <Form.Item name=\"email\">\n                          <Input />\n                        </Form.Item>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <Form.Item>\n                          <Button type=\"primary\" htmlType=\"submit\">\n                            Update\n                          </Button>\n                        </Form.Item>\n                      </div>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </CardHeader>\n        )}\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditTL;\n\n// setValue(\"p_name\", res.data.result[0].name);\n// setValue(\"p_email\", res.data.result[0].email);\n// setUser({\n//   name: res.data.result[0].name,\n//   email: res.data.result[0].email,\n//   phone: res.data.result[0].phone,\n//   category: res.data.result[0].parent_id,\n//   sub_category: res.data.result[0].cat_name,\n// });\n// const [user, setUser] = useState({\n//   name: \"\",\n//   email: \"\",\n//   phone: \"\",\n//   category: \"\",\n//   sub_category: \"\",\n// });\n\n// const { name, email, phone, category, sub_category } = user;\n{\n  /* <div class=\"row mt-3\">\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\n              <div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Name</label>\n                        <input\n                          type=\"text\"\n                          class=\"form-control\"\n                          name=\"p_name\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Phone Number</label>\n                        <input\n                          type=\"text\"\n                          class=\"form-control\"\n                          name=\"p_phone\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Category</label>\n\n                        <select\n                          className=\"form-control\"\n                          name=\"p_tax\"\n                          ref={register}\n                          value={store}\n                          onChange={(e) => setStore(e.target.value)}\n                        >\n                          <option value=\"\">--Select Category--</option>\n                          {tax.map((p, index) => (\n                            <option key={index} value={p.id}>\n                              {p.details}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-6\">\n                      <div class=\"form-group\">\n                        <label>Sub Category</label>\n                        <select\n                          className=\"form-select form-control\"\n                          name=\"p_tax2\"\n                          ref={register}\n                          onChange={(e) => setStore2(e.target.value)}\n                        >\n                          <option value=\"\">--Select Sub-Category--</option>\n                          {tax2.map((p, index) => (\n                            <option key={index} value={p.id}>\n                              {p.details}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <div class=\"form-group\">\n                        <label>Email</label>\n                        <input\n                          type=\"email\"\n                          class=\"form-control\"\n                          name=\"p_email\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Update\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div> */\n}\n\n// const [interest, setInterest] = useState(\"Direct Tax\");\n\n// const [selectedOption, setSelectedOption] = useState([]);\n// const [tax, setTax] = useState([]);\n// const [tax2, setTax2] = useState([]);\n\n// const [store, setStore] = useState(\"\");\n// const [store2, setStore2] = useState(null);\n\n// useEffect(() => {\n//   getTeamLeader();\n// }, []);\n\n// const getTeamLeader = () => {\n//   axios.get(`${baseUrl}/tl/getTeamLeader?id=${id}`).then((res) => {\n//     console.log(res);\n//     console.log(res.data.result[0]);\n//     if (res.data.code === 1) {\n//       // setSelectedOption(res.data.result);\n//       // setInterest(res.data.result[0].parent_id)\n//       // reset(res.data.result[0]);\n\n//       setValue(\"p_name\", res.data.result[0].name);\n//       setValue(\"p_email\", res.data.result[0].email);\n//       setValue(\"p_phone\", res.data.result[0].phone);\n//       setValue(\"p_tax\", res.data.result[0].parent_id);\n//       setValue(\"p_tax2\", res.data.result[0].cat_name);\n//     }\n//   });\n// };\n","/var/www/html/Mazars_Pannel/src/pages/Admin/PaymentStatusTab/PaymentStatusTab.js",[],"/var/www/html/Mazars_Pannel/src/pages/Admin/QueryAssingment/QueryAssingment.js",["1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, Link, Redirect } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\n\nfunction QueryAssingment(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { id } = useParams();\n\n  const [taxLeaderDisplay, setTaxLeaderDisplay] = useState([]);\n  const [teamID, setTeamID] = useState(null);\n  const [teamName, setTeamName] = useState(\"\");\n  const [query, setQuery] = useState(true);\n\n  const [expectedDate, setExpectedDate] = useState(\"\");\n\n  const [hideQuery, setHideQuery] = useState({\n    name: \"\",\n    timeline: \"\",\n    date_allocation: \"\",\n    expdeliverydate: \"\",\n  });\n\n  const userId = window.localStorage.getItem(\"adminkey\");\n  const tlkey = window.localStorage.getItem(\"tlkey\");\n\n  const [queryData, setQuerData] = useState({\n    queryNo: \"\",\n    timelines: \"\",\n    custId: \"\",\n  });\n\n  const { queryNo, timelines, custId } = queryData;\n\n  useEffect(() => {\n    getTaxLeader();\n    getQueryData();\n  }, []);\n\n  const getTaxLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setTaxLeaderDisplay(res.data.result);\n      }\n    });\n  };\n\n  const getQueryData = () => {\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setQuerData({\n          queryNo: res.data.result[0].assign_no,\n          timelines: res.data.result[0].Timelines,\n          custId: res.data.result[0].customer_id,\n        });\n        // expectedDeliveryDate(res.data.result[0].Timelines);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getQuery();\n  }, [queryNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/CheckIfAssigned?assignno=${queryNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setQuery(false);\n          setHideQuery({\n            name: res.data.meta[0].name,\n            timeline: res.data.meta[0].timeline,\n            date_allocation: res.data.meta[0].date_allocation,\n            expdeliverydate: res.data.meta[0].expdeliverydate,\n          });\n        }\n      });\n  };\n\n  const handleChange = (e) => {\n    console.log(\"val-\", e.target.value);\n    setTeamID(e.target.value);\n    var value = taxLeaderDisplay.filter(function (item) {\n      return item.id == e.target.value;\n    });\n    console.log(value[0].name);\n    setTeamName(value[0].name);\n  };\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    var expdeliverydate = value.p_expdeldate.replace(\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\n      \"$3-$1-$2\"\n    );\n\n    let formData = new FormData();\n    formData.append(\"who\", teamID);\n    formData.append(\"id\", id);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"type\", \"admin\");\n    formData.append(\"types\", \"tl\");\n    formData.append(\"name\", teamName);\n    formData.append(\"timeline\", value.p_timelines);\n    formData.append(\"expdeliverydate\", value.p_expdeldate);\n    formData.append(\"assignNo\", queryNo);\n    formData.append(\"customer_id\", custId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AddQueryAssignment`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n\n          var variable = \"Query Assigned Successfully\"\n          Alerts.SuccessNormal(variable)\n\n          getQuery();\n          props.history.push({\n            pathname: `/admin/queriestab`,\n            index: 1,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const expectedDeliveryDate = (key) => {\n    console.log(\"timlines : \", key);\n\n    const d = new Date();\n\n    if (key == \"Urgent, (4-5 Working Days)\") {\n      const d2 = new Date(d.getTime() + 432000000);\n      const new_date =\n        d2.getFullYear() + \"-\" + (d2.getMonth() + 1) + \"-\" + d2.getDate();\n      // d2.getDate() + \"/\" + (d2.getMonth() + 1) + \"/\" + d2.getFullYear();\n\n      console.log(\"Urgent:\", new_date);\n      setExpectedDate(new_date);\n    } else if (key == \"Regular (10-12 Working Days)\") {\n      const d2 = new Date(d.getTime() + 1296000000);\n      const new_date =\n        d2.getFullYear() + \"-\" + (d2.getMonth() + 1) + \"-\" + d2.getDate();\n      console.log(\"regular:\", new_date);\n      setExpectedDate(new_date);\n    }\n  };\n\n  console.log(\"expectedDate\", expectedDate)\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <Link\n                to={{\n                  pathname: `/admin/queriestab`,\n                  index: 1,\n                }}\n              >\n                <button class=\"btn btn-success ml-3\">\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\n                  Go Back\n                </button>\n              </Link>\n            </Col>\n            <Col md=\"4\">\n              <div style={{ textAlign: \"center\" }}>\n                <h2>Query Allocation</h2>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <div class=\"row mt-3\">\n            <div class=\"col-md-12\">\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Query No.</th>\n                      <th scope=\"col\">Team Leaders</th>\n                      <th scope=\"col\">Expected Timeline</th>\n                      <th scope=\"col\">Exp. Delivery Date</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {query ? (\n                      <tr>\n                        <th scope=\"row\">{queryNo}</th>\n                        <td>\n                          <select\n                            class=\"form-control\"\n                            name=\"p_taxprof\"\n                            ref={register}\n                            onChange={(e) => handleChange(e)}\n                          >\n                            <option value=\"\">-select-</option>\n                            {taxLeaderDisplay.map((p, index) => (\n                              <option key={index} value={p.id}>\n                                {p.name}\n                              </option>\n                            ))}\n                          </select>\n                        </td>\n\n                        <td>\n                          <input\n                            type=\"text\"\n                            ref={register}\n                            name=\"p_timelines\"\n                            value={timelines}\n                            class=\"form-control\"\n                          />\n                        </td>\n                        <td>\n                          <input\n                            type=\"date\"\n                            ref={register}\n                            name=\"p_expdeldate\"\n                            // defaultValue={expectedDate}\n                            class=\"form-control\"\n                          />\n                        </td>\n\n                        <td>\n                          <button type=\"submit\" class=\"btn btn-success\">\n                            Assign\n                          </button>\n                        </td>\n                      </tr>\n                    ) : (\n                      <tr>\n                        <th scope=\"row\">{queryNo}</th>\n                        <td>\n                          <select class=\"form-control w-75 p-0\" disabled>\n                            <option>{hideQuery.name}</option>\n                          </select>\n                        </td>\n\n                        <td>\n                          <input\n                            type=\"text\"\n                            ref={register}\n                            name=\"p_timelines\"\n                            class=\"form-control\"\n                            value={hideQuery.timeline}\n                            disabled\n                          />\n                        </td>\n                        <td>\n                          <input\n                            type=\"text\"\n                            ref={register}\n                            name=\"p_expdeldate\"\n                            class=\"form-control\"\n                            value={hideQuery.expdeliverydate}\n                            disabled\n                          />\n                        </td>\n                        <td>\n                          <button class=\"btn btn-success\" disabled>\n                            Assigned\n                          </button>\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </form>\n            </div>\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default QueryAssingment;\n\n// <Card>\n//         <CardHeader>\n//           <Row>\n//             <Col md=\"4\">\n//               <button\n//                 class=\"btn btn-success ml-3\"\n//                 onClick={() => history.goBack()}\n//               >\n//                 <i class=\"fas fa-arrow-left mr-2\"></i>\n//                 Go Back\n//               </button>\n//             </Col>\n//             <Col md=\"8\">\n//               <h4>Add Assignment Stages (Max 5)</h4>\n//             </Col>\n//           </Row>\n//         </CardHeader>\n//         <CardHeader></CardHeader>\n//       </Card>\n\n// d2.getDate() + \"/\" + (d2.getMonth() + 1) + \"/\" + d2.getFullYear();\n// <Link\n//   to={{\n//     pathname: `/admin/queriestab`,\n//     index: 1,\n//   }}\n// />;\n\n// <Redirect\n//   to={{\n//     pathname: `/admin/queriestab`,\n//     index: 1,\n//   }}\n// />;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/QueriesTab/QueriesTab.js",["1167","1168","1169","1170"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nimport PendingForAllocation from \"../../../components/PendingForAllocation/PendingForAllocation\";\nimport PendingForProposals from \"../../../components/PendingForProposals/PendingForProposals\";\nimport DeclinedQueries from \"../../../components/DeclinedQueries/DeclinedQueries\";\nimport AllQueriesData from \"../../../components/AllQueriesData/AllQueriesData\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\n\n\nfunction QueriesTab(props) {\n  // console.log(\"queries tab: \", props);\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [allQueriesCount, setAllQueriesCount] = useState(\"\");\n  const [pendingProposalCount, setPendingProposalCount] = useState(\"\");\n  const [declined, setDeclined] = useState(\"\");\n  const [inprogressAllocation, setInprogressAllocation] = useState();\n\n\n  useEffect(() => {\n    CountAllQuery();\n    CountInprogressAllocation();\n    CountInprogressProposal();\n    CountDeclined();\n  }, []);\n\n\n  const CountAllQuery = (data) => {\n    axios.get(`${baseUrl}/admin/getAllQueries`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setAllQueriesCount(res.data.result.length);\n      }\n    });\n  };\n\n  const CountInprogressAllocation = () => {\n    axios.get(`${baseUrl}/admin/pendingAllocation`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setInprogressAllocation(res.data.result.length);\n      }\n    });\n  };\n\n  const CountInprogressProposal = () => {\n    axios.get(`${baseUrl}/admin/pendingProposal`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setPendingProposalCount(res.data.result.length);\n      }\n    });\n  };\n\n  const CountDeclined = () => {\n    axios.get(`${baseUrl}/admin/declinedQueries`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setDeclined(res.data.result.length);\n      }\n    });\n  };\n\n\n  const [tabIndex, setTabIndex] = useState(0);\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              All Queries ({allQueriesCount})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              Inprogress; Allocation ({inprogressAllocation})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Inprogress; Proposals ({pendingProposalCount})\n            </Tab>\n\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\n              Declined Queries ({declined})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <AllQueriesData />\n          </TabPanel>\n\n          <TabPanel>\n            <PendingForAllocation />\n          </TabPanel>\n\n          <TabPanel>\n            <PendingForProposals />\n          </TabPanel>\n\n          <TabPanel>\n            <DeclinedQueries />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n\n\n  // const count_PFA = window.localStorage.getItem(\"count_PFA\");\n\n  // const CountAllQuery = (data) => {\n  //   setAllQueriesCount(data);\n  // };\n\n  // const CountPendingProposal = (data) => {\n  //   setPendingProposalCount(data);\n  // };\n\n  // const CountPendingForPayment = (data) => {\n  //   setPendingforPayment(data);\n  // };\n\n  // const CountPendingForAllocation = (data) => {\n  //   setPendingforAllocation(data);\n  // };\n","/var/www/html/Mazars_Pannel/src/pages/Admin/TaxProfessionalsTab/TaxProfessionalsTab.js",["1171","1172"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport Swal from \"sweetalert2\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TaxProffesionalService from \"../../../config/services/TaxProffesional\";\n\nfunction TaxProfessionalsTab() {\n  const alert = useAlert();\n  const [data, setData] = useState([]);\n  const [tpCount, setTpCount] = useState(\"\");\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  useEffect(() => {\n    getTaxProf();\n  }, []);\n\n  const getTaxProf = () => {\n    TaxProffesionalService.getAll()\n      .then((response) => {\n        setData(response.data.result);\n        setTpCount(response.data.result.length);\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      dataField: \"name\",\n      text: \"Name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"email\",\n      text: \"Email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"phone\",\n      text: \"Phone\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Edit\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <Link to={`/admin/edittp/${row.id}`}>\n              <i\n                className=\"fa fa-edit\"\n                style={{\n                  fontSize: 18,\n                  cursor: \"pointer\",\n                  marginLeft: \"8px\",\n                }}\n              ></i>\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"phone\",\n      text: \"Delete\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <i\n              className=\"fa fa-trash\"\n              style={{ fontSize: 20, cursor: \"pointer\", marginLeft: \"8px\" }}\n              onClick={() => del(row.id)}\n            ></i>\n          </>\n        );\n      },\n    },\n  ];\n\n  //check\n  const del = (id) => {\n    console.log(\"del\", id);\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"It will permanently deleted !\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  // delete data\n  const deleteCliente = (id) => {\n    console.log(\"del\", id);\n    axios\n      .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\n      .then(function (response) {\n        console.log(\"delete-\", response);\n        if (response.data.code === 1) {\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n          getTaxProf();\n        } else {\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n  \n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"10\">\n              <CardTitle tag=\"h4\">Tax Professionals ({tpCount})</CardTitle>\n            </Col>\n            <Col md=\"2\">\n              <Link to={\"/admin/addnewtp\"} class=\"btn btn-primary\">\n                Add New\n              </Link>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={data}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default TaxProfessionalsTab;\n// const getTaxProf = () => {\n//   axios.get(`${baseUrl}/tp/getTaxProfessional`).then((res) => {\n//     console.log(res);\n//     if (res.data.code === 1) {\n//       setData(res.data.result);\n//       setTpCount(res.data.result.length);\n//     }\n//   });\n// };\n","/var/www/html/Mazars_Pannel/src/pages/TL/Start/Start.js",[],"/var/www/html/Mazars_Pannel/src/pages/Admin/TeamLeaderTab/TeamLeaderTab.js",["1173","1174","1175"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Swal from \"sweetalert2\";\nfunction TeamLeaderTab() {\n  const alert = useAlert();\n  const [data, setData] = useState([]);\n  const [tlCount, setTlCount] = useState(\"\");\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\" ,width:\"50px\"};\n      },\n    },\n    {\n      dataField: \"name\",\n      text: \"Name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"email\",\n      text: \"Email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"phone\",\n      text: \"Phone\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"\",\n      text: \"Edit\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <Link to={`/admin/edittl/${row.id}`}>\n              <i\n                className=\"fa fa-edit\"\n                style={{\n                  fontSize: 18,\n                  cursor: \"pointer\",\n                  marginLeft: \"8px\",\n                }}\n              ></i>\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"phone\",\n      text: \"Delete\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <i\n              className=\"fa fa-trash\"\n              style={{ fontSize: 20, cursor: \"pointer\", marginLeft: \"8px\" }}\n              onClick={() => del(row.id)}\n            ></i>\n          </>\n        );\n      },\n    },\n  ];\n\n  useEffect(() => {\n    getTeamLeader();\n  }, []);\n\n  const getTeamLeader = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setData(res.data.result);\n        setTlCount(res.data.result.length);\n      }\n    });\n  };\n\n\n//check\n  const del = (id) => {\n    console.log(\"del\", id);\n\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"It will permanently deleted !\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  // delete data\n  const deleteCliente = (id) => {\n    axios\n      .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\n      .then(function (response) {\n        console.log(\"delete-\", response);\n        if (response.data.code === 1) {\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n          getTeamLeader();\n        } else {\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        }\n        \n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"10\">\n              <CardTitle tag=\"h4\">Team Leaders ({tlCount})</CardTitle>\n            </Col>\n            <Col md=\"2\">\n              <Link to={\"/admin/addnewtl\"} class=\"btn btn-primary\">\n                Add New\n              </Link>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={data}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default TeamLeaderTab;\n\n{\n  /* <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th scope=\"col\">S.No.</th>\n                <th scope=\"col\">Name</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Phone No.</th>\n                <th scope=\"col\">Edit</th>\n                <th scope=\"col\">Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((p, i) => (\n                <tr>\n                  <th scope=\"row\">{i + 1}</th>\n                  <td>{p.name}</td>\n                  <td>{p.parent_id}</td>\n                  <td>{p.cat_name}</td>\n                  <td>{p.email}</td>\n                  <td>{p.phone}</td>\n                  <td>\n                    <Link to={`/admin/edittl/${p.id}`}>\n                      <i\n                        className=\"fa fa-edit\"\n                        style={{\n                          fontSize: 18,\n                          cursor: \"pointer\",\n                          marginLeft: \"8px\",\n                        }}\n                      ></i>\n                    </Link>\n                  </td>\n                  <td onClick={() => del(p.id)}>\n                    <i\n                      className=\"fa fa-trash\"\n                      style={{\n                        fontSize: 22,\n                        cursor: \"pointer\",\n                        marginLeft: \"8px\",\n                      }}\n                    ></i>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table> */\n}\n\n// <div class=\"row mt-3\">\n//         <div class=\"col-md-12\">\n//           <div class=\"schedule\">\n//             <h3>Team Leaders</h3>\n// <Link to={\"/admin/addnew\"} class=\"btn btn-primary\">\n//   Add New\n// </Link>\n//           </div>\n//         </div>\n//         <br />\n//         <br />\n//         <br />\n//         <br />\n//         <div class=\"col-md-12\">\n//           <table class=\"table\">\n// <thead>\n//   <tr>\n//     <th scope=\"col\">No.</th>\n//     <th scope=\"col\">Name</th>\n//     <th scope=\"col\">Email</th>\n//     <th scope=\"col\">Phone No.</th>\n//     <th scope=\"col\">Edit</th>\n//     <th scope=\"col\">Delete</th>\n//   </tr>\n// </thead>\n// {data.map((p, i) => (\n//   <tr>\n//     <th scope=\"row\">{i + 1}</th>\n//     <td>{p.name}</td>\n//     <td>{p.email}</td>\n//     <td>{p.Phone}</td>\n//     <td>\n//       <Link to={`/admin/edit/${p.id}`}>\n//         <i\n//           className=\"fa fa-edit\"\n//           style={{ fontSize: 18, cursor: \"pointer\", marginLeft:\"8px\" }}\n//         ></i>\n//       </Link>\n//     </td>\n//     <td\n//     onClick={() => del(p.id)}>\n// <i className=\"fa fa-trash\" style={{ fontSize: 22, cursor: \"pointer\" ,marginLeft:\"8px\" }}>\n// </i>\n//     </td>\n//   </tr>\n// ))}\n//           </table>\n//         </div>\n//       </div>\n\n// cellRenderer:  (params)=> {\n//   return <Link to={`/?info=${params.data.Id}`}>\"+{params.value}+\"</Link>,\n\n// const [gridApi, setGridApi] = useState(null);\n// const [gridColumnApi, setGridColumnApi] = useState(null);\n","/var/www/html/Mazars_Pannel/src/pages/Admin/FeedbackTab/FeedbackTab.js",["1176","1177","1178"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport FeedbackService from \"../../../config/services/QueryDetails\";\nimport CommonServices from \"../../../common/common\";\nimport { useAlert } from \"react-alert\";\n\n\nfunction FeedbackTab() {\n  const alert = useAlert();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const [feedbackData, setFeedBackData] = useState([]);\n\n  useEffect(() => {\n    getFeedback();\n  }, []);\n\n  const getFeedback = () => {\n    FeedbackService.getAll()\n      .then((response) => {\n        setFeedBackData(response.data.result);\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"10px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"60px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <div style={{ display: \"flex\" }}>\n              <p>{CommonServices.removeTime(row.created)}</p>\n              <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(row.created)}</p>\n            </div>\n          </>\n        );\n      },\n    },\n\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"40px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return <>{row.assign_no}</>;\n      },\n    },\n    {\n      text: \"Feedback\",\n      dataField: \"feedback\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"150px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <div>\n              {\n                row.admin_read == \"0\" ?\n                  <div\n                    style={{\n                      cursor: \"pointer\",\n                      display: \"flex\", justifyContent: \"space-between\"\n                    }}\n                    onClick={() => readNotification(row.id)}\n                    title=\"unread\"\n                  >\n                    <p>{row.feedback}  - By {row.name}</p>\n                    <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\n                  </div>\n                  :\n                  <div\n                    style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}\n                    title=\"read\"\n                  >\n                    <p>{row.feedback}  - By {row.name}</p>\n                    <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\n                  </div>\n              }\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n  // readnotification\n  const readNotification = (id) => {\n\n    console.log(\"call\", id)\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"type\", \"admin\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/markReadFeedback`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response)\n        if (response.data.code === 1) {\n          getFeedback()\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n      <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"7\">\n                <CardTitle tag=\"h4\">Feedback</CardTitle>\n              </Col>\n              <Col md=\"5\"></Col>\n            </Row>\n          </CardHeader>\n          <CardBody>\n            <BootstrapTable\n              bootstrap4\n              keyField=\"id\"\n              data={feedbackData}\n              columns={columns}\n              rowIndex\n            />\n          </CardBody>\n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default FeedbackTab;\n\n\n\n// const getFeedback = () => {\n//   axios.get(`${baseUrl}/customers/getFeedback`).then((res) => {\n//     console.log(res);\n//     if (res.data.code === 1) {\n//       setFeedBackData(res.data.result);\n//     }\n//   });\n// };\n","/var/www/html/Mazars_Pannel/src/pages/TL/Dashboard/Dashboard.js",["1179","1180","1181","1182","1183","1184","1185","1186","1187","1188","1189","1190","1191","1192","1193","1194"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\n\nfunction Dashboard() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [allQueries, setAllQueries] = useState({\n    total: '',\n    inprogress_queries: '',\n    inprogress_allocation: '',\n    inprogress_proposal: '',\n    inprogress_assignment: '',\n    complete_query: '',\n    declined_queries: '',\n    admin_declined_query: '',\n    customer_declined_Query: '',\n    customer_declined_proposal: '',\n    Customer_declined_payment: '',\n\n    allproposal: '',\n    accepted_proposals: '',\n    InProgress: '',\n    inprogress_preparation: '',\n    inprogress_acceptance: '',\n    declined: '',\n  });\n\n\n  const [assignment, setAssignment] = useState({\n    inprogress: '',\n    complete: '',\n    client_discussion: '',\n    draft_report: '',\n    final_discussion: '',\n    final_report: '',\n    complete_inprocess: '',\n    customer_declined_payment: ''\n  });\n\n  const [payment, setPayment] = useState({\n    paid: '',\n    unpaid: '',\n  });\n\n  const { total, inprogress_queries,\n    inprogress_allocation, inprogress_proposal,\n    inprogress_assignment, complete_query,\n    declined_queries, admin_declined_query,\n    customer_declined_Query, customer_declined_proposal,\n    Customer_declined_payment,\n    allproposal,\n    inprogress_preparation,\n    declined, inprogress_acceptance,\n    accepted_proposals, InProgress } = allQueries;\n\n\n  const {\n    inprogress,\n    complete, client_discussion, draft_report, final_discussion,\n    final_report, complete_inprocess,\n    customer_declined_payment } = assignment;\n\n  const {\n    paid,\n    unpaid } = payment;\n\n\n  useEffect(() => {\n\n    const getAllQueries = () => {\n      axios\n        .get(`${baseUrl}/admin/totalComplete?tl_id=${JSON.parse(userid)}`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setAllQueries({\n              total: response.data.result.total,\n              inprogress_queries: response.data.result.inprogress_queries,\n              inprogress_allocation: response.data.result.inprogress_allocation,\n              inprogress_proposal: response.data.result.inprogress_proposal,\n              inprogress_assignment: response.data.result.inprogress_assignment,\n              complete_query: response.data.result.complete_query,\n              declined_queries: response.data.result.declined_queries,\n              admin_declined_query: response.data.result.admin_declined_query,\n              customer_declined_Query: response.data.result.customer_declined_Query,\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\n\n              allproposal: response.data.result.proposal.allproposal,\n              InProgress: response.data.result.proposal.InProgress,\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\n            })\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getAssignment = () => {\n      axios\n        .get(`${baseUrl}/admin/getAssignmentsCount?tl_id=${JSON.parse(userid)}`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setAssignment({\n              inprogress: response.data.result.inprogress,\n              complete: response.data.result.complete,\n              client_discussion: response.data.result.client_discussion,\n              draft_report: response.data.result.draft_report,\n              final_discussion: response.data.result.final_discussion,\n              final_report: response.data.result.final_report,\n              complete_inprocess: response.data.result.complete_inprocess,\n              customer_declined_payment: response.data.result.customer_declined_payment,\n            })\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getPayment = () => {\n      axios\n        .get(`${baseUrl}/admin/getAssignmentsPaymentCount?tl_id=${JSON.parse(userid)}`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setPayment({\n              paid: response.data.result.paid,\n              unpaid: response.data.result.unpaid,\n            })\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    getAllQueries();\n    getPayment();\n    getAssignment();\n  }, []);\n\n\n\n  var todaysDate = new Date();\n  console.log(todaysDate);\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n\n\n      <div class=\"card ecom-card-1\" style={{ background: \"#c74e07\" }}>\n        <div class=\"card-header\">\n          <p class=\"mb-0\">\n            <button class=\"btn btn-link text-white\"\n              style={{ textDecoration: \"none\", fontSize: \"18px\", fontWeight: \"bold\" }}\n            >\n              All Queries :  {total}\n            </button>\n          </p>\n        </div>\n\n        <div class=\"card-body\" style={{ background: \"#c36d56\", fontFamily: \"monospace\" }}>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\" style={{ width: \"400px\" }}>Inprogress Queries</th>\n                <th scope=\"col\">{inprogress_queries}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\" style={{ width: \"400px\" }}>Completed Queries</th>\n                <th scope=\"col\">{complete_query}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\" style={{ width: \"400px\" }}>Declined Queries</th>\n                <th scope=\"col\">{declined_queries}</th>\n              </tr>\n            </thead>\n          </table>\n        </div>\n      </div>\n\n\n      <div class=\"card ecom-card-1 bg-info\">\n        <div class=\"card-header\">\n          <p class=\"mb-0\">\n            <button class=\"btn btn-link text-white\"\n              style={{ textDecoration: \"none\", fontSize: \"18px\", fontWeight: \"bold\" }}\n            >\n              Proposals :  {allproposal}\n            </button>\n          </p>\n        </div>\n\n        <div class=\"card-body\" style={{ background: \"#5dabb9\", fontFamily: \"monospace\" }}>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\" style={{ width: \"400px\" }}>Inprogress</th>\n                <th scope=\"col\">{InProgress}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\" style={{ width: \"400px\" }}>Accepted Proposal </th>\n                <th scope=\"col\">{accepted_proposals}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\" style={{ width: \"400px\" }}>Customer Declined Proposal</th>\n                <th scope=\"col\">{declined}</th>\n              </tr>\n            </thead>\n            <tbody>\n\n            </tbody>\n          </table>\n        </div>\n\n      </div>\n\n\n      <div class=\"card ecom-card-1\" style={{ background: \"#2ea226\" }}>\n        <div class=\"card-header\">\n          <p class=\"mb-0\">\n            <button class=\"btn btn-link text-white\"\n              style={{ textDecoration: \"none\", fontSize: \"18px\", fontWeight: \"bold\" }}\n            >\n              Assignments :  {inprogress + complete + +(customer_declined_payment)}\n            </button>\n          </p>\n        </div>\n\n        <div class=\"card-body\" style={{ background: \"#288836\", fontFamily: \"monospace\" }}>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\" style={{ width: \"400px\" }}>Inprogress</th>\n                <th scope=\"col\">{inprogress}</th>\n              </tr>\n            </thead>         \n          </table>\n\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\" style={{ width: \"400px\" }}>Completed</th>\n                <th scope=\"col\">{complete}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\" style={{ width: \"400px\" }}>Customer Declined Payment</th>\n                <th scope=\"col\">{customer_declined_payment}</th>\n              </tr>\n            </thead>\n            <tbody>\n\n            </tbody>\n          </table>\n        </div>\n\n      </div>\n\n\n\n      <div class=\"card ecom-card-1\" style={{ background: \"#ffc107\" }}>\n        <div class=\"card-header\">\n          <p class=\"mb-0\">\n            <button class=\"btn btn-link text-white\"\n              style={{ textDecoration: \"none\", fontSize: \"18px\", fontWeight: \"bold\" }}\n            >\n              Payments :  {unpaid + paid}\n            </button>\n          </p>\n        </div>\n\n        <div class=\"card-body\" style={{ background: \"#a98a0aba\", fontFamily: \"monospace\" }}>\n\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\" style={{ width: \"400px\" }}>Paid</th>\n                <th scope=\"col\">{paid}</th>\n              </tr>\n            </thead>\n          </table>\n\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\" style={{ width: \"400px\" }}>Unpaid</th>\n                <th scope=\"col\">{unpaid}</th>\n              </tr>\n            </thead>\n            <tbody>\n\n            </tbody>\n          </table>\n        </div>\n\n      </div>\n\n\n    </Layout>\n  );\n}\n\nexport default Dashboard;\n\n// var todaysDate = new Date();\n//   console.log(todaysDate);\n// function convertDate(date) {\n//   var yyyy = date.getFullYear().toString();\n//   var mm = (date.getMonth() + 1).toString();\n//   var dd = date.getDate().toString();\n\n//   var mmChars = mm.split(\"\");\n//   var ddChars = dd.split(\"\");\n\n//   return (\n//     yyyy +\n//     \"-\" +\n//     (mmChars[1] ? mm : \"0\" + mmChars[0]) +\n//     \"-\" +\n//     (ddChars[1] ? dd : \"0\" + ddChars[0])\n//   );\n// }\n\n// console.log(convertDate(todaysDate));\n","/var/www/html/Mazars_Pannel/src/pages/TL/Login/Login.js",["1195","1196","1197"],"import React, { useState } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  password: yup\n    .string()\n    .required(\"required password\")\n    .min(5, \"at least 5 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\nfunction Login(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [email, setEmail] = useState(null);\n\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"type\", \"tl\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/login`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          Alerts.SuccessLogin()\n          localStorage.setItem(\n            \"tlkey\",\n            JSON.stringify(response.data[\"user id\"])\n          );\n          props.history.push(\"/teamleader/dashboard\");\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          Alerts.ErrorLogin()\n\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const handleChange = (e) => {\n    console.log(\"val-\", e.target.value);\n    setEmail(e.target.value);\n  };\n  return (\n    <>\n      <Header mtl=\"mtl\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>MTL Login</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email</label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    name=\"password\"\n                    placeholder=\"Enter Password\"\n                    ref={register}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n            <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n              <Link\n                to={{\n                  pathname: \"/teamleader/forget-password\",\n                  email: `${email}`,\n                }}\n              >\n                Forgot Password\n              </Link>\n            </div>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Login;\n","/var/www/html/Mazars_Pannel/src/pages/TL/AddTeamProf/AddTeamProf.js",["1198","1199","1200","1201"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nfunction AddTeamProf() {\n  const alert = useAlert();\n  const [data, setData] = useState([]);\n  const [count, setCount] = useState(\"\");\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  useEffect(() => {\n    getTaxProf();\n  }, []);\n\n  const getTaxProf = () => {\n    axios\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setData(res.data.result);\n          setCount(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Email\",\n      dataField: \"email\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Phone\",\n      dataField: \"phone\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n  ];\n  // delete data\n  const del = (id) => {\n    console.log(\"del\", id);\n\n    axios\n      .get(`${baseUrl}/delete/TaxLead/${id}`)\n      .then(function (response) {\n        console.log(\"delete-\", response);\n        alert.success(\"successfully deleted \");\n        getTaxProf();\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"10\">\n              <CardTitle tag=\"h4\">Tax Professionals ({count})</CardTitle>\n            </Col>\n            <Col md=\"2\"></Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={data}\n            columns={columns}\n            rowIndex\n          />\n\n          {/* <Table responsive=\"sm\" bordered>\n            <thead>\n              <tr>\n                <th scope=\"col\">S.No</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Phone No.</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((p, i) => (\n                <tr>\n                  <th scope=\"row\">{i + 1}</th>\n                  <td>{p.name}</td>\n                  <td>{p.email}</td>\n                  <td>{p.phone}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table> */}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddTeamProf;\n","/var/www/html/Mazars_Pannel/src/pages/TL/AddAssingmentStages/AddAssingmentStages.js",["1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\n\nfunction AddAssingmentStages() {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, reset } = useForm();\n  const [assignmentStages, setAssignmentstages] = useState([]);\n  const [clientDiscussion, setClientDiscussion] = useState(null);\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}`)\n      .then((res) => {\n        console.log(res);\n        console.log(\"dt -\",res.data.result[0].client_discussion);\n\n        if (res.data.code === 1) {\n          setAssignmentstages(res.data.result);\n          reset(res.data.result[0]);\n          setClientDiscussion(res.data.result[0].client_discussion)\n        }\n      });\n  };\n\n  const onSubmit = (value) => {\n    console.log(value);\n\n    let formData = new FormData();\n\n    // formData.append(\"user\", JSON.parse(userid));\n    formData.append(\"q_id\", id);\n    formData.append(\"user_id\", JSON.parse(userid));\n    formData.append(\"stage_1_status\", value.client_discussion);\n    formData.append(\"stage_2_status\", value.draft_report);\n    formData.append(\"stage_3_status\", value.final_discussion);\n    formData.append(\"stage_4_status\", value.delivery_report);\n    formData.append(\"stage_5_status\", value.other_stage);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/postAssignmentStages`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(<Msg />);\n          getAssignmentList();\n          history.push(\"/teamleader/assignment\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  //alert msg\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"10px\" }}>Assignment successfully added </p>\n      </>\n    );\n  };\n\n  console.log(\"clientDiscussion\", clientDiscussion);\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Assignment Stages</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <div class=\"row mt-3\">\n            {assignmentStages.map((p, i) => (\n              <>\n                {p.client_discussion == \"completed\" &&\n                p.delivery_report == \"completed\" &&\n                p.draft_report == \"completed\" &&\n                p.final_discussion == \"completed\" &&\n                p.other_stage == \"completed\" ? (\n                  <div class=\"col-md-12\">\n                    <div class=\"col-md-8\">\n                      <br />\n                      <form onSubmit={handleSubmit(onSubmit)}>\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Client Discussion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.client_discussion}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Draft Report\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.draft_report}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Final Discussion\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.final_discussion}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Delivery of report\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.delivery_report}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"row\">\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <label\n                                style={{\n                                  fontSize: \"20px\",\n                                  fontWeight: \"500\",\n                                  paddingTop: \"30px\",\n                                }}\n                              >\n                                Complete\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                              <select\n                                class=\"form-control\"\n                                ref={register}\n                                disabled\n                              >\n                                <option>{p.other_stage}</option>\n                              </select>\n                            </div>\n                          </div>\n                        </div>\n\n                        <br />\n                        <div class=\"form-group\">\n                          <button\n                            type=\"submit\"\n                            class=\"btn btn-primary\"\n                            disabled\n                          >\n                            Submit\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                ) : (\n                  <div class=\"col-md-12\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Client Discussion\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"client_discussion\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                              <option value=\"notApplicable\">\n                                Not Applicable\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                        {/* {p.client_discussion == \"completed\" ? null : ( */}\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div>\n                              <Link\n                                to={{\n                                  pathname: `/teamleader/assignment-form/${p.assign_id}`,\n                                  clients:`${clientDiscussion}`,\n                                }}\n                              >\n                                View Details\n                              </Link>\n                              {/* <Link\n                                  to={`/teamleader/assignment-form/${p.assign_id}`}\n                                >\n                                  View Details\n                                </Link> */}\n                            </div>\n                          </div>\n                        </div>\n                        {/* )} */}\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Draft Report\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"draft_report\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                              <option value=\"notApplicable\">\n                                Not Applicable\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div>\n                              <Link\n                                to={`/teamleader/view-report/${p.assign_no}`}\n                              >\n                                View Report\n                              </Link>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Final Discussion\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"final_discussion\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                              <option value=\"notApplicable\">\n                                Not Applicable\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Delivery of report\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"delivery_report\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                              <option value=\"notApplicable\">\n                                Not Applicable\n                              </option>\n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <label\n                              style={{\n                                fontSize: \"20px\",\n                                fontWeight: \"500\",\n                                paddingTop: \"30px\",\n                              }}\n                            >\n                              Complete\n                            </label>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <select\n                              class=\"form-control\"\n                              ref={register}\n                              name=\"other_stage\"\n                            >\n                              <option value=\"inprogress\">Inprogress</option>\n                              <option value=\"completed\">Completed</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                          <div class=\"form-group\">\n                            <div></div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <br />\n                      <div class=\"form-group\">\n                        <button type=\"submit\" class=\"btn btn-primary\">\n                          Submit\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                )}\n              </>\n            ))}\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AddAssingmentStages;\n","/var/www/html/Mazars_Pannel/src/pages/TL/QueryAssingment/QueryAssingment.js",["1213","1214","1215","1216","1217","1218","1219","1220","1221","1222","1223"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\n\nfunction QueryAssingment() {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const { id } = useParams();\n  const history = useHistory();\n\n  const [taxProfessionDisplay, setTaxProfessionDisplay] = useState([]);\n  const [taxID, setTaxID] = useState(null);\n  const [teamName, setTeamName] = useState('');\n\n  const [hideQuery, setHideQuery] = useState({\n    name: \"\",\n    timeline: \"\",\n    date_allocation: \"\",\n    expdeliverydate: \"\",\n  });\n\n  const [query, setQuery] = useState(true);\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const tpkey = window.localStorage.getItem(\"tpkey\");\n\n  const [queryData, setQuerData] = useState({\n    queryNo: \"\",\n    timelines: \"\",\n    custId: \"\",\n    expect_dd: \"\",\n  });\n\n  const { queryNo, timelines, custId, expect_dd } = queryData;\n\n  useEffect(() => {\n    getTaxProfession();\n    getQueryData();\n  }, []);\n\n  const getTaxProfession = () => {\n    axios\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${JSON.parse(userId)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTaxProfessionDisplay(res.data.result);\n        }\n      });\n  };\n\n  const getQueryData = () => {\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setQuerData({\n          queryNo: res.data.result[0].assign_no,\n          timelines: res.data.result[0].Timelines,\n          custId: res.data.result[0].customer_id,\n          expect_dd: res.data.result[0].Exp_Delivery_Date,\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getQuery();\n  }, [queryNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/TlCheckIfAssigned?assignno=${queryNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setQuery(false);\n          // setHideQuery(res.data.meta);\n          setHideQuery({\n            name: res.data.meta[0].name,\n            timeline: res.data.meta[0].timeline,\n            date_allocation: res.data.meta[0].date_allocation,\n            expdeliverydate: res.data.meta[0].expdeliverydate,\n          });\n        }\n      });\n  };\n\n  const handleChange = (e) => {\n    console.log(\"val-\", e.target.value);\n    setTaxID(e.target.value)\n    var value = taxProfessionDisplay.filter(function (item) {\n      return item.id == e.target.value\n    })\n    console.log(value[0]);\n    setTeamName(value[0].name)\n  }\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    var expdeliverydate = value.p_expdeldate.replace(\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\n      \"$3-$1-$2\"\n    );\n\n    let formData = new FormData();\n    formData.append(\"who\", taxID);\n    formData.append(\"id\", id);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"type\", \"tl\");\n    formData.append(\"types\", \"tp\");\n    formData.append(\"name\", teamName);\n    formData.append(\"timeline\", value.p_timelines);\n    formData.append(\"expdeliverydate\", expdeliverydate);\n    formData.append(\"assignNo\", queryNo);\n    formData.append(\"customer_id\", custId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AddQueryAssignment`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          var variable = \"Query Assigned Successfully\"\n          Alerts.SuccessNormal(variable)\n          getQuery();\n          reset();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\">\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <Link\n                to={{\n                  pathname: `/teamleader/queriestab`,\n                  index: 1,\n                }}\n              >\n                <button\n                  class=\"btn btn-success ml-3\"\n                >\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\n                  Go Back\n                </button>\n              </Link>\n            </Col>\n            <Col md=\"4\">\n              <div style={{ textAlign: \"center\" }}>\n                <h2>Query Allocation</h2>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <div class=\"row mt-3\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12\">\n              <div class=\"col-md-12\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <table class=\"table\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Query No.</th>\n                        <th scope=\"col\">Tax Professional</th>\n                        <th scope=\"col\">Expected Timeline</th>\n                        <th scope=\"col\">Exp. Delivery Date</th>\n                        <th scope=\"col\">Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {query ? (\n                        <tr>\n                          <th scope=\"row\">{queryNo}</th>\n                          <td>\n                            <select\n                              class=\"form-control\"\n                              name=\"p_taxprof\"\n                              ref={register}\n                              onChange={(e) => handleChange(e)}\n                            >\n                              <option value=\"\">--select--</option>\n                              {taxProfessionDisplay.map((p, index) => (\n                                <option key={index} value={p.id}>\n                                  {p.name}\n                                </option>\n                              ))}\n                            </select>\n                          </td>\n\n                          <td>\n                            <input\n                              type=\"text\"\n                              ref={register}\n                              name=\"p_timelines\"\n                              value={timelines}\n                              class=\"form-control\"\n                            />\n                          </td>\n                          <td>\n                            <input\n                              type=\"text\"\n                              ref={register}\n                              name=\"p_expdeldate\"\n                              class=\"form-control\"\n                              value={expect_dd}\n                            />\n                          </td>\n\n                          <td>\n                            <button type=\"submit\" class=\"btn btn-success\">\n                              Assign\n                            </button>\n                          </td>\n                        </tr>\n                      ) : (\n                        <tr>\n                          <th scope=\"row\">{queryNo}</th>\n                          <td>\n                            <select class=\"form-control w-75 p-0\" disabled>\n                              <option>{hideQuery.name}</option>\n                            </select>\n                          </td>\n\n                          <td>\n                            <input\n                              type=\"text\"\n                              ref={register}\n                              name=\"p_timelines\"\n                              value={hideQuery.timeline}\n                              disabled\n                              class=\"form-control\"\n                            />\n                          </td>\n                          <td>\n                            <input\n                              type=\"date\"\n                              ref={register}\n                              name=\"p_expdeldate\"\n                              value={hideQuery.expdeliverydate}\n                              disabled\n                              class=\"form-control\"\n                            />\n                          </td>\n\n                          <td>\n                            <button class=\"btn btn-success\" disabled>\n                              Assigned\n                            </button>\n                          </td>\n                        </tr>\n                      )}\n                    </tbody>\n                  </table>\n                </form>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default QueryAssingment;\n\n// var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n","/var/www/html/Mazars_Pannel/src/pages/TL/AddNew/AddNew.js",["1224","1225","1226"],"import React from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import './index.css'\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\"; \nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\n\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required name\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_phone: yup\n//   .string()\n//   .required(\"required phone no\")\n//   .matches(/^[0-9]+$/, \"Must be only digits\")\n//   .min(10, \"Must be exactly 10 digits\")\n//   .max(20, \"max 20 digits\"),\n// });\n\n\n\nfunction AddNew() {\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"type\", \"tp\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/AddTaxProfessional`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);     \n        if (response.data.code === 1) {\n          alert.success(\"TP created  !\");\n          reset();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n\n  };\n\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"text-center\">\n            <h3>Add New Tax Professionals</h3>\n          </div>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\n          <div>\n          <form onSubmit={handleSubmit(onSubmit)}>   \n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Name</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_name\"\n                      ref={register}\n                    />\n                   \n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Email</label>\n                    <input\n                      type=\"email\"\n                      class=\"form-control\"\n                      name=\"p_email\"\n                    ref={register}\n                    />\n                    \n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Phone Number</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_phone\"\n                      ref={register}\n                    />\n                    \n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default AddNew;\n","/var/www/html/Mazars_Pannel/src/pages/TL/Proposal/Proposal.js",["1227","1228","1229","1230","1231","1232"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport ChatHistory from \"./ChatHistory\";\n\nfunction Proposal() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [records, setRecords] = useState([]);\n  const [proposal, setProposal] = useState([]);\n  const [count, setCount] = useState(\"\");\n  const [id, setId] = useState(null);\n\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  const chatHandler = (key) => {\n    console.log(key);\n    setPaymentModal(!addPaymentModal);\n    setId(key.assign_no);\n  };\n\n  useEffect(() => {\n    getProposalList();\n  }, []);\n\n  const getProposalList = () => {\n    axios\n      .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setProposal(res.data.result);\n          setCount(res.data.result.length);\n          setRecords(res.data.result.length);\n\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      dataField: \"query_date\",\n      text: \"Date\",\n      sort: true,\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.query_date);\n        var oldDate = row.query_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.id}`,\n                routes: \"proposal\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <div>\n                {row.status == \"Pending for approval\" || row.status == \"Declined\" ? (\n                  <Link to={`/teamleader/edit-proposal/${row.id}`}>\n                    <i\n                      className=\"fa fa-edit\"\n                      style={{\n                        fontSize: \"16px\",\n                        cursor: \"pointer\",\n                        color: \"green\",\n                      }}\n                    ></i>\n                  </Link>\n                ) : row.status == \"Pending for Preparation\" ? (\n                  <Link to={`/teamleader/sendproposal/${row.id}`}>\n                    <i\n                      class=\"fa fa-mail-forward\"\n                      style={{\n                        fontSize: \"14px\",\n                        cursor: \"pointer\",\n                      }}\n                    ></i>\n                  </Link>\n                ) : null}\n              </div>\n\n              <div>\n                {row.revised_text && (\n                  <div style={{ cursor: \"pointer\" }} title=\"View History\">\n                    <i\n                      class=\"fa fa-comments-o\"\n                      style={{ color: \"green\", fontSize: \"16px\", color: \"light-blue\", }}\n                      onClick={() => chatHandler(row)}\n                    ></i>\n                  </div>\n                )}\n              </div>\n\n              <div title=\"Send Message\">\n                <Link\n                  to={{\n                    pathname: `/teamleader/chatting/${row.id}`,\n                    obj: {\n                      message_type: \"2\",\n                      query_No: row.assign_no,\n                      query_id: row.id,\n                      routes: `/teamleader/proposal`\n                    }\n                  }}\n                >\n                  <i\n                    class=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"9\">\n              <CardTitle tag=\"h4\">List of Proposals ({count})</CardTitle>\n            </Col>\n            <Col md=\"3\"></Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <TeamFilter\n            setData={setProposal}\n            getData={getProposalList}\n            proposal=\"proposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={proposal}\n            columns={columns}\n            rowIndex\n          />\n\n          <ChatHistory\n            chatHandler={chatHandler}\n            addPaymentModal={addPaymentModal}\n            qno={id}\n          // getProposalData={getProposalList}\n          />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Proposal;\n{\n  /* {myFunction(row.revised_text)} */\n}\n// const myFunction = (str) => {\n//   var str2 = \"...\";\n//   var res = str.slice(0, 5).concat(str2);\n//   return res;\n// };\n","/var/www/html/Mazars_Pannel/src/pages/TL/EditTP/EditTP.js",["1233","1234"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useParams } from \"react-router-dom\";\n\n\nfunction EditTP() {\n  const { id } = useParams();\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset } = useForm();\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n  });\n  const { name, email, phone } = user;\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tp/getTaxProfessional?id=${id}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setUser({\n            name: res.data.result[0].name,\n            email: res.data.result[0].email,\n            phone: res.data.result[0].phone,\n          });\n        }\n      });\n    };\n    getTeamLeader();\n  }, [id]);\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"phone\", value.p_phone);\n    formData.append(\"id\", JSON.parse(userid));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/updateTP`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"TL updated  !\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"text-center\">\n            <h3>Edit Tax Professional</h3>\n          </div>\n        </div>\n        <br />\n        <br />\n        <br />\n        <br />\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Name</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_name\"\n                      defaultValue={name}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label>Email</label>\n                    <input\n                      type=\"email\"\n                      class=\"form-control\"\n                      name=\"p_email\"\n                      defaultValue={email}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <label>Phone Number</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      name=\"p_phone\"\n                      defaultValue={phone}\n                      ref={register}\n                    />\n                  </div>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default EditTP;\n","/var/www/html/Mazars_Pannel/src/pages/TL/QueriesRecevied/QueriesRecevied.js",["1235","1236"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\n\nfunction QueriesRecevied(props) {\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n  const [feedback, setFeedback] = useState([]);\n  const [reports, setReports] = useState([]);\n\n\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tlname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/getQueryDetails?id=${id}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n\n          if (res.data.result) {\n            if (res.data.result[0].name == null) {\n              console.log(\"null\")\n            }\n            else {\n              setSubmitData(res.data.result);\n            }\n          }\n\n          if (res.data.additional_queries) {\n            setDisplaySpecific(res.data.additional_queries);\n          }\n          if (res.data.payment_detail) {\n            setPaymentDetails(res.data.payment_detail);\n          }\n          if (res.data.feedback_detail) {\n            setFeedback(res.data.feedback_detail);\n          }\n          if (res.data.result[0].assign_no) {\n            setAssingmentNo(res.data.result[0].assign_no);\n          }\n\n          if (res.data.reports) {\n            setReports(res.data.reports);\n          }\n\n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n\n          console.log(\"purposeItem-\", typeof purposeItem);\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            var myYear = JSON.parse(assementItem);\n            setPurpose(myPurpose);\n            setYear(myYear);\n          } catch (e) {\n            return false;\n          }\n\n          if (res.data.proposal_queries.length > 0) {\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              description: res.data.proposal_queries[0].description,\n\n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n            });\n          }\n\n          if (res.data.assignment.length > 0) {\n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n          if (res.data.history_queries.length > 0) {\n            setDisplayHistory({\n              tlname: res.data.history_queries[0].tname,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n          }\n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n        }\n      });\n    };\n    getQuery();\n    getSubmittedAssingment();\n  }, [assingNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setDisplayQuery(res.data.result);\n        }\n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"schedule\">\n            <h3>Query Detail</h3>\n          </div>\n        </div>\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          <div class=\"card\">\n            <div\n              class=\"card-header\"\n              id=\"headingOne\"\n              style={{ padding: \".5rem .1rem\" }}\n            >\n              <h2 class=\"mb-0 query ml-3\">\n                <Link\n                  to={{\n                    pathname: `/teamleader/${props.location.routes}`,\n                    index: props.location.index,\n                  }}\n                >\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\n                </Link>\n              </h2>\n            </div>\n            {submitData.map((p, index) => (\n              <QueryDetails\n                p={p}\n                key={index}\n                diaplaySpecific={diaplaySpecific}\n                diaplayProposal={diaplayProposal}\n                diaplayHistory={diaplayHistory}\n                diaplayAssignment={diaplayAssignment}\n                displayQuery={displayQuery}\n                getQuery={getQuery}\n                assingNo={assingNo}\n                queryDocs={queryDocs}\n                paymentDetails={paymentDetails}\n                purpose={purpose}\n                year={year}\n                feedback={feedback}\n                reports={reports}\n\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n\n\n// useEffect(() => {\n//   const getQueryDetails = () => {\n//     axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n//       console.log(res);\n//       if (res.data.code === 1) {\n//         setSubmitData(res.data.result);\n//         setDisplaySpecific(res.data.additional_queries);\n//         setAssingmentNo(res.data.result[0].assign_no);\n//       }\n//     });\n//   };\n\n//   getQueryDetails();\n//   getAdditionalQuery();\n// }, [assingNo]);\n\n//   <Card>\n//   <CardHeader>\n//     <Row>\n//       <Col md=\"4\">\n//         <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n//           <i class=\"fas fa-arrow-left mr-2\"></i>\n//           Go Back\n//         </button>\n//       </Col>\n//       <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n//         <p style={{ fontSize: \"20px\" }}>Query Details</p>\n//       </Col>\n//       <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n//       </Col>\n//     </Row>\n//   </CardHeader>\n//   <CardBody>\n//     {submitData.map((p, i) => (\n//       <div class=\"card-body\">\n//         <table class=\"table table-bordered\">\n//           <thead>\n//             <tr>\n//               <th scope=\"col\">Titles</th>\n//               <th scope=\"col\">Data</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//           <tr>\n//               <th scope=\"row\">Query No</th>\n//               <td>{p.assign_no}</td>\n//             </tr>\n//           <tr>\n//               <th scope=\"row\">Query Status</th>\n//               <td>{p.status}</td>\n//             </tr>\n//             <tr>\n//               <th scope=\"row\">Facts of the case</th>\n//               <td>{p.fact_case}</td>\n//             </tr>\n\n//             <tr>\n//               <th scope=\"row\">Purpose for which Opinion is sought</th>\n//               <td colspan=\"1\">{p.purpose_opinion}</td>\n//             </tr>\n//             <tr>\n//               <th scope=\"row\">\n//                 Timelines within which Opinion is Required\n//               </th>\n//               <td colspan=\"1\">{p.Timelines}</td>\n//             </tr>\n//             <tr>\n//               <th scope=\"row\">specific questions</th>\n//               <td colspan=\"1\">\n//                 {diaplaySpecific.map((p, i) => (\n//                   <p>{p.text}</p>\n//                 ))}\n//               </td>\n//             </tr>\n\n//             <tr>\n//               <th scope=\"row\">Documents</th>\n//               <td>\n//                 {p.upload_doc_1 == null ? (\n//                   \"\"\n//                 ) : (\n//                   <p>\n//                     <a\n//                       href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\n//                     >\n//                       <i class=\"fa fa-photo\"></i>\n//                     </a>\n//                   </p>\n//                 )}\n\n//                 {p.upload_doc_2 == null ? (\n//                   \"\"\n//                 ) : (\n//                   <p>\n//                     <a\n//                       href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\n//                     >\n//                       <i class=\"fa fa-photo\"></i>\n//                     </a>\n//                   </p>\n//                 )}\n\n//                 {p.upload_doc_3 == null ? (\n//                   \"\"\n//                 ) : (\n//                   <p>\n//                     <a\n//                       href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\n//                     >\n//                       <i class=\"fa fa-photo\"></i>\n//                     </a>\n//                   </p>\n//                 )}\n//               </td>\n//             </tr>\n//             <tr>\n//               <th scope=\"row\">Format in which Opinion is required</th>\n//               <td colspan=\"1\">\n//                 <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n//                 <p>\n//                   {p.softcopy_digitally_assigned === \"1\" &&\n//                     \"SoftCopy- Digitally Signed\"}\n//                 </p>\n\n//                 <p>\n//                   {p.printout_physically_assigned === \"1\" &&\n//                     \"Printout- Physically Signed\"}\n//                 </p>\n//               </td>\n//             </tr>\n\n//           </tbody>\n//         </table>\n\n//         <table class=\"table table-bordered\">\n//           {displayQuery.length > 0 && (\n//             <thead>\n//               <tr>\n//                 <th scope=\"col\" style={{ width: \"33.3%\" }}>\n//                   Additional Queries\n//                 </th>\n//                 <th scope=\"col\">Date Submission</th>\n//                 <th scope=\"col\">Documents</th>\n//               </tr>\n//             </thead>\n//           )}\n\n//           {displayQuery.map((p, i) => (\n//             <tbody>\n//               <tr key={i}>\n//                 <td>{p.additional_queries}</td>\n//                 <td>{ChangeFormateDate(p.created)}</td>\n//                 <td>\n//                     {p.upload_doc == \"\" ? (\n//                       \"\"\n//                     ) : (\n//                       <p>\n//                         <a\n//                           href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc}`}\n//                         >\n//                           <i class=\"fa fa-photo\"></i>\n//                         </a>\n//                       </p>\n//                     )}\n//                   </td>\n//               </tr>\n//             </tbody>\n//           ))}\n//         </table>\n//       </div>\n//     ))}\n//   </CardBody>\n// </Card>\n","/var/www/html/Mazars_Pannel/src/components/Footer/Footer.js",[],"/var/www/html/Mazars_Pannel/src/components/Header/Header.js",[],"/var/www/html/Mazars_Pannel/src/config/config.js",[],"/var/www/html/Mazars_Pannel/src/components/Admin-Header/Admin-Header.js",["1237","1238"],"import React from \"react\";\nimport \"../../assets/css/style.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport NavWrapper from \"./NavWrapper\";\n\nfunction AdminHeader({ custUserId, adminUserId, TLuserId, TPuserId }) {\n  let history = useHistory();\n  // const userId = window.localStorage.getItem(\"userid\");\n\n  const custLogout = () => {\n    localStorage.removeItem(\"userid\");\n    localStorage.removeItem(\"name\");\n    localStorage.removeItem(\"uid\");\n    localStorage.removeItem(\"category\");\n    history.push(\"/customer/signin\");\n  };\n\n  const adminLogout = () => {\n    localStorage.removeItem(\"adminkey\");\n    localStorage.removeItem(\"count_PFA\");\n    history.push(\"/admin/login\");\n  };\n\n  const tlLogout = () => {\n    localStorage.removeItem(\"tlkey\");\n    history.push(\"/teamleader/login\");\n  };\n\n  const tpLogout = () => {\n    localStorage.removeItem(\"tpkey\");\n    history.push(\"/taxprofessional/login\");\n  };\n\n  const nm = window.localStorage.getItem(\"name\");\n  console.log(name);\n  var name = JSON.parse(nm);\n  // const nm = name.split(\"\")[1].toUpperCase();\n  // var a = res[1].toUpperCase()\n  // console.log(nm)\n\n  return (\n    <div>\n      <nav\n        class=\"header-navbar navbar-expand-md navbar navbar-with-menu navbar-without-dd-arrow fixed-top navbar-semi-light\"\n        sty\n      >\n        {custUserId && (\n          <NavWrapper color=\"#5E96AE\" logout={custLogout} \n          name=\"customer\"\n           />\n        )}\n\n        {adminUserId && (\n          <NavWrapper color=\"#262d47\" logout={adminLogout}\n           name=\"admin\"\n            />\n        )}\n\n        {TLuserId && <NavWrapper color=\"#BC85A3\" logout={tlLogout} \n        name=\"teamleader\" \n        />}\n\n        {TPuserId && <NavWrapper color=\"#9799BA\" logout={tpLogout} \n        name=\"taxprofessional\" \n        />}\n      </nav>\n    </div>\n  );\n}\n\nexport default AdminHeader;\n\n// {adminUserId && (\n//   <ul class=\"nav navbar-nav float-right\">\n//     <li class=\"dropdown dropdown-user nav-item\">\n//       <a\n//         class=\"dropdown-toggle nav-link dropdown-user-link\"\n//         href=\"#\"\n//         data-toggle=\"dropdown\"\n//         aria-expanded=\"false\"\n//       >\n//         <span class=\"pr-2\">Admin</span>\n//         <span class=\"avatar avatar-online\">\n//           <img\n//             src=\"https://cdn1.vectorstock.com/i/1000x1000/40/30/user-glyph-icon-web-and-mobile-admin-sign-vector-18444030.jpg\"\n//             alt=\"avatar\"\n//           />\n//           <i style={{ paddingLeft: \"6px\" }}></i>\n//         </span>\n//       </a>\n\n//       <div class=\"dropdown-menu dropdown-menu-right\">\n//         <div class=\"arrow_box_right\">\n//           <p\n//             class=\"dropdown-item\"\n//             onClick={custLogout}\n//             style={{ cursor: \"pointer\" }}\n//           >\n//             <i class=\"fa fa-sign-out\"></i>\n//             Logout\n//           </p>\n//         </div>\n//       </div>\n//     </li>\n//   </ul>\n// )}\n","/var/www/html/Mazars_Pannel/src/components/Admin-Sidebar/Admin-Sidebar.js",["1239","1240"],"import { NavLink } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { Badge } from \"reactstrap\";\n\nfunction Sidebar({ adminDashboard, custDashboard, TLDashboard, TPDashboard }) {\n  const [toggleState, setToggleState] = useState(false);\n\n  const toggleTab = (index) => {\n    console.log(index);\n    setToggleState(index);\n  };\n\n  return (\n    <>\n      <div\n        class=\"main-menu menu-fixed menu-light menu-accordion  menu-shadow \"\n        data-scroll-to-active=\"true\"\n        data-img=\"https://themeselection.com/demo/ chameleon-free-bootstrap-admin-template/theme-assets/images/backgrounds/02.jpg\"\n      >\n        <div class=\"navbar-header\">\n          <ul class=\"nav navbar-nav flex-row\">\n            <li class=\"nav-item mr-auto\">\n              <a class=\"navbar-brand\" href=\"questionnaire.html\">\n                <img\n                  class=\"brand-logo\"\n                  alt=\"Chameleon admin logo\"\n                  src=\"https://themeselection.com/demo/chameleon-free-bootstrap-admin-template/theme-assets/images/logo/logo.png\"\n                />\n                <h3 class=\"brand-text\">Mazars</h3>\n              </a>\n            </li>\n            <li class=\"nav-item d-md-none\">\n              <a class=\"nav-link close-navbar\">\n                <i class=\"fa fa-times\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"main-menu-content\">\n          {custDashboard && (\n            <ul\n              class=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li class=\"nav-item active\">\n                <NavLink to={\"/customer/dashboard\"}>\n                  <i class=\"fa fa-home\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class={toggleState && \"\"} onClick={() => toggleTab(\"active\")}>\n                <NavLink to={\"/customer/queries\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/proposal\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Proposal\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/paymentstatus\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Payment Status\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/assignment\"}>\n                  <i class=\"fa fa-file\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Assignments\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/schedule\"}>\n                  <i class=\"fa fa-rss-square\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Schedule\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/message\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Message\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/customer/feedback-data\"}>\n                  <i class=\"fa fa-rss-square\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Feedback\n                  </span>\n                </NavLink>\n              </li>\n\n            </ul>\n          )}\n\n          {adminDashboard && (\n            <ul\n              class=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li class=\"active nav-item\">\n                <NavLink to={\"/admin/dashboard\"}>\n                  <i class=\"fa fa-home\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/queriestab\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/proposal\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Proposals\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/paymentstatus\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Payment Status\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/assignment\"}>\n                  <i class=\"fa fa-file\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Assignments\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/schedule\"}>\n                  <i class=\"fa fa-rss-square\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Schedule\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/message\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Message\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/teamleaders\"}>\n                  <i class=\"fa fa-users\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Team Leaders\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/taxprofessionals\"}>\n                  <i class=\"fa fa-users\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Tax Professionals\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/admin/feedback\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Feedback\n                  </span>\n                </NavLink>\n              </li>\n            </ul>\n          )}\n\n          {TLDashboard && (\n            <ul\n              class=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li class=\"active nav-item\">\n                <NavLink to={\"/teamleader/dashboard\"}>\n                  <i class=\"fa fa-home\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/queriestab\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/proposal\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Proposal\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/paymentstatus\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Payment Status\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/assignment\"}>\n                  <i class=\"fa fa-file\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Assignments\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/schedule\"}>\n                  <i class=\"fa fa-rss-square\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    schedule\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/message\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Message\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/addteamprof\"}>\n                  <i class=\"fa fa-users\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    View T.P\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/feedback\"}>\n                  <i class=\"fa fa-file-text\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Feedback\n                  </span>\n                </NavLink>\n              </li>\n\n              {/* <li class=\"nav-item\">\n                <NavLink to={\"/teamleader/queriestab2\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Queries test\n                  </span>\n                </NavLink>\n              </li> */}\n            </ul>\n          )}\n\n          {TPDashboard && (\n            <ul\n              class=\"navigation navigation-main\"\n              id=\"main-menu-navigation\"\n              data-menu=\"menu-navigation\"\n            >\n              <li class=\"nav-item\">\n                <NavLink to={\"/taxprofessional/dashboard\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Dashboard\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/taxprofessional/queriestab\"}>\n                  <i class=\"fa fa-clone\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Queries\n                  </span>\n                </NavLink>\n              </li>\n\n              <li class=\"nav-item\">\n                <NavLink to={\"/taxprofessional/proposal\"}>\n                  <i class=\"fa fa-envelope\"></i>\n                  <span class=\"menu-title\" data-i18n=\"\">\n                    Proposal\n                  </span>\n                </NavLink>\n              </li>\n            </ul>\n          )}\n        </div>\n        <div class=\"navigation-background\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default Sidebar;\n","/var/www/html/Mazars_Pannel/src/components/CategorySelect/CategorySelect.js",["1241","1242"],"import React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/bootstrap.min.css\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport mazars from \"../../assets/images/mazars-logo.png\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\n\nfunction CategorySelect({ addfreshbtn, startbtn }) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => {\n    if (store2) {\n      localStorage.setItem(\"category\", JSON.stringify(store2));\n    }\n    setModal(!modal);\n  };\n\n  const toggle2 = () => {\n    if (store2) {\n      localStorage.setItem(\"category\", JSON.stringify(store2));\n    }\n  };\n\n  const [tax, setTax] = useState([]);\n  const [tax2, setTax2] = useState([]);\n\n  const [store, setStore] = useState(\"\");\n  const [store2, setStore2] = useState(null);\n\n  useEffect(() => {\n    const getCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax(res.data.result);\n        }\n      });\n    };\n\n    getCategory();\n  }, []);\n\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setTax2(res.data.result);\n        }\n      });\n    };\n    getSubCategory();\n  }, [store]);\n\n  \n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n  };\n\n  return (\n    <>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"15px\" }}\n      >\n        <div class=\"col-sm-3\" style={{ marginTop: \"38px\" }}>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-group\">\n              <label>Category</label>\n              <select\n                className=\"form-control\"\n                name=\"p_tax\"\n                ref={register}\n                onChange={(e) => setStore(e.target.value)}\n              >\n                <option value=\"\">--Select Category--</option>\n                {tax.map((p, index) => (\n                  <option key={index} value={p.id}>\n                    {p.details}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div class=\"form-group\">\n              <label>Sub Category</label>\n              <select\n                className=\"form-select form-control\"\n                name=\"p_tax2\"\n                ref={register}\n                onChange={(e) => setStore2(e.target.value)}\n              >\n                <option value=\"\">--Select Sub-Category--</option>\n                {tax2.map((p, index) => (\n                  <option key={index} value={p.id}>\n                    {p.details}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div class=\"form-group\">\n              {startbtn && (\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary  btn-block\"\n                  onClick={toggle}\n                >\n                  Submit\n                </button>\n              )}\n\n              {addfreshbtn && (\n                <Link\n                  to=\"/customer/addfresh\"\n                  type=\"submit\"\n                  class=\"btn btn-primary  btn-block\"\n                  onClick={toggle2}\n                >\n                  Submit\n                </Link>\n              )}\n            </div>\n          </form>\n\n          <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>\n              <img\n                src={mazars}\n                style={{ height: \"auto\", width: \"25%\" }}\n                alt=\"\"\n              />\n            </ModalHeader>\n\n            <ModalBody>\n              <div class=\"modal-body\">\n                <h4>Would you like to post a Query ?</h4>\n              </div>\n            </ModalBody>\n\n            <div class=\"modal-footer m-auto\">\n              <Link to=\"/customer/register-yourself\" class=\"btn btn-primary\">\n                Yes\n              </Link>\n              <Link to=\"/customer/signin\" class=\"btn btn-secondary\">\n                No\n              </Link>\n            </div>\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CategorySelect;\n","/var/www/html/Mazars_Pannel/src/pages/TL/CompleteData/CompleteData.js",["1243","1244","1245","1246","1247","1248","1249"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\n\nfunction CompleteData({ CountComplete }) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [completeData, setCompleteData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  useEffect(() => {\n    getCompleteAssingment();\n  }, []);\n\n  const getCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/getCompleteQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          // CountComplete(res.data.result.length);\n          setCompleteData(res.data.result);\n          setRecords(res.data.result.length);\n\n        }\n      });\n  };\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.query_date);\n        var updatedate = row.query_date.split(\" \")[0];\n        console.log(updatedate);\n        if (updatedate == null) {\n          return null;\n        }\n        return updatedate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.id}`,\n                index: 2,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.Exp_Delivery_Date);\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"160px\" };\n      },\n      formatter: function AssignmentStage(cell, row) {\n        console.log(\"status - \", row);\n        return (\n          <>\n            <div style={{ fontSize: \"9px\", fontWeight: \"bold\" }}>\n              <tr>\n                <td>Client Discussion</td>\n                <td>{row.client_discussion}</td>\n              </tr>\n              <tr>\n                <td>Draft report</td>\n                <td>{row.draft_report}</td>\n              </tr>\n              <tr>\n                <td>Final Discussion</td>\n                <td>{row.final_discussion}</td>\n              </tr>\n              <tr>\n                <td> Delivery of report</td>\n                <td>{row.delivery_report}</td>\n              </tr>\n              <tr>\n                <td>Complete</td>\n                <td>{row.other_stage}</td>\n              </tr>\n            </div>\n          </>\n        );\n      },\n    },\n\n  ];\n\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TeamFilter\n            setData={setCompleteData}\n            getData={getCompleteAssingment}\n            completeAssignment=\"completeAssignment\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={completeData}\n            columns={columns}\n            rowIndex\n          />\n\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default CompleteData;\n","/var/www/html/Mazars_Pannel/src/pages/TL/InCompleteData/InCompleteData.js",["1250","1251","1252","1253","1254","1255"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\n\nfunction InCompleteData({ CountIncomplete }) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [incompleteData, setInCompleteData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n\n\n  useEffect(() => {\n    getInCompleteAssingment();\n  }, []);\n\n  const getInCompleteAssingment = () => {\n    axios\n      .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setInCompleteData(res.data.result);\n          setRecords(res.data.result.length);\n          // CountIncomplete(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.query_date);\n        var oldDate = row.query_date.split(\" \")[0];\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.Exp_Delivery_Date);\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query Allocation\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n                color: \"green\",\n              }}\n            >\n              <Link to={`/teamleader/queryassing/${row.id}`}>\n                {row.tp_status == \"1\" ? (\n                  <div title=\"Assigned\">\n                    <i class=\"fa fa-share\" style={{ color: \"green\" }}></i>\n                  </div>\n                ) :\n                  row.status_code < \"4\" ?\n                    (\n                      <div title=\"Assign to\">\n                        <i class=\"fa fa-share\"></i>\n                      </div>\n                    )\n                    :\n                    \"\"\n                }\n              </Link>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TeamFilter\n            setData={setInCompleteData}\n            getData={getInCompleteAssingment}\n            inCompleteQuery=\"inCompleteQuery\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={incompleteData}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default InCompleteData;\n","/var/www/html/Mazars_Pannel/src/pages/TL/PendingForAcceptence/PendingForAcceptence.js",["1256","1257","1258"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n} from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport RejectedModal from \"./RejectedModal\";\n\n\nfunction PendingForAcceptence({ CountPendingForAcceptence, updateTab }) {\n  const alert = useAlert();\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [pendingData, setPendingData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [pay, setPay] = useState({\n    id: \"\",\n    allocation_id: \"\",\n  });\n\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  const rejectHandler = (key) => {\n    console.log(\"key\", key);\n    setPaymentModal(!addPaymentModal);\n    setPay({\n      id: key.id,\n      allocation_id: key.allocation_id,\n    });\n  };\n\n  useEffect(() => {\n    getPendingforAcceptance();\n  }, []);\n\n  const getPendingforAcceptance = () => {\n    axios\n      .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setPendingData(res.data.result);\n          setRecords(res.data.result.length);\n          // CountPendingForAcceptence(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.query_created);\n        var oldDate = row.query_created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.id}`,\n                index: 0,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.Exp_Delivery_Date);\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Accept / Reject\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n                color: \"#6967ce\",\n                cursor: \"pointer\",\n              }}\n              id=\"div1\"\n            >\n              <div\n                id=\"accept\"\n                title=\"Accept Assignment\"\n                onClick={() => acceptHandler(row)}\n              >\n                <i\n                  class=\"fa fa-check\"\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                ></i>\n              </div>\n              <div\n                id=\"reject\"\n                title=\"Reject Assignment\"\n                // onClick={() => rejectHandler(row)}\n                onClick={() => rejectHandler(row)}\n              >\n                <i\n                  class=\"fa fa-times\"\n                  style={{ color: \"red\", fontSize: \"16px\" }}\n                ></i>\n              </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  const acceptHandler = (key) => {\n    console.log(\"acceptHandler\", key);\n\n    let formData = new FormData();\n    formData.append(\"set\", 1);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"response-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Query accepted !\");\n          getPendingforAcceptance();\n          updateTab(1);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <TeamFilter\n            setData={setPendingData}\n            getData={getPendingforAcceptance}\n            pendingForAcceptence=\"pendingForAcceptence\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={pendingData}\n            columns={columns}\n            rowIndex\n          />\n          <RejectedModal\n            rejectHandler={rejectHandler}\n            addPaymentModal={addPaymentModal}\n            pay={pay}\n            getPendingforAcceptance={getPendingforAcceptance}\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingForAcceptence;\n\n{\n  /* <button onClick={() => update(1)}>go to 1st tab</button> */\n}\n// http://13.232.121.233/mazarapi/v1/tl/AcceptRejectQuery\n\n// axios.post(`${baseUrl}/tl/AcceptRejectQuery`, formData)\n// .then(res => {\n//   console.log(res);\n//   if (res.data.code === 1) {\n//     alert.success(\"Query rejected!\");\n//     getPendingforAcceptance();\n//   }\n// });\n\n// set: 1\n// tlid: 128\n// assignment_id: 11\n// allocation_id: 36\n","/var/www/html/Mazars_Pannel/src/components/AllQueriesData/AllQueriesData.js",["1259","1260","1261","1262","1263","1264","1265","1266"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\n\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../components/Records/Records\";\n\n\nfunction AllQueriesData() {\n\n  const [allQueriesData, setAllQueriesData] = useState([])\n  const [records, setRecords] = useState([]);\n\n  useEffect(() => {\n    getAllQueriesData();\n  }, []);\n\n  const getAllQueriesData = () => {\n    axios.get(`${baseUrl}/admin/getAllQueries`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setAllQueriesData(res.data.result);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n      formatter: (cellContent, row, rowIndex, index) => {\n        console.log(\"rowIndex : \", index);\n        return <div>{rowIndex + 1}</div>;\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.id}`,\n                index: 0,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}/\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                    <p className=\"declined\">\n\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                      <p className=\"completed\">\n\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"65px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div title=\"Send Message\">\n              <Link\n                to={{\n                  pathname: `/admin/chatting/${row.id}`,\n                  obj: {\n                    message_type: \"4\",\n                    query_No: row.assign_no,\n                    query_id: row.id,\n                    routes: `/admin/queriestab`\n                  }\n                }}\n              >\n                <i\n                  class=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    marginLeft: \"8px\",\n                    color: \"blue\"\n                  }}\n                ></i>\n              </Link>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setAllQueriesData}\n            getData={getAllQueriesData}\n            allQueries=\"allQueries\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={allQueriesData}\n            columns={columns}\n            rowIndex\n            wrapperClasses=\"table-responsive\"\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AllQueriesData;\n\n\n\n{/* <div class=\"row\">\n            <div className=\"col-9\">\n            </div>\n            <div className=\"col-3\">\n              <div class=\"form-group\">\n                <label className=\"form-select form-control\"\n                >Total Records : 12</label>\n              </div>\n            </div>\n          </div> */}","/var/www/html/Mazars_Pannel/src/components/PendingForProposals/PendingForProposals.js",["1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277","1278","1279","1280"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../components/Records/Records\";\n\n\nfunction PendingForProposals({ CountPendingProposal }) {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n\n  const [nonpendingData, setNonPendingData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [history, setHistory] = useState([]);\n  const [modal, setModal] = useState(false);\n\n  const toggle = (key) => {\n    console.log(\"key\", key);\n    setModal(!modal);\n\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        setHistory(response.result);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    getPendingForProposals();\n  }, []);\n\n  const getPendingForProposals = () => {\n    axios.get(`${baseUrl}/admin/pendingProposal`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setNonPendingData(res.data.result);\n        setRecords(res.data.result.length);\n        // CountPendingProposal(res.data.result.length);\n      }\n    });\n  };\n\n\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      sort: true,\n\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link\n              // to={`/admin/queries/${row.id}`}\n              to={{\n                pathname: `/admin/queries/${row.id}`,\n                index: 2,\n                routes: \"queriestab\",\n              }}\n            >{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}/\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"tname\",\n      text: \"TL name\",\n      sort: true,\n    },\n    {\n      text: \"History\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <button\n              type=\"button\"\n              class=\"btn btn-info btn-sm\"\n              onClick={() => toggle(row.id)}\n            >\n              History\n            </button>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n  //change date format\n  function ChangeFormateDate(oldDate) {\n    console.log(\"date\", oldDate);\n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setNonPendingData}\n            getData={getPendingForProposals}\n            pendingForProposal=\"pendingForProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={nonpendingData}\n            columns={columns}\n            wrapperClasses=\"table-responsive\"\n          />\n          <Modal isOpen={modal} fade={false} toggle={toggle}>\n            <ModalHeader toggle={toggle}>History</ModalHeader>\n            <ModalBody>\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"row\">S.No</th>\n                    <th scope=\"row\">Name</th>\n                    <th scope=\"row\">Query No</th>\n                    <th scope=\"row\">Status</th>\n                    <th scope=\"row\">Date of Allocation</th>\n                  </tr>\n                </thead>\n\n                {history.length > 0\n                  ? history.map((p, i) => (\n                    <tbody>\n                      <tr>\n                        <td>{i + 1}</td>\n                        <td>{p.name}</td>\n                        <td>{p.assign_no}</td>\n                        <td>{p.status}</td>\n                        <td>{ChangeFormateDate(p.date_of_allocation)}</td>\n                      </tr>\n                    </tbody>\n                  ))\n                  : null}\n              </table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={toggle}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingForProposals;\n{\n  /* <td class=\"text-center\">\n                      <p style={{ color: \"green\" }}>\n                        Query accepted by {p.tname}\n                      </p>\n                    </td> */\n}\n","/var/www/html/Mazars_Pannel/src/components/PendingForAllocation/PendingForAllocation.js",["1281","1282","1283","1284","1285","1286","1287","1288","1289","1290","1291","1292","1293","1294","1295"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport History from \"./History\";\nimport Swal from \"sweetalert2\";\nimport Records from \"../../components/Records/Records\";\n\n\nfunction PendingAllocation({ CountPendingForAllocation }) {\n\n  const [pendingData, setPendingData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = (key) => {\n    console.log(\"key\", key);\n    setModal(!modal);\n\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        setHistory(response.result);\n      })\n      .catch((error) => console.log(error));\n  };\n\n\n\n  \n  useEffect(() => {\n    getPendingForAllocation();\n  }, []);\n\n  const getPendingForAllocation = () => {\n    axios.get(`${baseUrl}/admin/pendingAllocation`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        // CountPendingForAllocation(res.data.result.length);\n        setPendingData(res.data.result);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.id}`,\n                index: 1,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n\n              {row.status} /\n              {\n                row.status == \"Inprogress Query\" ?\n                <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Query Allocation\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {row.is_assigned === \"1\" ? (\n              <p style={{ color: \"green\", fontSize: \"10px\" }}>\n                Allocated to {row.tname} on\n                <p>{row.allocation_time}</p>\n              </p>\n            ) : (\n              <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                <div title=\"Assign to\">\n                  <Link\n                    to={`/admin/queryassing/${row.id}`}\n                  >\n                    <i class=\"fa fa-share\"></i>\n                  </Link>\n\n                </div>\n                <div>\n                  <Link\n                    to={`/admin/query_rejection/${row.id}`}\n                  >\n                    <i\n                      className=\"fa fa-trash\"\n                    ></i>\n                  </Link>\n                </div>\n              </div>\n\n\n\n            )}\n          </>\n        );\n      },\n    },\n    {\n      text: \"History\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <button\n              type=\"button\"\n              class=\"btn btn-info btn-sm\"\n              onClick={() => toggle(row.id)}\n            >\n              History\n            </button>\n          </>\n        );\n      },\n    },\n  ];\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setPendingData}\n            getData={getPendingForAllocation}\n            pendingAlloation=\"pendingAlloation\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n        <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={pendingData}\n            columns={columns}\n            rowIndex\n          />\n          <History history={history} toggle={toggle} modal={modal} />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default PendingAllocation;\n  // axios\n    //   .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\n    //   .then(function (response) {\n    //     console.log(\"delete-\", response);\n    // if (response.data.code === 1) {\n    //   Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n    //   getTeamLeader();\n    // } else {\n    //   Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n    // }\n\n    //   })\n    //   .catch((error) => {\n    //     console.log(\"erroror - \", error);\n    //   });\n\n\n/* <td style={{ textAlign: \"center\" }}>\n                      {p.is_assigned === \"1\" && (\n                        <p style={{ color: \"green\" }}>\n                          <i class=\"fa fa-circle\"\n                          style={{fontSize:\"10px\" ,marginRight:\"4px\"}}>\n                            </i>\n                            {p.allocation_time}\n                          </p>\n                      )}\n\n                      {p.reject === \"3\" && (\n                        <p style={{ color: \"red\" }}>\n                          Query Rejected By {p.tname}\n                        </p>\n                      )}\n                    </td> */\n\n//   <Modal isOpen={addModal} toggle={addHandler} size=\"md\">\n//   <ModalHeader toggle={addHandler}>Show history</ModalHeader>\n//   <ModalBody>\n// <table class=\"table table-bordered\">\n//   <thead>\n//     <tr>\n//       <th scope=\"col\">Titles</th>\n//       <th scope=\"col\">Data</th>\n//     </tr>\n//   </thead>\n\n//   {history.length > 0\n//     ? history.map((p, i) => (\n//         <tbody>\n//           <tr>\n//             <th scope=\"row\">Name</th>\n//             <td>{p.name}</td>\n//           </tr>\n\n//           <tr>\n//             <th scope=\"row\">Date of Allocation</th>\n//             <td>{ChangeFormateDate(p.date_of_allocation)}</td>\n//           </tr>\n//           <tr>\n//             <th scope=\"row\">Query No</th>\n//             <td>{p.assign_no}</td>\n//           </tr>\n//           <tr>\n//             <th scope=\"row\">Status</th>\n//             <td>{p.status}</td>\n//           </tr>\n//         </tbody>\n//       ))\n//     : null}\n// </table>\n//   </ModalBody>\n// </Modal>\n","/var/www/html/Mazars_Pannel/src/pages/Admin/DeclinedProposal/DeclinedPropoal.js",["1296","1297","1298","1299","1300","1301"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../../components/Records/Records\";\n\nfunction DeclinedProposal({ declinedProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  useEffect(() => {\n    getDeclinedProposal();\n  }, []);\n\n  const getDeclinedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?&status=6`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        setRecords(res.data.result.length);\n        // declinedProposal(res.data.result.length);\n      }\n    });\n  };\n\n \n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index: 2,\n                routes: \"proposal\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.DateofProposal);\n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Declined of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_accept_date);\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"ProposedAmount\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n    },\n    {\n      text: \"Amount Paid\",\n      dataField: \"paid_amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#064606\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#064606\" };\n      },\n    },\n\n    {\n      text: \"Amount Outstanding\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"darkred\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"darkred\" };\n      },\n      formatter: function amountOutstading(cell, row) {\n        var a = row.accepted_amount;\n        var p = row.paid_amount;\n        return a - p;\n      }\n    },\n    {\n      text: \"Date of Payment\",\n      dataField: \"cust_paid_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_paid_date);\n        var oldDate = row.cust_paid_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Completion\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n  ];\n\n\n\n  return (\n    <>\n      <Card>\n      <CardHeader>\n      <AdminFilter\n            setData={setProposalDisplay}\n            getData={getDeclinedProposal}\n            declinedProposal=\"declinedProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n  \n        </CardHeader>\n        <CardBody>\n        <Records records={records} />\n        <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={proposalDisplay}\n            columns={columns}\n            classes=\"table-responsive\"\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default DeclinedProposal;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AcceptedProposal/AcceptedProposal.js",["1302","1303","1304","1305","1306","1307"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../../components/Records/Records\";\n\n\nfunction AcceptedProposal({ acceptedProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  useEffect(() => {\n    getAcceptedProposal();\n  }, []);\n  const getAcceptedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?status1=2`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.DateofProposal);\n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_accept_date);\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"ProposedAmount\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n    },\n    {\n      text: \"Amount Paid\",\n      dataField: \"paid_amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#064606\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#064606\" };\n      },\n    },\n\n    {\n      text: \"Amount Outstanding\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"darkred\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"darkred\" };\n      },\n      formatter: function amountOutstading(cell, row) {\n        var a = row.accepted_amount;\n        var p = row.paid_amount;\n        return a - p;\n      }\n    },\n    {\n      text: \"Date of Payment\",\n      dataField: \"cust_paid_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_paid_date);\n        var oldDate = row.cust_paid_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Completion\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n  ];\n\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setProposalDisplay}\n            getData={getAcceptedProposal}\n            acceptedProposal=\"acceptedProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={proposalDisplay}\n            columns={columns}\n            classes=\"table-responsive\"\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AcceptedProposal;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AllProposalComponent/AllProposalComponent.js",["1308","1309","1310","1311","1312","1313","1314","1315","1316","1317"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\nimport { Link, NavLink } from \"react-router-dom\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Records from \"../../../components/Records/Records\";\n\n\nfunction AllProposalComponent({ allProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  useEffect(() => {\n    getProposalData();\n  }, []);\n\n  const getProposalData = () => {\n    axios.get(`${baseUrl}/admin/getProposals`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        setRecords(res.data.result.length);\n\n        // allProposal(res.data.result.length);\n      }\n    });\n  };\n\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index: 0,\n                routes: \"proposal\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.DateofProposal);\n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_accept_date);\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n\n              {\n                row.status == \"Inprogress\" ?\n                  <div>\n                    {row.status}/\n                    <p style={{ color: \"green\" }}>\n                      {row.statusdescription}\n                    </p>\n                  </div>\n                  :\n                  row.status == \"Customer Declined; Proposal\" ?\n                    <div>\n                      {row.status}\n                      <p style={{ color: \"red\" }}>\n                        {row.statusdescription}\n                      </p>\n                    </div> :\n                    row.status == \"Accepted; Proposal\" ?\n                      <div>\n                        {row.status}\n                        <p style={{ color: \"blue\" }}>\n                          {row.statusdescription}\n                        </p>\n                      </div> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"ProposedAmount\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n    },\n    {\n      text: \"Amount Paid\",\n      dataField: \"paid_amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#064606\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#064606\" };\n      },\n    },\n\n    {\n      text: \"Amount Outstanding\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"darkred\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"darkred\" };\n      },\n      formatter: function amountOutstading(cell, row) {\n        var a = row.accepted_amount;\n        var p = row.paid_amount;\n        return a - p;\n      },\n    },\n    {\n      text: \"Date of Payment\",\n      dataField: \"cust_paid_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_paid_date);\n        var oldDate = row.cust_paid_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Completion\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"11px\", width: \"65px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div title=\"Send Message\">\n              <Link\n                to={{\n                  pathname: `/admin/chatting/${row.q_id}`,\n                  obj: {\n                    message_type: \"2\",\n                    query_No: row.assign_no,\n                    query_id: row.q_id,\n                    routes: `/admin/proposal`\n                  }\n                }}\n              >\n                <i\n                  class=\"fa fa-comments-o\"\n                  style={{\n                    fontSize: 16,\n                    cursor: \"pointer\",\n                    marginLeft: \"8px\",\n                    color: \"blue\"\n                  }}\n                ></i>\n              </Link>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n\n          <AdminFilter\n            setData={setProposalDisplay}\n            getData={getProposalData}\n            allProposal=\"allProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={proposalDisplay}\n            columns={columns}\n            classes=\"table-responsive\"\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default AllProposalComponent;\n\n// headerStyle: () => {\n//   return { width: \"100px\", textAlign: \"center\" };\n// },\n\n// events: {\n//   onClick: (e, column, columnIndex, row, rowIndex) => {\n//     console.log(\"cellContent\", row);\n//     console.log(\"cellContent\", row.q_id);\n//     return (\n//       <div>\n//         <Link to={`/admin/queries/${row.q_id}`}>{row.q_id}</Link>\n//       </div>\n//     );\n//   },\n// },\n\n// const defaultSorted = [\n//   {\n//     dataField: \"assign_no\",\n//     order: \"desc\",\n//   },\n// ];\n\n// const rowEvents = {\n//   onClick: (e, row, rowIndex) => {\n//     console.log(`clicked on row with index: ${rowIndex}`);\n//     console.log(`clicked on row with index: ${e}`);\n//     console.log(`clicked on row with index: ${row}`);\n//   },\n// };\n\n{\n  /* <CardHeader>\n          <div className=\"row\">\n            <div class=\"col-sm-3 d-flex\">\n              <Select\n                mode=\"multiple\"\n                style={{ width: \"100%\" }}\n                placeholder=\"Select Category\"\n                defaultValue={[]}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n                value={selectedData}\n              >\n                <OptGroup label=\"Direct Tax\">\n                  <Option value=\"3\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"4\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"5\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"6\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"7\" label=\"Transfer Pricing\">\n                    <div className=\"demo-option-label-item\">\n                      Transfer Pricing\n                    </div>\n                  </Option>\n                  <Option value=\"8\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n\n                <OptGroup label=\"Indirect Tax\">\n                  <Option value=\"9\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Compliance</div>\n                  </Option>\n                  <Option value=\"10\" label=\"Assessment\">\n                    <div className=\"demo-option-label-item\">Assessment</div>\n                  </Option>\n                  <Option value=\"11\" label=\"Appeals\">\n                    <div className=\"demo-option-label-item\">Appeals</div>\n                  </Option>\n                  <Option value=\"12\" label=\"Advisory/opinion\">\n                    <div className=\"demo-option-label-item\">\n                      Advisory/opinion\n                    </div>\n                  </Option>\n                  <Option value=\"13\" label=\"Others\">\n                    <div className=\"demo-option-label-item\">Others</div>\n                  </Option>\n                </OptGroup>\n              </Select>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n            </div>\n\n            <div className=\"col-sm-9 d-flex\">\n              <div>\n                <form class=\"form-inline\" onSubmit={handleSubmit(onSubmit)}>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">From</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateFrom\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <label className=\"form-select form-control\">To</label>\n                  </div>\n                  <div class=\"form-group mx-sm-3 mb-2\">\n                    <input\n                      type=\"date\"\n                      name=\"p_dateTo\"\n                      className=\"form-select form-control\"\n                      ref={register}\n                    />\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-primary mb-2\">\n                    Search\n                  </button>\n                </form>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetData}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          </div>\n        </CardHeader> */\n}\n\n{\n  /* <Table responsive=\"sm\" bordered>\n            <thead class=\"table_head\">\n              <tr>\n                <th>S.No</th>\n                <th>Date</th>\n                <th>Query No</th>\n                <th>Category</th>\n                <th>Sub Category</th>\n                <th>Proposal No.</th>\n                <th>Proposal Sent date</th>\n                <th>Proposed Amount</th>\n                <th>Proposal Status</th>\n                <th>Amount Accepted</th>\n                <th>Assignment Number</th>\n                <th>TL name</th>\n              </tr>\n            </thead>\n            <tbody class=\"table_bdy\">\n              {proposalDisplay.length > 0 ? (\n                proposalDisplay.map((p, i) => (\n                  <tr key={i}>\n                    <td>{i + 1}</td>\n                    <td>{ChangeFormateDate(p.created)}</td>\n                    <th>\n                      <Link to={`/admin/queries/${p.q_id}`}>{p.assign_no}</Link>\n                    </th>\n                    <td>{p.parent_id}</td>\n                    <td>{p.cat_name}</td>\n\n                    <td>{p.proposal_number}</td>\n                    <td>{ChangeFormateDate(p.DateofProposal)}</td>\n                    <td>{p.ProposedAmount}</td>\n                    <td>{p.status}</td>\n                    <td>{p.accepted_amount}</td>\n                    <td></td>\n                    <td>{p.tl_name}</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan=\"10\">No Records</td>\n                </tr>\n              )}\n            </tbody>\n          </Table> */\n}\n","/var/www/html/Mazars_Pannel/src/components/PaidComponent/PaidComponent.js",["1318","1319","1320","1321","1322","1323","1324","1325","1326"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport CommonServices from \"../../common/common\";\nimport Records from \"../../components/Records/Records\";\n\n\n\n\n\nfunction PaidComponent() {\n  const [payment, setPayment] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [selectedData, setSelectedData] = useState([]);\n  const [paymentcount, setPaymentCount] = useState(\"\");\n  const [pay, setPay] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  useEffect(() => {\n    getPaymentStatus();\n  }, []);\n\n  const getPaymentStatus = () => {\n    axios.get(`${baseUrl}/tl/getUploadedProposals`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setPayment(res.data.result);\n        setPaymentCount(res.data.result.length);\n        setRecords(res.data.result.length);\n\n      }\n    });\n  };\n\n  const [modal, setModal] = useState(false);\n  const toggle = (key) => {\n    console.log(\"key\", key);\n    setModal(!modal);\n\n    fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        setPay(response.payment_detail);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"query_created_date\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.query_created_date);\n        var oldDate = row.query_created_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.assign_id}`,\n                routes: \"paymentstatus\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    // {\n    //   text: \"Date of Proposal\",\n    //   dataField: \"created\",\n    //   sort: true,\n    //   style: {\n    //     fontSize: \"11px\",\n    //   },\n    //   headerStyle: () => {\n    //     return { fontSize: \"11px\" };\n    //   },\n    //   formatter: function dateFormat(cell, row) {\n    //     console.log(\"dt\", row.created);\n    //     var oldDate = row.created;\n    //     if (oldDate == null) {\n    //       return null;\n    //     }\n    //     return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n    //   },\n    // },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_accept_date);\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n    },\n    {\n      text: \"Amount Paid\",\n      dataField: \"paid_amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#064606\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#064606\" };\n      },\n    },\n\n    {\n      text: \"Amount Outstanding\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"darkred\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"darkred\" };\n      },\n      formatter: function amountOutstading(cell, row) {\n        console.log(\"dt\", row.paid_amount);\n        console.log(\"dt\", row.accepted_amount);\n        var p = row.paid_amount;\n        var a = row.accepted_amount;\n        return a - p;\n      },\n    },\n    {\n      text: \"Date of Payment\",\n      dataField: \"cust_paid_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_paid_date);\n        var oldDate = row.cust_paid_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Completion\",\n      dataField: \"final_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.final_date);\n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\" }}>\n\n\n              <div style={{ cursor: \"pointer\" }} title=\"Payment History\">\n                <i\n                  class=\"fa fa-credit-card\"\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                  onClick={() => toggle(row.assign_id)}\n                ></i>\n              </div>\n\n              <div title=\"Send Message\">\n                <Link\n                  to={{\n                    pathname: `/admin/chatting/${row.id}`,\n                    obj: {\n                      message_type: \"5\",\n                      query_No: row.assign_no,\n                      query_id: row.id,\n                      routes: `/admin/paymentstatus`\n                    }\n                  }}\n                >\n                  <i\n                    class=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  console.log(\"pay\", pay);\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"7\">\n              <CardTitle tag=\"h4\">Payment status ({paymentcount})</CardTitle>\n            </Col>\n            <Col md=\"5\"></Col>\n          </Row>\n        </CardHeader>\n\n        <CardHeader>\n          <AdminFilter\n            setData={setPayment}\n            getData={getPaymentStatus}\n            paymentStatus=\"paymentStatus\"\n            setRecords={setRecords}\n            records={records}\n          />\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={payment}\n            columns={columns}\n            classes=\"table-responsive\"\n          />\n\n          <Modal isOpen={modal} fade={false} toggle={toggle}>\n            <ModalHeader toggle={toggle}>History</ModalHeader>\n            <ModalBody>\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"row\">S.No</th>\n                    <th scope=\"row\">Date</th>\n                    <th scope=\"row\">Amount</th>\n                  </tr>\n                </thead>\n                {pay.length > 0\n                  ? pay.map((p, i) => (\n                    <tbody>\n                      <tr>\n                        <td>{i + 1}</td>\n                        <td>{CommonServices.removeTime(p.payment_date)}</td>\n                        <td>{p.paid_amount}</td>\n                      </tr>\n                    </tbody>\n                  ))\n                  : null}\n              </table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={toggle}>\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default PaidComponent;\n","/var/www/html/Mazars_Pannel/src/pages/TL/FeedbackTab/FeedbackTab.js",["1327","1328","1329","1330"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { useAlert } from \"react-alert\";\n\nfunction FeedbackTab() {\n  const alert = useAlert();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [feedbackData, setFeedBackData] = useState([]);\n\n  useEffect(() => {\n    getFeedback();\n  }, []);\n\n  const getFeedback = () => {\n    axios\n      .get(`${baseUrl}/customers/getFeedback?tl_id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setFeedBackData(res.data.result);\n        }\n      });\n  };\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"10px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"60px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <div style={{ display: \"flex\" }}>\n              <p>{CommonServices.removeTime(row.created)}</p>\n              <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(row.created)}</p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"40px\" };\n      },\n    },\n    {\n      text: \"Feedback\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"150px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <div>\n              {\n                row.tl_read == \"0\" ?\n                  <div\n                    style={{\n                      cursor: \"pointer\",\n                      display: \"flex\", justifyContent: \"space-between\"\n                    }}\n                    onClick={() => readNotification(row.id)}\n                    title=\"unread\"\n                  >\n                    <p>{row.feedback}  - By {row.name}</p>\n                    <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\n                  </div>\n\n                  :\n                  <div\n                    style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}\n                    title=\"read\"\n                  >\n                    <p>{row.feedback}  - By {row.name}</p>\n                    <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\n                  </div>\n              }\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n  // readnotification\n  const readNotification = (id) => {\n\n    console.log(\"call\", id)\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"type\", \"tl\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/markReadFeedback`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response)\n        if (response.data.code === 1) {\n          // alert.success(\"successfully read!\");\n          getFeedback()\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n  return (\n    <>\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"7\">\n                <CardTitle tag=\"h4\">Feedback</CardTitle>\n              </Col>\n              <Col md=\"5\"></Col>\n            </Row>\n          </CardHeader>\n          <CardBody>\n            <BootstrapTable\n              bootstrap4\n              keyField=\"id\"\n              data={feedbackData}\n              columns={columns}\n              rowIndex\n            />\n          </CardBody>\n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default FeedbackTab;\n","/var/www/html/Mazars_Pannel/src/components/PendingForAcceptence/PendingForAcceptence.js",["1331","1332","1333","1334","1335","1336","1337"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../components/Records/Records\";\n\n\nfunction PendingForAcceptence({ pendingProposal }) {\n  const [proposalDisplay, setProposalDisplay] = useState([]);\n  const [records, setRecords] = useState([]);\n\n\n  useEffect(() => {\n    getPendingAcceptedProposal();\n  }, []);\n\n  const getPendingAcceptedProposal = () => {\n    axios.get(`${baseUrl}/admin/getProposals?status1=1`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setProposalDisplay(res.data.result);\n        setRecords(res.data.result.length);\n        // pendingProposal(res.data.result.length);\n      }\n    });\n  };\n\n\n\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"created\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                index: 1,\n                routes: \"proposal\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of Proposal\",\n      dataField: \"DateofProposal\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.DateofProposal);\n        var oldDate = row.DateofProposal;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_accept_date);\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}/\n              {\n                row.status == \"Inprogress\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"ProposedAmount\",\n      text: \"Proposed Amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n    },\n    {\n      text: \"Amount Paid\",\n      dataField: \"paid_amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#064606\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#064606\" };\n      },\n    },\n\n    {\n      text: \"Amount Outstanding\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"darkred\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"darkred\" };\n      },\n      formatter: function amountOutstading(cell, row) {\n        var a = row.accepted_amount;\n        var p = row.paid_amount;\n        return a - p;\n      },\n    },\n    {\n      text: \"Date of Payment\",\n      dataField: \"cust_paid_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_paid_date);\n        var oldDate = row.cust_paid_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Completion\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"tl_name\",\n      text: \"TL name\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n  ];\n\n\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setProposalDisplay}\n            getData={getPendingAcceptedProposal}\n            pendingAcceptedProposal=\"pendingAcceptedProposal\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n        <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={proposalDisplay}\n            columns={columns}\n            classes=\"table-responsive\"\n          />\n\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default PendingForAcceptence;\n","/var/www/html/Mazars_Pannel/src/pages/TL/PaymentStatus/PaymentStatus.js",["1338","1339","1340","1341","1342"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport PaymentModal from \"./PaymentModal\";\n\n\nfunction PaymentStatus() {\n  const alert = useAlert();\n  const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const cust_id = window.localStorage.getItem(\"userid\");\n  const [records, setRecords] = useState([]);\n\n  const [pay, setPay] = useState([]);\n  const [count, setCount] = useState(\"\");\n  const [payment, setPayment] = useState([]);\n  const [modal, setModal] = useState(false);\n\n  const [assignNo, setAssignNo] = useState(\"\");\n\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  const paymentHandler = (key) => {\n    console.log(\"key\", key.assign_no);\n    setPaymentModal(!addPaymentModal);\n    setAssignNo(key.assign_no)\n  };\n\n\n\n  useEffect(() => {\n    getPaymentStatus();\n  }, []);\n\n  const getPaymentStatus = () => {\n    axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setPayment(res.data.result);\n        setCount(res.data.result.length);\n        setRecords(res.data.result.length);\n\n      }\n    });\n  };\n\n  const toggle = (key) => {\n    console.log(\"key\", key);\n    setModal(!modal);\n\n    fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        setPay(response.payment_detail);\n      })\n      .catch((error) => console.log(error));\n  };\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"query_created_date\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.query_created_date);\n        var oldDate = row.query_created_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            {/* <Link to={`/teamleader/queries/${row.assign_id}`}>\n              {row.assign_no}\n            </Link> */}\n\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.assign_id}`,\n                routes: \"paymentstatus\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_accept_date);\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n    },\n    {\n      text: \"Amount Paid\",\n      dataField: \"paid_amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#064606\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#064606\" };\n      },\n    },\n\n    {\n      text: \"Amount Outstanding\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"darkred\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"darkred\" };\n      },\n      formatter: function amountOutstading(cell, row) {\n        console.log(\"dt\", row.paid_amount);\n        console.log(\"dt\", row.accepted_amount);\n        var p = row.paid_amount;\n        var a = row.accepted_amount;\n        return a - p;\n      },\n    },\n    {\n      text: \"Date of Payment\",\n      dataField: \"cust_paid_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_paid_date);\n        var oldDate = row.cust_paid_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Completion\",\n      dataField: \"final_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.final_date);\n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Action\",\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n\n            <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100px\" }}>\n              <div title=\"Payment History\">\n                <i\n                  class=\"fa fa-credit-card\"\n                  style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                  onClick={() => toggle(row.assign_id)}\n                ></i>\n              </div>\n              <div title=\"schedule call\">\n                <Link\n                  to={{\n                    pathname: `/teamleader/schedule`,\n                  }}\n                >\n                  <i\n                    class=\"fa fa-caret-square-o-right\"\n                    style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                  ></i>\n                </Link>\n\n              </div>\n              <div>\n                <i\n                  class=\"fa fa-exchange\"\n                  style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n                  onClick={() => sendEmail(row.assign_id)}\n                ></i>\n              </div>\n\n              <div style={{ cursor: \"pointer\" }} title=\"Payment decline\">\n                <i\n                  class=\"fa fa-comments-o\"\n                  style={{ color: \"green\", fontSize: \"16px\" }}\n                  onClick={() => paymentHandler(row)}\n                ></i>\n              </div>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n  const sendEmail = (key) => {\n    console.log(\"key\", key);\n\n    axios\n      .get(`${baseUrl}/customers/paymentemail?id=${key}`)\n      .then((res) => {\n        console.log(res);\n      });\n  };\n\n\n  return (\n    <>\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"7\">\n                <CardTitle tag=\"h4\">Payment Status ({count})</CardTitle>\n              </Col>\n              <Col md=\"5\"></Col>\n            </Row>\n          </CardHeader>\n          <CardHeader>\n            <TeamFilter\n              setData={setPayment}\n              getData={getPaymentStatus}\n              paymentStatus=\"paymentStatus\"\n              setRecords={setRecords}\n              records={records}\n            />\n          </CardHeader>\n\n          <CardBody>\n            <BootstrapTable\n              bootstrap4\n              keyField=\"id\"\n              data={payment}\n              columns={columns}\n              classes=\"table-responsive\"\n            />\n\n            <PaymentModal\n              paymentHandler={paymentHandler}\n              addPaymentModal={addPaymentModal}\n              assignNo={assignNo}\n            />\n\n\n            <Modal isOpen={modal} fade={false} toggle={toggle}>\n              <ModalHeader toggle={toggle}>History</ModalHeader>\n              <ModalBody>\n                <table class=\"table table-bordered\">\n                  <thead>\n                    <tr>\n                      <th scope=\"row\">S.No</th>\n                      <th scope=\"row\">Date</th>\n                      <th scope=\"row\">Amount</th>\n                    </tr>\n                  </thead>\n                  {pay.length > 0\n                    ? pay.map((p, i) => (\n                      <tbody>\n                        <tr>\n                          <td>{i + 1}</td>\n                          <td>{CommonServices.removeTime(p.payment_date)}</td>\n                          <td>{p.paid_amount}</td>\n                        </tr>\n                      </tbody>\n                    ))\n                    : null}\n                </table>\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"secondary\" onClick={toggle}>\n                  Cancel\n                </Button>\n              </ModalFooter>\n            </Modal>\n\n\n          </CardBody>\n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default PaymentStatus;\n","/var/www/html/Mazars_Pannel/src/views/ProposalTab/AcceptModal.js",["1343","1344","1345","1346"],"/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/AssignmentTab.js",["1347","1348","1349","1350","1351","1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364","1365","1366","1367","1368","1369","1370","1371"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport DraftReportModal from \"./DraftReportUpload\";\nimport FinalReportUpload from \"./FinalReportUpload\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\nimport * as Cookies from \"js-cookie\";\n\nfunction AssignmentTab() {\n  const history = useHistory();\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [count, setCount] = useState(\"\");\n  const [assignment, setAssignment] = useState([]);\n  const [id, setId] = useState(\"\");\n  const [finalId, setFinalId] = useState(\"\");\n\n  const [records, setRecords] = useState([]);\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  console.log(\"current_date :\", current_date);\n  const [item] = useState(current_date);\n\n  const [baseMode, SetbaseMode] = useState(\"avc\");\n  const [transcode, SetTranscode] = useState(\"interop\");\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setAssignment(res.data.result);\n          setCount(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    console.log(`selected ${value}`);\n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetCategory ..\");\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentList();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    setStatus([]);\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentList();\n  };\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n    console.log(`selected ${value}`);\n    setStatus(value);\n  };\n\n  //columns\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"date_of_query\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.date_of_query);\n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            {/* <Link to={`/teamleader/queries/${row.q_id}`}>{row.assign_no}</Link> */}\n            <Link\n              to={{\n                pathname: `/teamleader/queries/${row.q_id}`,\n                routes: \"assignment\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"200px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                {row.client_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                {row.draft_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                {row.final_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of report :</span>\n                {row.delivery_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\n                {row.other_stage}\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Expected date of delivery\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.Exp_Delivery_Date);\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Actual date of delivery\",\n      dataField: \"final_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.final_date);\n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {!row.final_report == \"\" ? (\n              <div>\n                <a\n                  href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.final_report}`}\n                  target=\"_blank\"\n                >\n                  <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\n                  final\n                </a>\n              </div>\n            ) : row.assignement_draft_report ? (\n              <div>\n                <a\n                  href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.assignement_draft_report}`}\n                  target=\"_blank\"\n                >\n                  <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\n                  draft\n                </a>\n              </div>\n            ) : null}\n          </>\n        );\n      },\n    },\n    {\n      text: \"Assignment Stage\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              title=\"Add Assignment stages\"\n              style={{ cursor: \"pointer\", textAlign: \"center\" }}\n            >\n              <Link to={`/teamleader/addassingment/${row.q_id}`}>\n                <i class=\"fa fa-tasks\"></i>\n              </Link>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                width: \"60px\"\n              }}\n            >\n              {row.accepted_amount == row.paid_amount &&\n                !row.final_report &&\n                !(\n                  row.client_discussion == \"completed\" &&\n                  row.delivery_report == \"completed\" &&\n                  row.draft_report == \"completed\" &&\n                  row.final_discussion == \"completed\"\n                ) ? (\n                <div title=\"upload Pdf\">\n                  <p\n                    style={{ cursor: \"pointer\", color: \"green\" }}\n                    onClick={() => uploadDraftReport(row.id)}\n                  >\n                    <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n                    draft\n                  </p>\n                </div>\n              ) : null}\n\n\n              {row.final_report ? null : (\n                <div title=\"upload Pdf\">\n                  <p\n                    style={{ cursor: \"pointer\", color: \"red\" }}\n                    onClick={() => uploadFinalReport(row)}\n                  >\n                    {row.client_discussion == \"completed\" &&\n                      row.delivery_report == \"completed\" &&\n                      row.draft_report == \"completed\" &&\n                      row.final_discussion == \"completed\" &&\n                      row.amount == row.paid_amount ? (\n                      <div>\n                        <i\n                          class=\"fa fa-upload\"\n                          style={{ fontSize: \"16px\" }}\n                        ></i>\n                        final\n                      </div>\n                    ) : null}\n                  </p>\n                </div>\n              )}\n\n\n              {row.vstart < 11 &&\n                row.vend >= 0 &&\n                !(row.vstart == null && row.vend == null) ? (\n                <div style={{ cursor: \"pointer\" }} title=\"Video Chat\">\n                  <i\n                    class=\"fa fa-video-camera\"\n                    style={{ color: \"red\", fontSize: \"16px\" }}\n                    onClick={() => handleJoin(row.id)}\n                  ></i>\n                </div>\n              ) : null}\n\n\n              <div title=\"Send Message\">\n                <Link\n                  to={{\n                    pathname: `/teamleader/chatting/${row.q_id}`,\n                    obj: {\n                      message_type: \"3\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/teamleader/assignment`\n                    }\n                  }}\n                >\n                  <i\n                    class=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div>\n\n            </div>\n          </>\n        );\n      },\n    },\n\n  ];\n\n  //handleJoin\n  const handleJoin = (id) => {\n    console.log(\"id\", id);\n\n    Cookies.set(\"channel_2\", id);\n    Cookies.set(\"baseMode_2\", baseMode);\n    Cookies.set(\"transcode_2\", transcode);\n    Cookies.set(\"attendeeMode_2\", attendeeMode);\n    Cookies.set(\"videoProfile_2\", videoProfile);\n    history.push(\"/teamleader/meeting\");\n  };\n\n  // draft modal\n  const [draftModal, setDraftModal] = useState(false);\n  const uploadDraftReport = (id) => {\n    console.log(id);\n    setDraftModal(!draftModal);\n    setId(id);\n  };\n\n  // final modal\n  const [fianlModal, setFianlModal] = useState(false);\n\n  const uploadFinalReport = (id) => {\n    console.log(id);\n    setFianlModal(!fianlModal);\n    setFinalId(id);\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\n          userid\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n        }&assignment_status=${status}&stages_status=${data.p_status\n        }&pcat_id=${selectedData}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignment(res.data.result);\n            setRecords(res.data.result.length);\n\n          }\n        }\n      });\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"7\">\n              <CardTitle tag=\"h4\">Assignment ({count})</CardTitle>\n            </Col>\n            <Col md=\"5\"></Col>\n          </Row>\n        </CardHeader>\n\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-inline\">\n              <div class=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 250 }}\n                  placeholder=\"Select Sub Category\"\n                  defaultValue={[]}\n                  onChange={handleSubCategory}\n                  value={store2}\n                  allowClear\n                >\n                  {tax2.map((p, index) => (\n                    <Option value={p.id} key={index}>\n                      {p.details}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  defaultValue={item}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 210 }}\n                  placeholder=\"Select stages\"\n                  defaultValue={[]}\n                  onChange={assingmentStatus}\n                  value={status}\n                  allowClear\n                >\n                  <Option value=\"Client_Discussion\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">\n                      Client Discussion\n                    </div>\n                  </Option>\n                  <Option value=\"Draft_Report\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Draft report</div>\n                  </Option>\n                  <Option value=\"Final_Discussion\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">\n                      Final Discussion\n                    </div>\n                  </Option>\n                  <Option value=\"Delivery_of_report\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">\n                      Delivery of report\n                    </div>\n                  </Option>\n                  <Option value=\"Completed\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Completed</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <select\n                  className=\"form-select form-control\"\n                  name=\"p_status\"\n                  ref={register}\n                  style={{ height: \"33px\" }}\n                >\n                  <option value=\"\">--select--</option>\n                  <option value=\"1\">Pending</option>\n                  <option value=\"2\">Complete</option>\n                  <option value=\"3\">Payment Decline</option>\n                </select>\n              </div>\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">Total Records : {records}</label>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={assignment}\n            columns={columns}\n            rowIndex\n          />\n\n          <DraftReportModal\n            draftModal={draftModal}\n            uploadDraftReport={uploadDraftReport}\n            getAssignmentList={getAssignmentList}\n            id={id}\n          />\n\n          <FinalReportUpload\n            fianlModal={fianlModal}\n            uploadFinalReport={uploadFinalReport}\n            getAssignmentList={getAssignmentList}\n            id={finalId}\n          />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AssignmentTab;\n\n// {row.assignement_draft_report || row.final_report ? null : (\n//   <div title=\"upload Pdf\">\n//     <p\n//       style={{ cursor: \"pointer\", color: \"green\" }}\n//       onClick={() => uploadDraftReport(row.id)}\n//     >\n//       <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\n//       draft\n//     </p>\n//   </div>\n// )}\n{\n  /* {row.accepted_amount == row.paid_amount &&\n               !row.final_report  row.assignement_draft_report ? (\n                <p>draft report</p>\n              ) : null} */\n}\n","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/DraftReportUpload.js",["1372","1373","1374","1375","1376"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Alerts from \"../../../common/Alerts\";\n\nfunction DraftReport({ draftModal, uploadDraftReport, id, getAssignmentList }) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n\n    let formData = new FormData();\n\n    var uploadImg = value.p_draft;\n    console.log(\"uploadImg\", uploadImg);\n\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"draft_report[]\",file);\n      }\n    }\n\n    formData.append(\"id\", id);\n    axios.post(`${baseUrl}/tl/UploadReport`, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n      console.log(response)\n\n      var msg = response.data.msg\n      var variable = \"Draft Report Uploaded\"\n      Alerts.SuccessReport(variable, msg)\n\n\n      getAssignmentList();\n      uploadDraftReport();\n    });\n\n  };\n\n  \n  return (\n    <div>\n      <Modal isOpen={draftModal} toggle={uploadDraftReport} size=\"md\">\n        <ModalHeader toggle={uploadDraftReport}>Draft Report</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label>Upload Multiple Report</label>\n              <input\n                type=\"file\"\n                name=\"p_draft\"\n                ref={register}\n                className=\"form-control-file manage_file\"\n                multiple\n              />\n            </div>\n            <div class=\"modal-footer\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n              >\n                Upload\n              </button>\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default DraftReport;\n\n // let formData = new FormData();\n      // formData.append(\"draft_report\", value.p_draft[0]);\n      // formData.append(\"id\", id);\n\n      // axios({\n      //   method: \"POST\",\n      //   headers: {\n      //     'content-type': 'multipart/form-data'\n      //   },\n      //   url: `${baseUrl}/tl/UploadReport`,\n      //   data: formData,\n      // })\n      //   .then(function (response) {\n      //     console.log(\"res-\", response);  \n      //     uploadDraftReport();            \n      //   })\n      //   .catch((error) => {\n      //     console.log(\"erroror - \", error);\n      //  });\n\n\n// axios.post(`${baseUrl}/tl/UploadReport`, formData, {\n//   headers: {\n//     'content-type': 'multipart/form-data'\n//   }\n// }).then(response => {\n//   console.log(response.data)\n// });\n\n\n// formData.append('draft_report',{\n//   uri: value.p_draft[0].uri,\n//   name: value.p_draft[0].name,\n//   type: value.p_draft[0].type}\n// );\n\n\n\n// axios({\n//   method: \"post\",\n//   url: \"myurl\",\n//   data: bodyFormData,\n//   headers: { \"Content-Type\": \"multipart/form-data\" },\n// })\n//   .then(function (response) {\n\n//     console.log(response);\n//   })\n//   .catch(function (response) {\n\n//     console.log(response);\n//   });\n\n    // formData.append(\"draft_report[]\", value.p_draft[0]);","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentTab/FinalReportUpload.js",["1377","1378","1379","1380","1381"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Alerts from \"../../../common/Alerts\";\n\nfunction DraftReport({ fianlModal, uploadFinalReport, id, getAssignmentList }) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n\n\n  console.log(\"id-\", id)\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n\n    var uploadImg = value.p_final;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"final_report[]\", file);\n      }\n    }\n\n\n    formData.append(\"id\", id.id);\n    formData.append(\"q_id\", id.q_id);\n    axios\n      .post(`${baseUrl}/tl/UploadReport`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        var msg = response.data.msg\n        var variable = \"Final Report Uploaded\"\n        Alerts.SuccessReport(variable, msg)\n\n        getAssignmentList();\n        uploadFinalReport();\n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={fianlModal} toggle={uploadFinalReport} size=\"md\">\n        <ModalHeader toggle={uploadFinalReport}>Final Report</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label>Upload Multiple Report</label>\n              <input\n                type=\"file\"\n                name=\"p_final\"\n                ref={register}\n                className=\"form-control-file manage_file\"\n                multiple\n              />\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Upload\n              </button>\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default DraftReport;\n\n // formData.append(\"final_report\", value.p_final[0]);","/var/www/html/Mazars_Pannel/src/pages/TL/SendProposal/SendProposal.js",["1382","1383"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {  useParams } from \"react-router-dom\";\nimport ProposalComponent from \"./ProposalComponent\";\n\n\nfunction SendProposal() {\n    const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  return (\n    <>\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n        <ProposalComponent id={id}/>\n      </Layout>\n    </>\n  );\n}\n\nexport default SendProposal;\n","/var/www/html/Mazars_Pannel/src/pages/TL/QueriesTab/QueriesTab.js",["1384","1385","1386","1387","1388"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport PendingForAcceptence from \"../PendingForAcceptence/PendingForAcceptence\";\nimport InCompleteData from \"../InCompleteData/InCompleteData\";\nimport CompleteData from \"../CompleteData/CompleteData\";\n\nfunction QueriesTab(props) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const [pendindForAccepttence, setPendingForAcceptence] = useState(\"\");\n  const [incomplete, setIncomplete] = useState(\"\");\n  const [complete, setcomplete] = useState(\"\");\n\n\n  // const CountPendingForAcceptence = (data) => {\n  //   setPendingForAcceptence(data);\n  // };\n\n  // const CountIncomplete = (data) => {\n  //   setIncomplete(data);\n  // };\n\n  // const CountComplete = (data) => {\n  //   setComplete(data);\n  // };\n\n  const myStyle1 = {\n    backgroundColor: \"grey\",\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  const myStyle2 = {\n    padding: \"12px\",\n    borderRadius: \"50px\",\n    width: \"200px\",\n    textAlign: \"center\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n\n  useLayoutEffect(() => {\n    setTabIndex(props.location.index || 0);\n  }, [props.location.index]);\n\n\n\n  useEffect(() => {\n    const getPendindForAccepttence = () => {\n      axios\n        .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`)\n        .then((response) => {\n          console.log(\"code---\", response);\n          if (response.data.code === 1) {\n            setPendingForAcceptence(response.data.result.length);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error\", error);\n        });\n    };\n\n    const getIncomplete = () => {\n      axios\n        .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setIncomplete(res.data.result.length);\n          }\n        });\n    };\n\n    const getComplete = () => {\n      axios\n        .get(`${baseUrl}/tl/getCompleteQues?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setcomplete(res.data.result.length);\n          }\n        });\n    };\n\n    getPendindForAccepttence();\n    getIncomplete();\n    getComplete();\n  }, []);\n\n  const updateTab = (key) => {\n    setTabIndex(key)\n  }\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              Pending for Acceptance ({pendindForAccepttence})\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n              InProgress ({incomplete})\n            </Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n              Complete ({complete})\n            </Tab>\n          </TabList>\n\n          <TabPanel>\n            <PendingForAcceptence\n              // CountPendingForAcceptence={CountPendingForAcceptence}\n              updateTab={updateTab}\n            />\n          </TabPanel>\n          <TabPanel>\n            <InCompleteData\n              // CountIncomplete={CountIncomplete}\n            />\n          </TabPanel>\n          <TabPanel>\n            <CompleteData\n            // CountComplete={CountComplete}\n            />\n          </TabPanel>\n        </Tabs>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n\n// <div class=\"row mt-3\">\n//   <div class=\"col-md-12\">\n//     <ul\n//       class=\"nav nav-pills mb-3\"\n//       style={{ justifyContent: \"space-around\" }}\n//       id=\"pills-tab\"\n//       role=\"tablist\"\n//     >\n//       <li class=\"nav-item\" role=\"presentation\">\n//         <a\n//           class=\"nav-link text-white active\"\n//           id=\"pills-pending-tab\"\n//           data-toggle=\"pill\"\n//           href=\"#pending\"\n//           role=\"tab\"\n//           aria-controls=\"pills-pending\"\n//           aria-selected=\"false\"\n//         >\n//           Pending for Acceptance ({pendingAcceptence})\n//         </a>\n//       </li>\n//       <li class=\"nav-item\" role=\"presentation\">\n//         <a\n//           class=\"nav-link text-white\"\n//           id=\"pills-incomplete-tab\"\n//           data-toggle=\"pill\"\n//           href=\"#incomplete\"\n//           role=\"tab\"\n//           aria-controls=\"pills-incomplete\"\n//           aria-selected=\"false\"\n//         >\n//           Inprogress ({incomplete})\n//         </a>\n//       </li>\n//       <li class=\"nav-item\" role=\"presentation\">\n//         <a\n//           class=\"nav-link text-white\"\n//           id=\"pills-complete-tab\"\n//           data-toggle=\"pill\"\n//           href=\"#complete\"\n//           role=\"tab\"\n//           aria-controls=\"pills-complete\"\n//           aria-selected=\"false\"\n//         >\n//           Complete ({complete})\n//         </a>\n//       </li>\n//     </ul>\n//     <div class=\"tab-content\" id=\"pills-tabContent\">\n//       <div\n//         class=\"tab-pane fade show active\"\n//         id=\"pending\"\n//         role=\"tabpanel\"\n//         aria-labelledby=\"pills-pending-tab\"\n//       >\n//         <PendingForAcceptence\n//           CountPendingForAcceptence={CountPendingForAcceptence}\n//         />\n//       </div>\n\n//       <div\n//         class=\"tab-pane fade\"\n//         id=\"incomplete\"\n//         role=\"tabpanel\"\n//         aria-labelledby=\"pills-incomplete-tab\"\n//       >\n//         <InCompleteData CountIncomplete={CountIncomplete} />\n//       </div>\n\n//       <div\n//         class=\"tab-pane fade\"\n//         id=\"complete\"\n//         role=\"tabpanel\"\n//         aria-labelledby=\"pills-complete-tab\"\n//       >\n//         <CompleteData CountComplete={CountComplete} />\n//       </div>\n//     </div>\n//   </div>\n// </div>;\n{\n  /* <button onClick={() => setTabIndex(1)}>go to 1st tab</button> */\n}\n","/var/www/html/Mazars_Pannel/src/pages/TL/EditProposal/EditProposal.js",["1389","1390","1391","1392","1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403","1404"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport Payment from \"./Payment\";\nimport Select from \"react-select\";\nimport Alerts from \"../../../common/Alerts\";\n\n\n\nfunction EditComponent() {\n\n  const alert = useAlert();\n  const { register, handleSubmit, reset } = useForm();\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [custId, setCustId] = useState(\"\");\n  const [store, setStore] = useState(null);\n  const [amount, setAmount] = useState();\n  const [date, setDate] = useState();\n\n  const [payment, setPayment] = useState([]);\n  const [installment, setInstallment] = useState([]);\n\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [proposal, setProposal] = useState({\n    query: \"\",\n    name: \"\",\n    fixed_amount: \"\",\n    payable: \"\",\n    description: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n  });\n\n\n  const { query, name, description, fixed_amount,\n    due_date, installment_amount } = proposal;\n\n  useEffect(() => {\n    getQuery();\n  }, []);\n\n\n  const getQuery = () => {\n    axios.get(`${baseUrl}/tl/getProposalDetail?id=${id}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setProposal({\n          name: res.data.result.name,\n          query: res.data.result.assign_no,\n          fixed_amount: res.data.result.amount,\n          description: res.data.result.description,\n          installment_amount: res.data.result.installment_amount,\n          due_date: res.data.result.due_date,\n        });\n\n        var payment_terms = res.data.result.payment_terms\n        var no_of_installment = res.data.result.no_of_installment\n\n        const data1 = {\n          label: payment_terms,\n          value: payment_terms,\n        }\n\n        const data2 = {\n          label: no_of_installment,\n          value: no_of_installment,\n        }\n\n        // console.log(\"data1\", data1)\n        setPayment(data1);\n        setInstallment(data2);\n      }\n    });\n  };\n\n\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\n      setCustId(res.data.id);\n    };\n    getUser();\n  }, [id]);\n\n\n\n  const onSubmit = (value) => {\n    console.log(value);\n\n    console.log(\"amount\", amount);\n    console.log(\"date\", date);\n\n\n\n    var lumsum = value.p_inst_date\n    setDate(lumsum)\n\n    let formData = new FormData();\n\n    formData.append(\"assign_no\", value.p_assingment);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"type\", \"tl\");\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"description\", value.description);\n    formData.append(\"customer_id\", custId);\n    formData.append(\"assign_id\", id);\n\n    formData.append(\"amount_type\", \"fixed\");\n    formData.append(\"amount\", value.p_fixed);\n    formData.append(\"installment_amount\", amount);\n    formData.append(\"payment_terms\", payment.value);\n    formData.append(\"no_of_installment\", installment.value);\n\n    payment.label == \"lumpsum\" ?\n      formData.append(\"due_date\", lumsum) :\n      formData.append(\"due_date\", date)\n\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/updateProposal`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          // getQuery();\n\n          var variable = \"Proposal Updated Successfully \"\n          Alerts.SuccessNormal(variable)\n          history.push(\"/teamleader/proposal\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n\n\n  const paymentAmount = (data) => {\n    console.log(\"paymentAmount\", data)\n\n    var array1 = []\n    Object.entries(data).map(([key, value]) => {\n      console.log(\"val\", value);\n      array1.push(value)\n    });\n    console.log(\"array1\", array1);\n\n    setAmount(array1);\n  };\n\n  const paymentDate = (data) => {\n    console.log(\"paymentDate\", data)\n\n    var array2 = []\n    Object.entries(data).map(([key, value]) => {\n      console.log(\"val\", value);\n      array2.push(value)\n    });\n    console.log(\"array2\", array2);\n    setDate(array2);\n  };\n\n\n  console.log(\"installment : \", installment.label)\n\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"7\">\n              <div class=\"btn ml-3\">\n                <h4>Edit Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n\n            <div style={{ display: \"flex\" }}>\n              <div class=\"col-md-6\">\n\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    class=\"form-control\"\n                    value={query}\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Fee</label>\n                  <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_type\"\n                    onChange={(e) => setStore(e.target.value)}\n                  >\n                    {/* <option value=\"\">--select type--</option> */}\n                    <option value=\"fixed\">Fixed Price</option>\n                  </select>\n                </div>\n\n\n                <div class=\"form-group\">\n                  <label>Fixed Price</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_fixed\"\n                    className=\"form-control\"\n                    ref={register}\n                    placeholder=\"Enter Fixed Price\"\n                    defaultValue={fixed_amount}\n                  />\n                </div>\n\n\n                <div class=\"form-group\">\n                  <label>Scope of Work</label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"textarea\"\n                    rows=\"3\"\n                    name=\"description\"\n                    defaultValue={description}\n                    ref={register}\n                  ></textarea>\n                </div>\n              </div>\n\n\n              <div class=\"col-md-6\">\n\n                <div class=\"form-group\">\n                  <label>Customer Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    class=\"form-control\"\n                    value={name}\n                    ref={register}\n                  />\n                </div>\n\n\n                <div class=\"form-group\">\n                  <label>Payment Terms</label>\n                  <Select\n                    closeMenuOnSelect={true}\n                    onChange={setPayment}\n                    value={payment}\n                    options={paymentsTerms}\n                  />\n\n                </div>\n\n                {payment.label == \"lumpsum\" ? (\n                  <div class=\"form-group\">\n                    <label>Due Dates</label>\n                    <input\n                      type=\"date\"\n                      name=\"p_inst_date\"\n                      className=\"form-control\"\n                      ref={register}\n                      placeholder=\"Enter Hourly basis\"\n                      defaultValue={due_date}\n                    />\n                  </div>\n                ) :\n                  payment.label == \"installment\" ? (\n                    <div class=\"form-group\">\n                      <label>No of Installments</label>\n\n                      <Select\n                        closeMenuOnSelect={true}\n                        onChange={setInstallment}\n                        value={installment}\n                        options={noInstallments}\n                      />\n\n                    </div>\n                  )\n                    : \"\"\n                }\n                {\n                  payment.label == \"lumpsum\"\n                    ?\n                    \"\"\n                    :\n                    <Payment\n                      installment={installment.label}\n                      paymentAmount={paymentAmount}\n                      paymentDate={paymentDate}\n                      installment_amount={installment_amount}\n                      due_date={due_date}\n                    />\n                }\n              </div>\n            </div>\n\n            <div class=\"form-group col-md-6\">\n              <button type=\"submit\" class=\"btn btn-primary\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditComponent;\n\nconst paymentsTerms = [\n  {\n    value: \"lumpsum\",\n    label: \"lumpsum\",\n  },\n  {\n    value: \"installment\",\n    label: \"installment\",\n  },\n];\n\nconst noInstallments = [\n  {\n    value: \"2\",\n    label: \"2\",\n  },\n  {\n    value: \"3\",\n    label: \"3\",\n  },\n  {\n    value: \"4\",\n    label: \"4\",\n  },\n];\n\n\n\n\n{/* {store == \"hourly\" && (\n                  <div class=\"form-group\">\n                    <label>Hourly basis</label>\n                    <input\n                      type=\"text\"\n                      name=\"p_hourly\"\n                      className=\"form-control\"\n                      ref={register}\n                      placeholder=\"Enter Hourly basis\"\n                    />\n                  </div>\n                )}\n                {store == \"mixed\" && (\n                  <div>\n                    <div class=\"form-group\">\n                      <label>Mixed</label>\n                      <input\n                        type=\"text\"\n                        name=\"p_fixed\"\n                        className=\"form-control\"\n                        ref={register}\n                        placeholder=\"Enter Fixed Price\"\n                      />\n                    </div>\n                    <div class=\"form-group\">\n                      <input\n                        type=\"text\"\n                        name=\"p_hourly\"\n                        className=\"form-control\"\n                        ref={register}\n                        placeholder=\"Enter Hourly basis\"\n                      />\n                    </div>\n                  </div>\n                )} */}\n{/* <Select\n                    options={paymentsTerms}\n                    value={payment}\n                  // defaultValue={payment}\n                  /> */}\n\n{/* <select\n                    className=\"form-control\"\n                    name=\"p_payment_terms\"\n                    aria-label=\"Default select example\"\n                    ref={register}\n                    onChange={(e) => setPayment(e.target.value)}\n\n                  >\n                    <option value=\"\">--select--</option>\n                    <option value=\"Lumpsum\">Lumpsum</option>\n                    <option value=\"Installment\">Installment</option>\n                  </select> */}\n\n{/* <select\n                        className=\"form-control\"\n                        name=\"p_no_installments\"\n                        aria-label=\"Default select example\"\n                        ref={register}\n                        onChange={(e) => setInstallment(e.target.value)}\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                      </select> */}","/var/www/html/Mazars_Pannel/src/pages/Admin/PendingReceived/PendingRecevived.js",["1405","1406","1407","1408","1409","1410"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\n\nfunction PendingRecevied() {\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setAssingmentNo(res.data.result[0].assign_no);\n        }\n      });\n    };\n\n    getSubmittedAssingment();\n    getQuery();\n  }, [assingNo]);\n\n  console.log(assingNo);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setDisplayQuery(res.data.result);\n        }\n      });\n  };\n\n     //change date format\n     function ChangeFormateDate(oldDate) {\n      console.log(\"date\", oldDate);\n      if (oldDate == null) {\n        return null;\n      }\n      return oldDate.toString().split(\"-\").reverse().join(\"-\");\n    }\n    \n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              {/* <p>{assingNo}</p> */}\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {submitData.map((p, i) => (\n            <div class=\"card-body\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Titles</th>\n                    <th scope=\"col\">Data</th>\n                  </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope=\"row\">Query No</th>\n                    <td>{p.assign_no}</td>\n                  </tr>\n                <tr>\n                    <th scope=\"row\">Query Status</th>\n                    <td>{p.status}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facts of the case</th>\n                    <td>{p.fact_case}</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      Timelines within which Opinion is Required\n                    </th>\n                    <td colspan=\"1\">{p.Timelines}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">specific questions</th>\n                    <td colspan=\"1\">\n                      {diaplaySpecific.map((p, i) => (\n                        <p>{p.text}</p>\n                      ))}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Documents</th>\n                    <td>\n                      {p.upload_doc_1 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_2 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_3 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Format in which Opinion is required</th>\n                    <td colspan=\"1\">\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                      <p>\n                        {p.softcopy_digitally_assigned === \"1\" &&\n                          \"SoftCopy- Digitally Signed\"}\n                      </p>\n\n                      <p>\n                        {p.printout_physically_assigned === \"1\" &&\n                          \"Printout- Physically Signed\"}\n                      </p>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Action</th>\n                    <td>\n                    {p.allocation_status == \"0\" || p.allocation_status == \"3\"  ? (\n                        <Link to={`/admin/queryassing/${p.id}`}>\n                        <i class=\"fa fa-share\"></i>\n                      </Link>\n                      ) : (                  \n                       null\n                      )}\n                    </td>\n                  </tr>\n                 \n                </tbody>\n              </table>\n\n              <table class=\"table table-bordered\">\n                {displayQuery.length > 0 && (\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                        Additional Queries\n                      </th>\n                      <th scope=\"col\">Date Submission</th>\n                      <th scope=\"col\">Documents</th>\n                    </tr>\n                  </thead>\n                )}\n\n                {displayQuery.map((p, i) => (\n                  <tbody>\n                    <tr key={i}>\n                      <td>{p.additional_queries}</td>\n                      <td>{ChangeFormateDate(p.created)}</td>\n                      <td>\n                        {p.upload_doc == \"\" ? (\n                          \"\"\n                        ) : (\n                          <p>\n                            <a\n                              href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc}`}\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                          </p>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          ))}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default PendingRecevied;\n","/var/www/html/Mazars_Pannel/src/pages/TL/PendingReceived/PendingReceived.js",["1411","1412","1413","1414","1415"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\n\nfunction PendingRecevied() {\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const alert = useAlert();\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  useEffect(() => {\n    getQueryDetails();\n    getAdditionalQuery();\n  }, [assingNo]);\n\n  const getQueryDetails = () => {\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setSubmitData(res.data.result);\n        setDisplaySpecific(res.data.additional_queries);\n        setAssingmentNo(res.data.result[0].assign_no);\n      }\n    });\n  };\n\n  const getAdditionalQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setDisplayQuery(res.data.result);\n        }\n      });\n  };\n\n\n\n\n  const acceptHandler = (key) => {\n    console.log(\"acceptHandler\", key);\n\n    let formData = new FormData();\n    formData.append(\"set\", 1);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"response-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Query accepted\");\n          history.goBack()\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const rejectHandler = (key) => {\n    console.log(\"rejectHandler\", key);\n\n    let formData = new FormData();\n    formData.append(\"set\", 0);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", key.id);\n    formData.append(\"allocation_id\", key.allocation_id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Query rejected\");\n          history.goBack()\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n \n\n     //change date format\n     function ChangeFormateDate(oldDate) {\n      console.log(\"date\", oldDate);\n      if (oldDate == null) {\n        return null;\n      }\n      return oldDate.toString().split(\"-\").reverse().join(\"-\");\n    }\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              {/* <p>{assingNo}</p> */}\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          {submitData.map((p, i) => (\n            <div class=\"card-body\">\n              <table class=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Titles</th>\n                    <th scope=\"col\">Data</th>\n                  </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <th scope=\"row\">Query No</th>\n                    <td>{p.assign_no}</td>\n                  </tr>\n                <tr>\n                    <th scope=\"row\">Query Status</th>\n                    <td>{p.status}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Facts of the case</th>\n                    <td>{p.fact_case}</td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">\n                      Timelines within which Opinion is Required\n                    </th>\n                    <td colspan=\"1\">{p.Timelines}</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">specific questions</th>\n                    <td colspan=\"1\">\n                      {diaplaySpecific.map((p, i) => (\n                        <p>{p.text}</p>\n                      ))}\n                    </td>\n                  </tr>\n\n                  <tr>\n                    <th scope=\"row\">Documents</th>\n                    <td>\n                      {p.upload_doc_1 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_2 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n\n                      {p.upload_doc_3 == null ? (\n                        \"\"\n                      ) : (\n                        <p>\n                          <a\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\n                          >\n                            <i class=\"fa fa-photo\"></i>\n                          </a>\n                        </p>\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Format in which Opinion is required</th>\n                    <td colspan=\"1\">\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                      <p>\n                        {p.softcopy_digitally_assigned === \"1\" &&\n                          \"SoftCopy- Digitally Signed\"}\n                      </p>\n\n                      <p>\n                        {p.printout_physically_assigned === \"1\" &&\n                          \"Printout- Physically Signed\"}\n                      </p>\n                    </td>\n                  </tr>\n                  \n                  <tr>\n                    <th scope=\"row\">Accept / Reject</th>\n                    <td>\n                    <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"space-evenly\",\n                          color: \"#6967ce\",\n                          cursor: \"pointer\",\n                        }}\n                        id=\"div1\"\n                      >\n                        <div\n                          id=\"accept\"\n                          title=\"Accept Assignment\"\n                          onClick={() => acceptHandler(p)}\n                        >\n                          <i class=\"fa fa-check\" style={{ color: \"green\" }}></i>\n                        </div>\n                        <div\n                          id=\"reject\"\n                          title=\"Reject Assignment\"\n                          onClick={() => rejectHandler(p)}\n                        >\n                          <i class=\"fa fa-times\" style={{ color: \"red\" }}></i>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n\n              <table class=\"table table-bordered\">\n                {displayQuery.length > 0 && (\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                        Additional Queries\n                      </th>\n                      <th scope=\"col\">Date Submission</th>\n                      <th scope=\"col\">Documents</th>\n                    </tr>\n                  </thead>\n                )}\n\n                {displayQuery.map((p, i) => (\n                  <tbody>\n                    <tr key={i}>\n                      <td>{p.additional_queries}</td>\n                      <td>{ChangeFormateDate(p.created)}</td>\n                      <td>\n                        {p.upload_doc == \"\" ? (\n                          \"\"\n                        ) : (\n                          <p>\n                            <a\n                              href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc}`}\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                          </p>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))}\n              </table>\n            </div>\n          ))}\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default PendingRecevied;\n","/var/www/html/Mazars_Pannel/src/components/Search-Filter/SearchFilter.js",["1416","1417","1418","1419"],"/var/www/html/Mazars_Pannel/src/components/Admin-Header/NavWrapper.js",["1420","1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1432"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport CustomerNotification from \"./CustomerNotification\";\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport './index.css'\nimport CommonServices from \"../../common/common\";\n\nfunction NavWrapper(props) {\n  const { color, logout, name } = props;\n\n  const history = useHistory();\n  const userId = window.localStorage.getItem(\"userid\");\n  const adminkey = window.localStorage.getItem(\"adminkey\");\n  const tlkey = window.localStorage.getItem(\"tlkey\");\n\n\n\n  return (\n    <>\n      <div class=\"navbar-wrapper\">\n        <div class=\"navbar-container\" style={{ background: color }}>\n          <div class=\"collapse navbar-collapse show\" id=\"navbar-mobile\">\n            <ul class=\"nav navbar-nav mr-auto float-left\">\n              <li class=\"nav-item d-block d-md-none\">\n                <a\n                  class=\"nav-link nav-menu-main menu-toggle hidden-xs is-active\"\n                  href=\"#\"\n                >\n                  <i class=\"fa fa-bars\"></i>\n                </a>\n              </li>\n\n              <li class=\"nav-item dropdown navbar-search\">\n                <ul class=\"dropdown-menu\">\n                  <li class=\"arrow_box\">\n                    <form>\n                      <div class=\"input-group search-box\">\n                        <div class=\"position-relative has-icon-right full-width\">\n                          <input\n                            class=\"form-control\"\n                            id=\"search\"\n                            type=\"text\"\n                            placeholder=\"Search here...\"\n                          />\n                          <div class=\"form-control-position navbar-search-close\">\n                            <i class=\"fa fa-times\"> </i>\n                          </div>\n                        </div>\n                      </div>\n                    </form>\n                  </li>\n                </ul>\n              </li>\n\n              <li>\n                <h4 class=\"brand-text text-white\">{CommonServices.capitalizeFirstLetter(name)}</h4>\n              </li>\n            </ul>\n\n            <ul class=\"nav navbar-nav float-right\">\n\n              {name == \"customer\" && (\n                <CustomerNotification tokenKey={userId} name={name} />\n              )}\n\n              {name == \"admin\" && (\n                <CustomerNotification tokenKey={adminkey} name={name} />\n              )}\n\n              {name == \"teamleader\" && (\n                <CustomerNotification tokenKey={tlkey} name={name} />\n              )}\n\n\n              <li class=\"dropdown dropdown-user nav-item\">\n                <a\n                  class=\"dropdown-toggle nav-link dropdown-user-link\"\n                  href=\"#\"\n                  data-toggle=\"dropdown\"\n                  aria-expanded=\"false\"\n                >\n                  <span class=\"avatar avatar-online\">\n                    <img\n                      src=\"https://cdn1.vectorstock.com/i/1000x1000/40/30/user-glyph-icon-web-and-mobile-admin-sign-vector-18444030.jpg\"\n                      alt=\"avatar\"\n                    />\n                    <i style={{ paddingLeft: \"6px\" }}></i>\n                  </span>\n                </a>\n\n                <div class=\"dropdown-menu dropdown-menu-right\">\n                  <div class=\"arrow_box_right\">\n\n                    {name == \"customer\" && (\n                      <div class=\"dropdown-item\"\n                        style={{ cursor: \"pointer\" }}>\n                        <VpnKeyIcon />\n                        <Link to=\"/customer/change-password\">\n                          <span style={{ marginLeft: \"3px\" }}>Change Password</span>\n                        </Link>\n                      </div>\n                    )}\n\n                    <div\n                      class=\"dropdown-item\"\n                      onClick={logout}\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      <LockOpenIcon />\n                      <span style={{ marginLeft: \"10px\" }}>Logout</span>\n                    </div>\n\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default NavWrapper;\n\n{/* <i class=\"fa fa-sign-out\"></i> */ }\n{/* <i class=\"fa fa-sign-out\"></i> */ }\n       // <li class=\"dropdown dropdown-notification nav-item\">\n                //   {countNotification ? (\n                //     <div>\n                //       <a\n                //         class=\"nav-link nav-link-label\"\n                //         href=\"#\"\n                //         data-toggle=\"dropdown\"\n                //       >                   \n                //         <a href=\"#\" class=\"notification\">\n                //           <span>Inbox</span>\n                //           <span class=\"badge\">{countNotification}</span>\n                //         </a>\n                //       </a>\n\n                //       <div\n                //         class=\"dropdown-menu dropdown-menu-right\"\n                //         style={{ height: \"300px\", overflowY: \"scroll\" }}\n                //       >\n                //         <div class=\"arrow_box_right\">\n                //           {notification.map((p, i) => (\n                //             <div\n                //               class=\"dropdown-item\"\n                //               style={{ padding: \"0\", fontSize: \"12px\" }}\n                //             >\n                //               <Link to={`/customer/view-notification/${p.id}`}>\n                //                 <p\n                //                   class=\"dropdown-item\"\n                //                   style={{ cursor: \"pointer\" }}\n                //                   onClick={() => readNotification(p.id)}\n                //                 >\n                //                   {p.message}\n                //                 </p>\n                //               </Link>\n                //             </div>\n                //           ))}\n                //         </div>\n                //       </div>\n                //     </div>\n                //   ) : null}\n                // </li>\n\n\n  // const [notification, setNotification] = useState([]);\n  // const [countNotification, setCountNotification] = useState(\"\");\n\n  // const [notificationAdmin, setNotificationAdmin] = useState([]);\n  // const [countNotificationAdmin, setCountNotificationAdmin] = useState(\"\");\n\n  // const [notificationTl, setNotificationTl] = useState([]);\n  // const [countNotificationTl, setCountNotificationTl] = useState(\"\");\n\n\n\n  // useEffect(() => {\n  //   getNotificationCust();\n  // }, [userId]);\n\n\n  // const getNotificationCust = () => {\n  //   axios\n  //     .get(`${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}&type_list=uread`)\n  //     .then((res) => {\n  //       console.log(res);\n  //       if (res.data.code === 1) {\n  //         setNotification(res.data.result);\n  //         setCountNotification(res.data.result.length);\n  //       }\n  //     });\n  // };\n\n  // useEffect(() => {\n  //   getNotificationTl();\n  // }, [tlkey]);\n\n  // const getNotificationTl = () => {\n  //   axios\n  //     .get(`${baseUrl}/customers/getNotification?id=${JSON.parse(tlkey)}&type_list=uread`)\n  //     .then((res) => {\n  //       console.log(res);\n  //       if (res.data.code === 1) {\n  //         setNotificationAdmin(res.data.result);\n  //         setCountNotificationTl(res.data.result.length);\n  //       }\n  //     });\n  // };\n\n  // useEffect(() => {\n  //   getNotificationAdmin();\n  // }, [adminkey]);\n\n  // const getNotificationAdmin = () => {\n  //   axios\n  //     .get(`${baseUrl}/customers/getNotification?id=${JSON.parse(adminkey)}&type_list=uread`)\n  //     .then((res) => {\n  //       console.log(res);\n  //       if (res.data.code === 1) {\n  //         setNotificationTl(res.data.result);\n  //         setCountNotificationAdmin(res.data.result.length);\n  //       }\n  //     });\n  // };\n\n\n\n  // // readnotification\n  // const readNotification = (id) => {\n  //   axios\n  //     .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\n  //     .then(function (response) {\n  //       console.log(\"delete-\", response);\n  //       if (response.data.code === 1) {\n  //         console.log(response.data.result);\n  //         // history.push(\"/customer/proposal\");\n  //       }\n  //     })\n  //     .catch((error) => {\n  //       console.log(\"erroror - \", error);\n  //     });\n  // };\n\n","/var/www/html/Mazars_Pannel/src/components/Search-Filter/CustomerFilter.js",["1433","1434","1435","1436","1437","1438","1439","1440","1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\n\nfunction CustomerFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const { records,\n    setRecords, setData, getData, id,\n    query,\n    InprogressAllocation,\n    InprogressQueryProposal,\n    DeclinedQuery,\n\n    proposal,\n    inprogressProposal,\n    acceptedProposal,\n    declinedProposal,\n    paymentStatus,\n    assignment } = props;\n\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  console.log(\"current_date :\", current_date);\n  const [item] = useState(current_date);\n\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    console.log(`sub-cat ${value}`);\n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetCategory ..\");\n    setSelectedData([]);\n    setStore2([]);\n    setTax2([]);\n    getData();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    setSelectedData([]);\n    setStore2([]);\n    getData();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"store2 :\", store2);\n\n    if (query == \"query\") {\n      axios\n        .get(\n          `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (InprogressAllocation == \"InprogressAllocation\") {\n      axios\n        .get(\n          `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (InprogressQueryProposal == \"InprogressQueryProposal\") {\n      axios\n        .get(\n          `${baseUrl}/customers/incompleteAssignments?uid=${JSON.parse(id)}&status=2&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n\n    if (DeclinedQuery == \"DeclinedQuery\") {\n      axios\n        .get(\n          `${baseUrl}/customers/declinedQueries?uid=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&pcat_id=${selectedData}&status=${data.p_status}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n\n    if (proposal == \"proposal\") {\n      axios\n        .get(\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n    }\n\n    if (inprogressProposal == \"inprogressProposal\") {\n      axios\n        .get(\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (acceptedProposal == \"acceptedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=2&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (declinedProposal == \"declinedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=3pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n\n    if (assignment == \"assignment\") {\n      axios\n        .get(\n          `${baseUrl}/customers/completeAssignments?user=${JSON.parse(\n            id\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (paymentStatus == \"paymentStatus\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(id)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-12 d-flex\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"form-inline\">\n                <div class=\"form-group mb-2\">\n                  <Select\n                    style={{ width: 130 }}\n                    placeholder=\"Select Category\"\n                    defaultValue={[]}\n                    onChange={handleCategory}\n                    value={selectedData}\n                  >\n                    <Option value=\"1\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\n                    </Option>\n                    <Option value=\"2\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\n                    </Option>\n                  </Select>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <Select\n                    mode=\"multiple\"\n                    style={{ width: 250 }}\n                    placeholder=\"Select Sub Category\"\n                    defaultValue={[]}\n                    onChange={handleSubCategory}\n                    value={store2}\n                    allowClear\n                  >\n                    {tax2.map((p, index) => (\n                      <Option value={p.id} key={index}>\n                        {p.details}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n\n                <div>\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mb-2 ml-3\"\n                    onClick={resetCategory}\n                  >\n                    X\n                  </button>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">From</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateFrom\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    max={item}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">To</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateTo\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    defaultValue={item}\n                    max={item}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  {query == \"query\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress Queries</option>\n                      <option value=\"2\">Completed Queries</option>\n                      <option value=\"3\">Declined Queries</option>\n                    </select>\n                  )}\n\n                  {InprogressAllocation == \"InprogressAllocation\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Inprogress; Allocation</option>\n                      <option value=\"5\">Inprogress; Proposals</option>\n                      <option value=\"6\">Inprogress; Assignments</option>\n                    </select>\n                  )}\n\n\n                  {DeclinedQuery == \"DeclinedQuery\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Admin Declined; Queries</option>\n                      <option value=\"2\">Customer Declined; Queries</option>\n                      <option value=\"3\">Customer Declined; Proposals</option>\n                      <option value=\"4\">Customer Declined; Payment</option>\n                    </select>\n                  )}\n\n                  {proposal == \"proposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress Proposals</option>\n                      <option value=\"2\">Accepted Proposals</option>\n                      <option value=\"3\">Declined Proposals</option>\n                    </select>\n                  )}\n\n                  {inprogressProposal == \"inprogressProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Inprogress; Preparation</option>\n                      <option value=\"5\"> Inprogress; Acceptance</option>\n                    </select>\n                  )}\n\n                  {paymentStatus == \"paymentStatus\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Unpaid</option>\n                      <option value=\"2\">Paid</option>\n                    </select>\n                  )}\n\n                  {assignment == \"assignment\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress</option>\n                      <option value=\"2\">Completed</option>\n                      <option value=\"3\">Payment Declined</option>\n                    </select>\n                  )}\n\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                  Search\n                </button>\n                <Reset />\n\n                {/* <div class=\"form-group mx-sm-2 mb-2\">\n                  <label className=\"form-select form-control\"\n                  >Total Records : {records}</label>\n                </div> */}\n\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CustomerFilter;\n\n\n","/var/www/html/Mazars_Pannel/src/views/ForgetPassword/ForgetPassword.js",["1452","1453","1454","1455","1456","1457","1458"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n// import NewPassword from \"../NewPassword/NewPassword\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\n\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n});\n\nfunction ForgetPassword(props) {\n  console.log(\"props : \", props.location.email);\n\n  const alert = useAlert();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/forgototp`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n\n          var variable = \"Otp Sent Your Email \"\n          Alerts.SuccessNormal(variable)\n\n          props.history.push(`/customer/new-password/${value.p_email}`)\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const valueHandler = () => {\n    var item = props.location.email\n    if (item == \"null\") {\n      console.log(\"item : \", item)\n      // return '';\n    } else {\n      return item\n    }\n  }\n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Forgot Password</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Email</label>\n              <input\n                type=\"text\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_email,\n                })}\n                name=\"p_email\"\n                ref={register}\n                placeholder=\"Enter Email\"\n                defaultValue={valueHandler()}\n              />\n              {errors.p_email && (\n                <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n\n{\n  /* <Link\n            to={{\n              pathname: `/customer/new-password`,\n              email:`${value.p_email}`\n            }}\n          ></Link>; */\n}\n\n  // const sendEmail = (email) => {\n  //   return (\n  //     <Link\n  //       to={{\n  //         pathname: `/customer/new-password`,\n  //         email: `${email}`,\n  //       }}\n  //     ></Link>\n  //   );\n  // };\n","/var/www/html/Mazars_Pannel/src/views/NewPassword/NewPassword.js",["1459","1460","1461","1462","1463"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { useParams } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\n\n\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n  const { id } = useParams();\n\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    // formData.append(\"user_id\", value.p_name);\n    formData.append(\"email\", value.p_email);\n    formData.append(\"code\", value.p_code);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n\n          var variable = \"Reset Password Successfully \"\n          Alerts.SuccessNormal(variable)\n\n\n\n          reset();\n          props.history.push(\"/customer/signin\");\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n      <Header cust_sign=\"cust_sign\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Reset Password</h2>\n          </div>\n\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email</label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter Email\"\n                    defaultValue={id}\n                    ref={register({\n                      required: \"This field is required\",\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">OTP</label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_code,\n                    })}\n                    name=\"p_code\"\n                    placeholder=\"Enter otp\"\n                    ref={register({\n                      required: \"This field is required\",\n                    })}\n                  />\n                  {errors.p_code && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_code.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password</label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    name=\"p_password\"\n                    ref={register({\n                      required: \"This field is required\",\n                      pattern: {\n                        value:\n                          /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n                        message:\n                          \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\n                      },\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password</label>\n                  <input\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    ref={register({\n                      required: \"This field is required\",\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"password doesn 't match\",\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n\n\n          </form>\n\n\n\n\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default NewPassword;\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required user id\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_code: yup.string().required(\"required otp \"),\n//   // p_password: yup.string().required(\"required password\"),\n//   // p_confirm_password: yup.string().required(\"required confirm password\"),\n// });\n\n\n\n{/* <form onSubmit={handleSubmit(onSubmit)}>\n\n            <div className=\"form-group\">\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Email</label>\n                <input\n                  type=\"text\"\n                  className={classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_email,\n                  })}\n                  name=\"p_email\"\n                  placeholder=\"Enter Email\"\n                  defaultValue={id}\n                  ref={register({\n                    required: \"This field is required\",\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: \"Please enter valid email address\",\n                    },\n                  })}\n                />\n                {errors.p_email && (\n                  <div className=\"invalid-feedback\">\n                    {errors.p_email.message}\n                  </div>\n                )}\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label\">OTP</label>\n                <input\n                  type=\"text\"\n                  className={classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_code,\n                  })}\n                  name=\"p_code\"\n                  placeholder=\"Enter otp\"\n                  ref={register({\n                    required: \"This field is required\",\n                  })}\n                />\n                {errors.p_code && (\n                  <div className=\"invalid-feedback\">\n                    {errors.p_code.message}\n                  </div>\n                )}\n              </div>\n              <label className=\"form-label\">New Password</label>\n              <input\n                type={isPasswordShow ? \"text\" : \"password\"}\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_password,\n                })}\n                placeholder=\"Enter Your Password\"\n                name=\"p_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  pattern: {\n                    value:\n                      /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n                    message:\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\n                  },\n                })}\n              />\n              <i\n                className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                onClick={togglePasssword}\n              />\n              {errors.p_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_password.message}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Confirm Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_confirm_password,\n                })}\n                placeholder=\"Confirm Password\"\n                name=\"p_confirm_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  validate: (value) =>\n                    value === getValues(\"p_password\") ||\n                    \"password doesn 't match\",\n                })}\n              />\n              {errors.p_confirm_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_confirm_password.message}\n                </div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        */}","/var/www/html/Mazars_Pannel/src/views/ChangePassword/ChangePassword.js",["1464","1465"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../../assets/css/style.css\";\nimport \"../../assets/css/media.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Layout from \"../../components/Layout/Layout\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport Alerts from \"../../common/Alerts\";\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required user id\"),\n//   p_password: yup.string().required(\"required password\"),\n//   p_confirm_password: yup.string().required(\"required confirm password\"),\n// });\n\nfunction ChangePassword(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const alert = useAlert();\n  // const { handleSubmit, register, reset, errors } = useForm({\n  //   resolver: yupResolver(Schema),\n  // });\n\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\n\n\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const togglePasssword2 = () => {\n    setPasswordShow2(!isPasswordShow2)\n  };\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"id\", JSON.parse(userId));\n    formData.append(\"user_id\", value.p_email);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/passChange`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n\n          var variable = \"Change Password Successfully\"\n          Alerts.SuccessNormal(variable)\n          reset();\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n          reset();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Change Password</h2>\n          </div>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email </label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    placeholder=\"Enter email id\"\n                    ref={register({\n                      required: \"This field is required\",\n                      pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                        message: \"Please enter valid email address\",\n                      },\n                    })}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}{\" \"}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">New Password</label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_password,\n                    })}\n                    placeholder=\"Enter Your Password\"\n                    name=\"p_password\"\n                    ref={register({\n                      required: \"This field is required\",\n                      pattern: {\n                        value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n                        message:\n                          \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\n                      },\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.p_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Confirm Password</label>\n                  <input\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\n                    id=\"password\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_confirm_password,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"p_confirm_password\"\n                    ref={register({\n                      required: \"This field is required\",\n                      validate: (value) =>\n                        value === getValues(\"p_password\") ||\n                        \"password doesn 't match\",\n                    })}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword2}\n                  />\n                  {errors.p_confirm_password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_confirm_password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n            </div>\n\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n\n          </form>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default ChangePassword;\n\n\n\n","/var/www/html/Mazars_Pannel/src/pages/Admin/TeamLeaderTab/Header/index.js",[],["1466","1467"],"/var/www/html/Mazars_Pannel/src/components/FontawsomeIcons/index.js",[],["1468","1469"],"/var/www/html/Mazars_Pannel/src/components/DataTable/Header/index.js",[],["1470","1471"],"/var/www/html/Mazars_Pannel/src/pages/TL/PendingForAllocation/PendingForAllocation.js",["1472","1473","1474","1475","1476","1477","1478","1479"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\nfunction PendingForAllocation() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [pendingAllocation, setPendingAllocation] = useState([]);\n\n  useEffect(() => {\n    getPendingForAllocation();\n  }, []);\n\n  const getPendingForAllocation= () => {\n    axios\n      .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setPendingAllocation(res.data.result);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.query_date);\n        var updatedate = row.query_date.split(\" \")[0];\n        console.log(updatedate);\n        if (updatedate == null) {\n          return null;\n        }\n        return updatedate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.Exp_Delivery_Date);\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query Allocation\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n                color: \"green\",\n              }}\n            >\n              <Link to={`/teamleader/queryassing/${row.id}`}>\n                <i class=\"fa fa-share\"></i>\n              </Link>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div>\n      <Card>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={pendingAllocation}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default PendingForAllocation;\n",["1480","1481"],"/var/www/html/Mazars_Pannel/src/pages/TL/PendingForProposal/PendingForProposal.js",["1482","1483","1484","1485","1486","1487","1488","1489"],"/var/www/html/Mazars_Pannel/src/pages/TL/PendingForPayment/PendingForPayment.js",["1490","1491","1492","1493","1494","1495","1496","1497"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n\n\nfunction PendingForPayment() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [pendingForPayment, setPendingForPayment] = useState([]);\n\n  useEffect(() => {\n    getPendingForPayment();\n  }, []);\n\n  const getPendingForPayment = () => {\n    axios\n      .get(`${baseUrl}/tl/getProposals?uid=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n            setPendingForPayment(res.data.result);\n        }\n      });\n  };\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      // formatter: function dateFormat(cell, row) {\n      //   console.log(\"dt\", row.query_date);\n      //   var date = row.query_date\n      //   var updatedate = date.split(\" \")[0];\n      //   console.log(updatedate);\n      //   if (updatedate == null) {\n      //     return null;\n      //   }\n      //   return updatedate.toString().split(\"-\").reverse().join(\"-\");\n      // },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },   \n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Assignment No\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Amount Accepted\",\n      dataField: \"accepted_amount\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Payment Terms\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Payments Received\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Outstanding payment\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n  ];\n\n  return (\n    <div>\n      <Card>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={pendingForPayment}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default PendingForPayment;\n","/var/www/html/Mazars_Pannel/src/components/Admin-Header/CustomerNotification.js",["1498","1499","1500","1501"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link, useHistory } from \"react-router-dom\";\n\n\nfunction CustomerNotification({ tokenKey, name }) {\n\n    // const userId = window.localStorage.getItem(\"userid\");\n\n    const [notification, setNotification] = useState([]);\n    const [countNotification, setCountNotification] = useState(\"\");\n\n    useEffect(() => {\n        getNotification();\n    }, [tokenKey]);\n\n    const getNotification = () => {\n        axios\n            .get(`${baseUrl}/customers/getNotification?id=${JSON.parse(tokenKey)}&type_list=uread`)\n            .then((res) => {\n                console.log(res);\n                if (res.data.code === 1) {\n                    setNotification(res.data.result);\n                    setCountNotification(res.data.result.length);\n                }\n            });\n    };\n\n\n    // readnotification\n    const readNotification = (id) => {\n        axios\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\n            .then(function (response) {\n                console.log(\"delete-\", response);\n                if (response.data.code === 1) {\n                    console.log(response.data.result);\n                }\n            })\n            .catch((error) => {\n                console.log(\"erroror - \", error);\n            });\n    };\n\n    return (\n        <>\n            <div>\n                <li class=\"dropdown dropdown-notification nav-item\">\n                    {countNotification ? (\n                        <div>\n                            <a\n                                class=\"nav-link nav-link-label\"\n                                href=\"#\"\n                                data-toggle=\"dropdown\"\n                            >\n                                <a href=\"#\" class=\"notification\">\n                                    <span>Inbox</span>\n                                    <span class=\"badge\">{countNotification}</span>\n                                </a>\n                            </a>\n\n                            <div\n                                class=\"dropdown-menu dropdown-menu-right\"\n                                style={{ height: \"300px\", overflowY: \"scroll\" }}\n                            >\n                                <div class=\"arrow_box_right\">\n                                    {notification.map((p, i) => (\n                                        <div\n                                            class=\"dropdown-item\"\n                                            style={{ padding: \"0\", fontSize: \"12px\" }}\n                                        >\n                                            <Link to={`/${name}/view-notification/${p.id}`}>\n                                                <p\n                                                    class=\"dropdown-item\"\n                                                    style={{ cursor: \"pointer\" }}\n                                                    onClick={() => readNotification(p.id)}\n                                                >\n                                                    {p.message}\n                                                </p>\n                                            </Link>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        </div>\n                    ) : null}\n                </li>\n            </div>\n        </>\n    );\n}\n\n\nexport default CustomerNotification;\n\n\n\n// {\n//   /* <i class=\"ft-book\"></i> */\n// }\n\n","/var/www/html/Mazars_Pannel/src/pages/TL/QueryTab2/QueryTab2.js",["1502","1503","1504","1505","1506","1507","1508","1509","1510"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\n// import \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\n\nimport PendingForAcceptence from \"../PendingForAcceptence/PendingForAcceptence\";\nimport InCompleteData from \"../InCompleteData/InCompleteData\";\nimport PendingForPayment from \"../PendingForPayment/PendingForPayment\";\n\n\nfunction QueriesTab() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [pendingAcceptence, setPendingAcceptence] = useState(\"\");\n  const [incomplete, setIncomplete] = useState(\"\");\n  const [complete, setComplete] = useState(\"\");\n\n  const CountPendingForAcceptence = (data) => {\n    setPendingAcceptence(data);\n  };\n\n  const CountIncomplete = (data) => {\n    setIncomplete(data);\n  };\n\n  const CountComplete = (data) => {\n    setComplete(data);\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <ul\n            class=\"nav nav-pills mb-3\"\n            style={{ justifyContent: \"space-around\" }}\n            id=\"pills-tab\"\n            role=\"tablist\"\n          >\n            <li class=\"nav-item\" role=\"presentation\">\n              <a\n                class=\"nav-link text-white active\"\n                id=\"pills-query-tab\"\n                data-toggle=\"pill\"\n                href=\"#query\"\n                role=\"tab\"\n                aria-controls=\"pills-query\"\n                aria-selected=\"false\"\n              >\n                All query\n              </a>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n              <a\n                class=\"nav-link text-white\"\n                id=\"pills-pendingAllocation-tab\"\n                data-toggle=\"pill\"\n                href=\"#pendingAllocation\"\n                role=\"tab\"\n                aria-controls=\"pills-pendingAllocation\"\n                aria-selected=\"false\"\n              >\n                Pending For allocation\n              </a>\n            </li>\n\n            <li class=\"nav-item\" role=\"presentation\">\n              <a\n                class=\"nav-link text-white\"\n                id=\"pills-pendingPayment-tab\"\n                data-toggle=\"pill\"\n                href=\"#pendingPayment\"\n                role=\"tab\"\n                aria-controls=\"pills-pendingPayment\"\n                aria-selected=\"false\"\n              >\n                Pending For Payment\n              </a>\n            </li>\n          </ul>\n\n          <div class=\"tab-content\" id=\"pills-tabContent\">\n            <div\n              class=\"tab-pane fade show active\"\n              id=\"query\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-query-tab\"\n            >\n              <PendingForAcceptence\n                CountPendingForAcceptence={CountPendingForAcceptence}\n              />\n            </div>\n\n            <div\n              class=\"tab-pane fade\"\n              id=\"pendingAllocation\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-pendingAllocation-tab\"\n            >\n              <InCompleteData CountIncomplete={CountIncomplete} />\n            </div>\n\n            <div\n              class=\"tab-pane fade\"\n              id=\"pendingPayment\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-pendingPayment-tab\"\n            >\n              <PendingForPayment />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n","/var/www/html/Mazars_Pannel/src/views/EditQuery/EditQuery.js",["1511","1512","1513","1514","1515","1516","1517","1518","1519"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport axios from \"axios\";\nimport { baseUrl, ImageUrl } from \"../../config/config\";\nimport * as yup from \"yup\";\nimport { useAlert } from \"react-alert\";\nimport { Card, CardHeader, Row, Col } from \"reactstrap\";\nimport { Spinner } from \"reactstrap\";\nimport Select from \"react-select\";\nimport DeleteQuery from \"./DeleteQuery\";\nimport Alerts from \"../../common/Alerts\";\n\nfunction EditQuery(props) {\n  // const { Option } = Select;\n  const alert = useAlert();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const { handleSubmit, register, errors, reset, control, setValue } = useForm({\n    defaultValues: {\n      users: [{ query: \"\" }],\n    },\n  });\n\n  const { append, remove, fields } = useFieldArray({\n    control,\n    name: \"users\",\n  });\n\n  const userId = window.localStorage.getItem(\"userid\");\n  const category = window.localStorage.getItem(\"category\");\n\n  // const [selectedData, setSelectedData] = useState(\"\");\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [load, setLoad] = useState(false);\n  const [selectedOption, setSelectedOption] = useState([]);\n  const [purposeOption, setPurposeOption] = useState([]);\n\n  useEffect(() => {\n    getQuery();\n  }, []);\n\n\n  const getQuery = () => {\n    axios.get(`${baseUrl}/customers/getQueryDetails?id=${id}`).then((res) => {\n      console.log(res);\n      console.log(\"result\", res.data.result[0]);\n      console.log(\"result\", res.data.result[0].purpose_opinion);\n\n      // var purposeItem = res.data.result[0].purpose_opinion;\n      // console.log(\"purposeItem-\", typeof purposeItem);\n\n      if (res) {\n        // setLoad(true);\n\n        var specific = res.data.result[0].specific_query;\n        if (specific == \"undefined\") {\n        } else var sepData = JSON.parse(specific);\n        reset({\n          users: sepData,\n        });\n\n        var value = res.data.result[0].assessment_year;\n        var purposeItem = res.data.result[0].purpose_opinion;\n\n        console.log(\"assem\", value);\n        try {\n          var myObj = JSON.parse(value);\n          var myPurpose = JSON.parse(purposeItem);\n\n          setSelectedOption(myObj);\n          setPurposeOption(myPurpose);\n        } catch (e) {\n          return false;\n        }\n\n        console.log(\"purpose[0]\", purpose[0]);\n        setValue(\"fact_case\", res.data.result[0].fact_case);\n        setValue(\"case_name\", res.data.result[0].case_name);\n        setValue(\"p_Softcopy_word\", Boolean(+res.data.result[0].softcopy_word));\n        setValue(\n          \"p_Softcopy_digital\",\n          Boolean(+res.data.result[0].softcopy_digitally_assigned)\n        );\n        setValue(\n          \"p_Softcopy_physical\",\n          Boolean(+res.data.result[0].printout_physically_assigned)\n        );\n        setValue(\"p_timelines\", res.data.result[0].Timelines);\n        setQueryDocs(res.data.queries_document);\n      }\n    });\n  };\n\n  const onSubmit = (value) => {\n    console.log(\"value\", value);\n    setLoad(true);\n    let formData = new FormData();\n\n    var uploadImg = value.upload;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        console.log(\"pics\", value.upload[i].pics[0]);\n\n        let a = value.upload[i].pics[0];\n        formData.append(\"upload_1[]\", a);\n      }\n    }\n    formData.append(\"fact\", value.fact_case);\n    formData.append(\"specific\", JSON.stringify(value.specific));\n    formData.append(\"timelines\", value.p_timelines);\n    formData.append(\"user\", JSON.parse(userId));\n    formData.append(\"id\", id);\n    formData.append(\"cid\", JSON.parse(category));\n    formData.append(\"softcopy_word\", Number(value.p_Softcopy_word));\n    formData.append(\n      \"softcopy_digitally_assigned\",\n      Number(value.p_Softcopy_digital)\n    );\n    formData.append(\n      \"printout_physically_assigned\",\n      Number(value.p_Softcopy_physical)\n    );\n    formData.append(\"case_name\", value.case_name);\n    formData.append(\"assessment_year\", JSON.stringify(selectedOption));\n    formData.append(\"purpose\", JSON.stringify(purposeOption));\n\n    axios\n      .post(`${baseUrl}/customers/PostEditQuestion`, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n        },\n      })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          var msg = response.data.message\n          var variable = \"Query Successfully Updated\"\n          Alerts.SuccessMsg(variable, msg)\n\n          props.history.push(\"/customer/queries\");\n        } else {\n          setLoad(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Update Query</p>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <DeleteQuery id={id} />\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardHeader>\n          <div class=\"col-xl-8 col-lg-8 col-md-12 py-4\">\n            {load ? (\n              <Spinner size=\"sm\" color=\"primary\" />\n            ) : (\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Facts of the case</label>\n                      <textarea\n                        className=\"form-control\"\n                        id=\"textarea\"\n                        rows=\"6\"\n                        name=\"fact_case\"\n                        ref={register}\n                      ></textarea>\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"question_query mb-2\">\n                      <label className=\"form-label\">\n                        Specific Questions for advisory\n                      </label>\n                      <div\n                        className=\"btn btn-primary\"\n                        onClick={() => append({ query: \"\" })}\n                      >\n                        +\n                      </div>\n                    </div>\n\n                    {fields.map((item, index) => (\n                      <div className=\"question_query_field mb-2\" key={index}>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          ref={register}\n                          name={`specific[${index}].query`}\n                          defaultValue={`${item.query}`}\n                          placeholder=\"Specify your query\"\n                        />\n                        <div\n                          className=\"btn btn-primary ml-2\"\n                          onClick={() => remove(index)}\n                        >\n                          -\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Case name</label>\n                      <input\n                        type=\"text\"\n                        name=\"case_name\"\n                        ref={register}\n                        className=\"form-control\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Assessment year</label>\n\n                      <Select\n                        closeMenuOnSelect={false}\n                        onChange={setSelectedOption}\n                        value={selectedOption}\n                        isMulti\n                        options={assessment_year}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <ImageUploads register={register} control={control} />\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">\n                        Format in which Opinion is required\n                      </label>\n                      <br />\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          name=\"p_Softcopy_word\"\n                          ref={register}\n                        />\n                        <label className=\"form-check-label\">\n                          Softcopy - Word/ Pdf\n                        </label>\n                      </div>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          name=\"p_Softcopy_digital\"\n                          ref={register}\n                        />\n                        <label className=\"form-check-label\">\n                          SoftCopy- Digitally Signed\n                        </label>\n                      </div>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"checkbox\"\n                          name=\"p_Softcopy_physical\"\n                          ref={register}\n                        />\n                        <label className=\"form-check-label\">\n                          Printout- Physically Signed\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">\n                        Timelines within which Opinion is Required\n                      </label>\n                      <br />\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"p_timelines\"\n                          ref={register}\n                          value=\"Urgent, (4-5 Working Days)\"\n                        // disabled\n                        />\n                        <label>Urgent, (4-5 Working Days)</label>\n                      </div>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"p_timelines\"\n                          ref={register}\n                          value=\"Regular (10-12 Working Days)\"\n                        // disabled\n                        />\n                        <label>Regular (10-12 Working Days)</label>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">Display Documents</label>\n                      <br />\n\n                      <>\n                        <div>\n                          {queryDocs.map((p, i) => (\n                            <ul>\n                              <li>\n                                <a\n                                  href={`${ImageUrl}/${p.assign_no}/${p.name}`}\n                                  target=\"_blank\"\n                                >\n                                  <i\n                                    class=\"fa fa-photo\"\n                                    style={{ width: \"50\", height: \"20\" }}\n                                  ></i>\n                                  <span style={{marginLeft:\"10px\"}}>{p.name}</span>\n                                </a>\n                              </li>\n                            </ul>\n                          ))}\n\n                        </div>\n                      </>\n                    </div>\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <div className=\"mb-3\">\n                      <label className=\"form-label\">\n                        Purpose for which Opinion is sought\n                      </label>\n                      <Select\n                        closeMenuOnSelect={false}\n                        onChange={setPurposeOption}\n                        value={purposeOption}\n                        isMulti\n                        options={purpose}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Update\n                </button>\n              </form>\n            )}\n          </div>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default EditQuery;\n\nconst ImageUploads = ({ register, control }) => {\n  const { append, fields, remove } = useFieldArray({\n    control,\n    name: \"upload\",\n  });\n\n  return (\n    <>\n      <div className=\"question_query mb-2\">\n        <label className=\"form-label\">Upload Your Document</label>\n        <div className=\"btn btn-primary\" onClick={() => append({ pics: \"\" })}>\n          +\n        </div>\n      </div>\n\n      {fields.map((item, index) => (\n        <div className=\"question_query_field mb-2\" key={index}>\n          <input\n            type=\"file\"\n            name={`upload[${index}].pics`}\n            ref={register()}\n            className=\"form-control-file manage_file\"\n            defaultValue={item.pics}\n          />\n          <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\n            -\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n\nconst assessment_year = [\n  {\n    value: \"2010-11\",\n    label: \"2010-11\",\n  },\n  {\n    value: \"2011-12\",\n    label: \"2011-12\",\n  },\n  {\n    value: \"2012-13\",\n    label: \"2012-13\",\n  },\n  {\n    value: \"2013-14\",\n    label: \"2013-14\",\n  },\n  {\n    value: \"2014-15\",\n    label: \"2014-15\",\n  },\n  {\n    value: \"2015-16\",\n    label: \"2015-16\",\n  },\n  {\n    value: \"2016-17\",\n    label: \"2016-17\",\n  },\n  {\n    value: \"2017-18\",\n    label: \"2017-18\",\n  },\n  {\n    value: \"2018-19\",\n    label: \"2018-19\",\n  },\n  {\n    value: \"2019-20\",\n    label: \"2019-20\",\n  },\n  {\n    value: \"2020-21\",\n    label: \"2020-21\",\n  },\n  {\n    value: \"2021-22\",\n    label: \"2021-22\",\n  },\n  {\n    value: \"2022-23\",\n    label: \"2022-23\",\n  }\n];\n\nconst purpose = [\n  { value: \"Assessment\", label: \"Assessment\" },\n  { value: \"Appeal\", label: \"Appeal\" },\n  { value: \"Filing before any Court\", label: \"Filing before any Court\" },\n  {\n    value: \"Filing before any Authority\",\n    label: \"Filing before any Authority\",\n  },\n  { value: \"Others\", label: \"Others\" },\n];\n\n// console.log(\"value :\", value);\n\n// console.log(\"arr\", arr);\n// const [user, setUser] = useState({\n//   fact: \"\",\n//   case_assement: \"\",\n//   p_Softcopy_word: \"\",\n//   p_Softcopy_digital: \"\",\n//   p_Softcopy_physical: \"\",\n// });\n// const {\n//   fact,\n//   case_assement,\n//   p_Softcopy_word,\n//   p_Softcopy_digital,\n//   p_Softcopy_physical,\n// } = user;\n{\n  /* <SelectComponent\n                        assessmentYear={assessmentYear}\n                        updateValue={updateValue}\n                      /> */\n}\n\n\n\n{/* <table class=\"table table-bordered\">\n                            <tr>\n                              <th scope=\"col\">#</th>\n                              <th scope=\"col\">View</th>\n                              <th scope=\"col\">Name</th>\n                            </tr>\n                            {queryDocs.map((p, i) => (\n                              <tr>\n                                <td>{i + 1}</td>\n                                <td>\n                                  <a\n                                    href={`http://65.0.220.156/mazarapi/assets/image/${p.assign_no}/${p.name}`}\n                                    target=\"_blank\"\n                                  >\n                                    <i\n                                      class=\"fa fa-photo\"\n                                      style={{ width: \"50\", height: \"20\" }}\n                                    ></i>\n                                  </a>\n                                </td>\n                                <td>{p.name}</td>\n                              </tr>\n                            ))}\n                          </table> */}","/var/www/html/Mazars_Pannel/src/components/Search-Filter/AdminFilter.js",["1520","1521","1522","1523","1524","1525","1526","1527","1528","1529","1530","1531","1532","1533","1534","1535","1536","1537"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\n\nfunction AdminFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const {\n    records,\n    setRecords,\n    setData,\n    getData,\n    acceptedProposal,\n    pendingAcceptedProposal,\n    declinedProposal,\n    declinedQueries,\n    pendingForProposal,\n    pendingAlloation,\n    allQueries,\n    assignment,\n    paymentStatus,\n    allProposal\n  } = props;\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  console.log(\"current_date :\", current_date);\n  const [item] = useState(current_date);\n\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    console.log(`selected ${value}`);\n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetCategory ..\");\n    setSelectedData([]);\n    setTax2([])\n    setStore2([]);\n    getData();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    setSelectedData([]);\n    setStore2([]);\n    getData();\n  };\n\n\n  const onSubmit = (data) => {\n\n    console.log(\"data\", data)\n    // console.log(\"End data :\", data.p_dateTo);\n\n    // var dateto = data.p_dateTo\n\n    // var end_date;\n    // if (dateto == \"\") {\n\n    //   console.log(\"call\")\n\n    // var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n    // console.log(\"current_date :\", current_date);\n    //   end_date = current_date\n\n    //   // if (current_date) {\n    //   //   setItem(current_date)\n    //   // }\n\n    // } else {\n    //   end_date = dateto\n    //   // setItem(dateto)\n\n    // }\n\n    console.log(\"item\", item)\n    console.log(\"data\", data)\n\n\n\n    if (acceptedProposal == \"acceptedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getProposals?status1=2&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (pendingAcceptedProposal == \"pendingAcceptedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getProposals?status1=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (declinedProposal == \"declinedProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getProposals?&status=6&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (declinedQueries == \"declinedQueries\") {\n      axios\n        .get(\n          `${baseUrl}/admin/declinedQueries?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (pendingForProposal == \"pendingForProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/pendingProposal?category=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (allQueries == \"allQueries\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getAllQueries?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (pendingAlloation == \"pendingAlloation\") {\n      axios\n        .get(\n          `${baseUrl}/admin/pendingAllocation?category=${store2}&date1=${data.p_dateFrom}&date2=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (paymentStatus == \"paymentStatus\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (allProposal == \"allProposal\") {\n      axios\n        .get(\n          `${baseUrl}/admin/getProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status1=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-12 d-flex\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"form-inline\">\n                <div class=\"form-group mb-2\">\n                  <Select\n                    style={{ width: 130 }}\n                    placeholder=\"Select Category\"\n                    defaultValue={[]}\n                    onChange={handleCategory}\n                    value={selectedData}\n                  >\n                    <Option value=\"1\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\n                    </Option>\n                    <Option value=\"2\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\n                    </Option>\n                  </Select>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <Select\n                    mode=\"multiple\"\n                    style={{ width: 250 }}\n                    placeholder=\"Select Sub Category\"\n                    defaultValue={[]}\n                    onChange={handleSubCategory}\n                    value={store2}\n                    allowClear\n                  >\n                    {tax2.map((p, index) => (\n                      <Option value={p.id} key={index}>\n                        {p.details}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n                <div>\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mb-2 ml-3\"\n                    onClick={resetCategory}\n                  >\n                    X\n                  </button>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">From</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateFrom\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    max={item}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">To</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateTo\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    defaultValue={item}\n                    max={item}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  {allQueries == \"allQueries\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress Queries</option>\n                      <option value=\"2\">Completed Queries</option>\n                      <option value=\"3\">Declined Queries</option>\n\n                    </select>\n                  )}\n\n                  {pendingAcceptedProposal == \"pendingAcceptedProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Inprogress; Preparation</option>\n                      <option value=\"5\"> Inprogress; Acceptance</option>\n                    </select>\n                  )}\n\n                  {pendingForProposal == \"pendingForProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress; Preparation</option>\n                      <option value=\"2\"> Inprogress; Acceptance</option>\n                    </select>\n                  )}\n\n                  {allProposal == \"allProposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Inprogress Proposals</option>\n                      <option value=\"2\">Accepted Proposals</option>\n                      <option value=\"3\">Customer Declined Proposals</option>\n                    </select>\n                  )}\n\n                  {declinedQueries == \"declinedQueries\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Admin Declined; Queries</option>\n                      <option value=\"2\">Customer Declined; Queries</option>\n                      <option value=\"3\">Customer Declined; Proposals</option>\n                      <option value=\"4\">Customer Declined; Payment</option>\n                    </select>\n                  )}\n\n                  {paymentStatus == \"paymentStatus\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Unpaid</option>\n                      <option value=\"2\">Paid</option>\n                    </select>\n                  )}\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                  Search\n                </button>\n                <Reset />\n\n                {/* <div class=\"form-group mb-2\">\n                  <label className=\"form-select form-control\"\n                  >Total Records : {records}</label>\n                </div> */}\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AdminFilter;\n","/var/www/html/Mazars_Pannel/src/views/Frsh/Fresh.js",["1538","1539","1540","1541","1542","1543","1544","1545","1546","1547"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Card, CardHeader, Row, Col } from \"reactstrap\";\nimport { useForm, useFieldArray, Controller, useWatch } from \"react-hook-form\";\nimport UserForm from \"./UserForm\";\n\nfunction Fresh() {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const [data, setData] = useState([]);\n\n\n  const { register, control, handleSubmit, reset } = useForm();\n\n  useEffect(() => {\n    getQuery();\n  }, []);\n\n  const getQuery = () => {\n    axios.get(`${baseUrl}/tl/getTeamLeader?id=212`).then((res) => {\n      console.log(res);\n      // var value = res.data.result[0].cat_name;\n      if (res.data.code === 1) {\n        setData(res.data.result[0]);\n      }   \n    });\n  };\n\n  const onSubmit = (data) => console.log(\"data\", data);\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n        <UserForm data={data}/>\n        </CardHeader>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Fresh;\n\n\n",["1548","1549"],"/var/www/html/Mazars_Pannel/src/views/EditQuery/field.js",[],["1550","1551"],"/var/www/html/Mazars_Pannel/src/components/QueryDetails/QueryDetails.js",["1552","1553","1554","1555","1556","1557","1558","1559","1560","1561","1562","1563"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport BasicQuery from \"./BasicQuery\";\nimport ProposalDetails from \"./ProposalDetails\";\nimport AssignmentDetails from \"./AssignmentDetails\";\nimport AdditionalQuery from \"./AdditionalQuery\";\nimport AddAdditionalQuery from \"./AddAdditionalQuery\";\nimport DraftReports from \"./DraftReports\";\nimport CommonServices from \"../../common/common\";\nimport {\n  TabContent, TabPane, Nav, NavItem, NavLink, Card, Button,\n  CardTitle, CardText, Row, Col\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport Feedback from './Feedback'\n\n\nfunction QueryDetails({\n  p,\n  diaplaySpecific,\n  diaplayProposal,\n  diaplayHistory,\n  diaplayAssignment,\n  displayQuery,\n  assingNo,\n  getQuery,\n  customerQuery,\n  queryDocs,\n  purpose,\n  paymentDetails,\n  year,\n  feedback,\n  reports\n}) {\n  console.log(\"p\", p);\n\n  // const history = useHistory();\n\n  // const [addModal, setAddModal] = useState(false);\n  // const addHandler = () => {\n  //   console.log(\"addhandler\")\n  //   setAddModal(!addModal);\n  // }\n\n\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  }\n\n  return (\n    <>\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '1' })}\n              onClick={() => { toggle('1'); }}\n            >\n              Basic Query Information\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '2' })}\n              onClick={() => { toggle('2'); }}\n            >\n              Proposal\n            </NavLink>\n          </NavItem>\n\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '3' })}\n              onClick={() => { toggle('3'); }}\n            >\n              Assignment\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '4' })}\n              onClick={() => { toggle('4'); }}\n            >\n              Feedback\n            </NavLink>\n          </NavItem>\n\n          {/* <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '5' })}\n              onClick={() => { toggle('5'); }}\n            >\n              UPLOAD ADDITIONAL DOCUMENTS\n            </NavLink>\n          </NavItem> */}\n\n        </Nav>\n\n        <TabContent activeTab={activeTab}>\n          <TabPane tabId=\"1\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <BasicQuery\n                    p={p}\n                    diaplaySpecific={diaplaySpecific}\n                    purpose={purpose}\n                    queryDocs={queryDocs}\n                    year={year}\n                  />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <ProposalDetails\n                    diaplayProposal={diaplayProposal}\n                    diaplayHistory={diaplayHistory}\n                    paymentDetails={paymentDetails}\n                    p={p}\n                  />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n\n          <TabPane tabId=\"3\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <AssignmentDetails\n                    diaplayAssignment={diaplayAssignment}\n                    p={p}\n                    diaplayProposal={diaplayProposal}\n                    reports={reports}\n                    assingNo={assingNo}\n                  />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n\n\n          <TabPane tabId=\"4\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <Feedback\n                    feedback={feedback}\n                  />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane>\n\n          {/* <TabPane tabId=\"5\">\n            <Row>\n              <Col sm=\"12\">\n                <Card body>\n                  <div class=\"d-flex\">\n                    <div class=\"additional\">\n                      {customerQuery == \"customerQuery\" && (\n                        <button\n                          type=\"button\"\n                          class=\"btn btn-info\"\n                          onClick={addHandler}\n                        >\n                          Additional Document\n                        </button>\n                      )}\n                    </div>\n                  </div>\n\n                  <AddAdditionalQuery\n                    addHandler={addHandler}\n                    addModal={addModal}\n                    assingNo={assingNo}\n                    getQuery={getQuery}\n                  />\n                  <AdditionalQuery\n                    displayQuery={displayQuery}\n                  />\n                </Card>\n              </Col>\n            </Row>\n          </TabPane> */}\n\n        </TabContent>\n      </div>\n\n    </>\n  );\n}\n\nexport default QueryDetails;\n\n\n\n\n{\n  /* <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n              <p class=\"m-0\" style={{ fontSize: \"15px\" }}>\n                Submitted on\n              </p>\n              <p class=\"m-0\" style={{ fontSize: \"15px\" }}>\n                : {CommonServices.changeFormateDate(p.created)}\n              </p>\n            </div>\n            <div class=\"d-flex\">\n              <div class=\"additional\">\n                {customerQuery == \"customerQuery\" && (\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-info\"\n                    onClick={addHandler}\n                  >\n                    Additional Query\n                  </button>\n                )}\n              </div>\n            </div> */\n}\n\n{/* <div class=\"card-body\">\n        <BasicQuery\n          p={p}\n          diaplaySpecific={diaplaySpecific}\n          purpose={purpose}\n          queryDocs={queryDocs}\n          year={year}\n        />\n        <ProposalDetails\n          diaplayProposal={diaplayProposal}\n          diaplayHistory={diaplayHistory}\n          paymentDetails={paymentDetails}\n          p={p}\n        />\n        <AssignmentDetails\n          diaplayAssignment={diaplayAssignment}\n          p={p}\n          diaplayProposal={diaplayProposal}\n        />\n\n        <AddAdditionalQuery\n          addHandler={addHandler}\n          addModal={addModal}\n          assingNo={assingNo}\n          getQuery={getQuery}\n        />\n\n        <DraftReports id={p.id} />\n        <div class=\"d-flex\">\n          <div class=\"additional\">\n            {customerQuery == \"customerQuery\" && (\n              <button\n                type=\"button\"\n                class=\"btn btn-info\"\n                onClick={addHandler}\n              >\n                Additional Query\n              </button>\n            )}\n          </div>\n        </div>\n\n\n        <AdditionalQuery displayQuery={displayQuery} />\n\n\n      </div> */}","/var/www/html/Mazars_Pannel/src/components/QueryDetails/BasicQuery.js",["1564","1565","1566","1567"],"import React, { useState, useEffect } from \"react\";\nimport CommonServices from \"../../common/common\";\n\nfunction BasicQuery({ p, diaplaySpecific, queryDocs, year, purpose }) {\n  // console.log(\"p\", p);\n\n  return (\n    <>\n      <div>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"18px\",\n          }}\n        >\n          Basic Query Information\n        </p>\n        <table class=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\" style={{ width: \"400px\" }}>Titles</th>\n              <th scope=\"col\">Data</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th scope=\"row\">Query No</th>\n              <td>{p.assign_no}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Query Date</th>\n              <td>{CommonServices.changeFormateDate(p.created)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Customer ID</th>\n              <td>{p.user_id}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Category</th>\n              <td>{p.cat_name}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Sub- Category</th>\n              <td>{p.sub_cat_name}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Name of the Case</th>\n              <td>{p.case_name}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Assessment Year(s)</th>\n              <td>\n                {year.map((p, i) => (\n                  <p key={i}>{p.value}</p>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Fact of the Case</th>\n              <td>{p.fact_case}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Uploaded Documents</th>\n              <td>\n                {queryDocs.map((p, i) => (\n                  <p style={{ display: \"flex\" }}>\n                    <a\n                      href={`http://65.0.220.156/mazarapi/assets/image/${p.assign_no}/${p.name}`}\n                      target=\"_blank\"\n                    >\n                      <i class=\"fa fa-photo\"></i>\n                    </a>\n                    <p style={{ marginLeft: \"15px\" }}>{p.name}</p>\n                  </p>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Specific questions</th>\n              <td>\n                {diaplaySpecific.map((p, i) => (\n                  <div>{i + 1}. {p.text}</div>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Purpose for which Opinion is sought</th>\n              <td colspan=\"1\">\n                {purpose.map((p, i) => (\n                  <p key={i}>{p.value}</p>\n                ))}\n              </td>\n\n            </tr>\n            <tr>\n              <th scope=\"row\">Format in which Opinion is required</th>\n              <td colspan=\"1\">\n                <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\n                <p>\n                  {p.softcopy_digitally_assigned === \"1\" &&\n                    \"SoftCopy- Digitally Signed\"}\n                </p>\n\n                <p>\n                  {p.printout_physically_assigned === \"1\" &&\n                    \"Printout- Physically Signed\"}\n                </p>\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Timelines within which Opinion is Required</th>\n              <td colspan=\"1\">{p.Timelines}</td>\n            </tr>\n            {\n              p.query_status == \"-1\" ?\n                <tr>\n                  <th scope=\"row\">Admin Declined Query</th>\n                  <td colspan=\"1\">\n                    {\n                      p.notes\n                    }\n                  </td>\n                </tr>\n                : null\n            }\n\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default BasicQuery;\n","/var/www/html/Mazars_Pannel/src/components/QueryDetails/ProposalDetails.js",["1568","1569","1570","1571","1572","1573","1574","1575","1576","1577"],"import React from \"react\";\nimport CommonServices from \"../../common/common\";\nimport DownloadLink from \"react-download-link\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\n\n\n\nfunction ProposalDetails({\n  diaplayProposal,\n  diaplayHistory,\n  paymentDetails,\n  p,\n}) {\n\n\n  const {\n    amount,\n    accepted_amount,\n    payment_received,\n    cust_accept_date,\n    proposal_date,\n    description,\n\n    amount_type,\n    amount_fixed,\n    amount_hourly,\n\n    payment_terms,\n    no_of_installment,\n    installment_amount,\n    due_date,\n  } = diaplayProposal;\n\n  const { tlname, date_of_allocation } = diaplayHistory;\n\n\n  console.log(\"installment_amount\", installment_amount.split(','));\n\n\n  const installAmount = (data) => {\n    var item = data.split(',')\n    console.log(\"item\", item);\n\n    const dataItem = item.map((p, i) =>\n    (\n      <>\n        <p>{CommonServices.removeTime(p)}</p>\n      </>\n    ))\n    return dataItem;\n  }\n\n\n  // console.log(\"payment_terms\", JSON.parse(payment_terms))\n  return (\n    <>\n      <div>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"18px\",\n          }}\n        >\n          Proposal and Payment Details\n        </p>\n\n        <table class=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\" style={{ width: \"400px\" }}>Titles</th>\n              <th scope=\"col\">Data</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th scope=\"row\">Date of Allocation</th>\n              <td>{CommonServices.changeFormateDate(date_of_allocation)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Name of Team Leader</th>\n              <td>{tlname}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Name of Tax Professional(s)</th>\n              <td></td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Date of Proposal</th>\n              <td>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                  {CommonServices.removeTime(proposal_date)}\n                  {proposal_date && (\n                    <a\n                      class=\"btn btn-primary btn-sm\"\n                      href={`${baseUrl}/customers/dounloadpdf?id=${p.id}`}\n                      role=\"button\"\n                    >\n                      Download\n                    </a>\n                  )}\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Scope of Work</th>\n              <td>{description}</td>\n            </tr>\n\n            <tr>\n              <th scope=\"row\">Amount</th>\n              <td>\n                <tr>\n                  <th>Amount Type</th>\n                  <th>Price</th>\n                </tr>\n                <tr>\n                  <td>{CommonServices.capitalizeFirstLetter(amount_type)}</td>\n                  <td>\n                    {\n                      amount_type == \"fixed\" ?\n                        amount_fixed\n                        :\n                        amount_type == \"hourly\" ?\n                          amount_hourly\n                          :\n                          amount_type == \"mixed\" ?\n                            <div>\n                              <p>Fixed : {amount_fixed}</p>\n                              <p>Hourly : {amount_hourly}</p>\n                            </div>\n                            :\n                            \"\"\n                    }\n                  </td>\n                </tr>\n              </td>\n            </tr>\n\n            <tr>\n              <th scope=\"row\">Payment Terms</th>\n              {\n                payment_terms == \"lumpsum\" ?\n                  <td>\n                    <tr>\n                      <th>Payment Type</th>\n                      <th>Due Dates</th>\n                    </tr>\n                    <tr>\n                      <td>{CommonServices.capitalizeFirstLetter(payment_terms)}</td>\n                      <td>\n                        {CommonServices.removeTime(due_date)}\n                      </td>\n                    </tr>\n                  </td>\n                  :\n                  payment_terms == \"installment\" ?\n                    <td>\n                      <tr>\n                        <th>Payment Type</th>\n                        <th>No of Installments</th>\n                        <th>Installment Amount</th>\n                        <th>Due Dates</th>\n                      </tr>\n                      <tr>\n                        <td>{payment_terms}</td>\n                        <td>{no_of_installment}</td>\n                        <td>{installAmount(installment_amount)}</td>\n                        <td>{installAmount(due_date)}</td>\n                      </tr>\n                    </td>\n                    :\n                    \"\"\n              }\n\n            </tr>\n            <tr>\n              <th scope=\"row\">Proposed Amount</th>\n              <td>{amount}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Proposal Status</th>\n              <td>\n                {p.query_status == \"4\" && \"Inprogress\"}\n                {p.query_status == \"6\" && \"Declined\"}\n                {(p.query_status == \"5\" || p.query_status > 6) && \"Accepted\"}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Amount Accepted</th>\n              <td>{accepted_amount}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Date of Acceptance</th>\n              <td>{CommonServices.removeTime(cust_accept_date)}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Payment History</th>\n              <td>\n                <tr>\n                  <th>Date</th>\n                  <th>Amount</th>\n                </tr>\n                {paymentDetails.map((pay, i) => (\n                  <tr>\n                    <td>{CommonServices.removeTime(pay.payment_date)}</td>\n                    <td>{pay.paid_amount}</td>\n                  </tr>\n                ))}\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Payment Received</th>\n              <td>{payment_received}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Payment Due</th>\n              <td>{accepted_amount - payment_received}</td>\n            </tr>\n            <tr>\n              <th scope=\"row\">Payment Outstanding</th>\n              <td>{accepted_amount - payment_received}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default ProposalDetails;\n","/var/www/html/Mazars_Pannel/src/components/QueryDetails/AssignmentDetails.js",["1578","1579","1580","1581","1582","1583","1584","1585","1586","1587","1588","1589","1590","1591","1592","1593"],"/var/www/html/Mazars_Pannel/src/components/QueryDetails/AdditionalQuery.js",["1594","1595"],"import React from \"react\";\nimport CommonServices from \"../../common/common\";\n\nfunction AdditionalQuery({ displayQuery }) {\n  return (\n    <>\n      <div>\n        <p\n          style={{\n            textAlign: \"center\",\n            color: \"black\",\n            fontSize: \"18px\",\n          }}\n        >\n          ADDITIONAL QUERIES\n        </p>\n        <table class=\"table table-bordered\">\n          <thead>\n            <tr>\n              {/* <th scope=\"col\" style={{ width: \"33.3%\" }}>\n                Additional Queries\n              </th> */}\n              <th scope=\"col\">Date Submission</th>\n              <th scope=\"col\">Documents</th>\n            </tr>\n          </thead>\n          {displayQuery.map((p, i) => (\n            <tbody>\n              <tr key={i}>\n                {/* <td>{p.additional_queries}</td> */}\n                <td>{CommonServices.changeFormateDate(p.created)}</td>\n                <td>\n                  {p.upload_doc == \"\" ? (\n                    \"\"\n                  ) : (\n                    <p style={{ display: \"flex\" }}>\n                      <a\n                        href={`http://65.0.220.156/mazarapi/assets/image/${p.assign_no}/${p.upload_doc}`}\n                        target=\"_blank\"\n                      >\n                        <i class=\"fa fa-photo\"></i>\n                      </a>\n                      <p style={{ marginLeft: \"15px\" }}>{p.upload_doc}</p>\n                    </p>\n                  )}\n                </td>\n              </tr>\n            </tbody>\n          ))}\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default AdditionalQuery;\n","/var/www/html/Mazars_Pannel/src/components/QueryDetails/AddAdditionalQuery.js",["1596","1597","1598"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { useAlert } from \"react-alert\";\nimport Alerts from \"../../common/Alerts\";\n\nfunction AddAdditionalQuery({ addHandler, addModal, assingNo, getQuery }) {\n\n  console.log(\"assingNo :\", assingNo);\n\n  const alert = useAlert();\n  const { handleSubmit, register, reset } = useForm();\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"assign_no\", assingNo);\n    formData.append(\"upload\", value.p_upload[0]);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostAdditionalQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n\n          var variable = \"Document Uploaded Successfully\"\n          Alerts.SuccessNormal(variable)\n          reset();\n          getQuery();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n\n  return (\n    <>\n      <Modal isOpen={addModal} toggle={addHandler} size=\"md\">\n        <ModalHeader toggle={addHandler}>\n          UPLOAD DOCUMENTS\n          </ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Upload Your Document</label>\n              <input\n                type=\"file\"\n                name=\"p_upload\"\n                ref={register}\n                className=\"form-control-file\"\n              />\n            </div>\n\n            <div class=\"modal-footer\">\n              <button\n                type=\"submit\"\n                onClick={addHandler}\n                className=\"btn btn-primary\"\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </>\n  );\n}\n\nexport default AddAdditionalQuery;\n","/var/www/html/Mazars_Pannel/src/common/common.js",["1599","1600"],"//change date format\n\nconst changeFormateDate = (oldDate) => {\n  console.log(\"date\", oldDate);\n  if (oldDate == null) {\n    return null;\n  }\n  return oldDate.toString().split(\"-\").reverse().join(\"-\");\n};\n\n\n\n\n//remove time with date\nconst removeTime = (oldDate) => {\n  console.log(\"RemoveTime - \", oldDate);\n\n  if (oldDate == null) {\n    return null;\n  }\n  return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n};\n\n\n\n\n//removeDATE with TIME\nconst removeDate = (oldDate) => {\n  console.log(\"RemoveTime - \", oldDate);\n\n  if (oldDate == null) {\n    return null;\n  } else {\n    var split = oldDate.split(\" \");\n    var a = split[0];\n    var b = split[1];\n    return b;\n  }\n};\n\n\n//capitalizeFirstLetter\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n\nexport default {\n  changeFormateDate,\n  removeTime,\n  removeDate,\n  capitalizeFirstLetter\n};\n\n// var updatedate = oldDate.split(\" \")[0];\n// var updatedate = oldDate.slice(0, 10);\n","/var/www/html/Mazars_Pannel/src/components/Search-Filter/tlFilter.js",["1601","1602","1603","1604","1605","1606","1607","1608","1609"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\n\nfunction TeamFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const {\n    records,\n    setRecords,\n    setData,\n    getData,\n    pendingForAcceptence,\n    inCompleteQuery,\n    completeAssignment,\n    proposal,\n    paymentStatus,\n    assignment,\n  } = props;\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  console.log(\"current_date :\", current_date);\n  const [item] = useState(current_date);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    console.log(`selected ${value}`);\n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetCategory ..\");\n    setSelectedData([]);\n    setStore2([]);\n    setTax2([])\n    getData();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    setSelectedData([]);\n    setStore2([]);\n    getData();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"store2 :\", store2);\n\n    if (pendingForAcceptence == \"pendingForAcceptence\") {\n      axios\n        .get(\n          `${baseUrl}/tl/pendingQues?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n    }\n    if (inCompleteQuery == \"inCompleteQuery\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n    }\n    if (completeAssignment == \"completeAssignment\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getCompleteQues?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n\n            }\n          }\n        });\n    }\n\n    if (proposal == \"proposal\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getProposalTl?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n\n    if (paymentStatus == \"paymentStatus\") {\n      axios\n        .get(\n          `${baseUrl}/tl/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n              setRecords(res.data.result.length);\n            }\n          }\n        });\n    }\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-12 d-flex\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"form-inline\">\n                <div class=\"form-group mb-2\">\n                  <Select\n                    style={{ width: 130 }}\n                    placeholder=\"Select Category\"\n                    defaultValue={[]}\n                    onChange={handleCategory}\n                    value={selectedData}\n                  >\n                    <Option value=\"1\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\n                    </Option>\n                    <Option value=\"2\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\n                    </Option>\n                  </Select>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <Select\n                    mode=\"multiple\"\n                    style={{ width: 250 }}\n                    placeholder=\"Select Sub Category\"\n                    defaultValue={[]}\n                    onChange={handleSubCategory}\n                    value={store2}\n                    allowClear\n                  >\n                    {tax2.map((p, index) => (\n                      <Option value={p.id} key={index}>\n                        {p.details}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n\n                <div>\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mb-2 ml-3\"\n                    onClick={resetCategory}\n                  >\n                    X\n                  </button>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">From</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateFrom\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    max={item}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">To</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateTo\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                    defaultValue={item}\n                    max={item}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  {proposal == \"proposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Pending Preparation</option>\n                      <option value=\"2\">Pending Approval</option>\n                      <option value=\"3\">Accepted</option>\n                      <option value=\"4\">Declined</option>\n                    </select>\n                  )}\n\n                  {paymentStatus == \"paymentStatus\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Unpaid</option>\n                      <option value=\"2\">Paid</option>\n                    </select>\n                  )}\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                  Search\n                </button>\n                <Reset />\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\"\n                  >Total Records : {records}</label>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default TeamFilter;\n","/var/www/html/Mazars_Pannel/src/views/EditQuery/ImageUploads.js",["1610","1611","1612"],"/var/www/html/Mazars_Pannel/src/views/AssignmentTab/PaymentModal.js",["1613","1614","1615","1616","1617","1618","1619","1620","1621","1622","1623","1624"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\nimport CommonServices from \"../../common/common\";\n\n\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  pay,\n  getProposalData,\n}) {\n  const { handleSubmit, register } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n\n  const { id, amount, accepted_amount, paid_amount,\n    payment_terms, no_of_installment, installment_amount,\n    due_date, amount_type, amount_fixed, amount_hourly\n  } = pay;\n\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"status\", 8);\n    formData.append(\"amount\", value.p_amount);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PaymentPartialAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n\n          var variable = \"Payment Done Successfully \"\n          Alerts.SuccessNormal(variable)\n\n          getProposalData();\n          paymentHandler();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const installAmount = (data) => {\n    var item = data.split(',')\n    console.log(\"item\", item);\n\n    const dataItem = item.map((p, i) =>\n    (\n      <>\n        <p>{CommonServices.removeTime(p)}</p>\n      </>\n    ))\n    return dataItem;\n  }\n\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Payment</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <tr>\n              <th>Accepted Amount</th>\n              <td>{accepted_amount}</td>\n            </tr>\n            <tr>\n              <th>Paid Amount</th>\n              <td>{paid_amount}</td>\n            </tr>\n\n            <tr>\n              <th>{amount_type}</th>\n              <td>\n                {\n                  amount_type == \"fixed\" ?\n                    amount\n                    :\n                    amount_type == \"hourly\" ?\n                      amount_hourly\n                      :\n                      amount_type == \"mixed\" ?\n                        <div>\n                          <p>Fixed : {amount}</p>\n                          <p>Hourly : {amount_hourly}</p>\n                        </div>\n                        :\n                        \"\"\n                }\n              </td>\n            </tr>\n\n            <tr>\n              <th scope=\"row\">Payment Terms</th>\n              {\n                payment_terms == \"lumpsum\" ?\n                  <td>\n                    <tr>\n                      <th>Payment Type</th>\n                      <th>Due Dates</th>\n                    </tr>\n                    <tr>\n                      <td>{CommonServices.capitalizeFirstLetter(payment_terms)}</td>\n                      <td>\n                        {CommonServices.removeTime(due_date)}\n                      </td>\n                    </tr>\n                  </td>\n                  :\n                  payment_terms == \"installment\" ?\n                    <td>\n                      <tr>\n                        <th>Payment Type</th>\n                        <th>No of Installments</th>\n                        <th>Installment Amount</th>\n                        <th>Due Dates</th>\n                      </tr>\n                      <tr>\n                        <td>{payment_terms}</td>\n                        <td>{no_of_installment}</td>\n                        <td>{installAmount(installment_amount)}</td>\n                        <td>{installAmount(due_date)}</td>\n                      </tr>\n                    </td>\n                    :\n                    \"\"\n              }\n            </tr>\n\n          </table>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            {+accepted_amount == +paid_amount ? null : (\n              <div>\n                <div className=\"mb-3\">\n                  <input\n                    type=\"text\"\n                    name=\"p_amount\"\n                    ref={register}\n                    className=\"form-control\"\n                    defaultValue={accepted_amount - paid_amount}\n                    placeholder=\"enter amount\"\n                  />\n                </div>\n                <div class=\"modal-footer\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Pay\n                  </button>\n                </div>\n              </div>\n            )}\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/Reset.js",["1625","1626"],"import React, { useState, useEffect } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Select, Form, Input, Button } from \"antd\";\nimport axios from \"axios\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { baseUrl } from \"../../../config/config\";\n\nfunction Reset() {\n  \n  const { Option } = Select;\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState(null);\n  const [value, setValue] = useState({});\n\n\n\n  const handleChange = (value) => {\n    console.log(`selected ${value}`);\n    setStore2(value);\n  };\n\n  useEffect(() => {\n    const getTeamLeader = () => {\n      axios.get(`${baseUrl}/tl/getTeamLeader?id=243`).then((res) => {\n        console.log(res);\n        setValue(res.data.result[0]);    \n      });\n    };\n\n    getTeamLeader();\n  }, []);\n\n  console.log(\"value -\", value.name);\n  const data1 = value.name;\n  const data2 = value.email;\n  const data3 = value.phone;\n  const data4 = value.parent_id;\n  const data5 = value.cat_name;\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${store2}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [store2]);\n\n  const onFinish = (values) => {\n    console.log(values);\n\n    // let formData = new FormData();\n    // formData.append(\"email\", value.p_email);\n    // formData.append(\"name\", value.p_name);\n    // formData.append(\"phone\", value.p_phone);\n    // formData.append(\"pcat_id\", value.p_tax);\n    // formData.append(\"cat_id\", value.p_tax2);\n    // formData.append(\"id\", id);\n\n    // axios({\n    //   method: \"POST\",\n    //   url: `${baseUrl}/tl/updateTeamLeader`,\n    //   data: formData,\n    // })\n    //   .then(function (response) {\n    //     console.log(\"res-\", response);\n    //     if (response.data.code === 1) {\n    //       alert.success(\"TL updated  !\");\n    //       history.goBack();\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(\"erroror - \", error);\n    //   });\n  };\n\n  if (!(data1 && data2 && data3 && data4 && data5)) return <p>loading</p>;\n  else\n    return (\n      <>\n        <div class=\"container\">\n          <Form\n            name=\"basic\"\n            initialValues={{\n              username: `${data1}`,\n              email: `${data2}`,\n              phone: `${data3}`,\n              category: `${data4}`,\n              sub_category: `${data5}`,\n            }}\n            onFinish={onFinish}\n          >\n            <Form.Item label=\"Username\" name=\"username\">\n              <Input />\n            </Form.Item>\n            <Form.Item name=\"email\" label=\"email \">\n              <Input />\n            </Form.Item>\n\n            <Form.Item name=\"category\" label=\"Category\">\n              <Select onChange={handleChange}>\n                <Option value=\"1\">Direct</Option>\n                <Option value=\"2\">InDirect</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item name=\"sub_category\" label=\"Sub-category\">\n              <Select>\n                <Option value=\"\">--Select Sub-Category--</Option>\n                {tax2.map((p, index) => (\n                  <Option key={index} value={p.id}>\n                    {p.details}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n\n            <Form.Item name=\"phone\" label=\"phone\">\n              <Input/>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n\n          </Form>\n\n          {/* <Form name=\"nest-messages\" onFinish={onFinish}>\n            <Form.Item name={[\"query\", \"name\"]} label=\" name\">\n              <Input />\n            </Form.Item>\n            <Form.Item name={[\"query\", \"email\"]} label=\"email \">\n              <Input defaultValue={data2} />\n            </Form.Item>\n\n            <Form.Item name={[\"query\", \"phone\"]} label=\"phone\">\n              <Input defaultValue={data3} />\n            </Form.Item>\n\n            <Form.Item name={[\"query\", \"pcat_1\"]} label=\"Category\">\n              <Select onChange={handleChange}>\n                <Option value=\"1\">Direct</Option>\n                <Option value=\"2\">InDirect</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item name={[\"query\", \"cat_1\"]} label=\"Sub-category\">\n              <Select defaultValue={data5}>\n                <Option value=\"\">--Select Sub-Category--</Option>\n                {tax2.map((p, index) => (\n                  <Option key={index} value={p.id}>\n                    {p.details}\n                  </Option>\n                ))}\n              </Select>\n            </Form.Item>\n\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form> */}\n        </div>\n      </>\n    );\n}\n\nexport default Reset;\n\n// <Option value=\"3\">Assessment</Option>\n// <Option value=\"4\">others</Option>\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import Select from \"react-select\";\n// import { useForm, Controller } from \"react-hook-form\";\n// import { Checkbox, Input } from \"@material-ui/core\";\n// import { Input as AntdInput } from \"antd\";\n\n// import \"./styles.css\";\n\n// const App = () => {\n//   const { control, handleSubmit } = useForm();\n\n//   const onSubmit = data => {\n//     alert(JSON.stringify(data));\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit(onSubmit)}>\n\n//       <label>Ice Cream Preference</label>\n//       <Controller\n//         name=\"iceCreamType\"\n//         as={Select}\n//         options={[\n//           { value: \"chocolate\", label: \"Chocolate\" },\n//           { value: \"strawberry\", label: \"Strawberry\" },\n//           { value: \"vanilla\", label: \"Vanilla\" }\n//         ]}\n//         control={control}\n//         defaultValue={[{ value: \"vanilla\", label: \"Vanilla\" }]}\n//       />\n\n//       <input type=\"submit\" />\n//     </form>\n//   );\n// };\n\n// const rootElement = document.getElementById(\"root\");\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   rootElement\n// );\n","/var/www/html/Mazars_Pannel/src/config/services/QueryDetails.js",["1627"],"import http from \"../http/http-common\";\n\nconst getAll = () => {\n  return http.get(\"/customers/getFeedback\");\n};\n\nexport default {\n  getAll,\n};\n","/var/www/html/Mazars_Pannel/src/config/http/http-common.js",[],"/var/www/html/Mazars_Pannel/src/config/services/TaxProffesional.js",["1628"],"import http from \"../http/http-common\";\n\nconst getAll = () => {\n  return http.get(\"/tp/getTaxProfessional\");\n};\n\nconst get = (id) => {\n  return http.get(`/tp/getTaxProfessional?id=${id}`);\n};\n\nconst create = (data) => {\n  return http.post(\"/tutorials\", data);\n};\n\nconst remove = (id) => {\n  return http.delete(`/tl/deleteTeamLeader?id=${id}`);\n};\n\nconst editTL = (id) => {\n  return http.get(`/tl/getTeamLeader?id=212`);\n};\n\nexport default {\n  getAll,\n  get,\n  create,\n  remove,\n  editTL\n};\n","/var/www/html/Mazars_Pannel/src/views/EditQuery/SelectComponent.js",["1629","1630","1631"],"/var/www/html/Mazars_Pannel/src/views/Frsh/field.js",["1632"],"/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/Test.js",["1633"],"/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/Check.js",["1634","1635","1636","1637"],"import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport states from \"./states.json\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\n\nexport default function App({ uid, selectedOption }) {\n  const { register, handleSubmit, reset } = useForm();\n\n  console.log(\"selectedOption\", selectedOption);\n  //   const usersUrl = `${baseUrl}/tl/getTeamLeader?id=${uid}`;\n\n  const [interest, setInterest] = useState(selectedOption);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      //   const res = await axios.get(usersUrl);\n      //   console.log(\"data\", res.data);\n      // var item = res.data.result[0].name\n      //   console.log(\"arr\", item.name);\n      const a = interest.name;\n      console.log(\"a\", a);\n\n      reset({\n        street: \"123 Fake St\",\n        state: \"CO\",\n        // parent: a,\n      });\n    };\n\n    fetchData();\n  }, [reset]);\n\n  function onSubmit(data) {\n    console.log(data);\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div>\n          <label>Street:</label>\n          <input name=\"street\" ref={register} />\n        </div>\n\n        <div>\n          <label>State:</label>\n          <select name=\"state\" ref={register}>\n            <option key=\"\" value=\"\" />\n            {states.map((option) => (\n              <option key={option.id} value={option.id}>\n                {option.value}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n","/var/www/html/Mazars_Pannel/src/pages/TL/AssignmentForm/AssignmentForm.js",["1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\n\nfunction AssignmentForm(props) {\n  console.log(\"props\", props.location.clients);\n\n  const alert = useAlert();\n  const { handleSubmit, register, errors, reset, setValue } = useForm();\n  const history = useHistory();\n  const { id } = useParams();\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const [assignNo, setAssignNo] = useState(null);\n  const [data, setData] = useState([]);\n  const [store, setStore] = useState(null);\n  const [item, setItem] = useState(null);\n\n  useEffect(() => {\n    getAssignmentList();\n  }, []);\n\n  const getAssignmentList = () => {\n    axios\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}`)\n      .then((res) => {\n        console.log(res);\n        console.log(res.data.result);\n        if (res.data.code === 1) {\n          setAssignNo(res.data.result[0].assign_no);\n        }\n      });\n  };\n\n  useEffect(() => {\n    getDetails();\n  }, [assignNo]);\n\n  const getDetails = (value) => {\n    console.log(\"value :\", value);\n    let formData = new FormData();\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"uid\", JSON.parse(userid));\n    formData.append(\"stages_type\", \"client_discussion\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/getstagesinfo`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          setData(response.data.result);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"assign_id\", id);\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"uid\", JSON.parse(userid));\n    formData.append(\"stages_type\", \"client_discussion\");\n    formData.append(\"notes\", value.p_notes);\n    formData.append(\"receive_sent_date\", value.p_date);\n    formData.append(\"notes_type\", value.p_type);\n    formData.append(\"type_info\", value.p_info);\n    formData.append(\"upload\", value.p_upload[0]);\n    formData.append(\"send_received\", item);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/addAssignmentStages`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(<Msg />);\n          getDetails();\n          reset();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  //alert msg\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"10px\" }}>success</p>\n      </>\n    );\n  };\n\n  console.log(\"item - \", item);\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Client Discussion Information</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          {props.location.clients == \"completed\" ? (\n            <div>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div class=\"row\">\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Titles</label>\n                      <textarea\n                        className=\"form-control\"\n                        id=\"textarea\"\n                        rows=\"2\"\n                        name=\"p_notes\"\n                        ref={register}\n                        disabled\n                      ></textarea>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Date</label>\n                      <input\n                        type=\"date\"\n                        name=\"p_date\"\n                        className=\"form-control\"\n                        ref={register}\n                        disabled\n                      />\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Upload Documents</label>\n                      <input\n                        type=\"file\"\n                        name=\"p_upload\"\n                        ref={register}\n                        className=\"form-control-file\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Send/Received</label>\n                      <select\n                        class=\"form-control\"\n                        ref={register}\n                        name=\"p_type\"\n                        onChange={(e) => setItem(e.target.value)}\n                        disabled\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"send\">Send</option>\n                        <option value=\"received\">Received</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Notes Type</label>\n                      <select\n                        class=\"form-control\"\n                        ref={register}\n                        name=\"p_type\"\n                        onChange={(e) => setStore(e.target.value)}\n                        disabled\n                      >\n                        <option value=\"\">--select type--</option>\n                        <option value=\"email\">Email</option>\n                        <option value=\"phone\">Phone</option>\n                        <option value=\"other\">Other</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-2\">\n                    <div class=\"form-group\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block\"\n                        disabled\n                      >\n                        submit\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          ) : (\n            <div>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div class=\"row\">\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Titles</label>\n                      <textarea\n                        className=\"form-control\"\n                        id=\"textarea\"\n                        rows=\"2\"\n                        name=\"p_notes\"\n                        ref={register}\n                      ></textarea>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Date</label>\n                      <input\n                        type=\"date\"\n                        name=\"p_date\"\n                        className=\"form-control\"\n                        ref={register}\n                      />\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Upload Documents</label>\n                      <input\n                        type=\"file\"\n                        name=\"p_upload\"\n                        ref={register}\n                        className=\"form-control-file\"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Send/Received</label>\n                      <select\n                        class=\"form-control\"\n                        ref={register}\n                        name=\"p_type\"\n                        onChange={(e) => setItem(e.target.value)}\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"send\">Send</option>\n                        <option value=\"received\">Received</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div class=\"col-md-4\">\n                    <div class=\"form-group\">\n                      <label>Notes Type</label>\n                      <select\n                        class=\"form-control\"\n                        ref={register}\n                        name=\"p_type\"\n                        onChange={(e) => setStore(e.target.value)}\n                      >\n                        <option value=\"\">--select type--</option>\n                        <option value=\"email\">Email</option>\n                        <option value=\"phone\">Phone</option>\n                        <option value=\"other\">Other</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  {store == \"email\" && (\n                    <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <label>Email</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_info\"\n                          className=\"form-control\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  {store == \"phone\" && (\n                    <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <label>Phone</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_info\"\n                          className=\"form-control\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  )}\n                  {store == \"other\" && (\n                    <div class=\"col-md-4\">\n                      <div class=\"form-group\">\n                        <label>Notes info</label>\n                        <input\n                          type=\"text\"\n                          name=\"p_info\"\n                          className=\"form-control\"\n                          ref={register}\n                        />\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-md-2\">\n                    <div class=\"form-group\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-block\"\n                      >\n                        submit\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n          )}\n        </CardHeader>\n\n        <CardBody>\n          <CardHeader>\n            <Row>\n              <Col md=\"4\">\n                <h4>List</h4>\n              </Col>\n            </Row>\n          </CardHeader>\n          <div class=\"my-3\">\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"row\">S.No</th>\n                  <th scope=\"row\">Documents</th>\n                  <th scope=\"row\">Titles</th>\n                  <th scope=\"row\">Notes type</th>\n                  <th scope=\"row\">Notes Info</th>\n                  <th scope=\"row\">Date</th>\n                  <th scope=\"row\">send/Received</th>\n                </tr>\n              </thead>\n              {data.length > 0\n                ? data.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>\n                        {p.document && (\n                          <p style={{ display: \"flex\" }}>\n\n                            <a\n                              href={`http://65.0.220.156/mazarapi/assets/upload/report/${p.assign_no}/${p.document}`}\n                              target=\"_blank\"\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                            <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                          </p>\n                        )}\n                      </td>\n                      <td>{p.notes}</td>\n                      <td>{p.notes_type}</td>\n                      <td>{p.type_info}</td>\n                      <td>{p.receive_sent_date}</td>\n                      <td>{p.send_received}</td>\n                    </tr>\n                  </tbody>\n                ))\n                : null}\n            </table>\n          </div>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default AssignmentForm;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/EditTL/A.js",["1650","1651","1652","1653"],"import React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nfunction A({interest}) {\n  const { handleSubmit, register, errors, reset, setValue } = useForm();\n\n  return (\n    <div>\n      <select class=\"form-control\" \n      ref={register}\n       name={interest}\n       >\n        <option value=\"pending\">Pending</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n    </div>\n  );\n}\n\nexport default A;\n",["1654","1655"],"/var/www/html/Mazars_Pannel/src/views/Frsh/UserForm.js",["1656","1657"],"import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport states from \"./states.json\";\n\nexport default function UserForm({ data }) {\n  const { register, handleSubmit, reset } = useForm();\n\n  const { cat_id , name } = data;\n  console.log(\"cart\", cat_id);\n\n  useEffect(() => {\n    // This would be a GET call to an endpoint\n    \n    reset({\n      street: \"nks\",\n      state: \"1\",\n    });\n  }, [reset]);\n\n  function onSubmit(data) {\n    console.log(data);\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div>\n          <label>Street:</label>\n          <input name=\"street\" ref={register} />\n        </div>\n\n        <div>\n          <label>State:</label>\n          <select name=\"state\" ref={register}>\n            <option key=\"\" value=\"\" />\n            {/* {states.map((option) => (\n              <option key={option.id} value={option.id}>\n                {option.value}\n              </option>\n            ))} */}\n          </select>\n        </div>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n","/var/www/html/Mazars_Pannel/src/pages/TL/QueriesTab/Tab.js",[],"/var/www/html/Mazars_Pannel/src/agora.config.js",[],"/var/www/html/Mazars_Pannel/src/utils/Validator.js",["1658","1659"],"export default {\n  minLength(value, length) {\n    return value.length < length ?\n      1 : 0\n  },\n  maxLength(value, length) {\n    return value.length > length ?\n      1 : 0\n  },\n  validChar(value) {\n    return !/^[0-9a-zA-Z\\_]+$/.test(value) ?\n      1 : 0\n  },\n  isNonEmpty(value) {\n    return value === '' ?\n      1 : 0\n  }\n}",["1660","1661"],"/var/www/html/Mazars_Pannel/src/utils/Settings.js",[],"/var/www/html/Mazars_Pannel/src/views/VideoCall/VideoCall.js",["1662","1663"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport Index from \"../../components/InputRoom/index\";\n\nfunction VideoCall() {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n        <Index />\n    </Layout>\n  );\n}\n\nexport default VideoCall;\n","/var/www/html/Mazars_Pannel/src/components/InputRoom/index.js",["1664","1665","1666","1667","1668"],"import React from \"react\";\nimport * as Cookies from \"js-cookie\";\n\nimport \"../../assets/fonts/css/icons.css\";\n// import Validator from \"../../utils/Validator\";\n// import { RESOLUTION_ARR } from \"../../utils/Settings\";\nimport \"./index.css\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channel: \"\",\n      baseMode: \"avc\",\n      transcode: \"interop\",\n      attendeeMode: \"video\",\n      videoProfile: \"480p_4\",\n    };\n  }\n\n  // componentDidMount() {\n  //   window.addEventListener(\"keypress\", (e) => {\n  //     e.keyCode === 13 && this.handleJoin();\n  //   });\n  // }\n\n  //pass id\n  // handleChannel = (val, state) => {\n  //   this.setState({\n  //     channel: val,\n  //   });\n  // };\n\n  // handleJoin = () => {\n  //   console.log(this.state);\n  //   Cookies.set(\"channel\", this.state.channel); //input channel name\n  //   Cookies.set(\"baseMode\", this.state.baseMode);\n  //   Cookies.set(\"transcode\", this.state.transcode);\n  //   Cookies.set(\"attendeeMode\", this.state.attendeeMode); // select video call\n  //   Cookies.set(\"videoProfile\", this.state.videoProfile);\n  //   window.location.hash = \"customer/meeting\";\n  // };\n\n  render() {\n    return (\n      <div className=\"wrapper index\">\n        <div className=\"ag-header\"></div>\n        <div className=\"ag-main\">\n          <section className=\"login-wrapper\">\n            <div className=\"login-header\"></div>\n\n            {/* <div className=\"login-body\">\n              <div className=\"columns\">\n                <div className=\"column is-12\">\n                  <InputChannel\n                    onChange={this.handleChannel}\n                    placeholder=\"Input a room name here\"\n                  ></InputChannel>\n                </div>\n              </div>\n\n              <div className=\"columns\">\n                <div className=\"column\">\n                  <div id=\"attendeeMode\" className=\"control\">\n                    <label className=\"radio\">\n                      <input\n                        onChange={(e) =>\n                          this.setState({ attendeeMode: e.target.value })\n                        }\n                        value=\"video\"\n                        type=\"radio\"\n                        name=\"attendee\"\n                        defaultChecked\n                      />\n                      <span className=\"radio-btn\"></span>\n                      <span className=\"radio-msg\">\n                        Video Call : join with video call\n                      </span>\n                    </label>\n                    <br />\n                  </div>\n                </div>\n              </div>\n            </div> */}\n\n            <div className=\"login-footer\">\n              <a\n                // onClick={this.handleJoin}\n                className=\"ag-rounded button is-info\"\n              >\n                Join\n              </a>\n            </div>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Index;\n\n// class InputChannel extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       state: \"\",\n//     };\n//   }\n\n//   handleChange = (e) => {\n//     this.props.onChange(e.target.value);\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"channel-wrapper control has-icons-left\">\n//         <input\n//           onInput={this.handleChange}\n//           id=\"channel\"\n//           className={\"ag-rounded input \" + this.state.state}\n//           type=\"text\"\n//           placeholder={this.props.placeholder}\n//         />\n\n//       </div>\n//     );\n//   }\n// }\n{\n  /* <span className=\"validate-icon\">{validateIcon}</span> */\n}\n// let validateIcon = \"\";\n// switch (this.state.state) {\n//   default:\n//   case \"\":\n//     validateIcon = \"\";\n//     break;\n//   case \"is-success\":\n//     validateIcon = <i className=\"ag-icon ag-icon-valid\"></i>;\n//     break;\n//   case \"is-danger\":\n//     validateIcon = <i className=\"ag-icon ag-icon-invalid\"></i>;\n//     break;\n// }\n{\n  /* <label className=\"radio\">\n                      <input\n                        onChange={(e) =>\n                          this.setState({ attendeeMode: e.target.value })\n                        }\n                        value=\"audio-only\"\n                        type=\"radio\"\n                        name=\"attendee\"\n                      />\n                      <span className=\"radio-btn\"></span>\n                      <span className=\"radio-img audio\"></span>\n                      <span className=\"radio-msg\">\n                        Audio-only : join with audio call\n                      </span>\n                    </label>\n                    <br />\n                    <label className=\"radio\">\n                      <input\n                        onChange={(e) =>\n                          this.setState({ attendeeMode: e.target.value })\n                        }\n                        value=\"audience\"\n                        type=\"radio\"\n                        name=\"attendee\"\n                      />\n                      <span className=\"radio-btn\"></span>\n                      <span className=\"radio-img audience\"></span>\n                      <span className=\"radio-msg\">\n                        Audience : join as an audience\n                      </span>\n                    </label> */\n}\n{\n  /* <div className=\"columns\">\n                <div className=\"column is-7\">\n                  <BaseOptions\n                    onChange={(val) => this.setState({ baseMode: val })}\n                  ></BaseOptions>\n                </div>\n                <div className=\"column is-5\">\n                  <AdvancedOptions\n                    onRadioChange={(val) => this.setState({ transcode: val })}\n                    onSelectChange={(val) =>\n                      this.setState({ videoProfile: val })\n                    }\n                  ></AdvancedOptions>\n                </div>\n              </div> */\n}\n// class BaseOptions extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this._options = [\n//       {\n//         label: \"Agora Video Call\",\n//         value: \"avc\",\n//         content: \"One to one and group calls\",\n//       },\n//       {\n//         label: \"Agora Live\",\n//         value: \"al\",\n//         content:\n//           \"Enabling real-time interactions between the host and the audience\",\n//       },\n//     ];\n//     this.state = {\n//       active: false,\n//       message: \"Agora Video Call\",\n//     };\n//   }\n\n//   handleSelect = (item) => {\n//     let msg = item.label;\n//     let val = item.value;\n//     this.setState({\n//       message: msg,\n//       active: false,\n//     });\n//     this.props.onChange(val);\n//   };\n\n//   render() {\n//     const options = this._options.map((item, index) => {\n//       return (\n//         <div\n//           className=\"dropdown-item\"\n//           key={index}\n//           onClick={(e) => this.handleSelect(item, e)}\n//         >\n//           <p>{item.label}</p>\n//           <hr />\n//           <p>{item.content}</p>\n//         </div>\n//       );\n//     });\n\n//     return (\n//       <div className={this.state.active ? \"dropdown is-active\" : \"dropdown\"}>\n//         <div\n//           className=\"dropdown-trigger\"\n//           onClick={() => this.setState({ active: !this.state.active })}\n//         >\n//           <a\n//             id=\"baseMode\"\n//             className=\"ag-rounded button\"\n//             aria-haspopup=\"true\"\n//             aria-controls=\"baseModeOptions\"\n//           >\n//             <span id=\"baseOptionLabel\">{this.state.message}</span>\n//             <span className=\"icon is-small\">\n//               <i className=\"ag-icon ag-icon-arrow-down\" aria-hidden=\"true\"></i>\n//             </span>\n//           </a>\n//         </div>\n//         <div className=\"dropdown-menu\" id=\"baseModeOptions\" role=\"menu\">\n//           <div className=\"dropdown-content\">{options}</div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// class AdvancedOptions extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       active: false,\n//     };\n//   }\n\n//   handleRadio = (e) => {\n//     this.props.onRadioChange(e.target.value);\n//   };\n\n//   handleSelect = (e) => {\n//     this.props.onSelectChange(e.target.value);\n//   };\n\n//   render() {\n//     const options = Object.entries(RESOLUTION_ARR).map((item, index) => {\n//       return (\n//         <option key={index} value={item[0].split(\",\")[0]}>\n//           {item[1][0]}x {item[1][1]}, {item[1][2]}fps, {item[1][3]}kbps\n//         </option>\n//       );\n//     });\n//     return (\n//       <div className={this.state.active ? \"dropdown is-active\" : \"dropdown\"}>\n//         <div\n//           className=\"dropdown-trigger\"\n//           onClick={() => this.setState({ active: !this.state.active })}\n//         >\n//           <a\n//             id=\"advancedProfile\"\n//             className=\"ag-rounded button\"\n//             aria-haspopup=\"true\"\n//             aria-controls=\"advancedOptions\"\n//           >\n//             <span>Advanced</span>\n//           </a>\n//         </div>\n//         <div className=\"dropdown-menu\" id=\"advancedOptions\" role=\"menu\">\n//           <div className=\"dropdown-content\">\n//             <div className=\"dropdown-item\">\n//               <div className=\"control\">\n//                 <label className=\"radio\">\n//                   <input\n//                     value=\"\"\n//                     type=\"radio\"\n//                     name=\"transcode\"\n//                     onChange={this.handleRadio}\n//                   />\n//                   <span>VP8-only</span>\n//                 </label>\n//                 <label className=\"radio\">\n//                   <input\n//                     value=\"interop\"\n//                     type=\"radio\"\n//                     defaultChecked\n//                     onChange={this.handleRadio}\n//                     name=\"transcode\"\n//                   />\n//                   <span>VP8 &amp; H264</span>\n//                 </label>\n//                 <label className=\"radio\">\n//                   <input\n//                     value=\"h264_interop\"\n//                     type=\"radio\"\n//                     onChange={this.handleRadio}\n//                     name=\"transcode\"\n//                   />\n//                   <span>H264-only</span>\n//                 </label>\n//               </div>\n//             </div>\n//             <div className=\"dropdown-item\">\n//               <div className=\"select is-rounded\">\n//                 <select\n//                   onChange={this.handleSelect}\n//                   defaultValue=\"480p_4\"\n//                   id=\"videoProfile\"\n//                   className=\"ag-rounded is-clipped\"\n//                 >\n//                   {options}\n//                 </select>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n","/var/www/html/Mazars_Pannel/src/views/MeetingComponent/MeetingComponent.js",["1669","1670"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport Meeting from \"../../components/meeting/index\";\n\nfunction MeetingComponent(props) {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Meeting />\n    </Layout>\n  );\n}\n\nexport default MeetingComponent;\n","/var/www/html/Mazars_Pannel/src/components/meeting/index.jsx",[],"/var/www/html/Mazars_Pannel/src/components/AgoraVideoCall/index.jsx",["1671","1672","1673","1674","1675","1676","1677","1678"],"import React from \"react\";\nimport { merge } from \"lodash\";\nimport AgoraRTC from \"agora-rtc-sdk\";\n\nimport \"./canvas.css\";\nimport \"../../assets/fonts/css/icons.css\";\n\nconst tile_canvas = {\n  \"1\": [\"span 12/span 24\"],\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\n  \"4\": [\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12/7/13\",\n  ],\n  \"5\": [\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"6\": [\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"7\": [\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 9/span 16/10/21\",\n  ],\n};\n\n/**\n * @prop appId uid\n * @prop transcode attendeeMode videoProfile channel baseMode\n */\n\n\nclass AgoraCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.client = {};\n    this.localStream = {};\n    this.shareClient = {};\n    this.shareStream = {};\n    this.state = {\n      displayMode: \"pip\",\n      streamList: [],\n      readyState: false,\n      stateSharing: false,\n    };\n  }\n\n  componentWillMount() {\n    let $ = this.props;\n    // init AgoraRTC local client\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\n    this.client.init($.appId, () => {\n      console.log(\"AgoraRTC client initialized\");\n      this.subscribeStreamEvents();\n\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\n        this.state.uid = uid;\n        console.log(\"User \" + uid + \" join channel successfully\");\n        console.log(\"At \" + new Date().toLocaleTimeString());\n        // create local stream\n        // It is not recommended to setState in function addStream\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\n        this.localStream.init(\n          () => {\n            if ($.attendeeMode !== \"audience\") {\n              this.addStream(this.localStream, true);\n              this.client.publish(this.localStream, (err) => {\n                console.log(\"Publish local stream error: \" + err);\n              });\n            }\n            this.setState({ readyState: true });\n          },\n          (err) => {\n            console.log(\"getUserMedia failed\", err);\n            this.setState({ readyState: true });\n          }\n        );\n      });\n    });\n  }\n\n  componentDidMount() {\n    // add listener to control btn group\n    let canvas = document.querySelector(\"#ag-canvas\");\n    let btnGroup = document.querySelector(\".ag-btn-group\");\n    canvas.addEventListener(\"mousemove\", () => {\n      if (global._toolbarToggle) {\n        clearTimeout(global._toolbarToggle);\n      }\n      btnGroup.classList.add(\"active\");\n      global._toolbarToggle = setTimeout(function () {\n        btnGroup.classList.remove(\"active\");\n      }, 2000);\n    });\n  }\n\n  // componentWillUnmount () {\n  //     // remove listener\n  //     let canvas = document.querySelector('#ag-canvas')\n  //     canvas.removeEventListener('mousemove')\n  // }\n\n  componentDidUpdate() {\n    // rerendering\n    let canvas = document.querySelector(\"#ag-canvas\");\n    // pip mode (can only use when less than 4 people in channel)\n    if (this.state.displayMode === \"pip\") {\n      let no = this.state.streamList.length;\n      if (no > 4) {\n        this.setState({ displayMode: \"tile\" });\n        return;\n      }\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n        }\n        if (index === no - 1) {\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n        } else {\n          dom.setAttribute(\n            \"style\",\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n          );\n        }\n\n        item.player.resize && item.player.resize();\n      });\n    }\n    // tile mode\n    else if (this.state.displayMode === \"tile\") {\n      let no = this.state.streamList.length;\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n        }\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n        item.player.resize && item.player.resize();\n      });\n    }\n    // screen share mode (tbd)\n    else if (this.state.displayMode === \"share\") {\n    }\n  }\n\n  componentWillUnmount() {\n    this.client && this.client.unpublish(this.localStream);\n    // this.localStream && this.localStream.close();\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n    }\n    this.client &&\n      this.client.leave(\n        () => {\n          console.log(\"Client succeed to leave.\");\n        },\n        () => {\n          console.log(\"Client failed to leave.\");\n        }\n      );\n  }\n\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: true,\n      screen: false,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n\n  subscribeStreamEvents = () => {\n    let rt = this;\n    rt.client.on(\"stream-added\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"New stream added: \" + stream.getId());\n      console.log(\"At \" + new Date().toLocaleTimeString());\n      console.log(\"Subscribe \", stream);\n      rt.client.subscribe(stream, function (err) {\n        console.log(\"Subscribe stream failed\", err);\n      });\n    });\n\n    rt.client.on(\"peer-leave\", function (evt) {\n      console.log(\"Peer has left: \" + evt.uid);\n      console.log(new Date().toLocaleTimeString());\n      console.log(evt);\n      rt.removeStream(evt.uid);\n    });\n\n    rt.client.on(\"stream-subscribed\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"Got stream-subscribed event\");\n      console.log(new Date().toLocaleTimeString());\n      console.log(\"Subscribe remote stream successfully: \" + stream.getId());\n      console.log(evt);\n      rt.addStream(stream);\n    });\n\n    rt.client.on(\"stream-removed\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"Stream removed: \" + stream.getId());\n      console.log(new Date().toLocaleTimeString());\n      console.log(evt);\n      rt.removeStream(stream.getId());\n    });\n  };\n\n  removeStream = (uid) => {\n    this.state.streamList.map((item, index) => {\n      if (item.getId() === uid) {\n        item.close();\n        let element = document.querySelector(\"#ag-item-\" + uid);\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n        let tempList = [...this.state.streamList];\n        tempList.splice(index, 1);\n        this.setState({\n          streamList: tempList,\n        });\n      }\n    });\n  };\n\n  addStream = (stream, push = false) => {\n    let repeatition = this.state.streamList.some((item) => {\n      return item.getId() === stream.getId();\n    });\n    if (repeatition) {\n      return;\n    }\n    if (push) {\n      this.setState({\n        streamList: this.state.streamList.concat([stream]),\n      });\n    } else {\n      this.setState({\n        streamList: [stream].concat(this.state.streamList),\n      });\n    }\n  };\n\n  handleCamera = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isVideoOn()\n      ? this.localStream.disableVideo()\n      : this.localStream.enableVideo();\n  };\n\n  handleMic = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isAudioOn()\n      ? this.localStream.disableAudio()\n      : this.localStream.enableAudio();\n  };\n\n  switchDisplay = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    if (this.state.displayMode === \"pip\") {\n      this.setState({ displayMode: \"tile\" });\n    } else if (this.state.displayMode === \"tile\") {\n      this.setState({ displayMode: \"pip\" });\n    } else if (this.state.displayMode === \"share\") {\n      // do nothing or alert, tbd\n    } else {\n      console.error(\"Display Mode can only be tile/pip/share\");\n    }\n  };\n\n  hideRemote = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    let list;\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\n    list = Array.from(\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n    );\n    list.map((item) => {\n      if (item.style.display !== \"none\") {\n        item.style.display = \"none\";\n      } else {\n        item.style.display = \"block\";\n      }\n    });\n  };\n\n  handleExit = (e) => {\n    if (e.currentTarget.classList.contains(\"disabled\")) {\n      return;\n    }\n    try {\n      this.client && this.client.unpublish(this.localStream);\n      this.localStream && this.localStream.close();\n      if (this.state.stateSharing) {\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\n        this.shareStream && this.shareStream.close();\n      }\n      this.client &&\n        this.client.leave(\n          () => {\n            console.log(\"Client succeed to leave.\");\n          },\n          () => {\n            console.log(\"Client failed to leave.\");\n          }\n        );\n    } finally {\n      this.setState({ readyState: false });\n      this.client = null;\n      this.localStream = null;\n      // redirect to index\n      window.location.hash = \"/customer/assignment\";\n    }\n  };\n\n  sharingScreen = (e) => {\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n      this.state.stateSharing = false;\n    } else {\n      this.state.stateSharing = true;\n      let $ = this.props;\n      // init AgoraRTC local client\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\n\n      this.shareClient.init($.appId, () => {\n        console.log(\"AgoraRTC client initialized\");\n\n        this.subscribeStreamEvents();\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\n          this.state.uid = uid;\n          console.log(\"User \" + uid + \" join channel successfully\");\n          console.log(\"At \" + new Date().toLocaleTimeString());\n          // create local stream\n          // It is not recommended to setState in function addStream\n          \n          this.shareStream = this.streamInitSharing(\n            uid,\n            $.attendeeMode,\n            $.videoProfile\n          );\n          this.shareStream.init(\n            () => {\n              if ($.attendeeMode !== \"audience\") {\n                this.addStream(this.shareStream, true);\n                this.shareClient.publish(this.shareStream, (err) => {\n                  console.log(\"Publish local stream error: \" + err);\n                });\n              }\n              this.setState({ readyState: true });\n            },\n            (err) => {\n              console.log(\"getUserMedia failed\", err);\n              this.setState({ readyState: true });\n            }\n          );\n        });\n      });\n    }\n  };\n\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: false,\n      screen: true,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n  render() {\n\n    const style = {\n      display: \"grid\",\n      gridGap: \"50px 26px\",\n      alignItems: \"center\",\n      justifyItems: \"center\",\n      gridTemplateRows: \"repeat(12, auto)\",\n      gridTemplateColumns: \"repeat(24, auto)\",\n    };\n    \n    const videoControlBtn =\n      this.props.attendeeMode === \"video\" ? (\n        <span\n          onClick={this.handleCamera}\n          className=\"ag-btn videoControlBtn\"\n          title=\"Enable/Disable Video\"\n        >\n          <i className=\"ag-icon ag-icon-camera\"></i>\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const audioControlBtn =\n      this.props.attendeeMode !== \"audience\" ? (\n        <span\n          onClick={this.handleMic}\n          className=\"ag-btn audioControlBtn\"\n          title=\"Enable/Disable Audio\"\n        >\n          <i className=\"ag-icon ag-icon-mic\"></i>\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const switchDisplayBtn = (\n      <span\n        onClick={this.switchDisplay}\n        className={\n          this.state.streamList.length > 4\n            ? \"ag-btn displayModeBtn disabled\"\n            : \"ag-btn displayModeBtn\"\n        }\n        title=\"Switch Display Mode\"\n      >\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\n      </span>\n    );\n\n\n    const hideRemoteBtn = (\n      <span\n        className={\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\n            ? \"ag-btn disableRemoteBtn disabled\"\n            : \"ag-btn disableRemoteBtn\"\n        }\n        onClick={this.hideRemote}\n        title=\"Hide Remote Stream\"\n      >\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\n      </span>\n    );\n\n    const exitBtn = (\n      <span\n        onClick={this.handleExit}\n        className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Exit\"\n      >\n        <i className=\"ag-icon ag-icon-leave\"></i>\n      </span>\n    );\n\n    return (\n      <div id=\"ag-canvas\" style={style}>\n        <div className=\"ag-btn-group\">\n          {exitBtn}\n          {videoControlBtn}\n          {audioControlBtn}\n          {\n            <span\n              onClick={this.sharingScreen}\n              className=\"ag-btn shareScreenBtn\"\n              title=\"Share/unShare Screen\"\n            >\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\n            </span>\n          }\n          {switchDisplayBtn}\n          {hideRemoteBtn}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AgoraCanvas;\n","/var/www/html/Mazars_Pannel/src/pages/TL/MeetingComponent/MeetingComponent.js",["1679","1680"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport Meeting from \"../meeting/index\";\n\nfunction MeetingComponent(props) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Meeting />\n    </Layout>\n  );\n}\n\nexport default MeetingComponent;\n","/var/www/html/Mazars_Pannel/src/pages/TL/meeting/index.jsx",[],"/var/www/html/Mazars_Pannel/src/pages/TL/AgoraVideoCall/index.jsx",["1681","1682","1683","1684","1685","1686","1687","1688"],"import React from \"react\";\nimport { merge } from \"lodash\";\nimport AgoraRTC from \"agora-rtc-sdk\";\n\nimport \"./canvas.css\";\nimport \"../../../assets/fonts/css/icons.css\";\n\nconst tile_canvas = {\n  \"1\": [\"span 12/span 24\"],\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\n  \"4\": [\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12/7/13\",\n  ],\n  \"5\": [\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"6\": [\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"7\": [\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 9/span 16/10/21\",\n  ],\n};\n\n/**\n * @prop appId uid\n * @prop transcode attendeeMode videoProfile channel baseMode\n */\n\n\nclass AgoraCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.client = {};\n    this.localStream = {};\n    this.shareClient = {};\n    this.shareStream = {};\n    this.state = {\n      displayMode: \"pip\",\n      streamList: [],\n      readyState: false,\n      stateSharing: false,\n    };\n  }\n\n  componentWillMount() {\n    let $ = this.props;\n    // init AgoraRTC local client\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\n    this.client.init($.appId, () => {\n      console.log(\"AgoraRTC client initialized\");\n      this.subscribeStreamEvents();\n\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\n        this.state.uid = uid;\n        console.log(\"User \" + uid + \" join channel successfully\");\n        console.log(\"At \" + new Date().toLocaleTimeString());\n        // create local stream\n        // It is not recommended to setState in function addStream\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\n        this.localStream.init(\n          () => {\n            if ($.attendeeMode !== \"audience\") {\n              this.addStream(this.localStream, true);\n              this.client.publish(this.localStream, (err) => {\n                console.log(\"Publish local stream error: \" + err);\n              });\n            }\n            this.setState({ readyState: true });\n          },\n          (err) => {\n            console.log(\"getUserMedia failed\", err);\n            this.setState({ readyState: true });\n          }\n        );\n      });\n    });\n  }\n\n  componentDidMount() {\n    // add listener to control btn group\n    let canvas = document.querySelector(\"#ag-canvas\");\n    let btnGroup = document.querySelector(\".ag-btn-group\");\n    canvas.addEventListener(\"mousemove\", () => {\n      if (global._toolbarToggle) {\n        clearTimeout(global._toolbarToggle);\n      }\n      btnGroup.classList.add(\"active\");\n      global._toolbarToggle = setTimeout(function () {\n        btnGroup.classList.remove(\"active\");\n      }, 2000);\n    });\n  }\n\n  // componentWillUnmount () {\n  //     // remove listener\n  //     let canvas = document.querySelector('#ag-canvas')\n  //     canvas.removeEventListener('mousemove')\n  // }\n\n  componentDidUpdate() {\n    // rerendering\n    let canvas = document.querySelector(\"#ag-canvas\");\n    // pip mode (can only use when less than 4 people in channel)\n    if (this.state.displayMode === \"pip\") {\n      let no = this.state.streamList.length;\n      if (no > 4) {\n        this.setState({ displayMode: \"tile\" });\n        return;\n      }\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n        }\n        if (index === no - 1) {\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n        } else {\n          dom.setAttribute(\n            \"style\",\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n          );\n        }\n\n        item.player.resize && item.player.resize();\n      });\n    }\n    // tile mode\n    else if (this.state.displayMode === \"tile\") {\n      let no = this.state.streamList.length;\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n        }\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n        item.player.resize && item.player.resize();\n      });\n    }\n    // screen share mode (tbd)\n    else if (this.state.displayMode === \"share\") {\n    }\n  }\n\n  componentWillUnmount() {\n    this.client && this.client.unpublish(this.localStream);\n    this.localStream && this.localStream.close();\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n    }\n    this.client &&\n      this.client.leave(\n        () => {\n          console.log(\"Client succeed to leave.\");\n        },\n        () => {\n          console.log(\"Client failed to leave.\");\n        }\n      );\n  }\n\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: true,\n      screen: false,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n\n  subscribeStreamEvents = () => {\n    let rt = this;\n    rt.client.on(\"stream-added\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"New stream added: \" + stream.getId());\n      console.log(\"At \" + new Date().toLocaleTimeString());\n      console.log(\"Subscribe \", stream);\n      rt.client.subscribe(stream, function (err) {\n        console.log(\"Subscribe stream failed\", err);\n      });\n    });\n\n    rt.client.on(\"peer-leave\", function (evt) {\n      console.log(\"Peer has left: \" + evt.uid);\n      console.log(new Date().toLocaleTimeString());\n      console.log(evt);\n      rt.removeStream(evt.uid);\n    });\n\n    rt.client.on(\"stream-subscribed\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"Got stream-subscribed event\");\n      console.log(new Date().toLocaleTimeString());\n      console.log(\"Subscribe remote stream successfully: \" + stream.getId());\n      console.log(evt);\n      rt.addStream(stream);\n    });\n\n    rt.client.on(\"stream-removed\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"Stream removed: \" + stream.getId());\n      console.log(new Date().toLocaleTimeString());\n      console.log(evt);\n      rt.removeStream(stream.getId());\n    });\n  };\n\n  removeStream = (uid) => {\n    this.state.streamList.map((item, index) => {\n      if (item.getId() === uid) {\n        item.close();\n        let element = document.querySelector(\"#ag-item-\" + uid);\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n        let tempList = [...this.state.streamList];\n        tempList.splice(index, 1);\n        this.setState({\n          streamList: tempList,\n        });\n      }\n    });\n  };\n\n  addStream = (stream, push = false) => {\n    let repeatition = this.state.streamList.some((item) => {\n      return item.getId() === stream.getId();\n    });\n    if (repeatition) {\n      return;\n    }\n    if (push) {\n      this.setState({\n        streamList: this.state.streamList.concat([stream]),\n      });\n    } else {\n      this.setState({\n        streamList: [stream].concat(this.state.streamList),\n      });\n    }\n  };\n\n  handleCamera = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isVideoOn()\n      ? this.localStream.disableVideo()\n      : this.localStream.enableVideo();\n  };\n\n  handleMic = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isAudioOn()\n      ? this.localStream.disableAudio()\n      : this.localStream.enableAudio();\n  };\n\n  switchDisplay = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    if (this.state.displayMode === \"pip\") {\n      this.setState({ displayMode: \"tile\" });\n    } else if (this.state.displayMode === \"tile\") {\n      this.setState({ displayMode: \"pip\" });\n    } else if (this.state.displayMode === \"share\") {\n      // do nothing or alert, tbd\n    } else {\n      console.error(\"Display Mode can only be tile/pip/share\");\n    }\n  };\n\n  hideRemote = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    let list;\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\n    list = Array.from(\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n    );\n    list.map((item) => {\n      if (item.style.display !== \"none\") {\n        item.style.display = \"none\";\n      } else {\n        item.style.display = \"block\";\n      }\n    });\n  };\n\n  handleExit = (e) => {\n    if (e.currentTarget.classList.contains(\"disabled\")) {\n      return;\n    }\n    try {\n      this.client && this.client.unpublish(this.localStream);\n      this.localStream && this.localStream.close();\n      if (this.state.stateSharing) {\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\n        this.shareStream && this.shareStream.close();\n      }\n      this.client &&\n        this.client.leave(\n          () => {\n            console.log(\"Client succeed to leave.\");\n          },\n          () => {\n            console.log(\"Client failed to leave.\");\n          }\n        );\n    } finally {\n      this.setState({ readyState: false });\n      this.client = null;\n      this.localStream = null;\n      // redirect to index\n      window.location.hash = \"/teamleader/schedule\";\n    }\n  };\n\n  sharingScreen = (e) => {\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n      this.state.stateSharing = false;\n    } else {\n      this.state.stateSharing = true;\n      let $ = this.props;\n      // init AgoraRTC local client\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\n\n      this.shareClient.init($.appId, () => {\n        console.log(\"AgoraRTC client initialized\");\n\n        this.subscribeStreamEvents();\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\n          this.state.uid = uid;\n          console.log(\"User \" + uid + \" join channel successfully\");\n          console.log(\"At \" + new Date().toLocaleTimeString());\n          // create local stream\n          // It is not recommended to setState in function addStream\n          \n          this.shareStream = this.streamInitSharing(\n            uid,\n            $.attendeeMode,\n            $.videoProfile\n          );\n          this.shareStream.init(\n            () => {\n              if ($.attendeeMode !== \"audience\") {\n                this.addStream(this.shareStream, true);\n                this.shareClient.publish(this.shareStream, (err) => {\n                  console.log(\"Publish local stream error: \" + err);\n                });\n              }\n              this.setState({ readyState: true });\n            },\n            (err) => {\n              console.log(\"getUserMedia failed\", err);\n              this.setState({ readyState: true });\n            }\n          );\n        });\n      });\n    }\n  };\n\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: false,\n      screen: true,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n  render() {\n\n    const style = {\n      display: \"grid\",\n      gridGap: \"50px 26px\",\n      alignItems: \"center\",\n      justifyItems: \"center\",\n      gridTemplateRows: \"repeat(12, auto)\",\n      gridTemplateColumns: \"repeat(24, auto)\",\n    };\n    \n    const videoControlBtn =\n      this.props.attendeeMode === \"video\" ? (\n        <span\n          onClick={this.handleCamera}\n          className=\"ag-btn videoControlBtn\"\n          title=\"Enable/Disable Video\"\n        >\n          <i className=\"ag-icon ag-icon-camera\"></i>\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const audioControlBtn =\n      this.props.attendeeMode !== \"audience\" ? (\n        <span\n          onClick={this.handleMic}\n          className=\"ag-btn audioControlBtn\"\n          title=\"Enable/Disable Audio\"\n        >\n          <i className=\"ag-icon ag-icon-mic\"></i>\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const switchDisplayBtn = (\n      <span\n        onClick={this.switchDisplay}\n        className={\n          this.state.streamList.length > 4\n            ? \"ag-btn displayModeBtn disabled\"\n            : \"ag-btn displayModeBtn\"\n        }\n        title=\"Switch Display Mode\"\n      >\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\n      </span>\n    );\n\n\n    const hideRemoteBtn = (\n      <span\n        className={\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\n            ? \"ag-btn disableRemoteBtn disabled\"\n            : \"ag-btn disableRemoteBtn\"\n        }\n        onClick={this.hideRemote}\n        title=\"Hide Remote Stream\"\n      >\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\n      </span>\n    );\n\n    const exitBtn = (\n      <span\n        onClick={this.handleExit}\n        className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Exit\"\n      >\n        <i className=\"ag-icon ag-icon-leave\"></i>\n      </span>\n    );\n\n    return (\n      <div id=\"ag-canvas\" style={style}>\n        <div className=\"ag-btn-group\">\n          {exitBtn}\n          {videoControlBtn}\n          {audioControlBtn}\n          {\n            <span\n              onClick={this.sharingScreen}\n              className=\"ag-btn shareScreenBtn\"\n              title=\"Share/unShare Screen\"\n            >\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\n            </span>\n          }\n          {switchDisplayBtn}\n          {hideRemoteBtn}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AgoraCanvas;\n","/var/www/html/Mazars_Pannel/src/pages/TP/Start/Start.js",[],"/var/www/html/Mazars_Pannel/src/pages/TP/Login/Login.js",["1689","1690","1691"],"import React, { useState } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n  password: yup\n    .string()\n    .required(\"required password\")\n    .min(5, \"at least 5 digits\")\n    .max(20, \"max 20 digits\"),\n});\n\nfunction Login(props) {\n  const alert = useAlert();\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const [email, setEmail] = useState(null);\n  const [isPasswordShow, setPasswordShow] = useState(false);\n  const togglePasssword = () => {\n    setPasswordShow(!isPasswordShow)\n  };\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"type\", \"tp\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tp/login`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          Alerts.SuccessLogin()\n          localStorage.setItem(\n            \"tpkey\",\n            JSON.stringify(response.data[\"user id\"])\n          );\n          props.history.push(\"/taxprofessional/dashboard\");\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          Alerts.ErrorLogin()\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const handleChange = (e) => {\n    console.log(\"val-\", e.target.value);\n    setEmail(e.target.value);\n  };\n  return (\n    <>\n      <Header mtp=\"mtp\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>MTP Login</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Email</label>\n                  <input\n                    type=\"text\"\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_email,\n                    })}\n                    name=\"p_email\"\n                    ref={register}\n                    placeholder=\"Enter Email\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                  {errors.p_email && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_email.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-md-12\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    type={isPasswordShow ? \"text\" : \"password\"}\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    name=\"password\"\n                    placeholder=\"Enter Password\"\n                    ref={register}\n                  />\n                  <i\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\n                    onClick={togglePasssword}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">\n                      {errors.password.message}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n            <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n              <Link\n                to={{\n                  pathname: \"/taxprofessional/forget-password\",\n                  email: `${email}`,\n                }}\n              >\n                Forgot Password\n              </Link>\n            </div>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Login;\n","/var/www/html/Mazars_Pannel/src/pages/TP/Dashboard/Dashboard.js",["1692","1693","1694","1695","1696","1697"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\n// import \"../../../../node_modules/react-tabs/style/react-tabs.css\";\n\nimport Layout from \"../../../components/Layout/Layout\";\n\nfunction Dashboard() {\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [incomplete, setIncomplete] = useState(\"\");\n  const [complete, setcomplete] = useState(\"\");\n\n  useEffect(() => {\n    const getIncomplete = () => {\n      axios\n        .get(`${baseUrl}/tp/GetIncompleteQues?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setIncomplete(res.data.result.length);\n          }\n        });\n    };\n\n    const getComplete = () => {\n      axios\n        .get(`${baseUrl}/tp/GetCompleteQues?id=${JSON.parse(userid)}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setcomplete(res.data.result.length);\n          }\n        });\n    };\n\n    getIncomplete();\n    getComplete();\n  }, []);\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-150\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Inprogress\n                  </h5>\n                </div>\n                <div>\n                  <Link to={`/teamleader/queriestab`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{incomplete}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\n          <div class=\"card pull-up ecom-card-1 bg-white\">\n            <div class=\"card-body height-150\">\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                  <h5 class=\"text-muted info position-absolute p-1\">\n                    Complete\n                  </h5>\n                </div>\n                <div>\n                  <Link to={`/teamleader/queriestab`}>\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\n                  </Link>\n                </div>\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"50px\",\n                }}\n              >\n                <h4>{complete}</h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Dashboard;\n{\n  /* <div>\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n          <TabList\n            style={{\n              listStyleType: \"none\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n              Pending for Acceptance\n            </Tab>\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>Inprogress</Tab>\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>Complete</Tab>\n          </TabList>\n\n          <TabPanel>\n            <p> Pending for Acceptance</p>\n            <button onClick={() => setTabIndex(1)}>go to 1st tab</button>\n          </TabPanel>\n          <TabPanel>\n            <p>Inprogress tab</p>\n          </TabPanel>\n          <TabPanel>\n            <p>Complete tab</p>\n          </TabPanel>\n        </Tabs>\n      </div> */\n}\n\n// const myStyle1 = {\n//   backgroundColor: \"grey\",\n//  padding: \"12px\",\n//   borderRadius: \"50px\",\n//   width: \"200px\",\n//   textAlign: \"center\",\n//   color: \"white\",\n//   cursor: \"pointer\",\n// };\n// const myStyle2 = {\n//  padding: \"12px\",\n//   borderRadius: \"50px\",\n//   width: \"200px\",\n//   textAlign: \"center\",\n//   backgroundColor: \"blue\",\n//   color: \"white\",\n//   cursor: \"pointer\",\n// };\n\n// const [tabIndex, setTabIndex] = useState(0);\n","/var/www/html/Mazars_Pannel/src/pages/TP/QueriesRecevied/QueriesRecevied.js",["1698","1699"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\n\nfunction QueriesRecevied() {\n  const { id } = useParams();\n  const history = useHistory();\n\n  const userid = window.localStorage.getItem(\"tpkey\");\n  const [submitData, setSubmitData] = useState([]);\n  const [assingNo, setAssingmentNo] = useState();\n  const [displayQuery, setDisplayQuery] = useState([]);\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\n  const [queryDocs, setQueryDocs] = useState([]);\n  const [paymentDetails, setPaymentDetails] = useState([]);\n  const [purpose, setPurpose] = useState([]);\n  const [year, setYear] = useState([]);\n  const [feedback, setFeedback] = useState([]);\n  const [reports, setReports] = useState([]);\n\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    accepted_amount: \"\",\n    payment_received: \"\",\n    cust_accept_date: \"\",\n    proposal_date: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n  });\n\n  const [diaplayAssignment, setDisplayAssignment] = useState([\n    {\n      assignment_number: \"\",\n      assignment_date: \"\",\n    },\n  ]);\n\n  const [diaplayHistory, setDisplayHistory] = useState([\n    {\n      tlname: \"\",\n      date_of_allocation: \"\",\n      date_of_delivery: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    const getSubmittedAssingment = () => {\n      axios.get(`${baseUrl}/customers/getQueryDetails?id=${id}`).then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setSubmitData(res.data.result);\n          setDisplaySpecific(res.data.additional_queries);\n          setPaymentDetails(res.data.payment_detail);\n          setAssingmentNo(res.data.result[0].assign_no);\n          setFeedback(res.data.feedback_detail);\n          setReports(res.data.reports);\n\n          var purposeItem = res.data.result[0].purpose_opinion;\n          var assementItem = res.data.result[0].assessment_year;\n\n          console.log(\"purposeItem-\", typeof purposeItem);\n          try {\n            var myPurpose = JSON.parse(purposeItem);\n            var myYear = JSON.parse(assementItem);\n            setPurpose(myPurpose);\n            setYear(myYear);\n          } catch (e) {\n            return false;\n          }\n\n          if (res.data.proposal_queries.length > 0) {\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\n              proposal_date: res.data.proposal_queries[0].created,\n              description: res.data.proposal_queries[0].description,\n\n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n            });\n          }\n\n          if (res.data.assignment.length > 0) {\n            setDisplayAssignment({\n              assignment_number: res.data.assignment[0].assignment_number,\n              assignment_date: res.data.assignment[0].created,\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\n            });\n          }\n          if (res.data.history_queries.length > 0) {\n            setDisplayHistory({\n              tlname: res.data.history_queries[0].tname,\n              date_of_allocation:\n                res.data.history_queries[0].date_of_allocation,\n            });\n          }\n          if (res.data.queries_document) {\n            if (res.data.queries_document.length > 0) {\n              setQueryDocs(res.data.queries_document);\n            }\n          }\n        }\n      });\n    };\n    getQuery();\n    getSubmittedAssingment();\n  }, [assingNo]);\n\n  const getQuery = () => {\n    axios\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setDisplayQuery(res.data.result);\n        }\n      });\n  };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <div class=\"schedule\">\n            <h3>Query Detail</h3>\n          </div>\n        </div>\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\n          <div class=\"card\">\n            <div\n              class=\"card-header\"\n              id=\"headingOne\"\n              style={{ padding: \".5rem .1rem\" }}\n            >\n              <h2 class=\"mb-0 query ml-3\">\n                <button\n                  class=\"btn btn-success\"\n                  onClick={() => history.goBack(\"4\")}\n                >\n                  Go Back\n                </button>\n              </h2>\n            </div>\n            {submitData.map((p, index) => (\n              <QueryDetails\n                p={p}\n                key={index}\n                diaplaySpecific={diaplaySpecific}\n                diaplayProposal={diaplayProposal}\n                diaplayHistory={diaplayHistory}\n                diaplayAssignment={diaplayAssignment}\n                displayQuery={displayQuery}\n                getQuery={getQuery}\n                assingNo={assingNo}\n                queryDocs={queryDocs}\n                paymentDetails={paymentDetails}\n                purpose={purpose}\n                year={year}\n                feedback={feedback}\n                reports={reports}\n\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesRecevied;\n","/var/www/html/Mazars_Pannel/src/pages/TL/SendProposal/ProposalComponent.js",["1700","1701","1702","1703","1704","1705","1706","1707","1708","1709","1710","1711","1712","1713","1714","1715","1716","1717","1718","1719"],"import React, { useState, useEffect } from \"react\";\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Payment from \"./Payment\";\nimport Select from \"react-select\";\nimport Alerts from \"../../../common/Alerts\";\n\n\nconst Schema = yup.object().shape({\n  misc_1: yup.string().required(\"required misc_1\"),\n  misc_2: yup.string().required(\"required proposal description\"),\n  p_payable: yup.string().required(\"required payable\"),\n});\n\n\nfunction ProposalComponent(props) {\n  const { id } = props;\n  console.log(id);\n\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, reset } = useForm();\n\n\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [custId, setCustId] = useState(\"\");\n  const [custname, setCustName] = useState();\n  const [assignId, setAssignID] = useState(\"\");\n  const [assingNo, setAssingNo] = useState(\"\");\n  const [store, setStore] = useState(null);\n\n  const [payment, setPayment] = useState([]);\n  const [installment, setInstallment] = useState([]);\n\n  const [amount, setAmount] = useState();\n  const [date, setDate] = useState();\n\n  const [error, setError] = useState('');\n\n\n  const [totalAmount, setTotalAmount] = useState(null);\n\n\n  useEffect(() => {\n    const getQuery = () => {\n      axios\n        .get(\n          `${baseUrl}/tl/pendingTlProposal?tl_id=${JSON.parse(\n            userid\n          )}&assign_id=${id}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result.length > 0) {\n              setAssingNo(res.data.result[0].assign_no);\n              setAssignID(res.data.result[0].id);\n            }\n          }\n        });\n    };\n    getQuery();\n  }, []);\n\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\n      console.log(\"res\", res);\n      setCustName(res.data.name);\n      setCustId(res.data.id);\n    };\n\n    getUser();\n  }, [id]);\n\n\n  const onSubmit = (value) => {\n    console.log(value);\n\n    var lumsum = value.p_inst_date\n    setDate(lumsum)\n\n    let formData = new FormData();\n\n    formData.append(\"assign_no\", assingNo);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"type\", \"tl\");\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"assign_id\", assignId);\n    formData.append(\"customer_id\", custId);\n    formData.append(\"description\", value.description);\n\n    formData.append(\"amount_type\", \"fixed\");\n    formData.append(\"amount\", value.p_fixed);\n    formData.append(\"installment_amount\", amount);\n\n    formData.append(\"payment_terms\", payment.value);\n    formData.append(\"no_of_installment\", installment.value);\n\n    payment.label == \"lumpsum\" ?\n      formData.append(\"due_date\", lumsum) :\n      formData.append(\"due_date\", date)\n\n\n    console.log(\"amount -\", amount)\n    // console.log(\"date -\", date)\n    console.log(\"payment -\", payment.value)\n\n\n    if (payment.value == \"installment\") {\n      let sum = amount.reduce(myFunction)\n      function myFunction(total, value) {\n        return Number(total) + Number(value);\n      }\n      console.log(\"sum -\", sum)\n      if (value.p_fixed != sum) {\n        console.log(`installment amount should be eqaul to ${value.p_fixed}`)\n        setError(`installment amount should be eqaul to ${value.p_fixed}`)\n      }\n      else {\n        axios({\n          method: \"POST\",\n          url: `${baseUrl}/tl/uploadProposal`,\n          data: formData,\n        })\n          .then(function (response) {\n            console.log(\"res-\", response);\n            if (response.data.code === 1) {\n              reset();\n\n              var variable = \"Proposal Successfully Sent \"\n              Alerts.SuccessNormal(variable)\n\n              history.push(\"/teamleader/proposal\");\n            }\n          })\n          .catch((error) => {\n            console.log(\"erroror - \", error);\n          });\n      }\n    }\n\n\n  };\n\n\n\n\n\n  const paymentAmount = (data) => {\n    console.log(\"paymentAmount\", data)\n\n    var array1 = []\n    Object.entries(data).map(([key, value]) => {\n      console.log(\"val\", value);\n      array1.push(value)\n    });\n    console.log(\"array1\", array1);\n\n    setAmount(array1);\n  };\n\n  const paymentDate = (data) => {\n    console.log(\"paymentDate\", data)\n\n    var array2 = []\n    Object.entries(data).map(([key, value]) => {\n      console.log(\"val\", value);\n      array2.push(value)\n    });\n    console.log(\"array2\", array2);\n    setDate(array2);\n  };\n\n\n  console.log(\"totalAmount\", totalAmount)\n\n\n  const handleChange = (e) => {\n    console.log(\"val-\", e.target.value);\n    setTotalAmount(e.target.value);\n  };\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"7\">\n              <div>\n                <h4>Prepare Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <p style={{ color: \"red\" }}>{error}</p>\n            <div style={{ display: \"flex\" }}>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    className=\"form-control\"\n                    value={assingNo}\n                    ref={register}\n                  />\n                </div>\n                <div class=\"form-group\">\n                  <label>Fee</label>\n                  <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_type\"\n                    onChange={(e) => setStore(e.target.value)}\n                  >\n                    <option value=\"fixed\">Fixed Price</option>\n                  </select>\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Fixed Price</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_fixed\"\n                    className=\"form-control\"\n                    ref={register}\n                    placeholder=\"Enter Fixed Price\"\n                    onChange={(e) => handleChange(e)}\n\n                  />\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Scope of Work</label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"textarea\"\n                    rows=\"3\"\n                    name=\"description\"\n                    ref={register}\n                    placeholder=\"Enter Proposal Description\"\n                  ></textarea>\n                </div>\n\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Customer Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    className=\"form-control\"\n                    value={custname}\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Payment Terms</label>\n                  <Select\n                    onChange={setPayment}\n                    options={payment_terms}\n                  />\n                </div>\n\n                {payment.label == \"lumpsum\" ? (\n                  <div class=\"form-group\">\n                    <label>Due Dates</label>\n                    <input\n                      type=\"date\"\n                      name=\"p_inst_date\"\n                      className=\"form-control\"\n                      ref={register}\n                      placeholder=\"Enter Hourly basis\"\n                    />\n                  </div>\n                ) :\n                  payment.label == \"installment\" ? (\n                    <div class=\"form-group\">\n                      <label>No of Installments</label>\n                      <Select\n                        onChange={setInstallment}\n                        options={no_installments}\n                      />\n                      {/* <select\n                        className=\"form-control\"\n                        name=\"p_no_installments\"\n                        aria-label=\"Default select example\"\n                        ref={register}\n                        onChange={(e) => setInstallment(e.target.value)}\n                      >\n                        <option value=\"\">--select--</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                      </select> */}\n                    </div>\n                  )\n                    : \"\"\n                }\n\n                {\n                  payment.label == \"lumpsum\"\n                    ?\n                    \"\"\n                    :\n                    <Payment\n                      installment={installment.label}\n                      paymentAmount={paymentAmount}\n                      paymentDate={paymentDate}\n                      totalAmount={totalAmount}\n                    />\n                }\n\n              </div>\n            </div>\n\n\n            <div class=\"form-group col-md-6\">\n              <button type=\"submit\" class=\"btn btn-primary\">\n                Submit\n              </button>\n            </div>\n\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default ProposalComponent;\n\n\nconst payment_terms = [\n  {\n    value: \"lumpsum\",\n    label: \"lumpsum\",\n  },\n  {\n    value: \"installment\",\n    label: \"installment\",\n  },\n];\n\nconst no_installments = [\n  {\n    value: \"2\",\n    label: \"2\",\n  },\n  {\n    value: \"3\",\n    label: \"3\",\n  },\n  {\n    value: \"4\",\n    label: \"4\",\n  },\n];\n\n\n{/* {store == \"hourly\" && (\n                  <div class=\"form-group\">\n                    <label>Hourly basis</label>\n                    <input\n                      type=\"text\"\n                      name=\"p_hourly\"\n                      className=\"form-control\"\n                      ref={register}\n                      placeholder=\"Enter Hourly basis\"\n                    />\n                  </div>\n                )}\n                {store == \"mixed\" && (\n                  <div>\n                    <div class=\"form-group\">\n                      <label>Mixed</label>\n                      <input\n                        type=\"text\"\n                        name=\"p_fixed\"\n                        className=\"form-control\"\n                        ref={register}\n                        placeholder=\"Enter Fixed Price\"\n                      />\n                    </div>\n                    <div class=\"form-group\">\n                      <input\n                        type=\"text\"\n                        name=\"p_hourly\"\n                        className=\"form-control\"\n                        ref={register}\n                        placeholder=\"Enter Hourly basis\"\n                      />\n                    </div>\n                  </div>\n                )} */}\n\n\n\n// var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n// var todaysDate = new Date();\n\n\n{\n  /* <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_assingment\"\n                    onChange={(e) => getID(e.target.value)}\n                  >\n                    <option value=\"\">--select--</option>\n                    {incompleteData.map((p, index) => (\n                      <option key={index} value={p.id}>\n                        {p.assign_no}\n                      </option>\n                    ))}\n                  </select> */\n}\n\n// const getID = (key) => {\n//     setId(key);\n//     incompleteData.filter((data) => {\n//       if (data.id == key) {\n//         console.log(\"assingNo\", data.assign_no);\n//         setAssingNo(data.assign_no);\n//         setAssignID(data.id);\n//       }\n//     });\n//   };\n{/* <select\n                    className=\"form-control\"\n                    name=\"p_payment_terms\"\n                    aria-label=\"Default select example\"\n                    ref={register}\n                    onChange={(e) => setPayment(e.target.value)}\n                  >\n                    <option value=\"\">--select--</option>\n                    <option value=\"Lumpsum\">Lumpsum</option>\n                    <option value=\"Installment\">Installment</option>\n                  </select> */}","/var/www/html/Mazars_Pannel/src/pages/TP/QueriesTab/QueriesTab.js",["1720","1721","1722","1723","1724","1725"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\n\nimport InComplete from \"../InComplete/InComplete\";\nimport Complete from \"../Complete/Complete\";\n\nfunction QueriesTab() {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  // const [pendingAcceptence, setPendingAcceptence] = useState(\"\");\n  // const [incomplete, setIncomplete] = useState(\"\");\n  // const [complete, setComplete] = useState(\"\");\n\n  // const CountPendingForAcceptence = (data) => {\n  //   setPendingAcceptence(data);\n  // };\n\n  // const CountIncomplete = (data) => {\n  //   setIncomplete(data);\n  // };\n\n  // const CountComplete = (data) => {\n  //   setComplete(data);\n  // };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <div class=\"row mt-3\">\n        <div class=\"col-md-12\">\n          <ul\n            class=\"nav nav-pills mb-3\"\n            style={{ justifyContent: \"space-around\" }}\n            id=\"pills-tab\"\n            role=\"tablist\"\n          >\n            <li class=\"nav-item\" role=\"presentation\">\n              <a\n                class=\"nav-link text-white active\"\n                id=\"pills-incomplete-tab\"\n                data-toggle=\"pill\"\n                href=\"#incomplete\"\n                role=\"tab\"\n                aria-controls=\"pills-incomplete\"\n                aria-selected=\"false\"\n              >\n                Inprogress\n              </a>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n              <a\n                class=\"nav-link text-white\"\n                id=\"pills-complete-tab\"\n                data-toggle=\"pill\"\n                href=\"#complete\"\n                role=\"tab\"\n                aria-controls=\"pills-complete\"\n                aria-selected=\"false\"\n              >\n                Complete\n              </a>\n            </li>\n          </ul>\n          <div class=\"tab-content\" id=\"pills-tabContent\">\n            <div\n              class=\"tab-pane fade show active\"\n              id=\"incomplete\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-incomplete-tab\"\n            >\n              <InComplete />\n            </div>\n\n            <div\n              class=\"tab-pane fade\"\n              id=\"complete\"\n              role=\"tabpanel\"\n              aria-labelledby=\"pills-complete-tab\"\n            >\n              <Complete />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default QueriesTab;\n","/var/www/html/Mazars_Pannel/src/pages/TP/InComplete/InComplete.js",["1726","1727","1728","1729","1730"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Tpfilter from \"../../../components/Search-Filter/tpfilter\";\n\nfunction InComplete() {\n  const [incompleteData, setInCompleteData] = useState([]);\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  useEffect(() => {\n    getIncomplete();\n  }, []);\n\n  const getIncomplete = () => {\n    axios\n      .get(`${baseUrl}/tp/GetIncompleteQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          //   CountIncomplete(res.data.result.length);\n          setInCompleteData(res.data.result);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/taxprofessional/queries/${row.id}`}>\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <Tpfilter\n            setData={setInCompleteData}\n            getData={getIncomplete}\n            inCompleteQuery=\"inCompleteQuery\"\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={incompleteData}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default InComplete;\n","/var/www/html/Mazars_Pannel/src/pages/TP/Complete/Complete.js",["1731","1732","1733","1734","1735"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Tpfilter from \"../../../components/Search-Filter/tpfilter\";\n\nfunction Complete() {\n  const [completeData, setCompleteData] = useState([]);\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  useEffect(() => {\n    getComplete();\n  }, []);\n\n  const getComplete = () => {\n    axios\n      .get(`${baseUrl}/tp/GetCompleteQues?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          //   CountIncomplete(res.data.result.length);\n          setCompleteData(res.data.result);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"query_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/taxprofessional/queries/${row.id}`}>{row.assign_no}</Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"\tExp. Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Card>\n      <CardHeader>\n          <Tpfilter\n            setData={setCompleteData}\n            getData={getComplete}\n            completeAssignment=\"completeAssignment\"\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={completeData}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default Complete;\n","/var/www/html/Mazars_Pannel/src/pages/TP/Proposal/Proposal.js",["1736","1737","1738","1739"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Tpfilter from \"../../../components/Search-Filter/tpfilter\";\n\nfunction Proposal() {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [proposal, setProposal] = useState([]);\n  const [count, setCount] = useState(\"\");\n\n  useEffect(() => {\n    getProposalList();\n  }, []);\n\n  const getProposalList = () => {\n    axios\n      .get(`${baseUrl}/tp/getProposalTp?id=${JSON.parse(userid)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setProposal(res.data.result);\n          setCount(res.data.result.length);\n        }\n      });\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      dataField: \"query_date\",\n      text: \"Date\",\n      sort: true,\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.query_date);\n        var oldDate = row.query_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/taxprofessional/queries/${row.id}`}>\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {row.status == \"Cust Accepted\" || row.status == \"Pending\" ? (\n              <Link to={`/taxprofessional/edit-proposal/${row.id}`}>\n                <i\n                  className=\"fa fa-edit\"\n                  style={{\n                    fontSize: 18,\n                    cursor: \"pointer\",\n                    marginLeft: \"8px\",\n                    color: \"green\",\n                  }}\n                ></i>\n              </Link>\n            ) : row.status == \"Accepted\" ? (\n              <Link to={`/taxprofessional/sendproposal/${row.id}`}>\n                <i\n                  class=\"fa fa-mail-forward\"\n                  style={{\n                    fontSize: 14,\n                    cursor: \"pointer\",\n                    marginLeft: \"8px\",\n                  }}\n                ></i>\n              </Link>\n            ) : null}\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"9\">\n              <CardTitle tag=\"h4\">List of Proposals ({count})</CardTitle>\n            </Col>\n            <Col md=\"3\"></Col>\n          </Row>\n        </CardHeader>\n        <CardHeader>\n          <Tpfilter\n            setData={setProposal}\n            getData={getProposalList}\n            proposal=\"proposal\"\n          />\n        </CardHeader>\n        <CardBody>\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={proposal}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Proposal;\n","/var/www/html/Mazars_Pannel/src/pages/TP/SendProposal/SendProposal.js",[],"/var/www/html/Mazars_Pannel/src/pages/TP/SendProposal/ProposalComponent.js",["1740","1741","1742","1743","1744"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\nfunction ProposalComponent(props) {\n  const { id } = props;\n  console.log(id);\n\n  const alert = useAlert();\n  const { register, handleSubmit, reset } = useForm();\n  const userid = window.localStorage.getItem(\"tlkey\");\n\n  const [custId, setCustId] = useState(\"\");\n  const [custname, setCustName] = useState();\n  const [assignId, setAssignID] = useState(\"\");\n  const [assingNo, setAssingNo] = useState(\"\");\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const getQuery = () => {\n      axios\n        .get(\n          `${baseUrl}/tl/pendingTlProposal?tl_id=${JSON.parse(\n            userid\n          )}&assign_id=${id}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result.length > 0) {\n              setAssingNo(res.data.result[0].assign_no);\n              setAssignID(res.data.result[0].id);\n            }\n          }\n        });\n    };\n    getQuery();\n  }, []);\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\n      console.log(\"res\", res);\n      setCustName(res.data.name);\n      setCustId(res.data.id);\n    };\n\n    getUser();\n  }, [id]);\n\n  const onSubmit = (value) => {\n    console.log(value);\n\n    // var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n    var todaysDate = new Date();\n\n    let formData = new FormData();\n\n    formData.append(\"assign_no\", assingNo);\n    formData.append(\"name\", value.p_name);\n    formData.append(\"type\", \"tl\");\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"amount\", value.p_amount);\n    formData.append(\"payable\", value.p_payable);\n    formData.append(\"misc1\", value.misc_1);\n    formData.append(\"misc2\", value.misc_2);\n    formData.append(\"payable_date\", todaysDate);\n    formData.append(\"customer_id\", custId);\n    formData.append(\"assign_id\", assignId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/uploadProposal`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          reset();\n          alert.success(<Msg />);\n          history.push(\"/taxprofessional/proposal\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  //alert msg\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"10px\" }}>proposal successfully sent</p>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"7\">\n              <div class=\"btn ml-3\">\n                <h4>Prepare Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    class=\"form-control\"\n                    value={assingNo}\n                    ref={register}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Customer Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    class=\"form-control\"\n                    value={custname}\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Amount</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_amount\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by Through</label>\n                  <select\n                    class=\"form-control\"\n                    name=\"p_payable\"\n                    aria-label=\"Default select example\"\n                    ref={register}\n                  >\n                    <option value=\"\">--select--</option>\n                    {payable.map((p, index) => (\n                      <option key={index} value={p.pay}>\n                        {p.pay}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Misc 1</label>\n                  <input\n                    type=\"text\"\n                    name=\"misc_1\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Proposal Description</label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"textarea\"\n                    rows=\"3\"\n                    name=\"misc_2\"\n                    ref={register}\n                  ></textarea>\n                </div>\n              </div>\n            </div>\n\n            {/* <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by date</label>\n                  <input\n                    type=\"date\"\n                    name=\"p_date\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div> */}\n\n            <br />\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default ProposalComponent;\n\nconst payable = [\n  { pay: \"NEFT\" },\n  { pay: \"DEBIT CARD\" },\n  { pay: \"CREDIT CARD\" },\n  { pay: \"UPI\" },\n  { pay: \"WALLET\" },\n];\n\n{\n  /* <div class=\"col-md-8\">\n        <div>\n          <h3>Send Proposal</h3>\n          <br />\n\n          \n        \n        </div>\n      </div> */\n}\n\n// const handleImage = (e) =>{\n//   let files = e.target.files\n//    console.log(files)\n\n//   let reader = new FileReader();\n//   reader.readAsDataURL(files[0])\n\n//  reader.onload = (e) => {\n//  console.log(\"img\", e.target.result)\n// }\n\n/* <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label>Proposal File</label>\n                <input type=\"file\" name=\"p_image\" ref={register} />\n              </div>\n            </div> */\n\n// const Schema = yup.object().shape({\n//     p_assingment: yup.string().required(\"required assingment\"),\n//     p_name: yup.string().required(\"required name\"),\n//     p_document: yup.string().required(\"required file\"),\n//   });\n\n// {\n//   Object.entries(res.data.result).map(([key, value]) => {\n//     console.log(\"val\", value.name);\n//     setCustName(value.name);\n//   });\n// }\n\n{\n  /* <select\n                    class=\"form-control\"\n                    ref={register}\n                    name=\"p_assingment\"\n                    onChange={(e) => getID(e.target.value)}\n                  >\n                    <option value=\"\">--select--</option>\n                    {incompleteData.map((p, index) => (\n                      <option key={index} value={p.id}>\n                        {p.assign_no}\n                      </option>\n                    ))}\n                  </select> */\n}\n\n// const getID = (key) => {\n//     setId(key);\n//     incompleteData.filter((data) => {\n//       if (data.id == key) {\n//         console.log(\"assingNo\", data.assign_no);\n//         setAssingNo(data.assign_no);\n//         setAssignID(data.id);\n//       }\n//     });\n//   };\n","/var/www/html/Mazars_Pannel/src/pages/TP/EditProposal/EditProposal.js",["1745","1746","1747","1748","1749","1750","1751","1752","1753","1754","1755"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\n\nfunction ProposalComponent() {\n  // const { id } = props;\n  // console.log(id);\n\n  const alert = useAlert();\n  const { register, handleSubmit, reset } = useForm();\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [custId, setCustId] = useState(\"\");\n  const [custname, setCustName] = useState();\n  const [assignId, setAssignID] = useState(\"\");\n  const [assingNo, setAssingNo] = useState(\"\");\n\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [proposal, setProposal] = useState({\n    query: \"\",\n    name: \"\",\n    amount: \"\",\n    payable: \"\",\n    misc1: \"\",\n    misc2: \"\",\n    payable_through: \"\",\n  });\n  const { query, name, amount, misc1, misc2, payable_through } = proposal;\n\n  useEffect(() => {\n    getQuery();\n  }, []);\n\n  const getQuery = () => {\n    axios.get(`${baseUrl}/tl/getProposalDetail?id=${id}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setProposal({\n          name: res.data.result.name,\n          query: res.data.result.assign_no,\n          amount: res.data.result.amount,\n          misc1: res.data.result.misc1,\n          misc2: res.data.result.misc2,\n          payable_through: res.data.result.payable_through,\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    const getUser = async () => {\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\n      console.log(\"res\", res);\n      // setCustName(res.data.name);\n      setCustId(res.data.id);\n    };\n    getUser();\n  }, [id]);\n\n  console.log(assignId);\n\n  const onSubmit = (value) => {\n    console.log(value);\n\n    // var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\n    var todaysDate = new Date();\n    let formData = new FormData();\n\n    formData.append(\"assign_no\", value.p_assingment);\n    formData.append(\"name\", value.p_name);\n    // formData.append(\"type\", \"tl\");\n    formData.append(\"assign_id\", id);\n    formData.append(\"amount\", value.p_amount);\n    formData.append(\"payable_through\", value.p_payable);\n    formData.append(\"misc1\", value.misc_1);\n    formData.append(\"misc2\", value.misc_2);\n    // formData.append(\"payable_date\", todaysDate);\n    // formData.append(\"customer_id\", custId);\n    // formData.append(\"assign_id\", assignId);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/updateProposal`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          // reset();\n          getQuery();\n          alert.success(<Msg />);\n          history.push(\"/taxprofessional/proposal\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  //alert msg\n  const Msg = () => {\n    return (\n      <>\n        <p style={{ fontSize: \"10px\" }}>proposal updated</p>\n      </>\n    );\n  };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"5\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"7\">\n              <div class=\"btn ml-3\">\n                <h4>Edit Proposal</h4>\n              </div>\n            </Col>\n          </Row>\n        </CardHeader>\n\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_assingment\"\n                    class=\"form-control\"\n                    value={query}\n                    ref={register}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Customer Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_name\"\n                    class=\"form-control\"\n                    value={name}\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Amount</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_amount\"\n                    class=\"form-control\"\n                    ref={register}\n                    defaultValue={amount}\n                  />\n                </div>\n              </div>\n\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by Through</label>\n                  <select\n                    class=\"form-control\"\n                    name=\"p_payable\"\n                    aria-label=\"Default select example\"\n                    ref={register}\n                    defaultValue={payable_through}\n                  >\n                    <option value=\"\">--select--</option>\n                    {payable.map((p, index) => (\n                      <option key={index} value={p.pay}>\n                        {p.pay}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Misc 1</label>\n                  <input\n                    type=\"text\"\n                    name=\"misc_1\"\n                    class=\"form-control\"\n                    ref={register}\n                    defaultValue={misc1}\n                  />\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Proposal Description</label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"textarea\"\n                    rows=\"3\"\n                    name=\"misc_2\"\n                    defaultValue={misc2}\n                    ref={register}\n                  ></textarea>\n                </div>\n              </div>\n            </div>\n\n            {/* <div class=\"row\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Payable by date</label>\n                  <input\n                    type=\"date\"\n                    name=\"p_date\"\n                    class=\"form-control\"\n                    ref={register}\n                  />\n                </div>\n              </div>\n            </div> */}\n\n            <br />\n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ProposalComponent;\n\nconst payable = [\n  { pay: \"NEFT\" },\n  { pay: \"DEBIT CARD\" },\n  { pay: \"CREDIT CARD\" },\n  { pay: \"UPI\" },\n  { pay: \"WALLET\" },\n];\n","/var/www/html/Mazars_Pannel/src/components/Search-Filter/tpfilter.js",["1756","1757","1758","1759","1760"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useForm } from \"react-hook-form\";\nimport { Select } from \"antd\";\n\n\nfunction TaxProfessionalFilter(props) {\n  const { Option } = Select;\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const {\n    setData,\n    getData,\n    inCompleteQuery,\n    completeAssignment,\n    proposal,\n  } = props;\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    console.log(`selected ${value}`);\n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetCategory ..\");\n    setSelectedData([]);\n    setStore2([]);\n    setTax2([])\n    getData();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    setSelectedData([]);\n    setStore2([]);\n    reset();\n    getData();\n  };\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"store2 :\", store2);\n\n    if (inCompleteQuery == \"inCompleteQuery\") {\n      axios\n        .get(\n          `${baseUrl}/tp/GetIncompleteQues?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n\n    if (completeAssignment == \"completeAssignment\") {\n      axios\n        .get(\n          `${baseUrl}/tp/GetCompleteQues?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n\n    if (proposal == \"proposal\") {\n      axios\n        .get(\n          `${baseUrl}/tp/GetIncompleteQues?id=${JSON.parse(\n            userid\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${\n            data.p_dateTo\n          }&status=${data.p_status}&pcat_id=${selectedData}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            if (res.data.result) {\n              setData(res.data.result);\n            }\n          }\n        });\n    }\n  };\n\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-12 d-flex\">\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <div class=\"form-inline\">\n                <div class=\"form-group mb-2\">\n                  <Select\n                    style={{ width: 130 }}\n                    placeholder=\"Select Category\"\n                    defaultValue={[]}\n                    onChange={handleCategory}\n                    value={selectedData}\n                  >\n                    <Option value=\"1\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\n                    </Option>\n                    <Option value=\"2\" label=\"Compilance\">\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\n                    </Option>\n                  </Select>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <Select\n                    mode=\"multiple\"\n                    style={{ width: 250 }}\n                    placeholder=\"Select Sub Category\"\n                    defaultValue={[]}\n                    onChange={handleSubCategory}\n                    value={store2}\n                    allowClear\n                  >\n                    {tax2.map((p, index) => (\n                      <Option value={p.id} key={index}>\n                        {p.details}\n                      </Option>\n                    ))}\n                  </Select>\n                </div>\n\n                <div>\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary mb-2 ml-3\"\n                    onClick={resetCategory}\n                  >\n                    X\n                  </button>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">From</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateFrom\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <label className=\"form-select form-control\">To</label>\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  <input\n                    type=\"date\"\n                    name=\"p_dateTo\"\n                    className=\"form-select form-control\"\n                    ref={register}\n                  />\n                </div>\n\n                <div class=\"form-group mx-sm-1  mb-2\">\n                  {proposal == \"proposal\" && (\n                    <select\n                      className=\"form-select form-control\"\n                      name=\"p_status\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"1\">Accepted</option>\n                      <option value=\"2\">Pending</option>\n                      <option value=\"3\">Cust Accepted</option>\n                      <option value=\"4\">Declined</option>\n                    </select>\n                  )}\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                  Search\n                </button>\n                <Reset />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n\nexport default TaxProfessionalFilter;\n","/var/www/html/Mazars_Pannel/src/pages/TP/ChangePassword/ChangePassword.js",["1761","1762","1763","1764","1765","1766","1767","1768"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\n// import \"../../assets/css/style.css\";\n// import \"../../assets/css/media.css\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required user id\"),\n//   p_password: yup.string().required(\"required password\"),\n//   p_confirm_password: yup.string().required(\"required confirm password\"),\n// });\n\nfunction ChangePassword(props) {\n  const userid = window.localStorage.getItem(\"tpkey\");\n\n  const alert = useAlert();\n  // const { handleSubmit, register, reset, errors } = useForm({\n  //   resolver: yupResolver(Schema),\n  // });\n\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n\n  const [error, setError] = useState(\"\");\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"id\", JSON.parse(userid));\n    formData.append(\"user_id\", value.p_email);\n    formData.append(\"password\", value.password);\n    formData.append(\"rpassword\", value.confirm_password);\n\n    // axios({\n    //   method: \"POST\",\n    //   url: `${baseUrl}/customers/passChange`,\n    //   data: formData,\n    // })\n    //   .then(function (response) {\n    //     console.log(\"res-\", response);\n    //     if (response.data.code === 1) {\n    //       alert.success(\"change password successfully!\");\n    //       reset();\n    //     } else if (response.data.code === 0) {\n    //       console.log(response.data.result);\n\n    //       Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n    //       reset();\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(\"erroror - \", error);\n    //   });\n  };\n\n  return (\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Change Password</h2>\n          </div>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-group\">\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Email </label>\n                <input\n                  type=\"text\"\n                  className={classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_email,\n                  })}\n                  name=\"p_email\"\n                  placeholder=\"Enter email id\"\n                  ref={register({\n                    required: \"This field is required\",\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: \"Please enter valid email address\",\n                    },\n                  })}\n                />\n                {errors.p_email && (\n                  <div className=\"invalid-feedback\">\n                    {errors.p_email.message}{\" \"}\n                  </div>\n                )}\n              </div>\n\n              <label className=\"form-label\">New Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_password,\n                })}\n                placeholder=\"Enter Your Password\"\n                name=\"p_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  pattern: {\n                    value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n                    message:\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\n                  },\n                })}\n              />\n              {errors.p_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_password.message}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Confirm Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_confirm_password,\n                })}\n                placeholder=\"Confirm Password\"\n                name=\"p_confirm_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  validate: (value) =>\n                    value === getValues(\"p_password\") ||\n                    \"password doesn 't match\",\n                })}\n              />\n              {errors.p_confirm_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_confirm_password.message}\n                </div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport default ChangePassword;\n","/var/www/html/Mazars_Pannel/src/views/Schedule/schedule.js",["1769","1770","1771","1772","1773"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport Demo from \"./demo\";\n\nfunction Schedule() {\n  const userId = window.localStorage.getItem(\"userid\");\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"7\">\n              <CardTitle tag=\"h4\">Schedule </CardTitle>\n            </Col>\n            <Col md=\"5\"></Col>\n          </Row>\n        </CardHeader>\n        <Demo />\n        <CardBody></CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Schedule;\n","/var/www/html/Mazars_Pannel/src/views/Schedule/demo.js",["1774","1775","1776","1777","1778","1779","1780","1781","1782","1783"],"import React, { useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  ViewState,\n  EditingState,\n  IntegratedEditing,\n} from \"@devexpress/dx-react-scheduler\";\nimport {\n  Scheduler,\n  WeekView,\n  DayView,\n  Appointments,\n  Toolbar,\n  DateNavigator,\n  ViewSwitcher,\n  AppointmentForm,\n  AppointmentTooltip,\n  TodayButton,\n  Resources,\n  EditRecurrenceMenu,\n} from \"@devexpress/dx-react-scheduler-material-ui\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as Cookies from \"js-cookie\";\n\nfunction Demo() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const history = useHistory();\n  const [data, setData] = useState([]);\n  const [assignmentdata, setAssignmentData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  // const [appointmentMeta, setAppointmentMeta] = useState({\n  //   target: null,\n  //   data: {},\n  // });\n\n  const [baseMode, SetbaseMode] = useState(\"avc\");\n  const [transcode, SetTranscode] = useState(\"interop\");\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\n\n  var date = new Date();\n\n  function convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\");\n  }\n  const [currentDate, setCurrentDate] = useState(convert(date));\n\n  useEffect(() => {\n    getData();\n    getAssignmentNo();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/videoScheduler?customer_id=${JSON.parse(userId)}`\n      )\n      .then((res) => {\n        console.log(\"res -\", res);\n        console.log(\"result -\", res.data.result.items);\n        var a = res.data.result.items;\n        if (a) {\n          setData(a.map(mapAppointmentData));\n          setLoading(false);\n        }\n      });\n  };\n\n  const mapAppointmentData = (appointment) => ({\n    id: appointment.id,\n    startDate: appointment.start,\n    endDate: appointment.end,\n    title: appointment.title,\n    notes: appointment.summary,\n    question_id: appointment.question_id,\n  });\n\n  const getAssignmentNo = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          var data = res.data.result;\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\n            text,\n            ...rest,\n          }));\n          console.log(\"dt--\", newArrayOfObj);\n          setAssignmentData(newArrayOfObj);\n          setLoading(false);\n        }\n      });\n  };\n\n  const resources = [\n    {\n      fieldName: \"question_id\",\n      title: \"Query No\",\n      instances: assignmentdata,\n    },\n  ];\n\n  const changeFormat = (d) => {\n    console.log(d);\n    return (\n      d.getFullYear() +\n      \"-\" +\n      (d.getMonth() + 1) +\n      \"-\" +\n      d.getDate() +\n      \" \" +\n      d.toString().split(\" \")[4]\n    );\n  };\n\n  const commitChanges = ({ added, changed, deleted }) => {\n    if (added) {\n      console.log(\"added - \", added);\n      var startDate = added.startDate;\n      var endDate = added.endDate;\n\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", added.question_id);\n      formData.append(\"time\", changeFormat(startDate));\n      formData.append(\"endtime\", changeFormat(endDate));\n      formData.append(\"title\", added.title);\n      formData.append(\"notes\", added.notes);\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/PostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"res post-\", response);\n          getData();\n          setLoading(false);\n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n        });\n    }\n    if (changed) {\n      console.log(\"changed\", changed);\n\n      const data2 = data.map((appointment) =>\n        changed[appointment.id]\n          ? { ...appointment, ...changed[appointment.id] }\n          : appointment\n      );\n      console.log(\"data2 - \", data2);\n\n      let valuesArray = Object.entries(changed);\n      let id = valuesArray[0][0];\n      console.log(\"id -\", id);\n      let dataIttem;\n\n      for (var i = 0; i < data2.length; i++) {\n        if (data2[i].id === id) {\n          dataIttem = data2[i];\n        }\n      }\n      console.log(\"dataIttem\", dataIttem);\n\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", dataIttem.question_id);\n      formData.append(\"id\", dataIttem.id);\n      formData.append(\"time\", dataIttem.startDate);\n      formData.append(\"endtime\", dataIttem.endDate);\n      formData.append(\"title\", dataIttem.title);\n      formData.append(\"notes\", dataIttem.notes);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/customers/PostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"res post-\", response);\n          getData();\n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n        });\n    }\n\n    if (deleted !== undefined) {\n      console.log(\"deleted f\", deleted);\n      axios.get(`${baseUrl}/customers/freeslot?id=${deleted}`).then((res) => {\n        console.log(\"res -\", res);\n        getData();\n        setLoading(false);\n      });\n    }\n  };\n\n  const styles = (theme) => ({\n    button: {\n      color: theme.palette.background.default,\n      padding: 0,\n    },\n    text: {\n      paddingTop: theme.spacing(1),\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n  });\n\n  const AppointmentBase = ({\n    children,\n    data,\n    onClick,\n    classes,\n    onAppointmentMetaChange,\n    ...restProps\n  }) => (\n    <Appointments.Appointment {...restProps}>\n      <div style={{ display: \"flex\" }}>\n        {\n          console.log(\"data\", data)\n\n        }\n        <div>{children}</div>\n        <div\n          onClick={() => handleJoin(data.question_id)}\n        >\n          <i\n            class=\"fa fa-video-camera\"\n            style={{ fontSize: \"12px\", color: \"#fff\" }}\n          ></i>\n        </div>\n      </div>\n    </Appointments.Appointment>\n  );\n\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\n    AppointmentBase\n  );\n\n  // const onAppointmentMetaChange = () => {\n  //   setAppointmentMeta({\n  //     appointmentMeta: { data, target },\n  //   });\n  //   return(\n  //     <div>\n  //       kjghkhl\n  //     </div>\n  //   )\n  // };\n\n  const myAppointment = (props) => {\n    return (\n      <Appointment\n        {...props}\n      // onAppointmentMetaChange={onAppointmentMetaChange}\n      />\n    );\n  };\n\n  //handleJoin\n  const handleJoin = (id) => {\n    console.log(\"id\", id);\n    Cookies.set(\"channel\", id);\n    Cookies.set(\"baseMode\", baseMode);\n    Cookies.set(\"transcode\", transcode);\n    Cookies.set(\"attendeeMode\", attendeeMode);\n    Cookies.set(\"videoProfile\", videoProfile);\n    history.push(\"/customer/meeting\");\n  };\n\n  return (\n    <Paper>\n      <Scheduler data={data} height={660}>\n        <ViewState\n          defaultCurrentDate={currentDate}\n          defaultCurrentViewName=\"Week\"\n        />\n        <EditingState onCommitChanges={commitChanges} />\n        <EditRecurrenceMenu />\n\n        <DayView startDayHour={10} endDayHour={24} />\n        <WeekView startDayHour={10} endDayHour={19} />\n\n        <Appointments appointmentComponent={myAppointment} />\n\n        <Toolbar />\n        <DateNavigator />\n        <TodayButton />\n        <ViewSwitcher />\n\n        <AppointmentTooltip showOpenButton />\n        <AppointmentForm readOnly />\n        <Resources data={resources} mainResourceName=\"question_id\" />\n      </Scheduler>\n    </Paper>\n  );\n}\n\nexport default Demo;\n\n// function TitleComponent({ title }) {\n//   return (\n//     <div>\n//       <Link to={`/customer/queries`}>queries - {title}</Link>\n//     </div>\n//   );\n// }\n{\n  /* <Link to={`/customer/meeting`}>\n            <p style={{ fontSize: \"12px\",color:\"#fff\" }}>link</p>\n          </Link> */\n}\n","/var/www/html/Mazars_Pannel/src/views/Schedule/appoinments.js",[],["1784","1785"],"/var/www/html/Mazars_Pannel/src/pages/TL/ViewReport/ViewReport.js",["1786","1787","1788","1789","1790","1791"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\n\nfunction ViewReport() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { id } = useParams();\n  const history = useHistory();\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    getReport();\n  }, []);\n\n  const getReport = () => {\n    let formData = new FormData();\n    formData.append(\"assign_no\", id);\n    formData.append(\"uid\", JSON.parse(userid));\n    formData.append(\"stages_type\", 2);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/getstagesinfo`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          setData(response.data.result);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>ViewReport</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <div class=\"my-3\">\n            <table class=\"table table-bordered\">\n              <thead>\n                <tr>\n                  <th scope=\"row\">S.No</th>\n                  <th scope=\"row\">Report</th>\n                </tr>\n              </thead>\n              {data.length > 0\n                ? data.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>\n                        {p.document && (\n                          <p style={{ display: \"flex\" }}>\n                            <a\n                              href={`http://65.0.220.156/mazarapi/assets/upload/report/${p.assign_no}/${p.document}`}\n                              target=\"_blank\"\n                            >\n                              <i class=\"fa fa-photo\"></i>\n                            </a>\n                            <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\n                          </p>\n                        )}\n                      </td>\n                    </tr>\n                  </tbody>\n                ))\n                : null}\n            </table>\n          </div>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewReport;\n","/var/www/html/Mazars_Pannel/src/pages/TL/Schedule/Schedule.js",["1792","1793"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Demo from \"./Demo\";\n\nfunction Schedule() {\n    const userid = window.localStorage.getItem(\"tlkey\");\n\n    return (\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"7\">\n              <CardTitle tag=\"h4\">Schedule </CardTitle>\n            </Col>\n            <Col md=\"5\"></Col>\n          </Row>\n        </CardHeader>\n        <Demo />\n      </Card>\n    </Layout>\n    );\n}\n\nexport default Schedule;","/var/www/html/Mazars_Pannel/src/pages/TL/Schedule/Demo.js",["1794","1795","1796","1797","1798","1799","1800","1801","1802","1803","1804","1805"],"import React, { useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { baseUrl } from \"../../../config/config\";\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\nimport {\n  Scheduler,\n  Resources,\n  MonthView,\n  Appointments,\n  AppointmentTooltip,\n  AppointmentForm,\n  EditRecurrenceMenu,\n  DragDropProvider,\n  WeekView,\n  DayView,\n  DateNavigator,\n  ViewSwitcher,\n  TodayButton,\n  Toolbar,\n} from \"@devexpress/dx-react-scheduler-material-ui\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport * as Cookies from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport Alerts from \"../../../common/Alerts\";\n\n// import {owners}  from \"./appoinments\";\n\nfunction Demo() {\n  const userId = window.localStorage.getItem(\"tlkey\");\n  const history = useHistory();\n\n  const [data, setData] = useState([]);\n  const [assignmentdata, setAssignmentData] = useState([]);\n  const [owner, setOwner] = useState([]);\n\n  const [baseMode, SetbaseMode] = useState(\"avc\");\n  const [transcode, SetTranscode] = useState(\"interop\");\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\n  var date = new Date();\n\n  function convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\");\n  }\n  const [currentDate, setCurrentDate] = useState(convert(date));\n\n  useEffect(() => {\n    getData();\n    getAssignmentNo();\n    getUsers();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(`${baseUrl}/tl/videoScheduler?tl_id=${JSON.parse(userId)}`)\n      .then((res) => {\n        console.log(\"res -\", res);\n        var a = res.data.result.items;\n        if (a) {\n          setData(a.map(mapAppointmentData));\n        }\n      });\n  };\n\n  const mapAppointmentData = (appointment) => ({\n    id: appointment.id,\n    startDate: appointment.start,\n    endDate: appointment.end,\n    title: appointment.title,\n    notes: appointment.summary,\n    question_id: appointment.question_id,\n    vstart: appointment.vstart,\n    vend: appointment.vend,\n    user: appointment.user.split(','),\n    owner: appointment.owner,\n  });\n\n  const getAssignmentNo = () => {\n    axios\n      .get(`${baseUrl}/admin/getAllQuery?uid=${JSON.parse(userId)}`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          var data = res.data.result;\n\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\n            text,\n            ...rest,\n          }));\n          console.log(\"dt--\", newArrayOfObj);\n          setAssignmentData(newArrayOfObj);\n        }\n      });\n  };\n\n  const getUsers = () => {\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        var data = res.data.result;\n        const newOwners = data.map(({ name: text, ...rest }) => ({\n          text,\n          ...rest,\n        }));\n        console.log(\"dt--\", newOwners);\n        setOwner(newOwners);\n      }\n    });\n  };\n\n  const resources = [\n    {\n      fieldName: \"question_id\",\n      title: \"Query No\",\n      instances: assignmentdata,\n    },\n    {\n      fieldName: \"user\",\n      title: \"Users\",\n      instances: owner,\n      allowMultiple: true,\n    },\n  ];\n\n  const styles = (theme) => ({\n    button: {\n      color: theme.palette.background.default,\n      padding: 0,\n    },\n    text: {\n      paddingTop: theme.spacing(1),\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n  });\n\n  const AppointmentBase = ({\n    children,\n    data,\n    onClick,\n    classes,\n    onAppointmentMetaChange,\n    ...restProps\n  }) => (\n    <Appointments.Appointment {...restProps}>\n      <div style={{ display: \"flex\" }}>\n        {\n          // console.log(\"children\",children)\n          console.log(\"data\", data)\n\n        }\n        <div>{children}</div>\n        <div\n          onClick={() => handleJoin(data.question_id)}\n        ><i\n          class=\"fa fa-video-camera\"\n          style={{ fontSize: \"12px\", color: \"#fff\" }}\n        ></i>\n        </div>\n      </div>\n    </Appointments.Appointment>\n  );\n\n\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\n    AppointmentBase\n  );\n\n  const myAppointment = (props) => {\n    return (\n      <Appointment\n        {...props}\n      // onAppointmentMetaChange={onAppointmentMetaChange}\n      />\n    );\n  };\n\n  //handleJoin\n  const handleJoin = (id) => {\n    console.log(\"id\", id);\n\n    Cookies.set(\"channel_2\", id);\n    Cookies.set(\"baseMode_2\", baseMode);\n    Cookies.set(\"transcode_2\", transcode);\n    Cookies.set(\"attendeeMode_2\", attendeeMode);\n    Cookies.set(\"videoProfile_2\", videoProfile);\n    history.push(\"/teamleader/meeting\");\n  };\n\n  const changeFormat = (d) => {\n    console.log(\"d ---\", d);\n\n    if (typeof d === 'object') {\n      console.log(\"GMT\");\n      return (\n        d.getFullYear() +\n        \"-\" +\n        (d.getMonth() + 1) +\n        \"-\" +\n        d.getDate() +\n        \" \" +\n        d.toString().split(\" \")[4]\n      );\n    } else {\n      console.log(\"d\");\n      return d;\n    }\n  };\n\n  const commitChanges = ({ added, changed, deleted }) => {\n    if (added) {\n      console.log(\"added - \", added);\n\n      var startDate = added.startDate;\n      var endDate = added.endDate;\n\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", added.question_id);\n      formData.append(\"time\", changeFormat(startDate));\n      formData.append(\"endtime\", changeFormat(endDate));\n      formData.append(\"title\", added.title);\n      formData.append(\"notes\", added.notes);\n      formData.append(\"user\", added.user);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/PostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"res post-\", response);\n          getData();\n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n        });\n    }\n    if (changed) {\n      console.log(\"changed\", changed);\n\n      const data2 = data.map((appointment) =>\n        changed[appointment.id]\n          ? { ...appointment, ...changed[appointment.id] }\n          : appointment\n      );\n      console.log(\"data2 - \", data2);\n\n      let valuesArray = Object.entries(changed);\n      let id = valuesArray[0][0];\n      console.log(\"id -\", id);\n      let dataIttem;\n\n      for (var i = 0; i < data2.length; i++) {\n        if (data2[i].id === id) {\n          dataIttem = data2[i];\n        }\n      }\n      console.log(\"owner\", dataIttem.owner);\n\n      var a = dataIttem.startDate\n      var b = dataIttem.endDate\n\n\n      if (!dataIttem.owner) {\n        // alert(\"hjgh\")\n        var variable = \"Error\"\n        Alerts.ErrorEdit(variable)\n        return false;\n      }\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", dataIttem.question_id);\n      formData.append(\"id\", dataIttem.id);\n      formData.append(\"time\", changeFormat(a));\n      formData.append(\"endtime\", changeFormat(b));\n      formData.append(\"title\", dataIttem.title);\n      formData.append(\"notes\", dataIttem.notes);\n      formData.append(\"user\", dataIttem.user);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/PostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"res post-\", response);\n          getData();\n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n        });\n    }\n\n    if (deleted !== undefined) {\n      console.log(\"deleted f\", deleted);\n\n      var value;\n      data.filter((data) => {\n        if (data.id == deleted) {\n          console.log(\"owner\", data.owner);\n          value = data.owner\n        }\n      });\n\n      // console.log(\"value\", value);\n      if (!value) {\n        var variable = \"Error\"\n        Alerts.ErrorDelete(variable)\n        return false;\n      }\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"It will be permanently deleted !\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\",\n      }).then((result) => {\n        if (result.value) {\n          axios.get(`${baseUrl}/tl/freeslot?id=${deleted}`).then((res) => {\n            console.log(\"res -\", res);\n            if (res.data.code === 1) {\n              Swal.fire(\"Deleted!\", \"Your Schedule has been deleted.\", \"success\");\n              getData();\n            } else {\n              Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n            }\n          });\n        }\n      });\n    }\n  };\n\n  return (\n    <Paper>\n      <Scheduler data={data} height={660}>\n        <ViewState\n          defaultCurrentDate={currentDate}\n          defaultCurrentViewName=\"Day\"\n        />\n        <EditingState onCommitChanges={commitChanges} />\n        <EditRecurrenceMenu />\n\n        <DayView startDayHour={10} endDayHour={24} />\n        <WeekView startDayHour={10} endDayHour={19} />\n        <Appointments appointmentComponent={myAppointment} />\n\n        <Toolbar />\n        <DateNavigator />\n        <TodayButton />\n        <ViewSwitcher />\n\n        <AppointmentTooltip showOpenButton />\n        <AppointmentForm />\n\n        <Resources\n          data={resources}\n        // mainResourceName=\"question_id\"\n        />\n      </Scheduler>\n    </Paper>\n  );\n}\n\nexport default Demo;\n\n\n\n// const styles = {\n//   toolbarRoot: {\n//     position: \"relative\",\n//   },\n//   progress: {\n//     position: \"absolute\",\n//     width: \"100%\",\n//     bottom: 0,\n//     left: 0,\n//   },\n// };\n\n// const ToolbarWithLoading = withStyles(styles, { name: \"Toolbar\" })(\n//   ({ children, classes, ...restProps }) => (\n//     <div className={classes.toolbarRoot}>\n//       <Toolbar.Root {...restProps}>{children}</Toolbar.Root>\n//       <LinearProgress className={classes.progress} />\n//     </div>\n//   )\n// );\n\n// const newArrayOfObj = data.map(\n//   ({ assign_no: text, q_id: id, id: d_id, ...rest }) => ({\n//     text,\n//     id,\n//     d_id,\n//     ...rest,\n//   })\n// );\n// console.log(\"dt--\", newArrayOfObj);","/var/www/html/Mazars_Pannel/src/pages/TL/Schedule/appoinments.js",[],"/var/www/html/Mazars_Pannel/src/pages/TL/PendingForAcceptence/RejectedModal.js",["1806","1807","1808","1809"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\nfunction RejectedModal({\n  addPaymentModal,\n  rejectHandler,\n  pay,\n  getPendingforAcceptance,\n}) {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const alert = useAlert();\n  const { id, allocation_id } = pay;\n\n  // console.log(\"pay :\", pay);\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"set\", 0);\n    formData.append(\"tlid\", JSON.parse(userid));\n    formData.append(\"assignment_id\", id);\n    formData.append(\"allocation_id\", allocation_id);\n    formData.append(\"reject_reason\", value.p_chat);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"Query rejected !\");\n          getPendingforAcceptance();\n          rejectHandler();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"sm\">\n        <ModalHeader toggle={rejectHandler}>Rejected Reason</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"4\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"enter text\"\n              ></textarea>\n\n              {errors.p_chat && (\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\n              )}\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal;\n","/var/www/html/Mazars_Pannel/src/views/EditQuery/DeleteQuery.js",["1810","1811","1812"],"import React, { useState, useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction DeleteQuery({ id }) {\n  const userId = window.localStorage.getItem(\"userid\");\n  const history = useHistory();\n\n  //   console.log(\"id\", id);\n\n  //check\n  const del = (id) => {\n    console.log(\"del\", id);\n\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"It will permanently deleted !\",\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.value) {\n        deleteCliente(id);\n      }\n    });\n  };\n\n  const deleteCliente = (id) => {\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", id);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/deleteQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n          history.push(\"/customer/queries\");\n        } else {\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <div>\n      <button type=\"button\" class=\"btn btn-primary\" onClick={() => del(id)}>\n        Delete\n      </button>\n    </div>\n  );\n}\n\nexport default DeleteQuery;\n\n{\n  /* <i\n        className=\"fa fa-trash\"\n        style={{\n          fontSize: 16,\n          cursor: \"pointer\",\n        }}\n        \n      ></i> */\n}\n","/var/www/html/Mazars_Pannel/src/views/ProposalTab/ChatComponent.js",["1813","1814","1815","1816","1817","1818"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\nfunction ChatComponent({ addPaymentModal, chatHandler, id, getProposalData }) {\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const userId = window.localStorage.getItem(\"userid\");\n  const alert = useAlert();\n\n  console.log(\"id :\", id);\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"customer_id\", JSON.parse(userId));\n    formData.append(\"message\", value.p_chat);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/proposalDiscussion`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n\n          var variable = \"Successfully Sent \"\n          Alerts.SuccessNormal(variable)\n          \n          getProposalData();\n          chatHandler();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={chatHandler} size=\"sm\">\n        <ModalHeader toggle={chatHandler}>Enter message</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"4\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"enter mesg\"\n              ></textarea>\n              {errors.p_chat && (\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\n              )}\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ChatComponent;\n","/var/www/html/Mazars_Pannel/src/components/PendingForAllocation/History.js",["1819","1820","1821","1822","1823","1824","1825"],"import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\n\nfunction History({ history,toggle,modal }) {\n  //change date format\n  function ChangeFormateDate(oldDate) {\n    // console.log(\"date\", oldDate);\n    if (oldDate == null) {\n      return null;\n    }\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\n  }\n  return (\n    <div>\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}>History</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Name</th>\n                <th scope=\"row\">Query No</th>\n                <th scope=\"row\">Status</th>\n                <th scope=\"row\">Date of Allocation</th>\n                <th scope=\"row\">Notes</th>\n              </tr>\n            </thead>\n\n            {history.length > 0\n              ? history.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>{p.name}</td>\n                      <td>{p.assign_no}</td>\n                      <td>{p.status}</td>\n                      <td>{ChangeFormateDate(p.date_of_allocation)}</td>\n                      <td>{p.notes}</td>\n                    </tr>\n                  </tbody>\n                ))\n              : null}\n          </table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default History;\n","/var/www/html/Mazars_Pannel/src/pages/TL/Proposal/ChatHistory.js",["1826","1827"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nfunction ChatHistory({ chatHandler, addPaymentModal, qno }) {\n  const [notification, setNotification] = useState([]);\n  const userId = window.localStorage.getItem(\"tlkey\");\n\n  useEffect(() => {\n    getNotification();\n  }, [qno]);\n\n  const getNotification = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/getNotification?id=${JSON.parse(\n          userId\n        )}&type=2&q_no=${qno}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setNotification(res.data.result);\n        }\n      });\n  };\n\n  console.log(\"notification\", notification);\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={chatHandler} size=\"md\">\n        <ModalHeader toggle={chatHandler}>Discussion history</ModalHeader>\n        <ModalBody>\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"row\">S.No</th>\n                <th scope=\"row\">Message</th>\n                <th scope=\"row\">Date</th>\n              </tr>\n            </thead>\n            {notification.length > 0\n              ? notification.map((p, i) => (\n                  <tbody>\n                    <tr>\n                      <td>{i + 1}</td>\n                      <td>{p.message}</td>\n                      <td>{p.setdate}</td>\n                    </tr>\n                  </tbody>\n                ))\n              : null}\n          </table>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ChatHistory;\n","/var/www/html/Mazars_Pannel/src/views/AssignmentTab/RejectModal.js",["1828","1829","1830","1831","1832"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Alerts from \"../../common/Alerts\";\n\nconst Schema = yup.object().shape({\n  p_chat: yup.string().required(\"required discussion\"),\n});\n\nfunction RejectedModal({\n  rejectModal,\n  rejectHandler,\n  rejectedItem,\n  getPendingforAcceptance,\n}) {\n  const userId = window.localStorage.getItem(\"userid\");\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n  const alert = useAlert();\n\n  console.log(\"rejectedItem :\", rejectedItem);\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"id\", rejectedItem.assign_id);\n    formData.append(\"query_no\", rejectedItem.assign_no);\n    formData.append(\"message\", value.p_chat);\n    formData.append(\"type\", 2);\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/draftAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"response-\", response);\n        if (response.data.code === 1) {\n          \n          var variable = \"Submitted Successfully \"\n          Alerts.SuccessNormal(variable)\n\n          getPendingforAcceptance();\n          rejectHandler();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <div>\n      <Modal isOpen={rejectModal} toggle={rejectHandler} size=\"sm\">\n        <ModalHeader toggle={rejectHandler}>Discussion Message</ModalHeader>\n        <ModalBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <textarea\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_chat,\n                })}\n                id=\"textarea\"\n                rows=\"4\"\n                name=\"p_chat\"\n                ref={register}\n                placeholder=\"enter text here\"\n              ></textarea>\n\n              {errors.p_chat && (\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\n              )}\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectedModal;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/ForgetPassword/ForgetPassword.js",["1833","1834","1835","1836","1837","1838","1839","1840"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n// import NewPassword from \"../NewPassword/NewPassword\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n});\n\n\n\nfunction ForgetPassword(props) {\n  const alert = useAlert();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n\n    // axios({\n    //   method: \"POST\",\n    //   url: `${baseUrl}/customers/forgototp`,\n    //   data: formData,\n    // })\n    //   .then(function (response) {\n    //     console.log(\"res-\", response);\n    //     if (response.data.code === 1) {\n    //       alert.success(\"otp send your email !\");\n    //       props.history.push(\"/admin/new-password\");\n    //     } else if (response.data.code === 0) {\n    //       console.log(response.data.result);   \n    //       Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(\"erroror - \", error);\n    //   });\n  };\n\n  const valueHandler = () => {\n    var item = props.location.email\n    if (item == \"null\") {\n      console.log(\"item : \", item)\n      // return '';\n    } else {\n      return item\n    }\n  }\n  \n  return (\n    <>\n      <Header admin=\"admin\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Forgot Password</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Email</label>\n              <input\n                type=\"text\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_email,\n                })}\n                name=\"p_email\"\n                ref={register}\n                placeholder=\"Enter Email\"\n                defaultValue={valueHandler()}\n              />\n              {errors.p_email && (\n                <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n\n          </form>\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/NewPassword/NewPassword.js",["1841","1842","1843","1844"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\n\n\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    // formData.append(\"user_id\", value.p_name);\n    formData.append(\"email\", value.p_email);\n    formData.append(\"code\", value.p_code);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"reset password successfully!\");\n          reset();\n          props.history.push(\"/admin/login\");\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          // alert.error(response.data.result);\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n       <Header admin=\"admin\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Reset Password</h2>\n          </div>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-group\">\n             \n              <div className=\"mb-3\">\n                <label className=\"form-label\">Email</label>\n                <input\n                  type=\"text\"\n                  className={classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_email,\n                  })}\n                  name=\"p_email\"\n                  placeholder=\"Enter Email\"\n                  defaultValue={props.location.email}\n                  ref={register({\n                    required: \"This field is required\",\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: \"Please enter valid email address\",\n                    },\n                  })}\n                />\n                {errors.p_email && (\n                  <div className=\"invalid-feedback\">\n                    {errors.p_email.message}\n                  </div>\n                )}\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label\">OTP</label>\n                <input\n                  type=\"text\"\n                  className={classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_code,\n                  })}\n                  name=\"p_code\"\n                  placeholder=\"Enter otp\"\n                  ref={register({\n                    required: \"This field is required\",\n                  })}\n                />\n                {errors.p_code && (\n                  <div className=\"invalid-feedback\">\n                    {errors.p_code.message}\n                  </div>\n                )}\n              </div>\n              <label className=\"form-label\">New Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_password,\n                })}\n                placeholder=\"Enter Your Password\"\n                name=\"p_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  pattern: {\n                    value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n                    message:\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\n                  },\n                })}\n              />\n              {errors.p_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_password.message}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Confirm Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_confirm_password,\n                })}\n                placeholder=\"Confirm Password\"\n                name=\"p_confirm_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  validate: (value) =>\n                    value === getValues(\"p_password\") ||\n                    \"password doesn 't match\",\n                })}\n              />\n              {errors.p_confirm_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_confirm_password.message}\n                </div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default NewPassword;\n\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required user id\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_code: yup.string().required(\"required otp \"),\n//   // p_password: yup.string().required(\"required password\"),\n//   // p_confirm_password: yup.string().required(\"required confirm password\"),\n// });\n","/var/www/html/Mazars_Pannel/src/pages/TL/ForgetPassword/ForgetPassword.js",["1845","1846","1847","1848"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n// import NewPassword from \"../NewPassword/NewPassword\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n});\n\n\n\nfunction ForgetPassword(props) {\n  const alert = useAlert();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"type\", \"tl\");\n\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/forgototp`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"otp send your email !\");\n          props.history.push(`/teamleader/new-password/${value.p_email}`);\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n  const valueHandler = () => {\n    var item = props.location.email\n    if (item == \"null\") {\n      console.log(\"item : \", item)\n      // return '';\n    } else {\n      return item\n    }\n\n  }\n\n  return (\n    <>\n      <Header mtl=\"mtl\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Forgot Password</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Email</label>\n              <input\n                type=\"text\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_email,\n                })}\n                name=\"p_email\"\n                ref={register}\n                placeholder=\"Enter Email\"\n                defaultValue={valueHandler()}\n\n              />\n              {errors.p_email && (\n                <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n\n          </form>\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n","/var/www/html/Mazars_Pannel/src/pages/TL/NewPassword/NewPassword.js",["1849","1850","1851","1852"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { useParams } from \"react-router-dom\";\n\n\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n  const { id } = useParams();\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    // formData.append(\"user_id\", value.p_name);\n    formData.append(\"email\", value.p_email);\n    formData.append(\"code\", value.p_code);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"reset password successfully!\");\n          reset();\n          props.history.push(\"/teamleader/login\");\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          // alert.error(response.data.result);\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n      <Header mtl=\"mtl\"/>\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Reset Password</h2>\n          </div>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-group\">\n             \n              <div className=\"mb-3\">\n                <label className=\"form-label\">Email</label>\n                <input\n                  type=\"text\"\n                  className={classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_email,\n                  })}\n                  name=\"p_email\"\n                  placeholder=\"Enter Email\"\n                  defaultValue={id}\n                  ref={register({\n                    required: \"This field is required\",\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: \"Please enter valid email address\",\n                    },\n                  })}\n                />\n                {errors.p_email && (\n                  <div className=\"invalid-feedback\">\n                    {errors.p_email.message}\n                  </div>\n                )}\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label\">OTP</label>\n                <input\n                  type=\"text\"\n                  className={classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_code,\n                  })}\n                  name=\"p_code\"\n                  placeholder=\"Enter otp\"\n                  ref={register({\n                    required: \"This field is required\",\n                  })}\n                />\n                {errors.p_code && (\n                  <div className=\"invalid-feedback\">\n                    {errors.p_code.message}\n                  </div>\n                )}\n              </div>\n              <label className=\"form-label\">New Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_password,\n                })}\n                placeholder=\"Enter Your Password\"\n                name=\"p_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  pattern: {\n                    value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n                    message:\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\n                  },\n                })}\n              />\n              {errors.p_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_password.message}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Confirm Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_confirm_password,\n                })}\n                placeholder=\"Confirm Password\"\n                name=\"p_confirm_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  validate: (value) =>\n                    value === getValues(\"p_password\") ||\n                    \"password doesn 't match\",\n                })}\n              />\n              {errors.p_confirm_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_confirm_password.message}\n                </div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default NewPassword;\n\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required user id\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_code: yup.string().required(\"required otp \"),\n//   // p_password: yup.string().required(\"required password\"),\n//   // p_confirm_password: yup.string().required(\"required confirm password\"),\n// });\n","/var/www/html/Mazars_Pannel/src/pages/TP/ForgetPassword/ForgetPassword.js",["1853","1854","1855","1856"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n// import NewPassword from \"../NewPassword/NewPassword\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\n\nconst Schema = yup.object().shape({\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n});\n\n\n\nfunction ForgetPassword(props) {\n  const alert = useAlert();\n\n  const { handleSubmit, register, reset, errors } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"email\", value.p_email);\n    formData.append(\"type\", \"tp\");\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/forgototp`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"otp send your email !\");\n          props.history.push(`/taxprofessional/new-password/${value.p_email}`)\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  const valueHandler = () => {\n    var item = props.location.email\n    if (item == \"null\") {\n      console.log(\"item : \", item)\n      // return '';\n    } else {\n      return item\n    }\n  }\n\n  return (\n    <>\n      <Header mtp=\"mtp\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Forgot Password</h2>\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n\n\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Email</label>\n              <input\n                type=\"text\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_email,\n                })}\n                name=\"p_email\"\n                ref={register}\n                placeholder=\"Enter Email\"\n                defaultValue={valueHandler()}\n              />\n              {errors.p_email && (\n                <div className=\"invalid-feedback\">{errors.p_email.message}</div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n\n          </form>\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default ForgetPassword;\n","/var/www/html/Mazars_Pannel/src/pages/TP/NewPassword/NewPassword.js",["1857","1858","1859","1860"],"import { useForm } from \"react-hook-form\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../../../components/Header/Header\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classNames from \"classnames\";\nimport Swal from \"sweetalert2\";\nimport { useParams } from \"react-router-dom\";\n\nfunction NewPassword(props) {\n  const alert = useAlert();\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\n  const { id } = useParams();\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    // formData.append(\"user_id\", value.p_name);\n    formData.append(\"email\", value.p_email);\n    formData.append(\"code\", value.p_code);\n    formData.append(\"password\", value.p_password);\n    formData.append(\"rpassword\", value.p_confirm_password);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/resetpassword`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          alert.success(\"reset password successfully!\");\n          reset();\n          props.history.push(\"/customer/signin\");\n        } else if (response.data.code === 0) {\n          console.log(response.data.result);\n          // alert.error(response.data.result);\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <>\n      <Header mtp=\"mtp\" />\n      <div className=\"container\">\n        <div className=\"form\">\n          <div className=\"heading\">\n            <h2>Reset Password</h2>\n          </div>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"form-group\">\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Email</label>\n                <input\n                  type=\"text\"\n                  className={classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_email,\n                  })}\n                  name=\"p_email\"\n                  placeholder=\"Enter Email\"\n                  defaultValue={id}\n                  ref={register({\n                    required: \"This field is required\",\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: \"Please enter valid email address\",\n                    },\n                  })}\n                />\n                {errors.p_email && (\n                  <div className=\"invalid-feedback\">\n                    {errors.p_email.message}\n                  </div>\n                )}\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label\">OTP</label>\n                <input\n                  type=\"text\"\n                  className={classNames(\"form-control\", {\n                    \"is-invalid\": errors.p_code,\n                  })}\n                  name=\"p_code\"\n                  placeholder=\"Enter otp\"\n                  ref={register({\n                    required: \"This field is required\",\n                  })}\n                />\n                {errors.p_code && (\n                  <div className=\"invalid-feedback\">\n                    {errors.p_code.message}\n                  </div>\n                )}\n              </div>\n              <label className=\"form-label\">New Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_password,\n                })}\n                placeholder=\"Enter Your Password\"\n                name=\"p_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  pattern: {\n                    value:\n                      /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\n                    message:\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\n                  },\n                })}\n              />\n              {errors.p_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_password.message}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Confirm Password</label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                className={classNames(\"form-control\", {\n                  \"is-invalid\": errors.p_confirm_password,\n                })}\n                placeholder=\"Confirm Password\"\n                name=\"p_confirm_password\"\n                ref={register({\n                  required: \"This field is required\",\n                  validate: (value) =>\n                    value === getValues(\"p_password\") ||\n                    \"password doesn 't match\",\n                })}\n              />\n              {errors.p_confirm_password && (\n                <div className=\"invalid-feedback\">\n                  {errors.p_confirm_password.message}\n                </div>\n              )}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default NewPassword;\n\n// const Schema = yup.object().shape({\n//   p_name: yup.string().required(\"required user id\"),\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\n//   p_code: yup.string().required(\"required otp \"),\n//   // p_password: yup.string().required(\"required password\"),\n//   // p_confirm_password: yup.string().required(\"required confirm password\"),\n// });\n","/var/www/html/Mazars_Pannel/src/pages/TL/ViewNotification/ViewNotification.js",["1861","1862","1863","1864","1865","1866","1867","1868","1869","1870"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\n\nfunction ViewNotification() {\n  const userid = window.localStorage.getItem(\"tlkey\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    getChatting();\n  }, [id]);\n\n  const getChatting = () => {\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"uid\", JSON.parse(userid));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/viewNotification`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          setData(response.data.result[0]);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  console.log(\"data-\", data);\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Message Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n            {/* <thead>\n              <tr>\n                <th scope=\"col\">Titles</th>\n                <th scope=\"col\">Data</th>\n              </tr>\n            </thead> */}\n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{data.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\"> System Generated</th>\n                <td>{data.name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date</th>\n                <td>\n                  {CommonServices.removeTime(data.setdate)}\n                </td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Message</th>\n                <td>{data.message}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Type</th>\n                <td>\n                  {data.type == \"1\"\n                    ? \"Others\"\n                    : data.type == \"2\"\n                      ? \"Proposal Discussion\"\n                      : data.type == \"3\"\n                        ? \"Assignment Discussion\"\n                        : data.type == \"4\"\n                          ? \"Query Discussion\"\n                          :\n                          data.type == \"5\"\n                            ? \"Payment Discussion\"\n                            :\n                            null\n                  }\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewNotification;\n","/var/www/html/Mazars_Pannel/src/views/ViewNotification/ViewNotification.js",["1871","1872","1873","1874","1875","1876","1877","1878"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport CommonServices from \"../../common/common\";\n\nfunction ViewNotification() {\n  const userId = window.localStorage.getItem(\"userid\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    getChatting();\n  }, [id]);\n\n  const getChatting = () => {\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"uid\", JSON.parse(userId));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/viewNotification`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          setData(response.data.result[0]);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  console.log(\"data-\", data);\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Message Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{data.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\"> System Generated</th>\n                <td>{data.name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date</th>\n                <td>\n                  {CommonServices.removeTime(data.setdate)}\n                </td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Message</th>\n                <td>{data.message}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Type</th>\n                <td>\n                  {data.type == \"1\"\n                    ? \"info\"\n                    : data.type == \"2\"\n                      ? \"Proposal Discuss\"\n                      : data.type == \"3\"\n                        ? \"Draft Discuss\"\n                        : null}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewNotification;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/QueryRejection/QueryRejection.js",["1879","1880","1881","1882","1883","1884","1885","1886","1887","1888"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useParams, Link, Redirect } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n    Tooltip,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\n\n\nfunction QueryRejection(props) {\n    const { id } = useParams();\n\n    const { handleSubmit, register, reset, errors } = useForm();\n    const userId = window.localStorage.getItem(\"adminkey\");\n\n\n    const onSubmit = (value) => {\n        console.log(\"value :\", value)\n        let formData = new FormData();\n        formData.append(\"id\", id);\n        formData.append(\"notes\", value.p_notes);\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/admin/setAdminreject`,\n            data: formData,\n        })\n            .then(function (response) {\n                console.log(\"res-\", response);\n                if (response.data.code === 1) {\n                    var variable = \"Query declined successfully. \"\n                    Alerts.SuccessNormal(variable)\n\n                    props.history.push({\n                        pathname: `/admin/queriestab`,\n                        index: 1,\n                    });\n                }\n            })\n            .catch((error) => {\n                console.log(\"erroror - \", error);\n            });\n    };\n\n    return (\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n            <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"4\">\n                            <Link\n                                to={{\n                                    pathname: `/admin/queriestab`,\n                                    index: 1,\n                                }}\n                            >\n                                <button class=\"btn btn-success ml-3\">\n                                    <i class=\"fas fa-arrow-left mr-2\"></i>\n                                    Go Back\n                                </button>\n                            </Link>\n                        </Col>\n                        <Col md=\"4\">\n                            <div style={{ textAlign: \"center\" }}>\n                                <h2>Decline Query</h2>\n                            </div>\n                        </Col>\n                    </Row>\n                </CardHeader>\n                <CardHeader>\n                    <div class=\"row mt-3\">\n                        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n                        <div class=\"col-lg-8 col-xl-8 col-md-12\">\n                            <form onSubmit={handleSubmit(onSubmit)}>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <div class=\"form-group\">\n                                            <label>Notes</label>\n                                            <textarea\n                                                className=\"form-control\"\n                                                id=\"textarea\"\n                                                rows=\"6\"\n                                                name=\"p_notes\"\n                                                ref={register}\n                                            ></textarea>\n                                        </div>\n                                    </div>\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary\">\n                                    Submit\n                                </button>\n                            </form>\n                        </div>\n                        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\n                    </div>\n\n                </CardHeader>\n            </Card>\n        </Layout>\n    );\n}\n\nexport default QueryRejection;","/var/www/html/Mazars_Pannel/src/Service/PrivateRouteUser.js",[],"/var/www/html/Mazars_Pannel/src/views/Chatting/Chatting.js",["1889","1890","1891","1892","1893","1894"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport Alerts from \"../../common/Alerts\";\nimport classNames from \"classnames\";\n\n\nconst Schema = yup.object().shape({\n  message_type: yup.string().required(\"required message type\"),\n  p_message: yup.string().required(\"required message\"),\n});\n\n\nfunction Chatting(props) {\n\n  console.log(\"props\", props)\n\n  const history = useHistory();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userId = window.localStorage.getItem(\"userid\");\n\n  const [item, setItem] = useState(\"\");\n  const [data, setData] = useState({})\n\n  const { message_type, query_id, query_No, routes } = data\n\n\n  useEffect(() => {\n    console.log(\"useEffect\", props)\n    const dataItem = props.location.obj\n\n    if (dataItem) {\n      localStorage.setItem(\"myDataCust\", JSON.stringify(dataItem));\n    }\n    var myData = localStorage.getItem(\"myDataCust\");\n    var data2 = JSON.parse(myData)\n    setData(data2)\n    setItem(data2.message_type)\n  }, [item]);\n\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", query_id);\n    formData.append(\"message_type\", value.message_type);\n    formData.append(\"message\", value.p_message);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          reset();\n\n          var variable = \"Message Successfully Sent \"\n          Alerts.SuccessNormal(variable)\n\n          // alert.success(\" message successfully sent!\");\n          props.history.push(routes);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Message</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_query\"\n                    className=\"form-control\"\n                    ref={register}\n                    value={query_No}\n                    disabled\n                  />\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Message Type</label>\n                  {\n                    item &&\n                    <select\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.message_type,\n                      })}\n                      name=\"message_type\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                      defaultValue={item}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Query Discussion</option>\n                      <option value=\"2\">Proposal Discussion</option>\n                      <option value=\"5\">Payment Discussion</option>\n                      <option value=\"3\">Assignment Discussion</option>\n                      <option value=\"1\">Others</option>\n                    </select>\n                  }\n\n                  {errors.message_type && (\n                    <div className=\"invalid-feedback\">\n                      {errors.message_type.message}\n                    </div>\n                  )}\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Message</label>\n                  <textarea\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_message,\n                    })}\n                    placeholder=\"Message text here\"\n                    rows=\"5\"\n                    ref={register}\n                    name=\"p_message\"\n                  ></textarea>\n                  {errors.p_message && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_message.message}\n                    </div>\n                  )}\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Send\n                </button>\n              </div>\n            </div>\n\n          </form>\n        </CardBody>\n\n      </Card>\n    </Layout >\n  );\n}\n\nexport default Chatting;\n\n\n{/* <select\n                    class=\"form-control\"\n                    name=\"p_sms_type\"\n                    ref={register}\n                    value={query_No}\n                  >\n                    <option value=\"\">--select--</option>\n                    <option value=\"1\">Information</option>\n                    <option value=\"2\">Proposal Discussion</option>\n                    <option value=\"3\">Assignment Discussion</option>\n                  </select> */}","/var/www/html/Mazars_Pannel/src/components/PageNotFound/PageNotFound.js",[],"/var/www/html/Mazars_Pannel/src/components/Admin-Footer/Admin-Footer.js",[],"/var/www/html/Mazars_Pannel/src/pages/TL/Chatting/Chatting.js",["1895","1896","1897","1898","1899","1900"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\n\nconst Schema = yup.object().shape({\n  msg_type: yup.string().required(\"required message type\"),\n  p_message: yup.string().required(\"required message\"),\n});\n\n\n\nfunction Chatting(props) {\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userId = window.localStorage.getItem(\"tlkey\");\n\n  const [item, setItem] = useState(\"\");\n  const [data, setData] = useState({})\n  const { message_type, query_id, query_No, routes } = data\n\n\n  useEffect(() => {\n    console.log(\"useEffect\", props)\n    const dataItem = props.location.obj\n\n    if (dataItem) {\n      localStorage.setItem(\"myDataTL\", JSON.stringify(dataItem));\n    }\n    var myData = localStorage.getItem(\"myDataTL\");\n\n    var data2 = JSON.parse(myData)\n    setData(data2)\n    setItem(data2.message_type)\n  }, []);\n\n\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", query_id);\n    formData.append(\"message_type\", value.msg_type);\n    formData.append(\"message\", value.p_message);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          reset();\n\n          var variable = \"Message Successfully Sent \"\n          Alerts.SuccessNormal(variable)\n          props.history.push(routes);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Message</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_query\"\n                    className=\"form-control\"\n                    ref={register}\n                    value={query_No}\n                    disabled\n                  />\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Message Type</label>\n                  {\n                    item &&\n                    <select\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.msg_type,\n                      })}\n                      name=\"msg_type\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Query Discussion</option>\n                      <option value=\"2\">Proposal Discussion</option>\n                      <option value=\"5\">Payment Discussion</option>\n                      <option value=\"3\">Assignment Discussion</option>\n                      <option value=\"1\">Others</option>\n                    </select>\n                  }\n                  {errors.msg_type && (\n                    <div className=\"invalid-feedback\">\n                      {errors.msg_type.message}\n                    </div>\n                  )}\n\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Message</label>\n                  <textarea\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_message,\n                    })}\n                    placeholder=\"Message text here\"\n                    rows=\"5\"\n                    ref={register}\n                    name=\"p_message\"\n                  ></textarea>\n                  {errors.p_message && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_message.message}\n                    </div>\n                  )}\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Send\n                </button>\n              </div>\n            </div>\n\n          </form>\n        </CardBody>\n\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Chatting;\n","/var/www/html/Mazars_Pannel/src/views/Message/Message.js",["1901","1902","1903","1904","1905","1906","1907","1908"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport PaymentModal from \"./PaymentModal\";\nimport CommonServices from \"../../common/common\";\n\n\nfunction Message(props) {\n    console.log(\"props\", props.location.obj)\n\n    const userId = window.localStorage.getItem(\"userid\");\n    const [query, setQuery] = useState([]);\n    const [data, setData] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const paymentHandler = (key) => {\n        console.log(\"key\", key);\n        setPaymentModal(!addPaymentModal);\n    };\n\n    // useEffect(() => {\n    //     var dataItem = props.location.obj.message_type\n    //     setData(dataItem)\n    // }, [data]);\n\n\n    useEffect(() => {\n        getMessage();\n    }, []);\n\n\n    const getMessage = () => {\n        axios\n            .get(\n                `${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}\n                &type_list=all`\n            )\n            .then((res) => {\n                console.log(res);\n                if (res.data.code === 1) {\n                    setQuery(res.data.result);\n                }\n            });\n    };\n\n\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            sort: true,\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"10px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"50px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                console.log(row);\n                return (\n                    <>\n                        <div style={{ display: \"flex\" }}>\n                            <p>{CommonServices.removeTime(row.setdate)}</p>\n                            <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(row.setdate)}</p>\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"30px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                console.log(row);\n                return (\n                    <>\n                        {row.assign_no}\n\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Message\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"180px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                console.log(row);\n                return (\n                    <>\n                        <Link to={`/customer/view-notification/${row.id}`}>\n                            {\n                                row.is_read == \"0\" ?\n                                    <div\n                                        style={{\n                                            cursor: \"pointer\",\n                                            display: \"flex\",\n                                            justifyContent: \"space-between\"\n                                        }}\n                                        onClick={() => readNotification(row.id)}\n                                        title=\"unread\"\n                                    >\n                                        <p>{row.message}</p>\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\n                                    </div>\n\n                                    :\n                                    <div\n                                        style={{\n                                            cursor: \"pointer\",\n                                            display: \"flex\",\n                                            justifyContent: \"space-between\"\n                                        }}\n                                        title=\"read\"\n                                    >\n                                        <p>{row.message}</p>\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\n                                    </div>\n\n                            }\n                        </Link>\n\n                    </>\n                );\n            },\n        },\n    ];\n\n\n    // readnotification\n    const readNotification = (id) => {\n\n        console.log(\"call\", id)\n        axios\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\n            .then(function (response) {\n                console.log(\"delete-\", response);\n            })\n            .catch((error) => {\n                console.log(\"erroror - \", error);\n            });\n    };\n\n\n    return (\n        <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n            <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"9\">\n                            <CardTitle tag=\"h4\">Message</CardTitle>\n                        </Col>\n                    </Row>\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={query}\n                        columns={columns}\n                        rowIndex\n                    />\n\n                    <PaymentModal\n                        paymentHandler={paymentHandler}\n                        addPaymentModal={addPaymentModal}\n                    // data={data}\n                    // getProposalData={getAssignmentData}\n                    />\n                </CardBody>\n            </Card>\n        </Layout>\n    );\n}\n\nexport default Message;\n\n{/* <Col md=\"3\">\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}\n                                class=\"btn btn-primary\"\n                            // onClick={() => paymentHandler()}\n                            >\n                                <Link\n                                    to={{\n                                        pathname: `/customer/chatting`,\n                                        obj: props.location.obj\n                                    }}\n\n                                >\n                                    Add Message\n                                </Link>\n                            </div>\n                        </Col> */}\n\n{/* <Link to={`/customer/view-notification/${row.id}`}>\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                                <div>{row.message}</div>\n                                <div>{\n                                    row.is_read == \"0\" ?\n                                        <p style={{ color: 'blue' }} title=\"read\"\n                                            onClick={() => readNotification(row.id)}\n                                        >\n                                            <i class=\"fa fa-bullseye\"></i>\n                                        </p>\n                                        :\n                                        <p style={{ color: 'green' }} title=\"unread\"\n                                        >\n                                            <i class=\"fa fa-circle\"></i>\n                                        </p>\n                                }\n                                </div>\n                            </div>\n\n                        </Link> */}","/var/www/html/Mazars_Pannel/src/pages/TL/Message/Message.js",["1909","1910","1911","1912","1913","1914"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport PaymentModal from \"./PaymentModal\";\nimport CommonServices from \"../../../common/common\";\n\nfunction Message(props) {\n    console.log(\"props\", props.location.obj)\n    const alert = useAlert();\n\n    const userId = window.localStorage.getItem(\"tlkey\");\n    const [query, setQuery] = useState([]);\n    const [data, setData] = useState(null);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const paymentHandler = (key) => {\n        console.log(\"key\", key);\n        setPaymentModal(!addPaymentModal);\n    };\n\n    useEffect(() => {\n        getMessage();\n    }, []);\n\n\n    const getMessage = () => {\n        axios\n            .get(\n                `${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}`\n            )\n            .then((res) => {\n                console.log(res);\n                if (res.data.code === 1) {\n                    setQuery(res.data.result);\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"10px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"50px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                console.log(row);\n                return (\n                    <>\n                        <div style={{ display: \"flex\" }}>\n                            <p>{CommonServices.removeTime(row.setdate)}</p>\n                            <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(row.setdate)}</p>\n                        </div>\n                    </>\n                );\n            },\n        },\n\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"30px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                console.log(row);\n                return (\n                    <>\n                        {/* <Link to={`/customer/my-assingment/${row.id}`}> */}\n                        {row.assign_no}\n                        {/* </Link> */}\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Message\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"180px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                console.log(row);\n                return (\n                    <>\n                        <Link to={`/teamleader/view-notification/${row.id}`}>\n                            {\n                                row.is_read == \"0\" ?\n                                    <div\n                                        style={{\n                                            cursor: \"pointer\",\n                                            display: \"flex\", justifyContent: \"space-between\"\n                                        }}\n                                        onClick={() => readNotification(row.id)}\n                                        title=\"unread\"\n                                    >\n                                        <p>{row.message}</p>\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\n                                    </div>\n                                    :\n                                    <div\n                                        style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}\n                                        title=\"read\"\n                                    >\n                                        <p>{row.message}</p>\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\n                                    </div>\n                            }\n                        </Link>\n                    </>\n                );\n            },\n        },\n    ];\n\n\n    // readnotification\n    const readNotification = (id) => {\n        console.log(\"call\", id)\n        axios\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\n            .then(function (response) {\n                console.log(\"delete-\", response);\n            })\n            .catch((error) => {\n                console.log(\"erroror - \", error);\n            });\n    };\n\n    return (\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\n            <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"9\">\n                            <CardTitle tag=\"h4\">Message</CardTitle>\n                        </Col>\n                    </Row>\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={query}\n                        columns={columns}\n                        rowIndex\n                    />\n                    <PaymentModal\n                        paymentHandler={paymentHandler}\n                        addPaymentModal={addPaymentModal}\n                    />\n                </CardBody>\n            </Card>\n        </Layout>\n    );\n}\n\nexport default Message;","/var/www/html/Mazars_Pannel/src/views/ProposalView/ProposalView.js",["1915","1916","1917","1918","1919","1920","1921","1922","1923","1924","1925","1926","1927","1928","1929","1930"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport TermsConditions from \"./TermsConditions\";\nimport CommonServices from \"../../common/common\";\nimport Alerts from \"../../common/Alerts\";\n\n\n\nfunction ProposalView(props) {\n  const { handleSubmit, register, reset, errors } = useForm();\n  const alert = useAlert();\n\n  const userId = window.localStorage.getItem(\"userid\");\n  const [queryStatus, setQueryStatus] = useState(null);\n  const { id } = useParams();\n  const history = useHistory();\n\n  const [diaplayProposal, setDisplayProposal] = useState({\n    amount: \"\",\n    proposal_date: \"\",\n    name: \"\",\n    description: \"\",\n\n    amount_type: \"\",\n    amount_fixed: \"\",\n    amount_hourly: \"\",\n\n    payment_terms: \"\",\n    no_of_installment: \"\",\n    installment_amount: \"\",\n    due_date: \"\",\n  });\n\n  const { amount, proposal_date,\n    name, description,\n    amount_type, amount_fixed, amount_hourly,\n    payment_terms,\n    no_of_installment,\n    installment_amount,\n    due_date,\n  } = diaplayProposal\n\n\n  useEffect(() => {\n    const getProposalDetails = () => {\n      axios\n        .get(\n          `${baseUrl}/customers/getQueryDetails?id=${id}`\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            console.log(res.data.result[0].query_status);\n            setQueryStatus(res.data.result[0].query_status);\n            setDisplayProposal({\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\n              payment_received: res.data.proposal_queries[0].paid_amount,\n              amount: res.data.proposal_queries[0].amount,\n              proposal_date: res.data.proposal_queries[0].created,\n              name: res.data.proposal_queries[0].tlname,\n              description: res.data.proposal_queries[0].description,\n              amount_type: res.data.proposal_queries[0].amount_type,\n              amount_fixed: res.data.proposal_queries[0].amount_fixed,\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\n\n              payment_terms: res.data.proposal_queries[0].payment_terms,\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\n              installment_amount: res.data.proposal_queries[0].installment_amount,\n              due_date: res.data.proposal_queries[0].due_date,\n\n\n            });\n          }\n        });\n    };\n    getProposalDetails();\n  }, []);\n\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  const readTerms = () => {\n    console.log(\"key\");\n    setPaymentModal(!addPaymentModal);\n  };\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"status\", 5);\n    formData.append(\"terms_condition\", Number(value.p_terms_condition));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/ProposalAccept`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n\n        var variable = \"Proposal accepted successfully.\"\n        Alerts.SuccessNormal(variable)\n        props.history.push('/customer/proposal')\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n  const installAmount = (data) => {\n    var item = data.split(',')\n    console.log(\"item\", item);\n\n    const dataItem = item.map((p, i) =>\n    (\n      <>\n        <p>{CommonServices.removeTime(p)}</p>\n      </>\n    ))\n    return dataItem;\n  }\n\n\n  return (\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <p style={{ fontSize: \"20px\" }}>Proposal Details</p>\n            </Col>\n            <Col\n              md=\"4\"\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            ></Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th scope=\"row\">Name of Team Leader</th>\n                <td>{name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date of Allocation</th>\n                <td>{CommonServices.removeTime(proposal_date)}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Proposed Amount</th>\n                <td>{amount}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Scope of Work</th>\n                <td>{description}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Amount</th>\n                <td>\n                  <tr>\n                    <th>Amount Type</th>\n                    <th>Price</th>\n                  </tr>\n                  <tr>\n                    <td>{CommonServices.capitalizeFirstLetter(amount_type)}</td>\n                    <td>\n                      {\n                        amount_type == \"fixed\" ?\n                          amount\n                          :\n                          amount_type == \"hourly\" ?\n                            amount_hourly\n                            :\n                            amount_type == \"mixed\" ?\n                              <div>\n                                <p>Fixed : {amount}</p>\n                                <p>Hourly : {amount_hourly}</p>\n                              </div>\n                              :\n                              \"\"\n                      }\n                    </td>\n                  </tr>\n                </td>\n              </tr>\n\n              <tr>\n                <th scope=\"row\">Payment Terms</th>\n                {\n                  payment_terms == \"lumpsum\" ?\n                    <td>\n                      <tr>\n                        <th>Payment Type</th>\n                        <th>Due Dates</th>\n                      </tr>\n                      <tr>\n                        <td>{CommonServices.capitalizeFirstLetter(payment_terms)}</td>\n                        <td>\n                          {CommonServices.removeTime(due_date)}\n                        </td>\n                      </tr>\n                    </td>\n                    :\n                    payment_terms == \"installment\" ?\n                      <td>\n                        <tr>\n                          <th>Payment Type</th>\n                          <th>No of Installments</th>\n                          <th>Installment Amount</th>\n                          <th>Due Dates</th>\n                        </tr>\n                        <tr>\n                          <td>{payment_terms}</td>\n                          <td>{no_of_installment}</td>\n                          <td>{installAmount(installment_amount)}</td>\n                          <td>{installAmount(due_date)}</td>\n                        </tr>\n                      </td>\n                      :\n                      \"\"\n                }\n\n\n              </tr>\n              <tr>\n                <th scope=\"row\">Proposal Status</th>\n                <td>\n                  {queryStatus == \"4\" && \"Inprogress\"}\n                  {queryStatus == \"6\" && \"Declined\"}\n                  {(queryStatus == \"5\" || queryStatus > 6) && \"Accepted\"}\n                </td>\n              </tr>\n            </tbody>\n\n          </table>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"col-md-6\">\n              <div className=\"mb-3\">\n                <div className=\"form-check\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    name=\"p_terms_condition\"\n                    ref={register}\n                  />\n                  <label className=\"form-check-label\"\n                    title=\"Read\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => readTerms()}\n                  >\n                    General terms & condition\n                  </label>\n                </div>\n                <br />\n                <div className=\"form-check\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n                </div>\n\n              </div>\n            </div>\n\n          </form>\n        </CardBody>\n\n        <TermsConditions\n          readTerms={readTerms}\n          addPaymentModal={addPaymentModal}\n        // getProposalData={getProposalDetails}\n        />\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ProposalView;\n","/var/www/html/Mazars_Pannel/src/views/ProposalView/TermsConditions.js",["1931","1932"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\n\n\nfunction PaymentModal({\n  addPaymentModal,\n  readTerms,\n}) {\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={readTerms} size=\"lg\" scrollable={true} >\n        <ModalHeader toggle={readTerms}>GENERAL TERMS AND CONDITIONS</ModalHeader>\n        <ModalBody>\n          <p>\n            These General Terms and Conditions form an integral part of the engagement letter issued to Name of the Customer (the “Client”) by Mazars\n            Advisory LLP (“we” or the “Firm”)\n          </p>\n\n          <h5>1. Applicability</h5>\n          <p>\n            • These General Terms and Conditions are applicable to any provision of services to the Client by the Firm in accordance with the Engagement Letter.\n          </p>\n          <p>• The Firm will perform the services in accordance with the applicable standards of professional conduct.</p>\n          <p>• The Firm shall provide the services to the Client as an independent entity and not as the Client’s employee, agent, partner or joint venture. Neither the Client nor the Firm has any right, power or authority to bind the other except as stated otherwise in the Engagement Letter.</p>\n\n          <h5>2. Scope of Work/Services</h5>\n          <p>It is understood and agreed that the Firm shall provide the services to the Client as set out in the Engagement Letter. Any variation/modification/amendments shall be in writing and duly executed by the authorised signatory of each Party.</p>\n\n          <h5>3. Fees and Expenses</h5>\n          <p>\n            The Firm fees are based on the degree of skill involved, the seniority of the staff engaged, the time necessarily spent on the engagement and the nature of the engagement.\n          </p>\n          <p>\n            The Firm’s fees are due for payment immediately on the submission of the relevant invoice.\n          </p>\n\n          <p>\n            Invoices upon which payment is not received within seven (7) days of the submission date shall accrue a late payment charge of 2% per month.\n          </p>\n\n          <p>The Firm will charge the Client separately for travel expenses, photocopying charges, courier and delivery charges and all other out-of-pocket expenses reasonably incurred in connection with the engagement. International facsimile and telephone calls may be separately charged in accordance with the Firm’s current charging policy.</p>\n\n          <p>The Firm’s fees are exclusive of taxes or similar charges and the Client shall be responsible for all taxes imposed on the services</p>\n\n\n          <p>The Firm may charge additional professional fees if events beyond the Firm’s control (including the Client’s acts or omissions) affect the Firm's ability to perform the services as originally planned or if the Client asks the Firm to perform additional tasks or services. If the Firm is required by applicable law, legal process or government action to produce information or personnel as witnesses with respect to the engagement, the Client shall reimburse the Firm for any professional time and expenses (including reasonable external legal costs) incurred.</p>\n\n          <h5>4. Term</h5>\n\n          <p>The agreement will come into effect at the moment the Client confirms the Engagement Letter (either orally or in writing or electronically) or at the moment when the work is commenced.</p>\n          <p>Unless terminated sooner in accordance with the terms of the Engagement Letter, the engagement shall terminate on the completion of the services.</p>\n          <p>The engagement may be terminated by either party at any time, with or without cause, by giving written notice to the other party of not less than thirty (30) days before the effective date of termination; provided that, in the event of a termination for cause, the party in breach shall have the right to cure the breach within the notice period. Upon termination of the engagement, the Client will compensate the Firm under the terms of the Engagement Letter for the services performed and expenses incurred for the period to the effective date of termination.</p>\n          <p>The Firm has the right, at its option, to suspend or terminate the provisions of services in the event that the Firm’s invoices are not paid within the contractually agreed period.</p>\n\n          <h5>5. Client’s Responsibility</h5>\n\n          <p>The Client shall promptly provide (or cause others to provide) to the Firm,  the information, resources and assistance (including access to records, systems, premises and people) that the Firm reasonably requires to perform the services and the Client has full authority to do so.</p>\n          <p>All information provided by the Client or on the Client’s behalf (“Client Information”) shall to the extent possible be accurate and complete and the Client shall be responsible for any infringement of copyright or other third-party rights.</p>\n          <p>The Firm may rely on the Client Information made available to the Firm and, unless the Firm expressly agrees otherwise, will have no responsibility to evaluate or verify it.</p>\n\n\n\n\n\n\n\n\n\n\n          <h5> 6. Use of name</h5>\n\n\n          <p>In connection with any literature of an advertising or similar nature, the Firm’s name shall not be used or quoted without the prior written permission of the Firm.</p>\n          <p> The Firm may use the fact of its involvement with the Client in this engagement in its credentials, proposals and publicity material subject to applicable law and professional regulations. The Client agrees to such use and the Firm shall, on the Client’s specific request, share samples of such use.</p>\n\n\n\n\n\n          <h5> 7. Independence</h5>\n\n\n\n\n          <p> The Firm undertakes to comply with the relevant independence guidelines dictated by applicable national and international regulators at all times. In order to allow the Firm to comply with the relevant independence guidelines, the Client undertakes to inform the Firm timely, correctly and completely of the legal and control structure of the Client’s business or the group to which the Client belongs, all its financial and other interests and participations, as well as all its other alliances, financial or otherwise, in the broadest sense of the word.</p>\n\n\n\n\n          <h5>8. Limitation of Liability</h5>\n\n          <p>The Firm, its partners, directors, consultants, employees, agents, affiliates and other personnel are not liable for any damage that the Firm has received in connection with the engagement.</p>\n          <p> For the purposes of this engagement  \"damage\" shall mean the aggregate of all losses or damages and costs suffered or incurred, directly or indirectly, by the Client  under or in connection with the engagement or its subject matter (as the same may be amended or varied) and any report prepared pursuant to it, including as a result of breach of contract, breach of statutory duty, tort (including negligence), or other act or omission by the Firm but excluding any such losses, damages or costs arising from the fraud or dishonesty of the Firm or in respect of liabilities which cannot lawfully be limited or excluded.</p>\n          <p>It is agreed that, having regard to the Firm’s interest in limiting the personal liability and exposure to litigation of its personnel, the Client will not bring any claim in respect of any damage against any of the Firm’s personnel personally also.</p>\n\n\n\n\n\n\n          <h5>9. Confidentiality</h5>\n\n          <p>The Firm shall not disclose any confidential information which it obtains as a result of acting for the Client to any third party other than its affiliates, directors, partners, officers, employees, personnel, agents, experts, consultants or advisors on a \"need to know\" basis and who are bound by appropriate confidentiality and non-disclosure obligations.</p>\n          <p>In the event that the Firm or its representatives are requested pursuant to, or required by, applicable law or regulation or by legal or administrative process  to disclose any Confidential Information, or where the Firm wishes to disclose its professional indemnity insurers or its advisers, the Firm agrees that it will, as far as is legally and practically possible, provide the Client with prompt notice of such request or requirement in order to enable the Client to seek an appropriate protective order or other remedy. In the event that such protective order or other remedy is not obtained, the Firm or its representatives, as the case may be, shall disclose only the portion of the Confidential Information which is legally or professionally required to be disclosed.</p>\n          <p>The Firm shall be permitted to retain copies of such Confidential Information as it is required to retain for legal or professional regulatory purposes.</p>\n          <p>Unless specifically governed by statute or regulation, the report and deliverables issued by the Firm in accordance with the Engagement Letter are strictly confidential and for use by the Client for the purpose specified in the Engagement Letter. The reports and other deliverables may not be used, reproduced or circulated for any other purpose, whether in whole or in part, without the Firm’s prior written consent, which consent shall only be given after full consideration of the circumstances at the time and on the understanding that the Firm owes no duty of care to any party other than the Client.</p>\n\n\n\n\n\n\n\n\n\n\n          <h5>10. Electronic transmittals</h5>\n\n          <p>During the course of our engagement, the Firm or the Client may need to electronically transmit confidential information to each other and to other entities engaged by either party.  E-mail is a fast and convenient way to communicate.  However, email is not a secure means of communication and, thus, confidentiality could be compromised.  The Client agrees to the use of e-mail and other electronic methods to transmit and receive information, including confidential information, between the Firm and the Client and between the Firm and outside specialists or other entities engaged by either the Firm or the Client.</p>\n\n          <h5>11. Indemnification</h5>\n          <p>The Client shall indemnify and hold harmless the Firm against all claims by third parties (contractual or in tort), threatened claims, suits, taxes, penalties, liabilities, damages, costs and expenses, suffered, incurred, arising or expended (“Claims”), directly or indirectly by reason of Firm’s performance under this engagement or from having performed any services to the Client, except in the event of fraud, gross negligence, or wilful misconduct on the part of the Firm.</p>\n          <p> The indemnity obligations as set out above shall survive the termination or rescission for any reason of the contractual relationship between the Firm and the Client until the expiry of the relevant statute of limitation applicable to any claims.</p>\n\n\n\n\n\n\n\n          <h5>12. Ownership of Books, Papers and Working Papers</h5>\n\n\n\n          <p>All documents in whatever form, paper, electronic or otherwise such as (for example, but without being an exhaustive list) working papers, letters (including without limitation e-mails), memoranda, file notes of meetings and telephone calls, draft computations and returns etc. and copies of other original documents which the Firm creates or which the Firm receives either as principal or in the Firm’s right or as agent for the Client belong to the Firm. For the avoidance of doubt, the Firm does not assert such ownership rights to documents such as, for example, title documents, original invoices and other original primary accounting records, tax deduction certificates etc. belonging to the Client, but the Firm may retain possession of them by exercising a lien, if the Firm’s fees remain outstanding after becoming due for payment.</p>\n\n\n          <h5>13. Intellectual Property Rights</h5>\n\n          <p> The Firm may use data, software, designs, utilities, tools, models, systems and other methodologies and know-how (“Materials”) that the Firm owns or right to use in performing the services. Notwithstanding the delivery of any reports, the Firm retains all intellectual property rights in the Materials (including any improvements or knowledge developed while performing the services), and in any working papers compiled in connection with the services (but not Client Information reflected in them).</p>\n\n          <h5>14. Anti-Corruption and Anti-Bribery</h5>\n\n          <p>The Firm and the Client shall each maintain in place throughout the term of this Engagement Letter its own policies and procedures, including, but not limited to, adequate procedures to ensure compliance with applicable Anti-Corruption and Anti-Bribery Laws, and will enforce them as appropriate.</p>\n\n\n\n\n\n          <h5>15. Money Laundering</h5>\n\n\n          <p>The Firm and the Client shall each comply with applicable Money Laundering Regulations</p>\n\n          <h5>16. Personal Data Collection</h5>\n\n          <p>All personal data collected in the Client identification and verification process will only be used for the Client due diligence purpose (if necessary), for advising the Client on the Instructed Matter and for sending the Client details of other services that the Firm may from time to time offer including sending legal updates, seminar invitations and other marketing material. If the Firm intends to use the Client’s personal data for any other unrelated purposes, the Firm shall seek the Client’s permission before doing so.</p>\n\n\n          <h5>17. Non-exclusivity</h5>\n\n\n          <p>The parties acknowledge that the Firm shall have the right to provide consulting or other professional services of any kind or nature whatsoever to any person or entity as the Firm in its sole discretion deems appropriate.</p>\n\n\n\n\n\n          <h5>18. Non-solicitation</h5>\n\n\n          <p> Each party undertakes during the effective term of this engagement and for a period of 1 (one) year thereafter, not to solicit, hire or employ directly or indirectly any partner, director, personnel or employee of the other party who has had any involvement in the engagement except with the prior written consent of the other party. If such consent is given a fee of 15% of the individual’s annual total compensation (cost to company) shall be payable to the other party.</p>\n\n\n\n          <h5>19. Complaints</h5>\n\n\n          <p></p>\n          <p>The Firm must be notified in writing of complaints relating to the work carried out and/or the invoiced amount within 30 days of the date of dispatch of the documents or information in respect of which the Client is filing a complaint, or within 30 days of the discovery of the shortcoming, if the Client proves that the shortcoming could not have reasonably been discovered previously. However this does not exempt the Client from its obligation to pay the Firm’s invoices.</p>\n          <p>If the Firm accepts the complaint then, it has the option of adjusting the fee charged, having the rejected work rectified or terminating the Contract (for remaining work).</p>\n\n\n\n\n          <h5>20. Force Majeure</h5>\n\n\n          <p> Neither the Client nor the Firm shall be liable for breach of any terms and conditions set out in the Engagement Letter (other than payment obligations) caused by circumstances beyond the reasonable control of the Client or the Firm.</p>\n\n\n          <h5>21. Notice</h5>\n          <p>Any notices, demands or consents required or permitted in accordance with the Engagement Letter and these General Terms and Conditions shall be in writing and signed by an authorised officer of the relevant party and shall be delivered either personally or sent by registered post or receipted courier addressed to the respective Party’s address as stated in the Engagement Letter.</p>\n\n\n          <h5>22. Variation</h5>\n\n          Variations to any of the provisions of the Engagement Letter and the General Terms and Conditions shall be void unless they are in writing and duly executed by the authorised representatives of each party.\n\n          <h5>23. Severability</h5>\n\n          <p>If any term of the Engagement Letter or General Terms and Conditions is held to be invalid or unenforceable by any judicial, applicable law, professional regulations or other competent authority but would be valid or enforceable if some parts of the term were modified or deleted, the term in question will apply with the minimum modification or deletion necessary to make it valid and enforceable, and the other provisions in the Engagement Letter and General Terms and Conditions will be unimpaired and remain in full force and effect.</p>\n          <p>If any term of the Engagement Letter or General Terms and Conditions is not relevant or applicable for the particular engagement such terms shall be modified or deleted as necessary to make it valid and the other provisions in the Engagement Letter or General Terms and Conditions will be unimpaired and remain in full force and effect.</p>\n\n\n          <h5>24. Contradictory Provisions</h5>\n          <p> If these General Terms and Conditions and the Engagement Letter contain conflicting provisions, the provisions contained in the Engagement Letter shall prevail.</p>\n\n\n          <h5> 25. Governing Law</h5>\n\n          <p>This Engagement Letter and General Terms and Conditions will be governed by and construed in accordance with the laws of India and be subject to the exclusive jurisdiction of the courts of New Delhi.</p>\n          <p>We acknowledge that the above is in accordance with our understanding of the arrangement.</p>\n\n\n\n\n\n        </ModalBody>\n\n\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={readTerms}>Cancel</Button>\n        </ModalFooter>\n\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/var/www/html/Mazars_Pannel/src/pages/TL/SendProposal/Payment.js",["1933"],"\nimport React from \"react\";\n\n\nexport default class Payment extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            values: [],\n            dates: [],\n            // items: []\n        };\n    }\n\n    handleChange1(i, e) {\n        console.log(\"props\", this.props.totalAmount)\n\n        var totalAmount = this.props.totalAmount\n\n        this.setState({\n            values: { ...this.state.values, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentAmount(this.state.values)\n            })\n\n\n        // this.props.paymentAmount(this.state.values)\n    }\n\n    handleChange2(i, e) {\n        this.setState({\n            dates: { ...this.state.dates, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentDate(this.state.dates)\n            })\n\n    }\n\n\n    render() {\n        var fieldsArray = [];\n\n        for (var i = 1; i <= this.props.installment; i++) {\n            fieldsArray.push(\n                <div className=\"row\">\n                    <div class=\"col-md-6\">\n                        <label>Amount</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name={this.state.values[i]}\n                            onChange={this.handleChange1.bind(this, i)}\n                        />\n                    </div>\n                    <div class=\"col-md-6\">\n                        <label>Due Dates</label>\n                        <input\n                            type=\"date\"\n                            className=\"form-control\"\n                            name={this.state.dates[i]}\n                            onChange={this.handleChange2.bind(this, i)}\n                        />\n                    </div>\n                </div >\n            );\n        }\n\n        console.log(\"values state\", this.state.values);\n        console.log(\"dates state\", this.state.dates);\n\n        // console.log(\" items\", [...]);\n\n\n        return (\n            <div className=\"inputs\">\n                {fieldsArray}\n            </div>\n        );\n    }\n}\n\n\n\n\n // var fieldsArray = [];\n  // for (var i = 0; i < installment; i++) {\n  //   fieldsArray.push(\n  //     <div className=\"row\">\n  //       <div class=\"col-md-6\">\n  //         <label>Amount</label>\n  //         <input\n  //           type='text'\n  //           className=\"form-control\"\n  //           name={amount[i]}\n  //           onChange={(e) => handleChange1(e, i)}\n  //         />\n  //       </div>\n  //     </div>\n  //   );\n  // }\n\n\n//   const handleChange1 = (e, i) => {\n//     console.log(\"val-\", e.target.value);\n//     console.log(\"i-\", i);\n\n//     const { name, value } = e.target\n\n//     let values = [...amount];\n//     values[i] = value\n//     setAmount({ values });\n//   };\n","/var/www/html/Mazars_Pannel/src/pages/TL/EditProposal/Payment.js",["1934"],"import React from \"react\";\n\n\nexport default class YourComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            values: [],\n            dates: [],\n        };\n    }\n\n    handleChange1(i, e) {\n        this.setState({\n            values: { ...this.state.values, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentAmount(this.state.values)\n            })\n    }\n\n    \n    handleChange2(i, e) {\n        this.setState({\n            dates: { ...this.state.dates, [i]: e.target.value }\n        },\n            () => {\n                this.props.paymentDate(this.state.dates)\n            })\n    }\n\n\n    render() {\n\n        var amount = this.props.installment_amount\n        var date = this.props.due_date\n\n        const installment_amount = amount.split(',');\n        const due_date = date.split(',');\n\n        // console.log(due_date)\n\n        var fieldsArray = [];\n\n        for (var i = 0; i < this.props.installment; i++) {\n            fieldsArray.push(\n                <div className=\"row\">\n                    <div class=\"col-md-6\">\n                        <label>Amount</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name={this.state.values[i]}\n                            onChange={this.handleChange1.bind(this, i)}\n                            defaultValue={installment_amount[i]}\n                        />\n                    </div>\n                    <div class=\"col-md-6\">\n                        <label>Due Dates</label>\n                        <input\n                            type=\"date\"\n                            className=\"form-control\"\n                            name={this.state.dates[i]}\n                            onChange={this.handleChange2.bind(this, i)}\n                            defaultValue={due_date[i]}\n                        />\n                    </div>\n                </div >\n\n            );\n        }\n\n        // console.log(\"installment_amount - \", this.props.installment_amount);\n        // console.log(\"due_date - \", this.props.due_date);\n\n        console.log(\"values - \", this.state.values);\n\n        return (\n            <div className=\"inputs\">\n                {fieldsArray}\n            </div>\n        );\n    }\n}\n\n\n\n\n // var fieldsArray = [];\n  // for (var i = 0; i < installment; i++) {\n  //   fieldsArray.push(\n  //     <div className=\"row\">\n  //       <div class=\"col-md-6\">\n  //         <label>Amount</label>\n  //         <input\n  //           type='text'\n  //           className=\"form-control\"\n  //           name={amount[i]}\n  //           onChange={(e) => handleChange1(e, i)}\n  //         />\n  //       </div>\n  //     </div>\n  //   );\n  // }\n\n\n//   const handleChange1 = (e, i) => {\n//     console.log(\"val-\", e.target.value);\n//     console.log(\"i-\", i);\n\n//     const { name, value } = e.target\n\n//     let values = [...amount];\n//     values[i] = value\n//     setAmount({ values });\n//   };\n\n\n\n{/* <div>\n{\n  row.status == \"Pending for Preparation\" &&\n  <Link to={`/teamleader/sendproposal/${row.id}`}>\n    <i\n      class=\"fa fa-mail-forward\"\n      style={{\n        fontSize: \"14px\",\n        cursor: \"pointer\",\n      }}\n    ></i>\n  </Link>\n}\n</div>\n\n<div>\n{\n  row.status_code < 9 ?\n    <Link to={`/teamleader/edit-proposal/${row.id}`}>\n      <i\n        className=\"fa fa-edit\"\n        style={{\n          fontSize: \"16px\",\n          cursor: \"pointer\",\n          color: \"green\",\n        }}\n      ></i>\n    </Link>\n    :\n    null\n}\n</div> */}","/var/www/html/Mazars_Pannel/src/pages/TL/EditProposal/DropDown.js",[],"/var/www/html/Mazars_Pannel/src/views/Message/PaymentModal.js",["1935","1936","1937","1938"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  data,\n  // getProposalData,\n}) {\n  const { handleSubmit, register, reset } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const userId = window.localStorage.getItem(\"userid\");\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", id);\n    formData.append(\"message_type\",\"information\");\n    formData.append(\"message\", value.p_message);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          reset();\n          alert.success(\" message successfully send!\");\n          paymentHandler()\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\n        <ModalBody>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <textarea\n                    class=\"form-control\"\n                    placeholder=\"Message text here\"\n                    rows=\"5\"\n                    ref={register}\n                    name=\"p_message\"\n                  ></textarea>\n\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/var/www/html/Mazars_Pannel/src/pages/TL/Message/PaymentModal.js",["1939","1940","1941","1942"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  data,\n  // getProposalData,\n}) {\n  const { handleSubmit, register, reset } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const userId = window.localStorage.getItem(\"tlkey\");\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", id);\n    formData.append(\"message_type\",\"information\");\n    formData.append(\"message\", value.p_message);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          reset();\n          alert.success(\" message successfully send!\");\n          paymentHandler()\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\n        <ModalBody>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <textarea\n                    class=\"form-control\"\n                    placeholder=\"Message text here\"\n                    rows=\"5\"\n                    ref={register}\n                    name=\"p_message\"\n                  ></textarea>\n\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/var/www/html/Mazars_Pannel/src/pages/TL/PaymentStatus/PaymentModal.js",["1943","1944","1945","1946","1947","1948","1949"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Alerts from \"../../../common/Alerts\";\n\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  assignNo\n}) {\n  const { handleSubmit, register, reset } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const userId = window.localStorage.getItem(\"tlkey\");\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"notes\", value.notes);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/declinePayment`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          paymentHandler()\n\n          var variable = \"Message Successfully Sent \"\n          Alerts.SuccessNormal(variable)\n\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Decline Payment</ModalHeader>\n        <ModalBody>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <textarea\n                    class=\"form-control\"\n                    placeholder=\"Message text here\"\n                    rows=\"5\"\n                    ref={register}\n                    name=\"notes\"\n                  ></textarea>\n\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/var/www/html/Mazars_Pannel/src/components/DeclinedQueries/DeclinedQueries.js",["1950","1951","1952","1953","1954","1955","1956","1957","1958","1959"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link, useParams } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../Search-Filter/AdminFilter\";\nimport Records from \"../../components/Records/Records\";\n\nfunction DeclinedQueries({ CountPendingForPayment }) {\n\n  const [pendingData, setPendingData] = useState([]);\n  const [records, setRecords] = useState([]);\n\n  useEffect(() => {\n    getPendingForPayment();\n  }, []);\n\n  const getPendingForPayment = () => {\n    axios.get(`${baseUrl}/admin/declinedQueries`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setPendingData(res.data.result);\n        setRecords(res.data.result.length);\n\n        // CountPendingForPayment(res.data.result.length);\n      }\n    });\n  };\n\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n      formatter: (cellContent, row, rowIndex, index) => {\n        console.log(\"rowIndex : \", index);\n        return <div>{rowIndex + 1}</div>;\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.id}`,\n                index: 0,\n                routes: \"queriestab\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Customer Name\",\n      dataField: \"name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status} /\n              {\n                row.status == \"Inprogress Query\" ?\n                <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                  <p className=\"declined\">\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                    <p className=\"completed\">\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n\n  return (\n    <>\n      <Card>\n        <CardHeader>\n          <AdminFilter\n            setData={setPendingData}\n            getData={getPendingForPayment}\n            declinedQueries=\"declinedQueries\"\n            setRecords={setRecords}\n            records={records}\n          />\n\n        </CardHeader>\n        <CardBody>\n        <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={pendingData}\n            columns={columns}\n            rowIndex\n            wrapperClasses=\"table-responsive\"\n          />\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default DeclinedQueries;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AssignmentTab/index.js",["1960","1961","1962"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\nimport AssignmentComponent from \"./AllAssignment\";\nimport DraftReport from \"./DraftReport\";\nimport FinalReport from \"./FinalReport\";\n\nfunction AssignmentTab(props) {\n    // console.log(\"queries tab: \", props);\n\n    const userid = window.localStorage.getItem(\"adminkey\");\n\n    const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\n    const [draft, setDraft] = useState(\"\");\n    const [final, setFinal] = useState();\n\n\n    useEffect(() => {\n        CountAllAssignment();\n        CountDraftReport();\n        CountFinalReport();\n    }, []);\n\n\n    const CountAllAssignment = (data) => {\n        axios.get(`${baseUrl}/tl/getAssignments`).then((res) => {\n            console.log(res);\n            if (res.data.code === 1) {\n                setAllAssignmentCount(res.data.result.length);\n            }\n        });\n    };\n\n    const CountDraftReport = () => {\n        axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1`).then((res) => {\n            console.log(res);\n            if (res.data.code === 1) {\n                setDraft(res.data.result.length);\n            }\n        });\n    };\n\n    const CountFinalReport = () => {\n        axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1`).then((res) => {\n            console.log(res);\n            if (res.data.code === 1) {\n                setFinal(res.data.result.length);\n            }\n        });\n    };\n\n    const [tabIndex, setTabIndex] = useState(0);\n    useLayoutEffect(() => {\n        setTabIndex(props.location.index || 0);\n    }, [props.location.index]);\n\n\n    const myStyle1 = {\n        backgroundColor: \"grey\",\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n    const myStyle2 = {\n        padding: \"12px\",\n        borderRadius: \"50px\",\n        width: \"200px\",\n        textAlign: \"center\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        cursor: \"pointer\",\n    };\n\n    return (\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n            <div>\n                <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\n                    <TabList\n                        style={{\n                            listStyleType: \"none\",\n                            display: \"flex\",\n                            justifyContent: \"space-around\",\n                        }}\n                    >\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\n                            All Assignments ({allAssignmentCount})\n                        </Tab>\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\n                            Inprogress; Draft Reports  ({draft})\n                        </Tab>\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\n                        Inprogress; Delivery of Final Reports ({final})\n                        </Tab>\n\n                    </TabList>\n\n                    <TabPanel>\n                        <AssignmentComponent />\n                    </TabPanel>\n\n                    <TabPanel>\n                        <DraftReport />\n                    </TabPanel>\n\n                    <TabPanel>\n                        <FinalReport />\n                    </TabPanel>\n                </Tabs>\n            </div>\n        </Layout>\n    );\n}\n\nexport default AssignmentTab;\n\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AssignmentTab/AllAssignment.js",["1963","1964","1965","1966","1967","1968","1969","1970","1971","1972","1973","1974","1975","1976","1977","1978","1979","1980"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../../components/Records/Records\";\nimport ViewAllReportModal from \"./ViewAllReport\";\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\n\n\nfunction AssignmentComponent() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [assignmentCount, setCountAssignment] = useState(\"\");\n  const [records, setRecords] = useState([]);\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n  const [hide, setHide] = useState();\n  const [report, setReport] = useState();\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  console.log(\"current_date :\", current_date);\n  const [item] = useState(current_date);\n\n\n  const [reportModal, setReportModal] = useState(false);\n  const ViewReport = (key) => {\n    console.log(\"key - \", key);\n    setReportModal(!reportModal);\n    setReport(key);\n  };\n\n\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n  const getAssignmentData = () => {\n    axios.get(`${baseUrl}/tl/getAssignments`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setAssignmentDisplay(res.data.result);\n        setCountAssignment(res.data.result.length);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    console.log(`selected ${value}`);\n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetCategory ..\");\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    setStatus([]);\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n    console.log(`selected ${value}`);\n    setStatus(value);\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"date_of_query\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.date_of_query);\n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            {/* <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link> */}\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                routes: \"assignment\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"200px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n              {row.paid_status == \"2\" &&\n                <p>\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\n                </p>\n              }\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                {row.client_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\n                {row.draft_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                {row.final_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                {row.delivery_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\n                {row.other_stage}\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"Exp_Delivery_Date\",\n      text: \"Expected date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.Exp_Delivery_Date);\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"final_date\",\n      text: \"Actual date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.final_date);\n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {!row.final_report == \"\" ? (\n              <div>\n                <a\n                  href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.final_report}`}\n                  target=\"_blank\"\n                >\n                  <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\n                  final\n                </a>\n              </div>\n            ) : row.assignement_draft_report ? (\n              <div>\n                <a\n                  href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.assignement_draft_report}`}\n                  target=\"_blank\"\n                >\n                  <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\n                  draft\n                </a>\n              </div>\n            ) : null}\n          </>\n        );\n      },\n    },\n    {\n      text: \"TL name\",\n      dataField: \"tl_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Action\",\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"75px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n\n              <div title=\"Send Message\">\n                <Link\n                  to={{\n                    pathname: `/admin/chatting/${row.q_id}`,\n                    obj: {\n                      message_type: \"3\",\n                      query_No: row.assign_no,\n                      query_id: row.q_id,\n                      routes: `/admin/assignment`\n                    }\n                  }}\n                >\n                  <i\n                    class=\"fa fa-comments-o\"\n                    style={{\n                      fontSize: 16,\n                      cursor: \"pointer\",\n                      marginLeft: \"8px\",\n                      color: \"blue\"\n                    }}\n                  ></i>\n                </Link>\n              </div>\n\n              <div title=\"View Report\"\n                style={{ cursor: \"pointer\" }}\n                onClick={() => ViewReport(row.assign_no)}\n              >\n                <DescriptionOutlinedIcon color=\"secondary\" />\n              </div>\n\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/tl/getAssignments?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&assignment_status=${status}&stages_status=${data.p_status}&pcat_id=${selectedData}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignmentDisplay(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      });\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  const disabledHandler = (e) => {\n    // console.log(\"val-\", e.target.value);\n    setHide(e.target.value);\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-inline\">\n              <div class=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 250 }}\n                  placeholder=\"Select Sub Category\"\n                  defaultValue={[]}\n                  onChange={handleSubCategory}\n                  value={store2}\n                  allowClear\n                >\n                  {tax2.map((p, index) => (\n                    <Option value={p.id} key={index}>\n                      {p.details}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  defaultValue={item}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <select\n                  className=\"form-select form-control\"\n                  name=\"p_status\"\n                  ref={register}\n                  style={{ height: \"33px\" }}\n                  onChange={(e) => disabledHandler(e)}\n                >\n                  <option value=\"\">--select--</option>\n                  <option value=\"1\">Inprogress</option>\n                  <option value=\"2\">Completed</option>\n                  <option value=\"3\">Payment Declined</option>\n                </select>\n              </div>\n\n              {\n                hide == \"3\" ?\n                  \"\"\n                  :\n                  <div class=\"form-group mx-sm-1  mb-2\">\n                    <Select\n                      mode=\"multiple\"\n                      style={{ width: 210 }}\n                      placeholder=\"Select stages\"\n                      defaultValue={[]}\n                      onChange={assingmentStatus}\n                      value={status}\n                      allowClear\n                    >\n                      <Option value=\"Client_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Client Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Draft_Report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Draft reports\n                        </div>\n                      </Option>\n                      <Option value=\"Final_Discussion\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Final Discussion\n                        </div>\n                      </Option>\n                      <Option value=\"Delivery_of_report\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">\n                          Delivery of Final Reports\n                        </div>\n                      </Option>\n                      <Option value=\"Completed\" label=\"Compilance\">\n                        <div className=\"demo-option-label-item\">Awaiting Completion</div>\n                      </Option>\n                    </Select>\n                  </div>\n\n              }\n\n\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={assignmentDisplay}\n            columns={columns}\n            rowIndex\n          />\n\n          <ViewAllReportModal\n            ViewReport={ViewReport}\n            reportModal={reportModal}\n            report={report}\n            getPendingforAcceptance={getAssignmentData}\n          />\n\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default AssignmentComponent;\n\n{\n  /*            \n            <p style={{ fontSize: \"10px\" }}>{row.draft_report}</p>\n            <p style={{ fontSize: \"10px\" }}>{row.final_discussion}</p>\n            <p style={{ fontSize: \"10px\" }}>{row.draft_report}</p>\n            <p style={{ fontSize: \"10px\" }}>{row.other_stage}</p> */\n}\n{\n  /* <div>\n                      <p>\n                        <span style={{ fontWeight: \"bold\" }}>\n                          Client Discussion :\n                        </span>\n                        {p.client_discussion}\n                      </p>\n                      <p>\n                        <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\n                        {p.draft_report}\n                      </p>\n                      <p>\n                        <span style={{ fontWeight: \"bold\" }}>\n                          Final Discussion :\n                        </span>\n                        {p.final_discussion}\n                      </p>\n                      <p>\n                        <span style={{ fontWeight: \"bold\" }}>\n                          Delivery of report :\n                        </span> \n                        {p.delivery_report}\n                      </p>\n                    </div> */\n}\n\n/* <div className=\"mb-3\">\n                      <select\n                        className=\"form-select form-control\"\n                        name=\"p_purpose\"\n                      >\n                        <option >status</option>\n                        <option >Client Discussion : {p.client_discussion}</option>\n                        <option >Draft report : {p.draft_report}</option>\n                        <option >Final Discussion : {p.final_discussion}</option>\n                        <option >Delivery of report : {p.delivery_report}</option>\n                      </select>\n                    </div> */\n//  {/* <AdminFilter\n//             setData={setAssignmentDisplay}\n//             getData={getAssignmentData}\n//             assignment=\"assignment\"\n//           />\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AssignmentTab/DraftReport.js",["1981","1982","1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994","1995","1996"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../../components/Records/Records\";\n\n\nfunction DraftReport() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [assignmentCount, setCountAssignment] = useState(\"\");\n  const [records, setRecords] = useState([]);\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  console.log(\"current_date :\", current_date);\n  const [item] = useState(current_date);\n\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n  const getAssignmentData = () => {\n    axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setAssignmentDisplay(res.data.result);\n        setCountAssignment(res.data.result.length);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    console.log(`selected ${value}`);\n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetCategory ..\");\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    setStatus([]);\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n    console.log(`selected ${value}`);\n    setStatus(value);\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"date_of_query\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.date_of_query);\n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            {/* <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link> */}\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                routes: \"assignment\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"200px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                {row.client_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\n                {row.draft_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                {row.final_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                {row.delivery_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\n                {row.other_stage}\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"Exp_Delivery_Date\",\n      text: \"Expected date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.Exp_Delivery_Date);\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"final_date\",\n      text: \"Actual date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.final_date);\n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {!row.final_report == \"\" ? (\n              <div>\n                <a\n                  href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.final_report}`}\n                  target=\"_blank\"\n                >\n                  <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\n                  final\n                </a>\n              </div>\n            ) : row.assignement_draft_report ? (\n              <div>\n                <a\n                  href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.assignement_draft_report}`}\n                  target=\"_blank\"\n                >\n                  <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\n                  draft\n                </a>\n              </div>\n            ) : null}\n          </>\n        );\n      },\n    },\n    {\n      text: \"TL name\",\n      dataField: \"tl_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n  ];\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignmentDisplay(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      });\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-inline\">\n              <div class=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 250 }}\n                  placeholder=\"Select Sub Category\"\n                  defaultValue={[]}\n                  onChange={handleSubCategory}\n                  value={store2}\n                  allowClear\n                >\n                  {tax2.map((p, index) => (\n                    <Option value={p.id} key={index}>\n                      {p.details}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  defaultValue={item}\n                  max={item}\n                />\n              </div>\n\n\n\n\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={assignmentDisplay}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default DraftReport;\n\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AssignmentTab/FinalReport.js",["1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport \"antd/dist/antd.css\";\nimport { Select } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\nimport Records from \"../../../components/Records/Records\";\n\n\nfunction FinalReport() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n  const { handleSubmit, register, errors, reset } = useForm();\n  const { Option, OptGroup } = Select;\n  const [assignmentCount, setCountAssignment] = useState(\"\");\n  const [records, setRecords] = useState([]);\n\n  const [selectedData, setSelectedData] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [tax2, setTax2] = useState([]);\n  const [store2, setStore2] = useState([]);\n\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\n  console.log(\"current_date :\", current_date);\n  const [item] = useState(current_date);\n\n  useEffect(() => {\n    getAssignmentData();\n  }, []);\n\n  const getAssignmentData = () => {\n    axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setAssignmentDisplay(res.data.result);\n        setCountAssignment(res.data.result.length);\n        setRecords(res.data.result.length);\n      }\n    });\n  };\n\n  //get category\n  useEffect(() => {\n    const getSubCategory = () => {\n      axios\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\n        .then((res) => {\n          console.log(res);\n          if (res.data.code === 1) {\n            setTax2(res.data.result);\n          }\n        });\n    };\n    getSubCategory();\n  }, [selectedData]);\n\n  //handleCategory\n  const handleCategory = (value) => {\n    console.log(`selected ${value}`);\n    setSelectedData(value);\n    setStore2([]);\n  };\n\n  //handleSubCategory\n  const handleSubCategory = (value) => {\n    console.log(`selected ${value}`);\n    setStore2(value);\n  };\n\n  //reset category\n  const resetCategory = () => {\n    console.log(\"resetCategory ..\");\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //reset date\n  const resetData = () => {\n    console.log(\"resetData ..\");\n    reset();\n    setStatus([]);\n    setSelectedData([]);\n    setStore2([]);\n    getAssignmentData();\n  };\n\n  //assingmentStatus\n  const assingmentStatus = (value) => {\n    console.log(`selected ${value}`);\n    setStatus(value);\n  };\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"date_of_query\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.date_of_query);\n        var oldDate = row.date_of_query;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            {/* <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link> */}\n            <Link\n              to={{\n                pathname: `/admin/queries/${row.q_id}`,\n                routes: \"assignment\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      dataField: \"status\",\n      text: \"Status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"200px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            <div>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\n                {row.client_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\n                {row.draft_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\n                {row.final_discussion}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\n                {row.delivery_report}\n              </p>\n              <p>\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\n                {row.other_stage}\n              </p>\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"Exp_Delivery_Date\",\n      text: \"Expected date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.Exp_Delivery_Date);\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"final_date\",\n      text: \"Actual date of delivery\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.final_date);\n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Deliverable\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function (cell, row) {\n        return (\n          <>\n            {!row.final_report == \"\" ? (\n              <div>\n                <a\n                  href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.final_report}`}\n                  target=\"_blank\"\n                >\n                  <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\n                  final\n                </a>\n              </div>\n            ) : row.assignement_draft_report ? (\n              <div>\n                <a\n                  href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.assignement_draft_report}`}\n                  target=\"_blank\"\n                >\n                  <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\n                  draft\n                </a>\n              </div>\n            ) : null}\n          </>\n        );\n      },\n    },\n    {\n      text: \"TL name\",\n      dataField: \"tl_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n  ];\n\n  const onSubmit = (data) => {\n    console.log(\"data :\", data);\n    console.log(\"selectedData :\", selectedData);\n    axios\n      .get(\n        `${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          if (res.data.result) {\n            setAssignmentDisplay(res.data.result);\n            setRecords(res.data.result.length);\n          }\n        }\n      });\n  };\n\n  const Reset = () => {\n    return (\n      <>\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary mx-sm-1 mb-2\"\n          onClick={() => resetData()}\n        >\n          Reset\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"form-inline\">\n              <div class=\"form-group mb-2\">\n                <Select\n                  style={{ width: 130 }}\n                  placeholder=\"Select Category\"\n                  defaultValue={[]}\n                  onChange={handleCategory}\n                  value={selectedData}\n                >\n                  <Option value=\"1\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\n                  </Option>\n                  <Option value=\"2\" label=\"Compilance\">\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\n                  </Option>\n                </Select>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: 250 }}\n                  placeholder=\"Select Sub Category\"\n                  defaultValue={[]}\n                  onChange={handleSubCategory}\n                  value={store2}\n                  allowClear\n                >\n                  {tax2.map((p, index) => (\n                    <Option value={p.id} key={index}>\n                      {p.details}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary mb-2 ml-3\"\n                  onClick={resetCategory}\n                >\n                  X\n                </button>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">From</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateFrom\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  max={item}\n                />\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <label className=\"form-select form-control\">To</label>\n              </div>\n\n              <div class=\"form-group mx-sm-1  mb-2\">\n                <input\n                  type=\"date\"\n                  name=\"p_dateTo\"\n                  className=\"form-select form-control\"\n                  ref={register}\n                  defaultValue={item}\n                  max={item}\n                />\n              </div>\n\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\n                Search\n              </button>\n\n              <Reset />\n            </div>\n          </form>\n        </CardHeader>\n\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={assignmentDisplay}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default FinalReport;\n\n","/var/www/html/Mazars_Pannel/src/pages/Admin/Schedule/Schedule.js",["2013","2014"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Demo from \"./Demo\";\n\nfunction Schedule() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"7\">\n              <CardTitle tag=\"h4\">Schedule </CardTitle>\n            </Col>\n            <Col md=\"5\"></Col>\n          </Row>\n        </CardHeader>\n        <Demo />\n      </Card>\n    </Layout>\n  );\n}\n\nexport default Schedule;","/var/www/html/Mazars_Pannel/src/pages/Admin/Schedule/Demo.js",["2015","2016","2017","2018","2019","2020","2021","2022","2023","2024","2025","2026","2027","2028","2029"],"import React, { useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { baseUrl } from \"../../../config/config\";\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\nimport {\n  Scheduler,\n  Resources,\n  MonthView,\n  Appointments,\n  AppointmentTooltip,\n  AppointmentForm,\n  EditRecurrenceMenu,\n  DragDropProvider,\n  WeekView,\n  DayView,\n  DateNavigator,\n  ViewSwitcher,\n  TodayButton,\n  Toolbar,\n} from \"@devexpress/dx-react-scheduler-material-ui\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport * as Cookies from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport Alerts from \"../../../common/Alerts\";\nimport { values } from \"lodash\";\n\n\n\n\n\nfunction Demo() {\n  const userId = window.localStorage.getItem(\"adminkey\");\n\n  const history = useHistory();\n\n  const [data, setData] = useState([]);\n  const [assignmentdata, setAssignmentData] = useState([]);\n  const [owner, setOwner] = useState([]);\n  const [read, setRead] = useState(false);\n\n\n  const [baseMode, SetbaseMode] = useState(\"avc\");\n  const [transcode, SetTranscode] = useState(\"interop\");\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\n  var date = new Date();\n\n  function convert(str) {\n    var date = new Date(str),\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n      day = (\"0\" + date.getDate()).slice(-2);\n    return [date.getFullYear(), mnth, day].join(\"-\");\n  }\n  const [currentDate, setCurrentDate] = useState(convert(date));\n\n  useEffect(() => {\n    getData();\n    getAssignmentNo();\n    getUsers();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(`${baseUrl}/tl/videoScheduler?tl_id=1`)\n      .then((res) => {\n        console.log(\"res n -\", res);\n        var a = res.data.result.items;\n        if (a) {\n          setData(a.map(mapAppointmentData));\n        }\n      });\n  };\n\n  const mapAppointmentData = (appointment) => ({\n    id: appointment.id,\n    startDate: appointment.start,\n    endDate: appointment.end,\n    title: appointment.title,\n    notes: appointment.summary,\n    question_id: appointment.question_id,\n    vstart: appointment.vstart,\n    vend: appointment.vend,\n    user: appointment.user.split(','),\n    owner: appointment.owner,\n  });\n\n  const getAssignmentNo = () => {\n    axios\n      .get(`${baseUrl}/admin/getAllQuery`)\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          var data = res.data.result;\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\n            text,\n            ...rest,\n          }));\n          console.log(\"dt--\", newArrayOfObj);\n          setAssignmentData(newArrayOfObj);\n        }\n      });\n  };\n\n  const getUsers = () => {\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        var data = res.data.result;\n        const newOwners = data.map(({ name: text, ...rest }) => ({\n          text,\n          ...rest,\n        }));\n        console.log(\"dt--\", newOwners);\n        setOwner(newOwners);\n      }\n    });\n  };\n\n  const resources = [\n    {\n      fieldName: \"question_id\",\n      title: \"Query No\",\n      instances: assignmentdata,\n    },\n    {\n      fieldName: \"user\",\n      title: \"Users\",\n      instances: owner,\n      allowMultiple: true,\n    },\n  ];\n\n  const styles = (theme) => ({\n    button: {\n      color: theme.palette.background.default,\n      padding: 0,\n    },\n    text: {\n      paddingTop: theme.spacing(1),\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n  });\n\n\n  const AppointmentBase = ({\n    children,\n    data,\n    onClick,\n    classes,\n    onAppointmentMetaChange,\n    ...restProps\n  }) => (\n    <Appointments.Appointment {...restProps}>\n      <div style={{ display: \"flex\" }}>\n\n        {/* {B(data.owner)} */}\n\n        <div>{children}</div>\n        <div\n          onClick={() => handleJoin(data.question_id)}\n        ><i\n          class=\"fa fa-video-camera\"\n          style={{ fontSize: \"12px\", color: \"#fff\" }}\n        ></i>\n        </div>\n      </div>\n    </Appointments.Appointment>\n  );\n\n\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\n    AppointmentBase\n  );\n\n\n  const myAppointment = (props) => {\n\n    // console.log(\"props\", props.data.owner)\n\n    return (\n      <div>\n        <Appointment\n          {...props}\n        />\n      </div>\n    );\n  };\n\n\n  //handleJoin\n  const handleJoin = (id) => {\n    console.log(\"id\", id);\n\n    Cookies.set(\"channel_3\", id);\n    Cookies.set(\"baseMode_3\", baseMode);\n    Cookies.set(\"transcode_3\", transcode);\n    Cookies.set(\"attendeeMode_3\", attendeeMode);\n    Cookies.set(\"videoProfile_3\", videoProfile);\n    history.push(\"/admin/meeting\");\n  };\n\n\n  const changeFormat = (d) => {\n    console.log(\"d ---\", d);\n\n    if (typeof d === 'object') {\n      console.log(\"GMT\");\n      return (\n        d.getFullYear() +\n        \"-\" +\n        (d.getMonth() + 1) +\n        \"-\" +\n        d.getDate() +\n        \" \" +\n        d.toString().split(\" \")[4]\n      );\n    } else {\n      console.log(\"d\");\n      return d;\n    }\n  };\n\n\n\n  const commitChanges = ({ added, changed, deleted }) => {\n\n    // var dt = document.getElementsByClassName(\"jss149\")\n\n\n\n    // return false;\n\n    if (added) {\n      console.log(\"added - \", added);\n\n      var startDate = added.startDate;\n      var endDate = added.endDate;\n\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", added.question_id);\n      formData.append(\"time\", changeFormat(startDate));\n      formData.append(\"endtime\", changeFormat(endDate));\n      formData.append(\"title\", added.title);\n      formData.append(\"notes\", added.notes);\n      formData.append(\"user\", added.user);\n      formData.append(\"set_by\", \"admin\");\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/aminPostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"res post-\", response);\n          getData();\n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n        });\n    }\n\n    if (changed) {\n\n      // console.log(\"changed\", changed)\n      const data2 = data.map((appointment) =>\n        changed[appointment.id]\n          ? { ...appointment, ...changed[appointment.id] }\n          : appointment\n      );\n      // console.log(\"data2 - \", data2);\n\n      let valuesArray = Object.entries(changed);\n      let id = valuesArray[0][0];\n      console.log(\"id -\", id);\n      let dataIttem;\n\n      for (var i = 0; i < data2.length; i++) {\n        if (data2[i].id === id) {\n          dataIttem = data2[i];\n        }\n      }\n\n      var a = dataIttem.startDate\n      var b = dataIttem.endDate\n\n      // console.log(\"dataIttem\", dataIttem);\n\n      if (!dataIttem.owner) {\n        var variable = \"Error\"\n        Alerts.ErrorEdit(variable)\n        return false;\n      }\n\n      let formData = new FormData();\n      formData.append(\"customer_id\", JSON.parse(userId));\n      formData.append(\"question_id\", dataIttem.question_id);\n      formData.append(\"id\", dataIttem.id);\n      formData.append(\"time\", changeFormat(a));\n      formData.append(\"endtime\", changeFormat(b));\n      formData.append(\"title\", dataIttem.title);\n      formData.append(\"notes\", dataIttem.notes);\n      formData.append(\"set_by\", \"admin\");\n      formData.append(\"user\", dataIttem.user);\n\n      axios({\n        method: \"POST\",\n        url: `${baseUrl}/tl/aminPostCallSchedule`,\n        data: formData,\n      })\n        .then(function (response) {\n          console.log(\"res post-\", response);\n          getData();\n        })\n        .catch((error) => {\n          console.log(\"erroror - \", error);\n        });\n    }\n\n    if (deleted !== undefined) {\n\n      var value;\n      data.filter((data) => {\n        if (data.id == deleted) {\n          console.log(\"owner\", data.owner);\n          value = data.owner\n        }\n      });\n\n      console.log(\"value\", value);\n      if (!value) {\n        var variable = \"Error\"\n        Alerts.ErrorDelete(variable)\n        return false;\n      }\n\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"It will be permanently deleted !\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\",\n      }).then((result) => {\n        if (result.value) {\n          axios.get(`${baseUrl}/tl/freeslot?id=${deleted}`).then((res) => {\n            console.log(\"res -\", res);\n            if (res.data.code === 1) {\n              Swal.fire(\"Deleted!\", \"Your Schedule has been deleted.\", \"success\");\n              getData();\n            } else {\n              Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n            }\n          });\n        }\n      });\n    }\n  };\n\n  // console.log(\"tread\", read)\n\n  return (\n    <Paper>\n      <Scheduler data={data} height={660}>\n        <ViewState\n          defaultCurrentDate={currentDate}\n          defaultCurrentViewName=\"Day\"\n        />\n        <EditingState onCommitChanges={commitChanges} />\n        <EditRecurrenceMenu />\n\n        <DayView startDayHour={10} endDayHour={24} />\n        <WeekView startDayHour={10} endDayHour={19} />\n\n        <Appointments appointmentComponent={myAppointment} />\n\n        <Toolbar />\n        <DateNavigator />\n        <TodayButton />\n        <ViewSwitcher />\n\n        <AppointmentTooltip showOpenButton />\n        <AppointmentForm\n        />\n       \n        <Resources\n          data={resources}\n        />\n      </Scheduler>\n    </Paper>\n  );\n}\n\nexport default Demo;\n\n\n\n// function Demo() {\n//   const userId = window.localStorage.getItem(\"adminkey\");\n\n//   const history = useHistory();\n//   const [data, setData] = useState([]);\n//   const [assignmentdata, setAssignmentData] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [owner, setOwner] = useState([]);\n\n\n\n//   var date = new Date();\n\n//   function convert(str) {\n//     var date = new Date(str),\n//       mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n//       day = (\"0\" + date.getDate()).slice(-2);\n//     return [date.getFullYear(), mnth, day].join(\"-\");\n//   }\n//   const [currentDate, setCurrentDate] = useState(convert(date));\n\n//   useEffect(() => {\n//     getData();\n//     getAssignmentNo();\n//     getUsers();\n//   }, []);\n\n//   const getData = () => {\n//     axios\n//       .get(\n//         `${baseUrl}/tl/videoScheduler?tl_id=1`\n//       )\n//       .then((res) => {\n//         console.log(\"res -\", res);\n//         console.log(\"result -\", res.data.result.items);\n//         var a = res.data.result.items;\n//         if (a) {\n//           setData(a.map(mapAppointmentData));\n//           setLoading(false);\n//         }\n//       });\n//   };\n\n//   const mapAppointmentData = (appointment) => ({\n//     id: appointment.id,\n//     startDate: appointment.start,\n//     endDate: appointment.end,\n//     title: appointment.title,\n//     notes: appointment.summary,\n//     question_id: appointment.question_id,\n//     user: appointment.user.split(','),\n//   });\n\n\n//   const getAssignmentNo = () => {\n//     axios\n//       .get(`${baseUrl}/admin/getAllQuery`)\n//       .then((res) => {\n//         console.log(res);\n//         if (res.data.code === 1) {\n//           var data = res.data.result;\n//           const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\n//             text,\n//             ...rest,\n//           }));\n//           console.log(\"dt-que-\", newArrayOfObj);\n//           setAssignmentData(newArrayOfObj);\n//         }\n//       });\n//   };\n\n//   const getUsers = () => {\n//     axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\n//       console.log(res);\n//       if (res.data.code === 1) {\n//         var data = res.data.result;\n//         const newOwners = data.map(({ name: text, ...rest }) => ({\n//           text,\n//           ...rest,\n//         }));\n//         console.log(\"dt user--\", newOwners);\n//         setOwner(newOwners);\n//       }\n//     });\n//   };\n\n\n//   const resources = [\n//     {\n//       fieldName: \"question_id\",\n//       title: \"Query No\",\n//       instances: assignmentdata,\n//     },\n//     {\n//       fieldName: \"user\",\n//       title: \"Users\",\n//       instances: owner,\n//       allowMultiple: true,\n//     },\n//   ];\n\n\n\n//   const changeFormat = (d) => {\n//     console.log(d);\n//     return (\n//       d.getFullYear() +\n//       \"-\" +\n//       (d.getMonth() + 1) +\n//       \"-\" +\n//       d.getDate() +\n//       \" \" +\n//       d.toString().split(\" \")[4]\n//     );\n//   };\n\n//   const commitChanges = ({ added, changed, deleted }) => {\n//     if (added) {\n//       console.log(\"added - \", added);\n\n//       var startDate = added.startDate;\n//       var endDate = added.endDate;\n\n//       let formData = new FormData();\n//       formData.append(\"customer_id\", JSON.parse(userId));\n//       formData.append(\"time\", changeFormat(startDate));\n//       formData.append(\"endtime\", changeFormat(endDate));\n//       formData.append(\"title\", added.title);\n//       formData.append(\"notes\", added.notes);\n//       formData.append(\"question_id\", added.question_id);\n//       formData.append(\"user\", added.user);\n//       formData.append(\"set_by\", \"admin\");\n\n//       axios({\n//         method: \"POST\",\n//         url: `${baseUrl}/tl/PostCallSchedule`,\n//         data: formData,\n//       })\n//         .then(function (response) {\n//           console.log(\"res post-\", response);\n//           getData();\n//         })\n//         .catch((error) => {\n//           console.log(\"erroror - \", error);\n//         });\n//     }\n\n//     if (changed) {\n//       console.log(\"changed\", changed);\n\n//       const data2 = data.map((appointment) =>\n//         changed[appointment.id]\n//           ? { ...appointment, ...changed[appointment.id] }\n//           : appointment\n//       );\n//       console.log(\"data2 - \", data2);\n\n//       let valuesArray = Object.entries(changed);\n//       let id = valuesArray[0][0];\n//       console.log(\"id -\", id);\n//       let dataIttem;\n\n//       for (var i = 0; i < data2.length; i++) {\n//         if (data2[i].id === id) {\n//           dataIttem = data2[i];\n//         }\n//       }\n//       console.log(\"dataIttem\", dataIttem);\n\n//       let formData = new FormData();\n//       formData.append(\"customer_id\", JSON.parse(userId));\n//       formData.append(\"question_id\", dataIttem.question_id);\n//       formData.append(\"id\", dataIttem.id);\n//       formData.append(\"time\", dataIttem.startDate);\n//       formData.append(\"endtime\", dataIttem.endDate);\n//       formData.append(\"title\", dataIttem.title);\n//       formData.append(\"notes\", dataIttem.notes);\n\n//       axios({\n//         method: \"POST\",\n//         url: `${baseUrl}/customers/PostCallSchedule`,\n//         data: formData,\n//       })\n//         .then(function (response) {\n//           console.log(\"res post-\", response);\n//           getData();\n//         })\n//         .catch((error) => {\n//           console.log(\"erroror - \", error);\n//         });\n//     }\n\n//     if (deleted !== undefined) {\n//       console.log(\"deleted f\", deleted);\n//       axios.get(`${baseUrl}/customers/freeslot?id=${deleted}`).then((res) => {\n//         console.log(\"res -\", res);\n//         getData();\n//         setLoading(false);\n//       });\n//     }\n//   };\n\n//   const styles = (theme) => ({\n//     button: {\n//       color: theme.palette.background.default,\n//       padding: 0,\n//     },\n//     text: {\n//       paddingTop: theme.spacing(1),\n//       overflow: \"hidden\",\n//       textOverflow: \"ellipsis\",\n//       whiteSpace: \"nowrap\",\n//     },\n//   });\n\n//   const AppointmentBase = ({\n//     children,\n//     data,\n//     onClick,\n//     classes,\n//     onAppointmentMetaChange,\n//     ...restProps\n//   }) => (\n//     <Appointments.Appointment {...restProps}>\n//       <div style={{ display: \"flex\" }}>\n//         {\n//           console.log(\"data\", data)\n\n//         }\n//         <div>{children}</div>\n//         <div\n//         // onClick={() => handleJoin(data.id)}\n//         >\n//           <i\n//             class=\"fa fa-video-camera\"\n//             style={{ fontSize: \"12px\", color: \"#fff\" }}\n//           ></i>\n//         </div>\n//       </div>\n//     </Appointments.Appointment>\n//   );\n\n//   const Appointment = withStyles(styles, { name: \"Appointment\" })(\n//     AppointmentBase\n//   );\n\n//   const myAppointment = (props) => {\n//     return (\n//       <Appointment\n//         {...props}\n//       />\n//     );\n//   };\n\n\n//   return (\n//     <Paper>\n//       <Scheduler data={data} height={660}>\n//         <ViewState\n//           defaultCurrentDate={currentDate}\n//           defaultCurrentViewName=\"Week\"\n//         />\n//         <EditingState onCommitChanges={commitChanges} />\n//         <EditRecurrenceMenu />\n\n//         <DayView startDayHour={10} endDayHour={24} />\n//         <WeekView startDayHour={10} endDayHour={19} />\n\n//         <Appointments appointmentComponent={myAppointment} />\n\n//         <Toolbar />\n//         <DateNavigator />\n//         <TodayButton />\n//         <ViewSwitcher />\n\n//         <AppointmentTooltip showOpenButton />\n//         <AppointmentForm />\n\n//         <Resources \n//         data={resources} \n//         // mainResourceName=\"question_id\"\n//          />\n//       </Scheduler>\n//     </Paper>\n//   );\n// }\n\n// export default Demo;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/MeetingComponent/MeetingComponent.js",["2030","2031"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport Meeting from \"../meeting/index\";\n\nfunction MeetingComponent(props) {\n  const userid = window.localStorage.getItem(\"adminkey\");\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Meeting />\n    </Layout>\n  );\n}\n\nexport default MeetingComponent;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/meeting/index.jsx",[],"/var/www/html/Mazars_Pannel/src/pages/Admin/AgoraVideoCall/index.jsx",["2032","2033","2034","2035","2036","2037","2038","2039"],"import React from \"react\";\nimport { merge } from \"lodash\";\nimport AgoraRTC from \"agora-rtc-sdk\";\n\nimport \"./canvas.css\";\nimport \"../../../assets/fonts/css/icons.css\";\n\nconst tile_canvas = {\n  \"1\": [\"span 12/span 24\"],\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\n  \"4\": [\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12\",\n    \"span 6/span 12/7/13\",\n  ],\n  \"5\": [\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"6\": [\n    \"span 3/span 4/13/7\",\n    \"span 3/span 4/13/11\",\n    \"span 3/span 4/13/15\",\n    \"span 3/span 4/13/19\",\n    \"span 3/span 4/13/23\",\n    \"span 9/span 16/10/21\",\n  ],\n  \"7\": [\n    \"span 3/span 4/13/5\",\n    \"span 3/span 4/13/9\",\n    \"span 3/span 4/13/13\",\n    \"span 3/span 4/13/17\",\n    \"span 3/span 4/13/21\",\n    \"span 3/span 4/13/25\",\n    \"span 9/span 16/10/21\",\n  ],\n};\n\n/**\n * @prop appId uid\n * @prop transcode attendeeMode videoProfile channel baseMode\n */\n\n\nclass AgoraCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.client = {};\n    this.localStream = {};\n    this.shareClient = {};\n    this.shareStream = {};\n    this.state = {\n      displayMode: \"pip\",\n      streamList: [],\n      readyState: false,\n      stateSharing: false,\n    };\n  }\n\n  componentWillMount() {\n    let $ = this.props;\n    // init AgoraRTC local client\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\n    this.client.init($.appId, () => {\n      console.log(\"AgoraRTC client initialized\");\n      this.subscribeStreamEvents();\n\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\n        this.state.uid = uid;\n        console.log(\"User \" + uid + \" join channel successfully\");\n        console.log(\"At \" + new Date().toLocaleTimeString());\n        // create local stream\n        // It is not recommended to setState in function addStream\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\n        this.localStream.init(\n          () => {\n            if ($.attendeeMode !== \"audience\") {\n              this.addStream(this.localStream, true);\n              this.client.publish(this.localStream, (err) => {\n                console.log(\"Publish local stream error: \" + err);\n              });\n            }\n            this.setState({ readyState: true });\n          },\n          (err) => {\n            console.log(\"getUserMedia failed\", err);\n            this.setState({ readyState: true });\n          }\n        );\n      });\n    });\n  }\n\n  componentDidMount() {\n    // add listener to control btn group\n    let canvas = document.querySelector(\"#ag-canvas\");\n    let btnGroup = document.querySelector(\".ag-btn-group\");\n    canvas.addEventListener(\"mousemove\", () => {\n      if (global._toolbarToggle) {\n        clearTimeout(global._toolbarToggle);\n      }\n      btnGroup.classList.add(\"active\");\n      global._toolbarToggle = setTimeout(function () {\n        btnGroup.classList.remove(\"active\");\n      }, 2000);\n    });\n  }\n\n  // componentWillUnmount () {\n  //     // remove listener\n  //     let canvas = document.querySelector('#ag-canvas')\n  //     canvas.removeEventListener('mousemove')\n  // }\n\n  componentDidUpdate() {\n    // rerendering\n    let canvas = document.querySelector(\"#ag-canvas\");\n    // pip mode (can only use when less than 4 people in channel)\n    if (this.state.displayMode === \"pip\") {\n      let no = this.state.streamList.length;\n      if (no > 4) {\n        this.setState({ displayMode: \"tile\" });\n        return;\n      }\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n        }\n        if (index === no - 1) {\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\n        } else {\n          dom.setAttribute(\n            \"style\",\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\n          );\n        }\n\n        item.player.resize && item.player.resize();\n      });\n    }\n    // tile mode\n    else if (this.state.displayMode === \"tile\") {\n      let no = this.state.streamList.length;\n      this.state.streamList.map((item, index) => {\n        let id = item.getId();\n        let dom = document.querySelector(\"#ag-item-\" + id);\n        if (!dom) {\n          dom = document.createElement(\"section\");\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\n          dom.setAttribute(\"class\", \"ag-item\");\n          canvas.appendChild(dom);\n          item.play(\"ag-item-\" + id);\n        }\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\n        item.player.resize && item.player.resize();\n      });\n    }\n    // screen share mode (tbd)\n    else if (this.state.displayMode === \"share\") {\n    }\n  }\n\n  componentWillUnmount() {\n    this.client && this.client.unpublish(this.localStream);\n    this.localStream && this.localStream.close();\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n    }\n    this.client &&\n      this.client.leave(\n        () => {\n          console.log(\"Client succeed to leave.\");\n        },\n        () => {\n          console.log(\"Client failed to leave.\");\n        }\n      );\n  }\n\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: true,\n      screen: false,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n\n  subscribeStreamEvents = () => {\n    let rt = this;\n    rt.client.on(\"stream-added\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"New stream added: \" + stream.getId());\n      console.log(\"At \" + new Date().toLocaleTimeString());\n      console.log(\"Subscribe \", stream);\n      rt.client.subscribe(stream, function (err) {\n        console.log(\"Subscribe stream failed\", err);\n      });\n    });\n\n    rt.client.on(\"peer-leave\", function (evt) {\n      console.log(\"Peer has left: \" + evt.uid);\n      console.log(new Date().toLocaleTimeString());\n      console.log(evt);\n      rt.removeStream(evt.uid);\n    });\n\n    rt.client.on(\"stream-subscribed\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"Got stream-subscribed event\");\n      console.log(new Date().toLocaleTimeString());\n      console.log(\"Subscribe remote stream successfully: \" + stream.getId());\n      console.log(evt);\n      rt.addStream(stream);\n    });\n\n    rt.client.on(\"stream-removed\", function (evt) {\n      let stream = evt.stream;\n      console.log(\"Stream removed: \" + stream.getId());\n      console.log(new Date().toLocaleTimeString());\n      console.log(evt);\n      rt.removeStream(stream.getId());\n    });\n  };\n\n  removeStream = (uid) => {\n    this.state.streamList.map((item, index) => {\n      if (item.getId() === uid) {\n        item.close();\n        let element = document.querySelector(\"#ag-item-\" + uid);\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n        let tempList = [...this.state.streamList];\n        tempList.splice(index, 1);\n        this.setState({\n          streamList: tempList,\n        });\n      }\n    });\n  };\n\n  addStream = (stream, push = false) => {\n    let repeatition = this.state.streamList.some((item) => {\n      return item.getId() === stream.getId();\n    });\n    if (repeatition) {\n      return;\n    }\n    if (push) {\n      this.setState({\n        streamList: this.state.streamList.concat([stream]),\n      });\n    } else {\n      this.setState({\n        streamList: [stream].concat(this.state.streamList),\n      });\n    }\n  };\n\n  handleCamera = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isVideoOn()\n      ? this.localStream.disableVideo()\n      : this.localStream.enableVideo();\n  };\n\n  handleMic = (e) => {\n    e.currentTarget.classList.toggle(\"off\");\n    this.localStream.isAudioOn()\n      ? this.localStream.disableAudio()\n      : this.localStream.enableAudio();\n  };\n\n  switchDisplay = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    if (this.state.displayMode === \"pip\") {\n      this.setState({ displayMode: \"tile\" });\n    } else if (this.state.displayMode === \"tile\") {\n      this.setState({ displayMode: \"pip\" });\n    } else if (this.state.displayMode === \"share\") {\n      // do nothing or alert, tbd\n    } else {\n      console.error(\"Display Mode can only be tile/pip/share\");\n    }\n  };\n\n  hideRemote = (e) => {\n    if (\n      e.currentTarget.classList.contains(\"disabled\") ||\n      this.state.streamList.length <= 1\n    ) {\n      return;\n    }\n    let list;\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\n    list = Array.from(\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\n    );\n    list.map((item) => {\n      if (item.style.display !== \"none\") {\n        item.style.display = \"none\";\n      } else {\n        item.style.display = \"block\";\n      }\n    });\n  };\n\n  handleExit = (e) => {\n    if (e.currentTarget.classList.contains(\"disabled\")) {\n      return;\n    }\n    try {\n      this.client && this.client.unpublish(this.localStream);\n      this.localStream && this.localStream.close();\n      if (this.state.stateSharing) {\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\n        this.shareStream && this.shareStream.close();\n      }\n      this.client &&\n        this.client.leave(\n          () => {\n            console.log(\"Client succeed to leave.\");\n          },\n          () => {\n            console.log(\"Client failed to leave.\");\n          }\n        );\n    } finally {\n      this.setState({ readyState: false });\n      this.client = null;\n      this.localStream = null;\n      // redirect to index\n      window.location.hash = \"/admin/schedule\";\n    }\n  };\n\n  sharingScreen = (e) => {\n    if (this.state.stateSharing) {\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\n      this.shareStream && this.shareStream.close();\n      this.state.stateSharing = false;\n    } else {\n      this.state.stateSharing = true;\n      let $ = this.props;\n      // init AgoraRTC local client\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\n\n      this.shareClient.init($.appId, () => {\n        console.log(\"AgoraRTC client initialized\");\n\n        this.subscribeStreamEvents();\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\n          this.state.uid = uid;\n          console.log(\"User \" + uid + \" join channel successfully\");\n          console.log(\"At \" + new Date().toLocaleTimeString());\n          // create local stream\n          // It is not recommended to setState in function addStream\n          \n          this.shareStream = this.streamInitSharing(\n            uid,\n            $.attendeeMode,\n            $.videoProfile\n          );\n          this.shareStream.init(\n            () => {\n              if ($.attendeeMode !== \"audience\") {\n                this.addStream(this.shareStream, true);\n                this.shareClient.publish(this.shareStream, (err) => {\n                  console.log(\"Publish local stream error: \" + err);\n                });\n              }\n              this.setState({ readyState: true });\n            },\n            (err) => {\n              console.log(\"getUserMedia failed\", err);\n              this.setState({ readyState: true });\n            }\n          );\n        });\n      });\n    }\n  };\n\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\n    let defaultConfig = {\n      streamID: uid,\n      audio: true,\n      video: false,\n      screen: true,\n    };\n\n    switch (attendeeMode) {\n      case \"audio-only\":\n        defaultConfig.video = false;\n        break;\n      case \"audience\":\n        defaultConfig.video = false;\n        defaultConfig.audio = false;\n        break;\n      default:\n      case \"video\":\n        break;\n    }\n\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\n    stream.setVideoProfile(videoProfile);\n    return stream;\n  };\n\n  render() {\n\n    const style = {\n      display: \"grid\",\n      gridGap: \"50px 26px\",\n      alignItems: \"center\",\n      justifyItems: \"center\",\n      gridTemplateRows: \"repeat(12, auto)\",\n      gridTemplateColumns: \"repeat(24, auto)\",\n    };\n    \n    const videoControlBtn =\n      this.props.attendeeMode === \"video\" ? (\n        <span\n          onClick={this.handleCamera}\n          className=\"ag-btn videoControlBtn\"\n          title=\"Enable/Disable Video\"\n        >\n          <i className=\"ag-icon ag-icon-camera\"></i>\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const audioControlBtn =\n      this.props.attendeeMode !== \"audience\" ? (\n        <span\n          onClick={this.handleMic}\n          className=\"ag-btn audioControlBtn\"\n          title=\"Enable/Disable Audio\"\n        >\n          <i className=\"ag-icon ag-icon-mic\"></i>\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\n        </span>\n      ) : (\n        \"\"\n      );\n\n\n    const switchDisplayBtn = (\n      <span\n        onClick={this.switchDisplay}\n        className={\n          this.state.streamList.length > 4\n            ? \"ag-btn displayModeBtn disabled\"\n            : \"ag-btn displayModeBtn\"\n        }\n        title=\"Switch Display Mode\"\n      >\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\n      </span>\n    );\n\n\n    const hideRemoteBtn = (\n      <span\n        className={\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\n            ? \"ag-btn disableRemoteBtn disabled\"\n            : \"ag-btn disableRemoteBtn\"\n        }\n        onClick={this.hideRemote}\n        title=\"Hide Remote Stream\"\n      >\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\n      </span>\n    );\n\n    const exitBtn = (\n      <span\n        onClick={this.handleExit}\n        className={\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\n        }\n        title=\"Exit\"\n      >\n        <i className=\"ag-icon ag-icon-leave\"></i>\n      </span>\n    );\n\n    return (\n      <div id=\"ag-canvas\" style={style}>\n        <div className=\"ag-btn-group\">\n          {exitBtn}\n          {videoControlBtn}\n          {audioControlBtn}\n          {\n            <span\n              onClick={this.sharingScreen}\n              className=\"ag-btn shareScreenBtn\"\n              title=\"Share/unShare Screen\"\n            >\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\n            </span>\n          }\n          {switchDisplayBtn}\n          {hideRemoteBtn}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AgoraCanvas;\n","/var/www/html/Mazars_Pannel/src/views/FeedbackData/FeedbackData.js",["2040","2041","2042","2043"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport CommonServices from \"../../common/common\";\n\n\nfunction FeedbackData(props) {\n    console.log(\"props\", props.location.obj)\n\n    const userId = window.localStorage.getItem(\"userid\");\n    const [query, setQuery] = useState([]);\n\n\n    useEffect(() => {\n        getMessage();\n    }, []);\n\n\n    const getMessage = () => {\n        axios\n            .get(\n                `${baseUrl}/customers/getFeedback?uid=${JSON.parse(userId)}`\n            )\n            .then((res) => {\n                console.log(res);\n                if (res.data.code === 1) {\n                    setQuery(res.data.result);\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"10px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"60px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                console.log(row);\n                return (\n                    <>\n                        <div style={{ display: \"flex\" }}>\n                            <p>{CommonServices.removeTime(row.created)}</p>\n                            <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(row.created)}</p>\n                        </div>\n                    </>\n                );\n            },\n        },\n\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"40px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                console.log(row);\n                return (\n                    <>\n                        {row.assign_no}\n\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Feedback\",\n            dataField: \"feedback\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"150px\" };\n            },\n        },\n    ];\n\n\n\n\n    return (\n        <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n            <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"9\">\n                            <CardTitle tag=\"h4\">Feedback</CardTitle>\n                        </Col>\n                    </Row>\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={query}\n                        columns={columns}\n                        rowIndex\n                    />\n\n                </CardBody>\n            </Card>\n        </Layout>\n    );\n}\n\nexport default FeedbackData;\n        // {\n        //     text: \"Time\",\n        //     sort: true,\n        //     headerStyle: () => {\n        //         return { fontSize: \"12px\", width: \"30px\" };\n        //     },\n        //     formatter: function nameFormatter(cell, row) {\n        //         console.log(row);\n        //         return (\n        //             <>\n        //                 {CommonServices.removeDate(row.created)}\n        //             </>\n        //         );\n        //     },\n        // },","/var/www/html/Mazars_Pannel/src/pages/Admin/Chatting/Chatting.js",["2044","2045","2046","2047","2048","2049"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport Alerts from \"../../../common/Alerts\";\nimport classNames from \"classnames\";\n\n\nconst Schema = yup.object().shape({\n  message_type: yup.string().required(\"required message type\"),\n  p_message: yup.string().required(\"required message\"),\n  p_to: yup.string().required(\"required to\"),\n});\n\n\n\nfunction Chatting(props) {\n\n  console.log(\"props\", props)\n\n  const alert = useAlert();\n  const history = useHistory();\n  const { handleSubmit, register, errors, reset } = useForm({\n    resolver: yupResolver(Schema),\n  });\n\n  const userId = window.localStorage.getItem(\"adminkey\");\n\n  const [item, setItem] = useState(\"\");\n\n  const [data, setData] = useState({})\n  const { query_id, query_No, routes } = data\n\n\n\n\n  useEffect(() => {\n    console.log(\"useEffect\", props)\n    const dataItem = props.location.obj\n\n    if (dataItem) {\n      localStorage.setItem(\"myDataAdmin\", JSON.stringify(dataItem));\n    }\n    var myData = localStorage.getItem(\"myDataAdmin\");\n    var data2 = JSON.parse(myData)\n    setData(data2)\n    setItem(data2.message_type)\n  }, [item]);\n\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_id\", query_id);\n    formData.append(\"message_type\", value.message_type);\n    formData.append(\"message\", value.p_message);\n    formData.append(\"to\", value.p_to);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/admin/messageSent`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          reset();\n\n          var variable = \"Message Successfully Sent \"\n          Alerts.SuccessNormal(variable)\n          props.history.push(routes);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Message</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Query No.</label>\n                  <input\n                    type=\"text\"\n                    name=\"p_query\"\n                    className=\"form-control\"\n                    ref={register}\n                    value={query_No}\n                    disabled\n                  />\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Message Type</label>\n                  {\n                    item &&\n                    <select\n                      className={classNames(\"form-control\", {\n                        \"is-invalid\": errors.message_type,\n                      })}\n                      name=\"message_type\"\n                      ref={register}\n                      style={{ height: \"33px\" }}\n                      defaultValue={item}\n                    >\n                      <option value=\"\">--select--</option>\n                      <option value=\"4\">Query Discussion</option>\n                      <option value=\"2\">Proposal Discussion</option>\n                      <option value=\"5\">Payment Discussion</option>\n                      <option value=\"3\">Assignment Discussion</option>\n                      <option value=\"1\">Others</option>\n                    </select>\n                  }\n                  {errors.message_type && (\n                    <div className=\"invalid-feedback\">\n                      {errors.message_type.message}\n                    </div>\n                  )}\n                </div>\n\n                <div class=\"form-group\">\n                  <label>To</label>\n                  <select\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_to,\n                    })}\n                    name=\"p_to\"\n                    ref={register}\n                    style={{ height: \"33px\" }}\n                  >\n                    <option value=\"\">--select--</option>\n                    <option value=\"customer\">Customer</option>\n                    <option value=\"tl\">Team Leader</option>\n                    <option value=\"both\">Both</option>\n                  </select>\n                  {errors.p_to && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_to.message}\n                    </div>\n                  )}\n                </div>\n\n                <div class=\"form-group\">\n                  <label>Message</label>\n                  <textarea\n                    className={classNames(\"form-control\", {\n                      \"is-invalid\": errors.p_message,\n                    })}\n                    placeholder=\"Message text here\"\n                    rows=\"5\"\n                    ref={register}\n                    name=\"p_message\"\n                  ></textarea>\n                  {errors.p_message && (\n                    <div className=\"invalid-feedback\">\n                      {errors.p_message.message}\n                    </div>\n                  )}\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Send\n                </button>\n              </div>\n            </div>\n\n          </form>\n        </CardBody>\n\n      </Card>\n    </Layout >\n  );\n}\n\nexport default Chatting;\n\n\n{/* <select\n                    class=\"form-control\"\n                    name=\"p_sms_type\"\n                    ref={register}\n                    value={query_No}\n                  >\n                    <option value=\"\">--select--</option>\n                    <option value=\"1\">Information</option>\n                    <option value=\"2\">Proposal Discussion</option>\n                    <option value=\"3\">Assignment Discussion</option>\n                  </select> */}\n\n                    // useEffect(() => {\n  //   const getQuery = () => {\n  //     axios.get(`${baseUrl}/customers/getAssignedAssignments?user=${JSON.parse(userId)}\n  //     &type=1`)\n  //       .then((res) => {\n  //         console.log(res);\n  //         if (res.data.code === 1) {\n  //           // setAssingment(res.data.result);\n  //         }\n  //       });\n  //   };\n\n  //   getQuery();\n  // }, []);\n    // const dataItem = props.location.obj\n  // const { message_type, query_id, query_No, routes } = dataItem","/var/www/html/Mazars_Pannel/src/pages/Admin/Message/Message.js",["2050","2051","2052","2053","2054","2055","2056"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n// import PaymentModal from \"./PaymentModal\";\nimport CommonServices from \"../../../common/common\";\n\n\nfunction Message(props) {\n    console.log(\"props\", props.location.obj)\n\n    const userId = window.localStorage.getItem(\"adminkey\");\n    const [query, setQuery] = useState([]);\n    const [data, setData] = useState(null);\n\n\n    useEffect(() => {\n        getMessage();\n    }, []);\n\n\n    const getMessage = () => {\n        axios\n            .get(\n                `${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}&type_list=all`\n            )\n            .then((res) => {\n                console.log(res);\n                if (res.data.code === 1) {\n                    setQuery(res.data.result);\n                }\n            });\n    };\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"20px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"50px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                console.log(row);\n                return (\n                    <>\n                        <div style={{ display: \"flex\" }}>\n                            <p>{CommonServices.removeTime(row.setdate)}</p>\n                            <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(row.setdate)}</p>\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"30px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                console.log(row);\n                return (\n                    <>\n                        {row.assign_no}\n\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Message\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"180px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                console.log(row);\n                return (\n                    <>\n                        <Link to={`/admin/view-notification/${row.id}`}>\n                            {\n                                row.is_read == \"0\" ?\n                                    <div\n                                        style={{\n                                            cursor: \"pointer\",\n                                            display: \"flex\", justifyContent: \"space-between\"\n                                        }}\n                                        onClick={() => readNotification(row.id)}\n                                        title=\"unread\"\n                                    >\n                                        <p>{row.message}</p>\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\n                                    </div>\n                                    :\n                                    <div\n                                        style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}\n                                        title=\"read\"\n                                    >\n                                        <p>{row.message}</p>\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\n                                    </div>\n                            }\n                        </Link>\n\n                    </>\n                );\n            },\n        },\n    ];\n\n\n    // readnotification\n    const readNotification = (id) => {\n\n        console.log(\"call\", id)\n        axios\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\n            .then(function (response) {\n                console.log(\"delete-\", response);\n            })\n            .catch((error) => {\n                console.log(\"erroror - \", error);\n            });\n    };\n\n    return (\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\n            <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"9\">\n                            <CardTitle tag=\"h4\">Message</CardTitle>\n                        </Col>\n                    </Row>\n                </CardHeader>\n                <CardBody>\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={query}\n                        columns={columns}\n                        rowIndex\n                    />\n                </CardBody>\n            </Card>\n        </Layout>\n    );\n}\n\nexport default Message;\n\n{/* <Col md=\"3\">\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}\n                                class=\"btn btn-primary\"\n                            // onClick={() => paymentHandler()}\n                            >\n                                <Link\n                                    to={{\n                                        pathname: `/customer/chatting`,\n                                        obj: props.location.obj\n                                    }}\n\n                                >\n                                    Add Message\n                                </Link>\n                            </div>\n                        </Col> */}","/var/www/html/Mazars_Pannel/src/pages/Admin/Message/PaymentModal.js",["2057","2058","2059","2060"],"/var/www/html/Mazars_Pannel/src/pages/Admin/ViewNotification/ViewNotification.js",["2061","2062","2063","2064","2065","2066","2067","2068","2069","2070"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../config/config\";\nimport Layout from \"../../../components/Layout/Layout\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  Tooltip,\n} from \"reactstrap\";\nimport CommonServices from \"../../../common/common\";\n\nfunction ViewNotification() {\n  const userid = window.localStorage.getItem(\"adminkey\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    getChatting();\n  }, [id]);\n\n  const getChatting = () => {\n    let formData = new FormData();\n    formData.append(\"id\", id);\n    formData.append(\"uid\", JSON.parse(userid));\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/viewNotification`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          setData(response.data.result[0]);\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n  console.log(\"data-\", data);\n\n  return (\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\n      <Card>\n        <CardHeader>\n          <Row>\n            <Col md=\"4\">\n              <button\n                class=\"btn btn-success ml-3\"\n                onClick={() => history.goBack()}\n              >\n                <i class=\"fas fa-arrow-left mr-2\"></i>\n                Go Back\n              </button>\n            </Col>\n            <Col md=\"8\">\n              <h4>Message Details</h4>\n            </Col>\n          </Row>\n        </CardHeader>\n        <CardBody>\n          <table class=\"table table-bordered\">\n            <tbody>\n              <tr>\n                <th scope=\"row\">Query No</th>\n                <td>{data.assign_no}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\"> System Generated</th>\n                <td>{data.name}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Date</th>\n                <td>\n                  {CommonServices.removeTime(data.setdate)}\n                </td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Message</th>\n                <td>{data.message}</td>\n              </tr>\n              <tr>\n                <th scope=\"row\">Type</th>\n                <td>\n                  {data.type == \"1\"\n                    ? \"Others\"\n                    : data.type == \"2\"\n                      ? \"Proposal Discussion\"\n                      : data.type == \"3\"\n                        ? \"Assignment Discussion\"\n                        : data.type == \"4\"\n                          ? \"Query Discussion\"\n                          :\n                          data.type == \"5\"\n                            ? \"Payment Discussion\"\n                            :\n                            null\n                  }\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </CardBody>\n      </Card>\n    </Layout>\n  );\n}\n\nexport default ViewNotification;\n","/var/www/html/Mazars_Pannel/src/components/QueryDetails/DraftReports.js",["2071","2072"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport CommonServices from \"../../common/common\";\n\nfunction DraftReports({ id }) {\n\n    console.log(\"igg-\", id)\n\n    const userId = window.localStorage.getItem(\"userid\");\n    const [assignmentDisplay, setAssignmentDisplay] = useState([]);\n\n    useEffect(() => {\n        getAssignmentData();\n    }, []);\n\n    const getAssignmentData = () => {\n        axios\n            .get(\n                `${baseUrl}/tl/getDcumentDeail?id=6&type=2`\n            )\n            .then((res) => {\n                if (res) {\n                    console.log(\"mmmm-\", res)\n                    setAssignmentDisplay(res.data.result);\n                }\n            });\n    };\n\n    return (\n        <>\n            <div>\n                <p\n                    style={{\n                        textAlign: \"center\",\n                        color: \"black\",\n                        fontSize: \"18px\",\n                    }}\n                >\n                    Draft Reports\n                </p>\n                <table class=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\" style={{ width: \"400px\" }}>Titles</th>\n                            <th scope=\"col\">Data</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th scope=\"row\">Draft Reports</th>\n                            <td>\n                                <tr>\n                                    <th>Date</th>\n                                    <th>Name</th>\n                                </tr>\n                                {assignmentDisplay.map((p, i) => (\n                                    <tr>\n                                        <td>{CommonServices.removeTime(p.date)}</td>\n                                        <td>\n                                            <a\n                                                href={`http://65.0.220.156/mazarapi/assets/upload/report/${p.name}`}\n                                                target=\"_blank\"\n                                            >\n                                                {p.name}\n                                            </a>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </>\n    );\n}\n\nexport default DraftReports;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/Schedule/appoinments.js",[],["2073","2074"],"/var/www/html/Mazars_Pannel/src/components/QueryDetails/Feedback.js",["2075"],"import React, { useState } from \"react\";\nimport CommonServices from \"../../common/common\";\n\n\nfunction Feedback({ feedback }) {\n    console.log(\"feedback\", feedback);\n\n    return (\n        <div>\n            <p\n                style={{\n                    textAlign: \"center\",\n                    color: \"black\",\n                    fontSize: \"18px\",\n                }}\n            >\n                Feedback\n            </p>\n            <table class=\"table table-bordered\">\n                <thead>\n                    <tr>\n                        <th style={{ width: \"80px\" }}>S.No</th>\n                        <th style={{ width: \"200px\" }}>Date</th>\n                        <th>Feedback</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        feedback.map((p, i) => (\n                            <tr>\n                                <td>{i + 1}</td>\n                                <td style={{ display: \"flex\" }}>\n                                    <p>{CommonServices.removeTime(p.created)}</p>\n                                    <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(p.created)}</p>\n                                </td>\n                                <td>{p.feedback}</td>\n                            </tr>\n                        ))\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Feedback;","/var/www/html/Mazars_Pannel/src/views/QueriesTab/AllQueriesData.js",["2076","2077","2078","2079","2080","2081","2082","2083","2084","2085","2086","2087"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Swal from \"sweetalert2\";\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport Records from \"../../components/Records/Records\";\nimport PublishIcon from '@material-ui/icons/Publish';\nimport AdditionalQueryModal from \"./AdditionalQueryModal\";\n\n\n\nfunction AllQueriesData() {\n    const alert = useAlert();\n    const userId = window.localStorage.getItem(\"userid\");\n    const [query, setQuery] = useState([]);\n    const [queriesCount, setCountQueries] = useState(null);\n    const [records, setRecords] = useState([]);\n    const [assignNo, setAssignNo] = useState('');\n\n\n\n    const [additionalQuery, setAdditionalQuery] = useState(false);\n    const additionalHandler = (key) => {\n        setAdditionalQuery(!additionalQuery);\n        setAssignNo(key)\n    };\n\n\n    useEffect(() => {\n        getQueriesData();\n    }, []);\n\n    const getQueriesData = () => {\n        axios\n            .get(\n                `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}`\n            )\n            .then((res) => {\n                console.log(res);\n                if (res.data.code === 1) {\n                    setQuery(res.data.result);\n                    setCountQueries(res.data.result.length);\n                    setRecords(res.data.result.length);\n                }\n            });\n    };\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"12px\", width: \"50px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            dataField: \"created\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                console.log(\"dt\", row.created);\n                var oldDate = row.created;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                console.log(row);\n                return (\n                    <>\n                        <Link to={`/customer/my-assingment/${row.id}`}>\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n        },\n        {\n            text: \"Status\",\n            dataField: \"\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {row.status}/\n                            {\n                                row.status == \"Inprogress Query\" ?\n                                    <p className=\"inprogress\">\n                                        {row.status_message}\n                                    </p>\n                                    :\n                                    row.status == \"Declined Query\" ?\n                                        <p className=\"declined\">\n\n                                            {row.status_message}\n                                        </p> :\n                                        row.status == \"Completed Query\" ?\n                                            <p className=\"completed\">\n\n                                                {row.status_message}\n                                            </p> :\n                                            null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Expected Delivery Date\",\n            dataField: \"exp_delivery_date\",\n            sort: true,\n            headerStyle: () => {\n                return { fontSize: \"12px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                console.log(\"dt\", row.exp_delivery_date);\n                var oldDate = row.exp_delivery_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Action\",\n            headerStyle: () => {\n                return { fontSize: \"12px\", textAlign: \"center\", width: \"130px\" };\n            },\n            formatter: function (cell, row) {\n                return (\n                    <>\n                        {\n                            row.status == \"Declined Query\" ?\n                                null\n                                :\n                                <div style={{\n                                    display: \"flex\",\n                                    justifyContent: \"space-around\"\n                                }}>\n\n                                    <div>\n                                        {\n                                            row.status_code < 2 ?\n                                                <div style={{ display: \"flex\" }}>\n                                                    <div title=\"Update Query\">\n                                                        <Link to={`/customer/edit-query/${row.id}`}>\n                                                            <i\n                                                                className=\"fa fa-edit\"\n                                                                style={{\n                                                                    fontSize: 16,\n                                                                    cursor: \"pointer\",\n                                                                    marginLeft: \"8px\",\n                                                                }}\n                                                            ></i>\n                                                        </Link>\n                                                    </div>\n\n                                                    <div title=\"Delete Query\">\n                                                        {\n                                                            row.status_code < 1 ?\n                                                                <i\n                                                                    className=\"fa fa-trash\"\n                                                                    style={{\n                                                                        fontSize: 16,\n                                                                        cursor: \"pointer\",\n                                                                        marginLeft: \"8px\",\n                                                                    }}\n                                                                    onClick={() => del(row.id)}\n                                                                ></i>\n                                                                : null\n                                                        }\n\n                                                    </div>\n                                                </div>\n                                                :\n                                                <div style={{ display: \"flex\" }}>\n\n                                                \n                                                    <div title=\"Upload Additional Documents\"\n                                                        style={{ cursor: \"pointer\" }}\n                                                        onClick={() => additionalHandler(row.assign_no)}\n                                                    >\n                                                        <PublishIcon color=\"secondary\" />\n                                                    </div>\n                                                </div>\n                                        }\n                                    </div>\n                                </div>\n                        }\n                    </>\n                );\n            },\n        },\n    ];\n\n    //check\n    const del = (id) => {\n        console.log(\"del\", id);\n\n        Swal.fire({\n            title: \"Are you sure?\",\n            text: \"Do you want to decline query ?\",\n            type: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Yes, decline it!\",\n        }).then((result) => {\n            if (result.value) {\n                deleteCliente(id);\n            }\n        });\n    };\n\n    const deleteCliente = (id) => {\n        let formData = new FormData();\n        formData.append(\"uid\", JSON.parse(userId));\n        formData.append(\"id\", id);\n\n        axios({\n            method: \"POST\",\n            url: `${baseUrl}/customers/deleteQuery`,\n            data: formData,\n        })\n            .then(function (response) {\n                console.log(\"res-\", response);\n                if (response.data.code === 1) {\n                    Swal.fire(\"\", \"Query declined successfully.\", \"success\");\n                    getQueriesData();\n                } else {\n                    Swal.fire(\"Oops...\", \"Errorr \", \"error\");\n                }\n            })\n            .catch((error) => {\n                console.log(\"erroror - \", error);\n            });\n    };\n\n    return (\n        <div>\n            <Card>\n                <CardHeader>\n                    <Row>\n                        <Col md=\"9\">\n                            {/* <CardTitle tag=\"h4\">Queries ({queriesCount})</CardTitle> */}\n                        </Col>\n                        <Col md=\"3\">\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                                <Link to=\"/customer/select-category\" class=\"btn btn-primary\">\n                                    Fresh Query\n                                </Link>\n                            </div>\n                        </Col>\n                    </Row>\n                </CardHeader>\n                <CardHeader>\n                    <CustomerFilter\n                        setData={setQuery}\n                        getData={getQueriesData}\n                        id={userId}\n                        query=\"query\"\n                        records={records}\n                        setRecords={setRecords}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <Records records={records} />\n\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={query}\n                        columns={columns}\n                        rowIndex\n                    />\n\n\n\n                    <AdditionalQueryModal\n                        additionalHandler={additionalHandler}\n                        additionalQuery={additionalQuery}\n                        assignNo={assignNo}\n                        getQueriesData={getQueriesData}\n                    />\n\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default AllQueriesData;\n\n\n\n{/* <div title=\"Send Message\">\n                                                        <Link\n                                                            to={{\n                                                                pathname: `/customer/chatting/${row.id}`,\n                                                                obj: {\n                                                                    message_type: \"4\",\n                                                                    query_No: row.assign_no,\n                                                                    query_id: row.id,\n                                                                    routes: `/customer/queries`\n                                                                }\n                                                            }}\n                                                        >\n                                                            <i\n                                                                class=\"fa fa-comments-o\"\n                                                                style={{\n                                                                    fontSize: 16,\n                                                                    cursor: \"pointer\",\n\n                                                                    color: \"blue\"\n                                                                }}\n                                                            ></i>\n                                                        </Link>\n                                                    </div>\n\n                                                    <div title=\"Send Feedback\"\n                                                        style={{\n                                                            cursor: \"pointer\",\n                                                            marginLeft: \"5px\",\n                                                        }}>\n                                                        <Link\n                                                            to={{\n                                                                pathname: `/customer/feedback/${row.assign_no}`,\n                                                                obj: {\n                                                                    routes: `/customer/queries`\n                                                                }\n                                                            }}\n                                                        >\n                                                            <FeedbackIcon />\n                                                        </Link>\n                                                    </div> */}","/var/www/html/Mazars_Pannel/src/views/QueriesTab/DeclinedQueries.js",["2088","2089","2090","2091","2092","2093","2094","2095","2096","2097","2098","2099"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Records from \"../../components/Records/Records\";\n\n\n\nfunction DeclinedQueries() {\n  const alert = useAlert();\n  const userId = window.localStorage.getItem(\"userid\");\n  const [query, setQuery] = useState([]);\n  const [queriesCount, setCountQueries] = useState(null);\n  const [records, setRecords] = useState([]);\n\n\n  useEffect(() => {\n    getQueriesData();\n  }, []);\n\n  const getQueriesData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/declinedQueries?uid=${JSON.parse(userId)}`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setQuery(res.data.result);\n          setCountQueries(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/customer/my-assingment/${row.id}`}>\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}/\n              {\n                row.status == \"Inprogress Query\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  row.status == \"Declined Query\" ?\n                    <p className=\"declined\">\n\n                      {row.statusdescription}\n                    </p> :\n                    row.status == \"Completed Query\" ?\n                      <p className=\"completed\">\n\n                        {row.statusdescription}\n                      </p> :\n                      null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Expected Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.Exp_Delivery_Date);\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n  ];\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <CustomerFilter\n            setData={setQuery}\n            getData={getQueriesData}\n            id={userId}\n            DeclinedQuery=\"DeclinedQuery\"\n            records={records}\n            setRecords={setRecords}\n          />\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={query}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default DeclinedQueries;\n","/var/www/html/Mazars_Pannel/src/views/PaymentStatus/PaymentStatus.js",["2100","2101","2102","2103","2104"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport Layout from \"../../components/Layout/Layout\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n} from \"reactstrap\";\nimport { useAlert } from \"react-alert\";\nimport { Link, useParams } from \"react-router-dom\";\nimport CommonServices from \"../../common/common\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport PaymentModal from \"./PaymentModal\";\nimport Records from \"../../components/Records/Records\";\n\n\nfunction PaymentStatus() {\n  const alert = useAlert();\n  const { id } = useParams();\n  const userId = window.localStorage.getItem(\"userid\");\n  // const cust_id = window.localStorage.getItem(\"userid\");\n  const [records, setRecords] = useState([]);\n\n  const [pay, setPay] = useState([]);\n  const [count, setCount] = useState(\"\");\n  const [payment, setPayment] = useState([]);\n  const [modal, setModal] = useState(false);\n\n  const [assignNo, setAssignNo] = useState(\"\");\n\n  const [addPaymentModal, setPaymentModal] = useState(false);\n  const paymentHandler = (key) => {\n    console.log(\"key\", key.assign_no);\n    setPaymentModal(!addPaymentModal);\n    setAssignNo(key.assign_no)\n  };\n\n\n\n  useEffect(() => {\n    getPaymentStatus();\n  }, []);\n  // /tl/getUploadedProposals?cid=customer_id\n\n  const getPaymentStatus = () => {\n    axios.get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}`).then((res) => {\n      console.log(res);\n      if (res.data.code === 1) {\n        setPayment(res.data.result);\n        setCount(res.data.result.length);\n        setRecords(res.data.result.length);\n\n      }\n    });\n  };\n\n  const toggle = (key) => {\n    console.log(\"key\", key);\n    setModal(!modal);\n\n    fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\n      method: \"GET\",\n      headers: new Headers({\n        Accept: \"application/vnd.github.cloak-preview\",\n      }),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        setPay(response.payment_detail);\n      })\n      .catch((error) => console.log(error));\n  };\n\n\n  const columns = [\n    {\n      dataField: \"\",\n      text: \"S.No\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"query_created_date\",\n      text: \"Date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.query_created_date);\n        var oldDate = row.query_created_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      dataField: \"assign_no\",\n      text: \"Query No\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link\n              to={{\n                pathname: `/customer/my-assingment/${row.assign_id}`,\n                routes: \"paymentstatus\",\n              }}\n            >\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      dataField: \"parent_id\",\n      text: \"Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"cat_name\",\n      text: \"Sub Category\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      text: \"Date of acceptance of Proposal\",\n      dataField: \"cust_accept_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_accept_date);\n        var oldDate = row.cust_accept_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"status\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n    },\n    {\n      dataField: \"accepted_amount\",\n      text: \"Accepted Amount \",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#21a3ce\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\n      },\n    },\n    {\n      text: \"Amount Paid\",\n      dataField: \"paid_amount\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"#064606\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"#064606\" };\n      },\n    },\n\n    {\n      text: \"Amount Outstanding\",\n      dataField: \"\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n        color: \"darkred\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\", color: \"darkred\" };\n      },\n      formatter: function amountOutstading(cell, row) {\n        console.log(\"dt\", row.paid_amount);\n        console.log(\"dt\", row.accepted_amount);\n        var p = row.paid_amount;\n        var a = row.accepted_amount;\n        return a - p;\n      },\n    },\n    {\n      text: \"Date of Payment\",\n      dataField: \"cust_paid_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.cust_paid_date);\n        var oldDate = row.cust_paid_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Date of Completion\",\n      dataField: \"final_date\",\n      sort: true,\n      style: {\n        fontSize: \"11px\",\n      },\n      headerStyle: () => {\n        return { fontSize: \"11px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.final_date);\n        var oldDate = row.final_date;\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\n          return null;\n        }\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    // {\n    //   text: \"Action\",\n    //   style: {\n    //     fontSize: \"11px\",\n    //   },\n    //   headerStyle: () => {\n    //     return { fontSize: \"11px\" };\n    //   },\n    //   formatter: function (cell, row) {\n    //     return (\n    //       <>\n\n    //         <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100px\" }}>\n    //           <div title=\"Payment History\">\n    //             <i\n    //               class=\"fa fa-credit-card\"\n    //               style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n    //               onClick={() => toggle(row.assign_id)}\n    //             ></i>\n    //           </div>\n    //           <div title=\"schedule call\">\n    //             <Link\n    //               to={{\n    //                 pathname: `/teamleader/schedule`,\n    //               }}\n    //             >\n    //               <i\n    //                 class=\"fa fa-caret-square-o-right\"\n    //                 style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n    //               ></i>\n    //             </Link>\n\n    //           </div>\n    //           <div>\n    //             <i\n    //               class=\"fa fa-exchange\"\n    //               style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\n    //               onClick={() => sendEmail(row.assign_id)}\n    //             ></i>\n    //           </div>\n\n    //           <div style={{ cursor: \"pointer\" }} title=\"Payment decline\">\n    //             <i\n    //               class=\"fa fa-comments-o\"\n    //               style={{ color: \"green\", fontSize: \"16px\" }}\n    //               onClick={() => paymentHandler(row)}\n    //             ></i>\n    //           </div>\n    //         </div>\n    //       </>\n    //     );\n    //   },\n    // },\n  ];\n\n\n  const sendEmail = (key) => {\n    console.log(\"key\", key);\n\n    axios\n      .get(`${baseUrl}/customers/paymentemail?id=${key}`)\n      .then((res) => {\n        console.log(res);\n      });\n  };\n\n\n  return (\n    <>\n      <Layout custDashboard=\"custDashboard\" custUserId={userId}>\n        <Card>\n          <CardHeader>\n            <Row>\n              <Col md=\"7\">\n                <CardTitle tag=\"h4\">Payment Status ({count})</CardTitle>\n              </Col>\n              <Col md=\"5\"></Col>\n            </Row>\n          </CardHeader>\n\n          <CardHeader>\n            <CustomerFilter\n              setData={setPayment}\n              getData={getPaymentStatus}\n              paymentStatus=\"paymentStatus\"\n              setRecords={setRecords}\n              records={records}\n              id={userId}\n            />\n          </CardHeader>\n\n          <CardBody>\n            <Records records={records} />\n            <BootstrapTable\n              bootstrap4\n              keyField=\"id\"\n              data={payment}\n              columns={columns}\n              classes=\"table-responsive\"\n            />\n\n            <PaymentModal\n              paymentHandler={paymentHandler}\n              addPaymentModal={addPaymentModal}\n              assignNo={assignNo}\n            />\n\n\n            <Modal isOpen={modal} fade={false} toggle={toggle}>\n              <ModalHeader toggle={toggle}>History</ModalHeader>\n              <ModalBody>\n                <table class=\"table table-bordered\">\n                  <thead>\n                    <tr>\n                      <th scope=\"row\">S.No</th>\n                      <th scope=\"row\">Date</th>\n                      <th scope=\"row\">Amount</th>\n                    </tr>\n                  </thead>\n                  {pay.length > 0\n                    ? pay.map((p, i) => (\n                      <tbody>\n                        <tr>\n                          <td>{i + 1}</td>\n                          <td>{CommonServices.removeTime(p.payment_date)}</td>\n                          <td>{p.paid_amount}</td>\n                        </tr>\n                      </tbody>\n                    ))\n                    : null}\n                </table>\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"secondary\" onClick={toggle}>\n                  Cancel\n                </Button>\n              </ModalFooter>\n            </Modal>\n\n\n          </CardBody>\n        </Card>\n      </Layout>\n    </>\n  );\n}\n\nexport default PaymentStatus;\n","/var/www/html/Mazars_Pannel/src/views/PaymentStatus/PaymentModal.js",["2105","2106","2107","2108","2109","2110","2111"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Records from \"../../components/Records/Records\";\n\nfunction PaymentModal({\n  addPaymentModal,\n  paymentHandler,\n  assignNo\n}) {\n  const { handleSubmit, register, reset } = useForm();\n  const alert = useAlert();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const userId = window.localStorage.getItem(\"tlkey\");\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n    let formData = new FormData();\n    formData.append(\"uid\", JSON.parse(userId));\n    formData.append(\"assign_no\", assignNo);\n    formData.append(\"notes\", value.notes);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/tl/declinePayment`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n          paymentHandler()\n          alert.success(\" message successfully send!\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\n        <ModalHeader toggle={paymentHandler}>Decline Payment</ModalHeader>\n        <ModalBody>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <textarea\n                    class=\"form-control\"\n                    placeholder=\"Message text here\"\n                    rows=\"5\"\n                    ref={register}\n                    name=\"notes\"\n                  ></textarea>\n\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Submit\n            </button>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default PaymentModal;\n","/var/www/html/Mazars_Pannel/src/views/QueriesTab/InprogressProposal.js",["2112","2113","2114","2115","2116","2117","2118","2119","2120","2121"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Records from \"../../components/Records/Records\";\n\n\n\nfunction InprogressProposal() {\n  const alert = useAlert();\n  const userId = window.localStorage.getItem(\"userid\");\n  const [query, setQuery] = useState([]);\n  const [queriesCount, setCountQueries] = useState(null);\n  const [records, setRecords] = useState([]);\n\n\n  useEffect(() => {\n    getQueriesData();\n  }, []);\n\n\n  const getQueriesData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=2`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setQuery(res.data.result);\n          setCountQueries(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/customer/my-assingment/${row.q_id}`}>\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {row.status}/\n              {\n                row.status == \"Inprogress\" ?\n                  <p className=\"inprogress\">\n                    {row.statusdescription}\n                  </p>\n                  :\n                  null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Expected Delivery Date\",\n      dataField: \"Exp_Delivery_Date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.Exp_Delivery_Date);\n        var oldDate = row.Exp_Delivery_Date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n  ];\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <CustomerFilter\n            setData={setQuery}\n            getData={getQueriesData}\n            id={userId}\n            InprogressQueryProposal=\"InprogressQueryProposal\"\n            records={records}\n            setRecords={setRecords}\n          />\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={query}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default InprogressProposal;\n","/var/www/html/Mazars_Pannel/src/views/QueriesTab/InprogressAllocation.js",["2122","2123","2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport Records from \"../../components/Records/Records\";\n\n\n\nfunction InprogressAllocation() {\n\n  const alert = useAlert();\n  const userId = window.localStorage.getItem(\"userid\");\n  const [query, setQuery] = useState([]);\n  const [queriesCount, setCountQueries] = useState(null);\n  const [records, setRecords] = useState([]);\n\n\n  useEffect(() => {\n    getQueriesData();\n  }, []);\n\n  const getQueriesData = () => {\n    axios\n      .get(\n        `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=1`\n      )\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 1) {\n          setQuery(res.data.result);\n          setCountQueries(res.data.result.length);\n          setRecords(res.data.result.length);\n        }\n      });\n  };\n\n\n  const columns = [\n    {\n      text: \"S.No\",\n      dataField: \"\",\n      formatter: (cellContent, row, rowIndex) => {\n        return rowIndex + 1;\n      },\n      headerStyle: () => {\n        return { fontSize: \"12px\", width: \"50px\" };\n      },\n    },\n    {\n      text: \"Date\",\n      dataField: \"created\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.created);\n        var oldDate = row.created;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n    {\n      text: \"Query No\",\n      dataField: \"assign_no\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        console.log(row);\n        return (\n          <>\n            <Link to={`/customer/my-assingment/${row.id}`}>\n              {row.assign_no}\n            </Link>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Category\",\n      dataField: \"parent_id\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Sub Category\",\n      dataField: \"cat_name\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n    },\n    {\n      text: \"Status\",\n      dataField: \"\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function nameFormatter(cell, row) {\n        return (\n          <>\n            <div>\n              {\n                row.status == \"Inprogress Query\" ?\n                  <div>\n                    {row.status}/\n                    <p className=\"inprogress\">\n                      {row.status_message}\n                    </p>\n                  </div>\n                  :\n                  row.status == \"Inprogress; Allocation\" ?\n                    <p>\n                      {row.status}\n                    </p>\n                    :\n                    row.status == \"Inprogress; Proposals\" ?\n                      <p>\n                        {row.status}\n                      </p>\n                      :\n                      row.status == \"Inprogress; Assignments\" ?\n                        <p>\n                          {row.status}\n                        </p>\n                        :\n                        null\n              }\n            </div>\n          </>\n        );\n      },\n    },\n    {\n      text: \"Expected Delivery Date\",\n      dataField: \"exp_delivery_date\",\n      sort: true,\n      headerStyle: () => {\n        return { fontSize: \"12px\" };\n      },\n      formatter: function dateFormat(cell, row) {\n        console.log(\"dt\", row.exp_delivery_date);\n        var oldDate = row.exp_delivery_date;\n        if (oldDate == null) {\n          return null;\n        }\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\n      },\n    },\n  ];\n\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <CustomerFilter\n            setData={setQuery}\n            getData={getQueriesData}\n            id={userId}\n            InprogressAllocation=\"InprogressAllocation\"\n            records={records}\n            setRecords={setRecords}\n          />\n        </CardHeader>\n        <CardBody>\n          <Records records={records} />\n\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={query}\n            columns={columns}\n            rowIndex\n          />\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default InprogressAllocation;\n","/var/www/html/Mazars_Pannel/src/views/ProposalTab/AllProposal.js",["2135","2136","2137","2138","2139","2140","2141","2142","2143","2144","2145","2146","2147"],"/var/www/html/Mazars_Pannel/src/views/ProposalTab/InprogressProposal.js",["2148","2149","2150","2151","2152","2153","2154","2155","2156","2157","2158","2159","2160","2161"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport ChatComponent from \"./ChatComponent\";\nimport \"./index.css\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport Records from \"../../components/Records/Records\";\n\n\nfunction InprogressProposal() {\n    const alert = useAlert();\n\n    const userId = window.localStorage.getItem(\"userid\");\n    const [proposalDisplay, setProposalDisplay] = useState([]);\n    const [proposalCount, setCountProposal] = useState(\"\");\n    const [records, setRecords] = useState([]);\n\n    const [id, setId] = useState(null);\n    const [reject, setRejected] = useState(true);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const chatHandler = (key) => {\n        console.log(key);\n        setPaymentModal(!addPaymentModal);\n        setId(key.q_id);\n    };\n\n    useEffect(() => {\n        getProposalData();\n    }, []);\n\n    const getProposalData = () => {\n        axios\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=1`)\n            .then((res) => {\n                console.log(res);\n                if (res.data.code === 1) {\n                    setProposalDisplay(res.data.result);\n                    setCountProposal(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"50px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            dataField: \"created\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function (cell, row) {\n                console.log(\"dt\", row.created);\n                var oldDate = row.created;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                console.log(row);\n                return (\n                    <>\n                        <Link to={`/customer/my-assingment/${row.q_id}`}>\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                console.log(\"dt\", row.DateofProposal);\n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                console.log(\"dt\", row.cust_accept_date);\n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {\n                                row.status == \"Inprogress\" ?\n                                    <div>\n                                        {row.status}/\n                                        <p className=\"inprogress\">\n                                            {row.statusdescription}\n                                        </p>\n                                    </div>\n                                    :\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        <div>\n                                            {row.status}\n                                            <p className=\"declined\">\n                                                {row.statusdescription}\n                                            </p>\n                                        </div> :\n                                        row.status == \"Accepted; Proposal\" ?\n                                            <div>\n                                                {row.status}\n                                                <p className=\"completed\">\n                                                    {row.statusdescription}\n                                                </p>\n                                            </div> :\n                                            null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Proposed Amout\",\n            dataField: \"ProposedAmount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Accepted Amount\",\n            dataField: \"accepted_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#064606\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#064606\" };\n            },\n        },\n        {\n            text: \"Amount Outstanding\",\n            dataField: \"\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"darkred\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function amountOutstading(cell, row) {\n                var a = row.accepted_amount;\n                var p = row.paid_amount;\n                return a - p;\n            },\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                console.log(\"dt\", row.cust_paid_date);\n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of Completion\",\n            dataField: \"\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        }\n    ];\n\n    return (\n        <div>\n            <Card>\n                <CardHeader>\n                    <CustomerFilter\n                        setData={setProposalDisplay}\n                        getData={getProposalData}\n                        id={userId}\n                        inprogressProposal=\"inprogressProposal\"\n                        records={records}\n                        setRecords={setRecords}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <Records records={records} />\n\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposalDisplay}\n                        columns={columns}\n                        classes=\"table-responsive\"\n                    />\n                    <ChatComponent\n                        chatHandler={chatHandler}\n                        addPaymentModal={addPaymentModal}\n                        id={id}\n                        getProposalData={getProposalData}\n                    />\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default InprogressProposal;\n","/var/www/html/Mazars_Pannel/src/views/ProposalTab/AcceptedProposal.js",["2162","2163","2164","2165","2166","2167","2168","2169","2170","2171","2172","2173","2174","2175"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout/Layout\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Row,\n    Col,\n    Table,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport ChatComponent from \"./ChatComponent\";\nimport \"./index.css\";\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport Records from \"../../components/Records/Records\";\n\n\nfunction AcceptedProposal() {\n    const alert = useAlert();\n\n    const userId = window.localStorage.getItem(\"userid\");\n    const [proposalDisplay, setProposalDisplay] = useState([]);\n    const [proposalCount, setCountProposal] = useState(\"\");\n    const [records, setRecords] = useState([]);\n\n    const [id, setId] = useState(null);\n    const [reject, setRejected] = useState(true);\n\n    const [addPaymentModal, setPaymentModal] = useState(false);\n    const chatHandler = (key) => {\n        console.log(key);\n        setPaymentModal(!addPaymentModal);\n        setId(key.q_id);\n    };\n\n    useEffect(() => {\n        getProposalData();\n    }, []);\n\n    const getProposalData = () => {\n        axios\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=2`)\n            .then((res) => {\n                console.log(res);\n                if (res.data.code === 1) {\n                    setProposalDisplay(res.data.result);\n                    setCountProposal(res.data.result.length);\n                    setRecords(res.data.result.length);\n\n                }\n            });\n    };\n\n\n\n\n    const columns = [\n        {\n            text: \"S.No\",\n            dataField: \"\",\n            style: {\n                fontSize: \"11px\",\n            },\n            formatter: (cellContent, row, rowIndex) => {\n                return rowIndex + 1;\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", width: \"50px\" };\n            },\n        },\n        {\n            text: \"Date\",\n            dataField: \"created\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function (cell, row) {\n                console.log(\"dt\", row.created);\n                var oldDate = row.created;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Query No\",\n            dataField: \"assign_no\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                console.log(row);\n                return (\n                    <>\n                        <Link to={`/customer/my-assingment/${row.q_id}`}>\n                            {row.assign_no}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Category\",\n            dataField: \"parent_id\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Sub Category\",\n            dataField: \"cat_name\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Date of Proposal\",\n            dataField: \"DateofProposal\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                console.log(\"dt\", row.DateofProposal);\n                var oldDate = row.DateofProposal;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of acceptance of Proposal\",\n            dataField: \"cust_accept_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                console.log(\"dt\", row.cust_accept_date);\n                var oldDate = row.cust_accept_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Status\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function nameFormatter(cell, row) {\n                return (\n                    <>\n                        <div>\n                            {\n                                row.status == \"Inprogress\" ?\n                                    <div>\n                                        {row.status}/\n                                        <p className=\"inprogress\">\n                                            {row.statusdescription}\n                                        </p>\n                                    </div>\n                                    :\n                                    row.status == \"Customer Declined; Proposal\" ?\n                                        <div>\n                                            {row.status}\n                                            <p className=\"declined\">\n                                                {row.statusdescription}\n                                            </p>\n                                        </div> :\n                                        row.status == \"Accepted; Proposal\" ?\n                                            <div>\n                                                {row.status}\n                                                <p className=\"completed\">\n                                                    {row.statusdescription}\n                                                </p>\n                                            </div> :\n                                            null\n                            }\n                        </div>\n                    </>\n                );\n            },\n        },\n        {\n            text: \"Proposed Amout\",\n            dataField: \"ProposedAmount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        },\n        {\n            text: \"Accepted Amount\",\n            dataField: \"accepted_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#21a3ce\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\n            },\n        },\n        {\n            text: \"Amount Paid\",\n            dataField: \"paid_amount\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"#064606\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"#064606\" };\n            },\n        },\n        {\n            text: \"Amount Outstanding\",\n            dataField: \"\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n                color: \"darkred\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\", color: \"darkred\" };\n            },\n            formatter: function amountOutstading(cell, row) {\n                var a = row.accepted_amount;\n                var p = row.paid_amount;\n                return a - p;\n            },\n        },\n        {\n            text: \"Date of Payment\",\n            dataField: \"cust_paid_date\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n            formatter: function dateFormat(cell, row) {\n                console.log(\"dt\", row.cust_paid_date);\n                var oldDate = row.cust_paid_date;\n                if (oldDate == null) {\n                    return null;\n                }\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\n            },\n        },\n        {\n            text: \"Date of Completion\",\n            dataField: \"\",\n            sort: true,\n            style: {\n                fontSize: \"11px\",\n            },\n            headerStyle: () => {\n                return { fontSize: \"11px\" };\n            },\n        }\n    ];\n\n    return (\n        <div>\n            <Card>\n                <CardHeader>\n                    <CustomerFilter\n                        setData={setProposalDisplay}\n                        getData={getProposalData}\n                        id={userId}\n                        acceptedProposal=\"acceptedProposal\"\n                        records={records}\n                        setRecords={setRecords}\n                    />\n                </CardHeader>\n                <CardBody>\n                    <Records records={records} />\n\n                    <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={proposalDisplay}\n                        columns={columns}\n                        classes=\"table-responsive\"\n                    />\n                    <ChatComponent\n                        chatHandler={chatHandler}\n                        addPaymentModal={addPaymentModal}\n                        id={id}\n                        getProposalData={getProposalData}\n                    />\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default AcceptedProposal;\n","/var/www/html/Mazars_Pannel/src/views/ProposalTab/DeclinedProposal.js",["2176","2177","2178","2179","2180","2181","2182","2183","2184","2185","2186","2187","2188","2189"],"/var/www/html/Mazars_Pannel/src/views/AssignmentTab/ViewAllReport.js",["2190","2191","2192","2193","2194","2195","2196","2197","2198","2199","2200","2201","2202","2203"],"/var/www/html/Mazars_Pannel/src/common/Alerts.js",["2204"],"/var/www/html/Mazars_Pannel/src/components/Records/Records.js",[],"/var/www/html/Mazars_Pannel/src/views/QueriesTab/AdditionalQueryModal.js",["2205","2206","2207","2208","2209","2210"],"import React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../config/config\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport Alerts from \"../../common/Alerts\";\nimport CommonServices from \"../../common/common\";\n\n\n\nfunction AdditionalQueryModal({\n  additionalQuery,\n  additionalHandler,\n  assignNo,\n  getQueriesData,\n}) {\n  const { handleSubmit, register } = useForm();\n\n\n  const onSubmit = (value) => {\n    console.log(\"value :\", value);\n\n\n    let formData = new FormData();\n    var uploadImg = value.p_upload;\n    if (uploadImg) {\n      for (var i = 0; i < uploadImg.length; i++) {\n        let file = uploadImg[i];\n        formData.append(\"upload[]\", file);\n      }\n    }\n\n    formData.append(\"assign_no\", assignNo);\n    // formData.append(\"upload\", value.p_upload[0]);\n\n    axios({\n      method: \"POST\",\n      url: `${baseUrl}/customers/PostAdditionalQuery`,\n      data: formData,\n    })\n      .then(function (response) {\n        console.log(\"res-\", response);\n        if (response.data.code === 1) {\n\n          var variable = \"Document Uploaded Successfully\"\n          Alerts.SuccessNormal(variable)\n          additionalHandler();\n          getQueriesData();\n        }\n      })\n      .catch((error) => {\n        console.log(\"erroror - \", error);\n      });\n  };\n\n\n  return (\n    <div>\n      <Modal isOpen={additionalQuery} toggle={additionalHandler} size=\"md\">\n        <ModalHeader toggle={additionalHandler}>UPLOAD DOCUMENTS</ModalHeader>\n        <ModalBody>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Upload Your Document</label>\n              <input\n                type=\"file\"\n                name=\"p_upload\"\n                ref={register}\n                className=\"form-control-file\"\n                multiple\n              />\n            </div>\n\n            <div class=\"modal-footer\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n}\n\nexport default AdditionalQueryModal;\n","/var/www/html/Mazars_Pannel/src/pages/Admin/AssignmentTab/ViewAllReport.js",["2211","2212","2213","2214","2215","2216","2217","2218","2219","2220","2221","2222","2223","2224"],{"ruleId":"2225","replacedBy":"2226"},{"ruleId":"2227","replacedBy":"2228"},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":26},{"ruleId":"2229","severity":1,"message":"2233","line":129,"column":8,"nodeType":"2231","messageId":"2232","endLine":129,"endColumn":24},{"ruleId":"2229","severity":1,"message":"2234","line":130,"column":8,"nodeType":"2231","messageId":"2232","endLine":130,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2235","line":131,"column":8,"nodeType":"2231","messageId":"2232","endLine":131,"endColumn":22},{"ruleId":"2229","severity":1,"message":"2236","line":132,"column":8,"nodeType":"2231","messageId":"2232","endLine":132,"endColumn":22},{"ruleId":"2237","severity":1,"message":"2238","line":281,"column":1,"nodeType":"2239","messageId":"2240","endLine":295,"endColumn":78},{"ruleId":"2237","severity":1,"message":"2238","line":296,"column":1,"nodeType":"2239","messageId":"2240","endLine":296,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2241","line":37,"column":9,"nodeType":"2231","messageId":"2232","endLine":37,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2242","line":44,"column":10,"nodeType":"2231","messageId":"2232","endLine":44,"endColumn":14},{"ruleId":"2243","severity":1,"message":"2244","line":137,"column":26,"nodeType":"2245","messageId":"2246","endLine":137,"endColumn":28},{"ruleId":"2247","severity":1,"message":"2248","line":138,"column":19,"nodeType":"2249","messageId":"2250","endLine":138,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2251","line":6,"column":10,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2252","line":7,"column":13,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2253","line":17,"column":36,"nodeType":"2231","messageId":"2232","endLine":17,"endColumn":42},{"ruleId":"2229","severity":1,"message":"2251","line":7,"column":10,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2252","line":8,"column":13,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2253","line":18,"column":36,"nodeType":"2231","messageId":"2232","endLine":18,"endColumn":42},{"ruleId":"2229","severity":1,"message":"2230","line":2,"column":27,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2241","line":27,"column":9,"nodeType":"2231","messageId":"2232","endLine":27,"endColumn":14},{"ruleId":"2237","severity":1,"message":"2238","line":173,"column":1,"nodeType":"2239","messageId":"2240","endLine":177,"endColumn":2},{"ruleId":"2229","severity":1,"message":"2254","line":4,"column":10,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2256","line":116,"column":6,"nodeType":"2257","endLine":116,"endColumn":8,"suggestions":"2258"},{"ruleId":"2229","severity":1,"message":"2254","line":3,"column":10,"nodeType":"2231","messageId":"2232","endLine":3,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2259","line":129,"column":6,"nodeType":"2257","endLine":129,"endColumn":16,"suggestions":"2260"},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2251","line":5,"column":10,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2261","line":7,"column":19,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":27},{"ruleId":"2229","severity":1,"message":"2252","line":8,"column":13,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2262","line":13,"column":3,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":11},{"ruleId":"2229","severity":1,"message":"2263","line":14,"column":3,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":17,"column":3,"nodeType":"2231","messageId":"2232","endLine":17,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2241","line":25,"column":9,"nodeType":"2231","messageId":"2232","endLine":25,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2253","line":29,"column":35,"nodeType":"2231","messageId":"2232","endLine":29,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2265","line":105,"column":9,"nodeType":"2231","messageId":"2232","endLine":105,"endColumn":12},{"ruleId":"2237","severity":1,"message":"2238","line":416,"column":1,"nodeType":"2239","messageId":"2240","endLine":447,"endColumn":2},{"ruleId":"2237","severity":1,"message":"2238","line":455,"column":1,"nodeType":"2239","messageId":"2240","endLine":466,"endColumn":2},{"ruleId":"2237","severity":1,"message":"2238","line":467,"column":1,"nodeType":"2239","messageId":"2240","endLine":478,"endColumn":2},{"ruleId":"2237","severity":1,"message":"2238","line":479,"column":1,"nodeType":"2239","messageId":"2240","endLine":534,"endColumn":2},{"ruleId":"2229","severity":1,"message":"2230","line":2,"column":27,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2251","line":3,"column":10,"nodeType":"2231","messageId":"2232","endLine":3,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2252","line":4,"column":13,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2266","line":9,"column":41,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":52},{"ruleId":"2229","severity":1,"message":"2241","line":16,"column":9,"nodeType":"2231","messageId":"2232","endLine":16,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2253","line":17,"column":35,"nodeType":"2231","messageId":"2232","endLine":17,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2265","line":93,"column":9,"nodeType":"2231","messageId":"2232","endLine":93,"endColumn":12},{"ruleId":"2237","severity":1,"message":"2238","line":419,"column":1,"nodeType":"2239","messageId":"2240","endLine":440,"endColumn":2},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2268","line":8,"column":10,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":18},{"ruleId":"2237","severity":1,"message":"2238","line":142,"column":1,"nodeType":"2239","messageId":"2240","endLine":154,"endColumn":34},{"ruleId":"2229","severity":1,"message":"2262","line":6,"column":3,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":11},{"ruleId":"2229","severity":1,"message":"2263","line":7,"column":3,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":10,"column":3,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":8},{"ruleId":"2255","severity":1,"message":"2269","line":36,"column":6,"nodeType":"2257","endLine":36,"endColumn":8,"suggestions":"2270"},{"ruleId":"2247","severity":1,"message":"2248","line":118,"column":34,"nodeType":"2249","messageId":"2250","endLine":118,"endColumn":36},{"ruleId":"2247","severity":1,"message":"2248","line":121,"column":34,"nodeType":"2249","messageId":"2250","endLine":121,"endColumn":36},{"ruleId":"2247","severity":1,"message":"2248","line":125,"column":34,"nodeType":"2249","messageId":"2250","endLine":125,"endColumn":36},{"ruleId":"2247","severity":1,"message":"2248","line":129,"column":34,"nodeType":"2249","messageId":"2250","endLine":129,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2264","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2271","line":19,"column":8,"nodeType":"2231","messageId":"2232","endLine":19,"endColumn":20},{"ruleId":"2229","severity":1,"message":"2241","line":32,"column":9,"nodeType":"2231","messageId":"2232","endLine":32,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2272","line":38,"column":20,"nodeType":"2231","messageId":"2232","endLine":38,"endColumn":31},{"ruleId":"2229","severity":1,"message":"2273","line":39,"column":21,"nodeType":"2231","messageId":"2232","endLine":39,"endColumn":33},{"ruleId":"2229","severity":1,"message":"2274","line":40,"column":24,"nodeType":"2231","messageId":"2232","endLine":40,"endColumn":39},{"ruleId":"2229","severity":1,"message":"2275","line":41,"column":24,"nodeType":"2231","messageId":"2232","endLine":41,"endColumn":39},{"ruleId":"2255","severity":1,"message":"2276","line":104,"column":6,"nodeType":"2257","endLine":104,"endColumn":8,"suggestions":"2277"},{"ruleId":"2247","severity":1,"message":"2248","line":217,"column":40,"nodeType":"2249","messageId":"2250","endLine":217,"endColumn":42},{"ruleId":"2247","severity":1,"message":"2248","line":234,"column":34,"nodeType":"2249","messageId":"2250","endLine":234,"endColumn":36},{"ruleId":"2278","severity":1,"message":"2279","line":236,"column":19,"nodeType":"2280","endLine":239,"endColumn":20},{"ruleId":"2278","severity":1,"message":"2279","line":246,"column":19,"nodeType":"2280","endLine":249,"endColumn":20},{"ruleId":"2247","severity":1,"message":"2248","line":258,"column":32,"nodeType":"2249","messageId":"2250","endLine":258,"endColumn":34},{"ruleId":"2229","severity":1,"message":"2281","line":447,"column":12,"nodeType":"2231","messageId":"2232","endLine":447,"endColumn":24},{"ruleId":"2229","severity":1,"message":"2268","line":5,"column":10,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2282","line":38,"column":6,"nodeType":"2257","endLine":38,"endColumn":8,"suggestions":"2283"},{"ruleId":"2247","severity":1,"message":"2248","line":108,"column":34,"nodeType":"2249","messageId":"2250","endLine":108,"endColumn":36},{"ruleId":"2247","severity":1,"message":"2248","line":111,"column":34,"nodeType":"2249","messageId":"2250","endLine":111,"endColumn":36},{"ruleId":"2247","severity":1,"message":"2248","line":114,"column":34,"nodeType":"2249","messageId":"2250","endLine":114,"endColumn":36},{"ruleId":"2247","severity":1,"message":"2248","line":118,"column":34,"nodeType":"2249","messageId":"2250","endLine":118,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2284","line":3,"column":8,"nodeType":"2231","messageId":"2232","endLine":3,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2254","line":6,"column":10,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":14},{"ruleId":"2237","severity":1,"message":"2238","line":395,"column":1,"nodeType":"2239","messageId":"2240","endLine":605,"endColumn":5},{"ruleId":"2229","severity":1,"message":"2285","line":11,"column":8,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2241","line":26,"column":9,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2286","line":28,"column":35,"nodeType":"2231","messageId":"2232","endLine":28,"endColumn":40},{"ruleId":"2229","severity":1,"message":"2241","line":30,"column":9,"nodeType":"2231","messageId":"2232","endLine":30,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2286","line":33,"column":35,"nodeType":"2231","messageId":"2232","endLine":33,"endColumn":40},{"ruleId":"2229","severity":1,"message":"2287","line":43,"column":10,"nodeType":"2231","messageId":"2232","endLine":43,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2262","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":11},{"ruleId":"2229","severity":1,"message":"2263","line":13,"column":3,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":14,"column":3,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":15,"column":3,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":16,"column":3,"nodeType":"2231","messageId":"2232","endLine":16,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2290","line":17,"column":3,"nodeType":"2231","messageId":"2232","endLine":17,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2241","line":38,"column":9,"nodeType":"2231","messageId":"2232","endLine":38,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2286","line":39,"column":35,"nodeType":"2231","messageId":"2232","endLine":39,"endColumn":40},{"ruleId":"2229","severity":1,"message":"2287","line":51,"column":10,"nodeType":"2231","messageId":"2232","endLine":51,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2291","line":8,"column":3,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":7},{"ruleId":"2229","severity":1,"message":"2292","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2262","line":10,"column":3,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":11},{"ruleId":"2229","severity":1,"message":"2263","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":13,"column":3,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":14,"column":3,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2293","line":22,"column":9,"nodeType":"2231","messageId":"2232","endLine":22,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2259","line":160,"column":6,"nodeType":"2257","endLine":160,"endColumn":16,"suggestions":"2294"},{"ruleId":"2237","severity":1,"message":"2238","line":229,"column":1,"nodeType":"2239","messageId":"2240","endLine":387,"endColumn":2},{"ruleId":"2237","severity":1,"message":"2238","line":406,"column":1,"nodeType":"2239","messageId":"2240","endLine":413,"endColumn":2},{"ruleId":"2247","severity":1,"message":"2248","line":119,"column":34,"nodeType":"2249","messageId":"2250","endLine":119,"endColumn":36},{"ruleId":"2247","severity":1,"message":"2248","line":122,"column":34,"nodeType":"2249","messageId":"2250","endLine":122,"endColumn":36},{"ruleId":"2247","severity":1,"message":"2248","line":126,"column":34,"nodeType":"2249","messageId":"2250","endLine":126,"endColumn":36},{"ruleId":"2247","severity":1,"message":"2248","line":130,"column":34,"nodeType":"2249","messageId":"2250","endLine":130,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2295","line":3,"column":10,"nodeType":"2231","messageId":"2232","endLine":3,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2251","line":4,"column":10,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2252","line":5,"column":13,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2262","line":13,"column":3,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":11},{"ruleId":"2229","severity":1,"message":"2263","line":14,"column":3,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":15,"column":3,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":16,"column":3,"nodeType":"2231","messageId":"2232","endLine":16,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":17,"column":3,"nodeType":"2231","messageId":"2232","endLine":17,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2290","line":18,"column":3,"nodeType":"2231","messageId":"2232","endLine":18,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2241","line":29,"column":9,"nodeType":"2231","messageId":"2232","endLine":29,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2287","line":37,"column":10,"nodeType":"2231","messageId":"2232","endLine":37,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2296","line":37,"column":18,"nodeType":"2231","messageId":"2232","endLine":37,"endColumn":27},{"ruleId":"2229","severity":1,"message":"2295","line":3,"column":10,"nodeType":"2231","messageId":"2232","endLine":3,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2251","line":4,"column":10,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2252","line":5,"column":13,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2262","line":13,"column":3,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":11},{"ruleId":"2229","severity":1,"message":"2263","line":14,"column":3,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":15,"column":3,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":16,"column":3,"nodeType":"2231","messageId":"2232","endLine":16,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":17,"column":3,"nodeType":"2231","messageId":"2232","endLine":17,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2290","line":18,"column":3,"nodeType":"2231","messageId":"2232","endLine":18,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2297","line":20,"column":8,"nodeType":"2231","messageId":"2232","endLine":20,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2241","line":28,"column":9,"nodeType":"2231","messageId":"2232","endLine":28,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2287","line":36,"column":10,"nodeType":"2231","messageId":"2232","endLine":36,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2296","line":36,"column":18,"nodeType":"2231","messageId":"2232","endLine":36,"endColumn":27},{"ruleId":"2255","severity":1,"message":"2298","line":46,"column":6,"nodeType":"2257","endLine":46,"endColumn":10,"suggestions":"2299"},{"ruleId":"2237","severity":1,"message":"2238","line":269,"column":1,"nodeType":"2239","messageId":"2240","endLine":362,"endColumn":2},{"ruleId":"2229","severity":1,"message":"2300","line":6,"column":27,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":35},{"ruleId":"2229","severity":1,"message":"2262","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":11},{"ruleId":"2229","severity":1,"message":"2263","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":15,"column":3,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2290","line":16,"column":3,"nodeType":"2231","messageId":"2232","endLine":16,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2241","line":21,"column":9,"nodeType":"2231","messageId":"2232","endLine":21,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2253","line":22,"column":35,"nodeType":"2231","messageId":"2232","endLine":22,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2286","line":22,"column":43,"nodeType":"2231","messageId":"2232","endLine":22,"endColumn":48},{"ruleId":"2229","severity":1,"message":"2301","line":40,"column":9,"nodeType":"2231","messageId":"2232","endLine":40,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2302","line":53,"column":6,"nodeType":"2257","endLine":53,"endColumn":8,"suggestions":"2303"},{"ruleId":"2255","severity":1,"message":"2304","line":80,"column":6,"nodeType":"2257","endLine":80,"endColumn":15,"suggestions":"2305"},{"ruleId":"2247","severity":1,"message":"2248","line":103,"column":22,"nodeType":"2249","messageId":"2250","endLine":103,"endColumn":24},{"ruleId":"2229","severity":1,"message":"2306","line":111,"column":9,"nodeType":"2231","messageId":"2232","endLine":111,"endColumn":24},{"ruleId":"2229","severity":1,"message":"2307","line":152,"column":9,"nodeType":"2231","messageId":"2232","endLine":152,"endColumn":29},{"ruleId":"2247","severity":1,"message":"2248","line":157,"column":13,"nodeType":"2249","messageId":"2250","endLine":157,"endColumn":15},{"ruleId":"2247","severity":1,"message":"2248","line":165,"column":20,"nodeType":"2249","messageId":"2250","endLine":165,"endColumn":22},{"ruleId":"2247","severity":1,"message":"2248","line":105,"column":34,"nodeType":"2249","messageId":"2250","endLine":105,"endColumn":36},{"ruleId":"2247","severity":1,"message":"2248","line":108,"column":34,"nodeType":"2249","messageId":"2250","endLine":108,"endColumn":36},{"ruleId":"2247","severity":1,"message":"2248","line":111,"column":34,"nodeType":"2249","messageId":"2250","endLine":111,"endColumn":36},{"ruleId":"2247","severity":1,"message":"2248","line":115,"column":34,"nodeType":"2249","messageId":"2250","endLine":115,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2264","line":10,"column":3,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2241","line":21,"column":9,"nodeType":"2231","messageId":"2232","endLine":21,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2264","line":15,"column":3,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2241","line":20,"column":9,"nodeType":"2231","messageId":"2232","endLine":20,"endColumn":14},{"ruleId":"2237","severity":1,"message":"2238","line":205,"column":1,"nodeType":"2239","messageId":"2240","endLine":254,"endColumn":2},{"ruleId":"2229","severity":1,"message":"2264","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2241","line":21,"column":9,"nodeType":"2231","messageId":"2232","endLine":21,"endColumn":14},{"ruleId":"2247","severity":1,"message":"2248","line":96,"column":32,"nodeType":"2249","messageId":"2250","endLine":96,"endColumn":34},{"ruleId":"2229","severity":1,"message":"2254","line":6,"column":10,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2308","line":50,"column":5,"nodeType":"2231","messageId":"2232","endLine":50,"endColumn":26},{"ruleId":"2229","severity":1,"message":"2309","line":50,"column":28,"nodeType":"2231","messageId":"2232","endLine":50,"endColumn":47},{"ruleId":"2229","severity":1,"message":"2310","line":51,"column":5,"nodeType":"2231","messageId":"2232","endLine":51,"endColumn":26},{"ruleId":"2229","severity":1,"message":"2311","line":52,"column":23,"nodeType":"2231","messageId":"2232","endLine":52,"endColumn":43},{"ruleId":"2229","severity":1,"message":"2312","line":53,"column":5,"nodeType":"2231","messageId":"2232","endLine":53,"endColumn":28},{"ruleId":"2229","severity":1,"message":"2313","line":53,"column":30,"nodeType":"2231","messageId":"2232","endLine":53,"endColumn":56},{"ruleId":"2229","severity":1,"message":"2314","line":54,"column":5,"nodeType":"2231","messageId":"2232","endLine":54,"endColumn":30},{"ruleId":"2229","severity":1,"message":"2315","line":56,"column":5,"nodeType":"2231","messageId":"2232","endLine":56,"endColumn":27},{"ruleId":"2229","severity":1,"message":"2316","line":57,"column":15,"nodeType":"2231","messageId":"2232","endLine":57,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2317","line":63,"column":15,"nodeType":"2231","messageId":"2232","endLine":63,"endColumn":32},{"ruleId":"2229","severity":1,"message":"2318","line":63,"column":34,"nodeType":"2231","messageId":"2232","endLine":63,"endColumn":46},{"ruleId":"2229","severity":1,"message":"2319","line":63,"column":48,"nodeType":"2231","messageId":"2232","endLine":63,"endColumn":64},{"ruleId":"2229","severity":1,"message":"2320","line":64,"column":5,"nodeType":"2231","messageId":"2232","endLine":64,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2321","line":64,"column":19,"nodeType":"2231","messageId":"2232","endLine":64,"endColumn":37},{"ruleId":"2255","severity":1,"message":"2322","line":150,"column":6,"nodeType":"2257","endLine":150,"endColumn":8,"suggestions":"2323"},{"ruleId":"2229","severity":1,"message":"2285","line":11,"column":8,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2241","line":25,"column":9,"nodeType":"2231","messageId":"2232","endLine":25,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2286","line":26,"column":35,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":40},{"ruleId":"2229","severity":1,"message":"2254","line":4,"column":10,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2264","line":14,"column":3,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":8},{"ruleId":"2255","severity":1,"message":"2324","line":27,"column":6,"nodeType":"2257","endLine":27,"endColumn":8,"suggestions":"2325"},{"ruleId":"2229","severity":1,"message":"2326","line":78,"column":9,"nodeType":"2231","messageId":"2232","endLine":78,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2262","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":11},{"ruleId":"2229","severity":1,"message":"2263","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":15,"column":3,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2290","line":16,"column":3,"nodeType":"2231","messageId":"2232","endLine":16,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2253","line":21,"column":35,"nodeType":"2231","messageId":"2232","endLine":21,"endColumn":41},{"ruleId":"2255","severity":1,"message":"2327","line":31,"column":6,"nodeType":"2257","endLine":31,"endColumn":8,"suggestions":"2328"},{"ruleId":"2247","severity":1,"message":"2248","line":114,"column":38,"nodeType":"2249","messageId":"2250","endLine":114,"endColumn":40},{"ruleId":"2247","severity":1,"message":"2248","line":115,"column":35,"nodeType":"2249","messageId":"2250","endLine":115,"endColumn":37},{"ruleId":"2247","severity":1,"message":"2248","line":116,"column":32,"nodeType":"2249","messageId":"2250","endLine":116,"endColumn":34},{"ruleId":"2247","severity":1,"message":"2248","line":117,"column":36,"nodeType":"2249","messageId":"2250","endLine":117,"endColumn":38},{"ruleId":"2247","severity":1,"message":"2248","line":118,"column":31,"nodeType":"2249","messageId":"2250","endLine":118,"endColumn":33},{"ruleId":"2229","severity":1,"message":"2262","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":11},{"ruleId":"2229","severity":1,"message":"2263","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":15,"column":3,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2290","line":16,"column":3,"nodeType":"2231","messageId":"2232","endLine":16,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2241","line":21,"column":9,"nodeType":"2231","messageId":"2232","endLine":21,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2253","line":22,"column":35,"nodeType":"2231","messageId":"2232","endLine":22,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2293","line":25,"column":9,"nodeType":"2231","messageId":"2232","endLine":25,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2329","line":40,"column":9,"nodeType":"2231","messageId":"2232","endLine":40,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2330","line":54,"column":6,"nodeType":"2257","endLine":54,"endColumn":8,"suggestions":"2331"},{"ruleId":"2255","severity":1,"message":"2304","line":83,"column":6,"nodeType":"2257","endLine":83,"endColumn":15,"suggestions":"2332"},{"ruleId":"2247","severity":1,"message":"2248","line":107,"column":22,"nodeType":"2249","messageId":"2250","endLine":107,"endColumn":24},{"ruleId":"2229","severity":1,"message":"2251","line":5,"column":10,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2252","line":6,"column":13,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2253","line":27,"column":35,"nodeType":"2231","messageId":"2232","endLine":27,"endColumn":41},{"ruleId":"2255","severity":1,"message":"2333","line":28,"column":6,"nodeType":"2257","endLine":28,"endColumn":8,"suggestions":"2334"},{"ruleId":"2247","severity":1,"message":"2248","line":135,"column":29,"nodeType":"2249","messageId":"2250","endLine":135,"endColumn":31},{"ruleId":"2247","severity":1,"message":"2248","line":135,"column":69,"nodeType":"2249","messageId":"2250","endLine":135,"endColumn":71},{"ruleId":"2247","severity":1,"message":"2248","line":146,"column":32,"nodeType":"2249","messageId":"2250","endLine":146,"endColumn":34},{"ruleId":"2335","severity":1,"message":"2336","line":164,"column":66,"nodeType":"2337","messageId":"2250","endLine":164,"endColumn":71},{"ruleId":"2237","severity":1,"message":"2238","line":243,"column":1,"nodeType":"2239","messageId":"2240","endLine":245,"endColumn":2},{"ruleId":"2229","severity":1,"message":"2253","line":13,"column":35,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2286","line":13,"column":43,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":48},{"ruleId":"2229","severity":1,"message":"2293","line":11,"column":9,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2259","line":146,"column":6,"nodeType":"2257","endLine":146,"endColumn":16,"suggestions":"2338"},{"ruleId":"2229","severity":1,"message":"2254","line":3,"column":10,"nodeType":"2231","messageId":"2232","endLine":3,"endColumn":14},{"ruleId":"2339","severity":1,"message":"2340","line":35,"column":15,"nodeType":"2231","messageId":"2341","endLine":35,"endColumn":19},{"ruleId":"2229","severity":1,"message":"2342","line":3,"column":10,"nodeType":"2231","messageId":"2232","endLine":3,"endColumn":15},{"ruleId":"2343","severity":1,"message":"2344","line":33,"column":15,"nodeType":"2280","endLine":33,"endColumn":48},{"ruleId":"2229","severity":1,"message":"2253","line":12,"column":35,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2286","line":12,"column":43,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":48},{"ruleId":"2229","severity":1,"message":"2263","line":6,"column":3,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":7,"column":3,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":8,"column":3,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2295","line":13,"column":10,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2345","line":15,"column":10,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2346","line":27,"column":6,"nodeType":"2257","endLine":27,"endColumn":8,"suggestions":"2347"},{"ruleId":"2229","severity":1,"message":"2263","line":6,"column":3,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":7,"column":3,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":8,"column":3,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":8},{"ruleId":"2255","severity":1,"message":"2348","line":27,"column":6,"nodeType":"2257","endLine":27,"endColumn":8,"suggestions":"2349"},{"ruleId":"2247","severity":1,"message":"2248","line":151,"column":32,"nodeType":"2249","messageId":"2250","endLine":151,"endColumn":34},{"ruleId":"2229","severity":1,"message":"2350","line":4,"column":16,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":26},{"ruleId":"2255","severity":1,"message":"2351","line":40,"column":6,"nodeType":"2257","endLine":40,"endColumn":8,"suggestions":"2352"},{"ruleId":"2237","severity":1,"message":"2238","line":256,"column":1,"nodeType":"2239","messageId":"2240","endLine":258,"endColumn":2},{"ruleId":"2229","severity":1,"message":"2263","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":10,"column":3,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":8},{"ruleId":"2247","severity":1,"message":"2248","line":127,"column":28,"nodeType":"2249","messageId":"2250","endLine":127,"endColumn":30},{"ruleId":"2247","severity":1,"message":"2248","line":133,"column":30,"nodeType":"2249","messageId":"2250","endLine":133,"endColumn":32},{"ruleId":"2247","severity":1,"message":"2248","line":138,"column":32,"nodeType":"2249","messageId":"2250","endLine":138,"endColumn":34},{"ruleId":"2237","severity":1,"message":"2238","line":220,"column":1,"nodeType":"2239","messageId":"2240","endLine":229,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2263","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":10,"column":3,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2353","line":28,"column":11,"nodeType":"2231","messageId":"2232","endLine":28,"endColumn":23},{"ruleId":"2229","severity":1,"message":"2354","line":28,"column":25,"nodeType":"2231","messageId":"2232","endLine":28,"endColumn":33},{"ruleId":"2229","severity":1,"message":"2253","line":28,"column":35,"nodeType":"2231","messageId":"2232","endLine":28,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2286","line":28,"column":43,"nodeType":"2231","messageId":"2232","endLine":28,"endColumn":48},{"ruleId":"2229","severity":1,"message":"2355","line":29,"column":11,"nodeType":"2231","messageId":"2232","endLine":29,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2356","line":29,"column":19,"nodeType":"2231","messageId":"2232","endLine":29,"endColumn":27},{"ruleId":"2229","severity":1,"message":"2357","line":32,"column":10,"nodeType":"2231","messageId":"2232","endLine":32,"endColumn":22},{"ruleId":"2229","severity":1,"message":"2358","line":32,"column":24,"nodeType":"2231","messageId":"2232","endLine":32,"endColumn":39},{"ruleId":"2247","severity":1,"message":"2248","line":147,"column":28,"nodeType":"2249","messageId":"2250","endLine":147,"endColumn":30},{"ruleId":"2237","severity":1,"message":"2238","line":261,"column":1,"nodeType":"2239","messageId":"2240","endLine":267,"endColumn":2},{"ruleId":"2229","severity":1,"message":"2263","line":8,"column":3,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":10,"column":3,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2359","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2360","line":13,"column":3,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2361","line":14,"column":3,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2266","line":15,"column":3,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2362","line":16,"column":3,"nodeType":"2231","messageId":"2232","endLine":16,"endColumn":9},{"ruleId":"2229","severity":1,"message":"2295","line":19,"column":10,"nodeType":"2231","messageId":"2232","endLine":19,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2345","line":21,"column":10,"nodeType":"2231","messageId":"2232","endLine":21,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2285","line":25,"column":8,"nodeType":"2231","messageId":"2232","endLine":25,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2357","line":32,"column":10,"nodeType":"2231","messageId":"2232","endLine":32,"endColumn":22},{"ruleId":"2229","severity":1,"message":"2358","line":32,"column":24,"nodeType":"2231","messageId":"2232","endLine":32,"endColumn":39},{"ruleId":"2247","severity":1,"message":"2248","line":165,"column":28,"nodeType":"2249","messageId":"2250","endLine":165,"endColumn":30},{"ruleId":"2229","severity":1,"message":"2263","line":6,"column":3,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":7,"column":3,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":8,"column":3,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2295","line":13,"column":10,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2345","line":15,"column":10,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2263","line":6,"column":3,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":7,"column":3,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":8,"column":3,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2295","line":13,"column":10,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2345","line":15,"column":10,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2263","line":8,"column":3,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":10,"column":3,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2363","line":14,"column":16,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":23},{"ruleId":"2247","severity":1,"message":"2248","line":177,"column":28,"nodeType":"2249","messageId":"2250","endLine":177,"endColumn":30},{"ruleId":"2247","severity":1,"message":"2248","line":185,"column":30,"nodeType":"2249","messageId":"2250","endLine":185,"endColumn":32},{"ruleId":"2247","severity":1,"message":"2248","line":192,"column":32,"nodeType":"2249","messageId":"2250","endLine":192,"endColumn":34},{"ruleId":"2237","severity":1,"message":"2238","line":400,"column":1,"nodeType":"2239","messageId":"2240","endLine":514,"endColumn":2},{"ruleId":"2237","severity":1,"message":"2238","line":516,"column":1,"nodeType":"2239","messageId":"2240","endLine":562,"endColumn":2},{"ruleId":"2229","severity":1,"message":"2353","line":32,"column":11,"nodeType":"2231","messageId":"2232","endLine":32,"endColumn":23},{"ruleId":"2229","severity":1,"message":"2354","line":32,"column":25,"nodeType":"2231","messageId":"2232","endLine":32,"endColumn":33},{"ruleId":"2229","severity":1,"message":"2253","line":32,"column":35,"nodeType":"2231","messageId":"2232","endLine":32,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2286","line":32,"column":43,"nodeType":"2231","messageId":"2232","endLine":32,"endColumn":48},{"ruleId":"2229","severity":1,"message":"2355","line":33,"column":11,"nodeType":"2231","messageId":"2232","endLine":33,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2356","line":33,"column":19,"nodeType":"2231","messageId":"2232","endLine":33,"endColumn":27},{"ruleId":"2229","severity":1,"message":"2357","line":34,"column":10,"nodeType":"2231","messageId":"2232","endLine":34,"endColumn":22},{"ruleId":"2229","severity":1,"message":"2358","line":34,"column":24,"nodeType":"2231","messageId":"2232","endLine":34,"endColumn":39},{"ruleId":"2247","severity":1,"message":"2248","line":280,"column":40,"nodeType":"2249","messageId":"2250","endLine":280,"endColumn":42},{"ruleId":"2229","severity":1,"message":"2264","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2241","line":19,"column":9,"nodeType":"2231","messageId":"2232","endLine":19,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2364","line":26,"column":6,"nodeType":"2257","endLine":26,"endColumn":8,"suggestions":"2365"},{"ruleId":"2247","severity":1,"message":"2248","line":86,"column":29,"nodeType":"2249","messageId":"2250","endLine":86,"endColumn":31},{"ruleId":"2229","severity":1,"message":"2263","line":6,"column":3,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":7,"column":3,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":8,"column":3,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2295","line":13,"column":10,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2345","line":15,"column":10,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":16},{"ruleId":"2247","severity":1,"message":"2248","line":181,"column":28,"nodeType":"2249","messageId":"2250","endLine":181,"endColumn":30},{"ruleId":"2229","severity":1,"message":"2241","line":27,"column":9,"nodeType":"2231","messageId":"2232","endLine":27,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2366","line":28,"column":11,"nodeType":"2231","messageId":"2232","endLine":28,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2367","line":30,"column":9,"nodeType":"2231","messageId":"2232","endLine":30,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2368","line":51,"column":6,"nodeType":"2257","endLine":51,"endColumn":8,"suggestions":"2369"},{"ruleId":"2247","severity":1,"message":"2248","line":275,"column":40,"nodeType":"2249","messageId":"2250","endLine":275,"endColumn":42},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2266","line":2,"column":41,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":52},{"ruleId":"2229","severity":1,"message":"2286","line":9,"column":37,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":42},{"ruleId":"2229","severity":1,"message":"2264","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2290","line":13,"column":3,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2370","line":22,"column":8,"nodeType":"2231","messageId":"2232","endLine":22,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2253","line":29,"column":35,"nodeType":"2231","messageId":"2232","endLine":29,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2356","line":30,"column":19,"nodeType":"2231","messageId":"2232","endLine":30,"endColumn":27},{"ruleId":"2229","severity":1,"message":"2272","line":46,"column":20,"nodeType":"2231","messageId":"2232","endLine":46,"endColumn":31},{"ruleId":"2229","severity":1,"message":"2273","line":47,"column":21,"nodeType":"2231","messageId":"2232","endLine":47,"endColumn":33},{"ruleId":"2229","severity":1,"message":"2274","line":48,"column":24,"nodeType":"2231","messageId":"2232","endLine":48,"endColumn":39},{"ruleId":"2229","severity":1,"message":"2275","line":49,"column":24,"nodeType":"2231","messageId":"2232","endLine":49,"endColumn":39},{"ruleId":"2255","severity":1,"message":"2327","line":53,"column":6,"nodeType":"2257","endLine":53,"endColumn":8,"suggestions":"2371"},{"ruleId":"2247","severity":1,"message":"2248","line":253,"column":40,"nodeType":"2249","messageId":"2250","endLine":253,"endColumn":42},{"ruleId":"2247","severity":1,"message":"2248","line":268,"column":32,"nodeType":"2249","messageId":"2250","endLine":268,"endColumn":34},{"ruleId":"2278","severity":1,"message":"2279","line":270,"column":17,"nodeType":"2280","endLine":273,"endColumn":18},{"ruleId":"2278","severity":1,"message":"2279","line":280,"column":17,"nodeType":"2280","endLine":283,"endColumn":18},{"ruleId":"2247","severity":1,"message":"2248","line":328,"column":36,"nodeType":"2249","messageId":"2250","endLine":328,"endColumn":38},{"ruleId":"2247","severity":1,"message":"2248","line":331,"column":41,"nodeType":"2249","messageId":"2250","endLine":331,"endColumn":43},{"ruleId":"2247","severity":1,"message":"2248","line":332,"column":39,"nodeType":"2249","messageId":"2250","endLine":332,"endColumn":41},{"ruleId":"2247","severity":1,"message":"2248","line":333,"column":36,"nodeType":"2249","messageId":"2250","endLine":333,"endColumn":38},{"ruleId":"2247","severity":1,"message":"2248","line":334,"column":40,"nodeType":"2249","messageId":"2250","endLine":334,"endColumn":42},{"ruleId":"2247","severity":1,"message":"2248","line":354,"column":44,"nodeType":"2249","messageId":"2250","endLine":354,"endColumn":46},{"ruleId":"2247","severity":1,"message":"2248","line":355,"column":43,"nodeType":"2249","messageId":"2250","endLine":355,"endColumn":45},{"ruleId":"2247","severity":1,"message":"2248","line":356,"column":40,"nodeType":"2249","messageId":"2250","endLine":356,"endColumn":42},{"ruleId":"2247","severity":1,"message":"2248","line":357,"column":44,"nodeType":"2249","messageId":"2250","endLine":357,"endColumn":46},{"ruleId":"2247","severity":1,"message":"2248","line":358,"column":34,"nodeType":"2249","messageId":"2250","endLine":358,"endColumn":36},{"ruleId":"2237","severity":1,"message":"2238","line":671,"column":1,"nodeType":"2239","messageId":"2240","endLine":676,"endColumn":2},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2266","line":2,"column":41,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":52},{"ruleId":"2229","severity":1,"message":"2241","line":10,"column":9,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2286","line":11,"column":35,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":40},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2266","line":2,"column":41,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":52},{"ruleId":"2229","severity":1,"message":"2241","line":10,"column":9,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2286","line":11,"column":35,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":40},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2255","severity":1,"message":"2322","line":96,"column":6,"nodeType":"2257","endLine":96,"endColumn":8,"suggestions":"2372"},{"ruleId":"2247","severity":1,"message":"2248","line":113,"column":34,"nodeType":"2249","messageId":"2250","endLine":113,"endColumn":36},{"ruleId":"2247","severity":1,"message":"2248","line":116,"column":34,"nodeType":"2249","messageId":"2250","endLine":116,"endColumn":36},{"ruleId":"2247","severity":1,"message":"2248","line":119,"column":34,"nodeType":"2249","messageId":"2250","endLine":119,"endColumn":36},{"ruleId":"2237","severity":1,"message":"2238","line":228,"column":1,"nodeType":"2239","messageId":"2240","endLine":230,"endColumn":2},{"ruleId":"2229","severity":1,"message":"2263","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":15,"column":3,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2241","line":25,"column":9,"nodeType":"2231","messageId":"2232","endLine":25,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2286","line":26,"column":35,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":40},{"ruleId":"2229","severity":1,"message":"2373","line":30,"column":10,"nodeType":"2231","messageId":"2232","endLine":30,"endColumn":15},{"ruleId":"2255","severity":1,"message":"2304","line":56,"column":6,"nodeType":"2257","endLine":56,"endColumn":8,"suggestions":"2374"},{"ruleId":"2247","severity":1,"message":"2248","line":131,"column":19,"nodeType":"2249","messageId":"2250","endLine":131,"endColumn":21},{"ruleId":"2243","severity":1,"message":"2375","line":163,"column":45,"nodeType":"2245","messageId":"2246","endLine":163,"endColumn":47},{"ruleId":"2243","severity":1,"message":"2375","line":176,"column":45,"nodeType":"2245","messageId":"2246","endLine":176,"endColumn":47},{"ruleId":"2247","severity":1,"message":"2248","line":293,"column":32,"nodeType":"2249","messageId":"2250","endLine":293,"endColumn":34},{"ruleId":"2247","severity":1,"message":"2248","line":306,"column":33,"nodeType":"2249","messageId":"2250","endLine":306,"endColumn":35},{"ruleId":"2247","severity":1,"message":"2248","line":322,"column":33,"nodeType":"2249","messageId":"2250","endLine":322,"endColumn":35},{"ruleId":"2237","severity":1,"message":"2238","line":380,"column":1,"nodeType":"2239","messageId":"2240","endLine":414,"endColumn":23},{"ruleId":"2237","severity":1,"message":"2238","line":415,"column":1,"nodeType":"2239","messageId":"2240","endLine":419,"endColumn":25},{"ruleId":"2237","severity":1,"message":"2238","line":421,"column":1,"nodeType":"2239","messageId":"2240","endLine":432,"endColumn":32},{"ruleId":"2237","severity":1,"message":"2238","line":434,"column":1,"nodeType":"2239","messageId":"2240","endLine":446,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2263","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":14,"column":3,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":8},{"ruleId":"2255","severity":1,"message":"2259","line":42,"column":6,"nodeType":"2257","endLine":42,"endColumn":16,"suggestions":"2376"},{"ruleId":"2247","severity":1,"message":"2248","line":186,"column":42,"nodeType":"2249","messageId":"2250","endLine":186,"endColumn":44},{"ruleId":"2247","severity":1,"message":"2248","line":186,"column":72,"nodeType":"2249","messageId":"2250","endLine":186,"endColumn":74},{"ruleId":"2247","severity":1,"message":"2248","line":218,"column":39,"nodeType":"2249","messageId":"2250","endLine":218,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2254","line":6,"column":10,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2263","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":14,"column":3,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":8},{"ruleId":"2255","severity":1,"message":"2377","line":32,"column":6,"nodeType":"2257","endLine":32,"endColumn":16,"suggestions":"2378"},{"ruleId":"2247","severity":1,"message":"2248","line":290,"column":39,"nodeType":"2249","messageId":"2250","endLine":290,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2253","line":9,"column":35,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":41},{"ruleId":"2247","severity":1,"message":"2248","line":43,"column":18,"nodeType":"2249","messageId":"2250","endLine":43,"endColumn":20},{"ruleId":"2247","severity":1,"message":"2248","line":58,"column":27,"nodeType":"2249","messageId":"2250","endLine":58,"endColumn":29},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2379","line":2,"column":8,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2380","line":3,"column":10,"nodeType":"2231","messageId":"2232","endLine":3,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2293","line":14,"column":9,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":16},{"ruleId":"2343","severity":1,"message":"2381","line":28,"column":17,"nodeType":"2280","endLine":31,"endColumn":18},{"ruleId":"2247","severity":1,"message":"2248","line":65,"column":21,"nodeType":"2249","messageId":"2250","endLine":65,"endColumn":23},{"ruleId":"2247","severity":1,"message":"2248","line":69,"column":21,"nodeType":"2249","messageId":"2250","endLine":69,"endColumn":23},{"ruleId":"2247","severity":1,"message":"2248","line":73,"column":21,"nodeType":"2249","messageId":"2250","endLine":73,"endColumn":23},{"ruleId":"2343","severity":1,"message":"2381","line":79,"column":17,"nodeType":"2280","endLine":84,"endColumn":18},{"ruleId":"2247","severity":1,"message":"2248","line":97,"column":27,"nodeType":"2249","messageId":"2250","endLine":97,"endColumn":29},{"ruleId":"2237","severity":1,"message":"2238","line":129,"column":1,"nodeType":"2239","messageId":"2240","endLine":129,"endColumn":40},{"ruleId":"2237","severity":1,"message":"2238","line":130,"column":1,"nodeType":"2239","messageId":"2240","endLine":130,"endColumn":40},{"ruleId":"2229","severity":1,"message":"2253","line":9,"column":35,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2382","line":11,"column":11,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":18},{"ruleId":"2247","severity":1,"message":"2248","line":84,"column":15,"nodeType":"2249","messageId":"2250","endLine":84,"endColumn":17},{"ruleId":"2247","severity":1,"message":"2248","line":103,"column":30,"nodeType":"2249","messageId":"2250","endLine":103,"endColumn":32},{"ruleId":"2247","severity":1,"message":"2248","line":122,"column":33,"nodeType":"2249","messageId":"2250","endLine":122,"endColumn":35},{"ruleId":"2247","severity":1,"message":"2248","line":140,"column":23,"nodeType":"2249","messageId":"2250","endLine":140,"endColumn":25},{"ruleId":"2247","severity":1,"message":"2248","line":160,"column":18,"nodeType":"2249","messageId":"2250","endLine":160,"endColumn":20},{"ruleId":"2247","severity":1,"message":"2248","line":180,"column":28,"nodeType":"2249","messageId":"2250","endLine":180,"endColumn":30},{"ruleId":"2247","severity":1,"message":"2248","line":199,"column":26,"nodeType":"2249","messageId":"2250","endLine":199,"endColumn":28},{"ruleId":"2247","severity":1,"message":"2248","line":218,"column":26,"nodeType":"2249","messageId":"2250","endLine":218,"endColumn":28},{"ruleId":"2247","severity":1,"message":"2248","line":238,"column":20,"nodeType":"2249","messageId":"2250","endLine":238,"endColumn":22},{"ruleId":"2247","severity":1,"message":"2248","line":257,"column":23,"nodeType":"2249","messageId":"2250","endLine":257,"endColumn":25},{"ruleId":"2247","severity":1,"message":"2248","line":370,"column":26,"nodeType":"2249","messageId":"2250","endLine":370,"endColumn":28},{"ruleId":"2247","severity":1,"message":"2248","line":384,"column":41,"nodeType":"2249","messageId":"2250","endLine":384,"endColumn":43},{"ruleId":"2247","severity":1,"message":"2248","line":399,"column":34,"nodeType":"2249","messageId":"2250","endLine":399,"endColumn":36},{"ruleId":"2247","severity":1,"message":"2248","line":414,"column":29,"nodeType":"2249","messageId":"2250","endLine":414,"endColumn":31},{"ruleId":"2247","severity":1,"message":"2248","line":428,"column":39,"nodeType":"2249","messageId":"2250","endLine":428,"endColumn":41},{"ruleId":"2247","severity":1,"message":"2248","line":441,"column":34,"nodeType":"2249","messageId":"2250","endLine":441,"endColumn":36},{"ruleId":"2247","severity":1,"message":"2248","line":454,"column":31,"nodeType":"2249","messageId":"2250","endLine":454,"endColumn":33},{"ruleId":"2229","severity":1,"message":"2267","line":2,"column":17,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":2,"column":27,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2254","line":15,"column":10,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2241","line":26,"column":9,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2286","line":28,"column":35,"nodeType":"2231","messageId":"2232","endLine":28,"endColumn":40},{"ruleId":"2247","severity":1,"message":"2248","line":63,"column":14,"nodeType":"2249","messageId":"2250","endLine":63,"endColumn":16},{"ruleId":"2237","severity":1,"message":"2238","line":111,"column":1,"nodeType":"2239","messageId":"2240","endLine":118,"endColumn":2},{"ruleId":"2229","severity":1,"message":"2230","line":2,"column":27,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2251","line":10,"column":10,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2252","line":11,"column":13,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2241","line":19,"column":9,"nodeType":"2231","messageId":"2232","endLine":19,"endColumn":14},{"ruleId":"2237","severity":1,"message":"2238","line":229,"column":1,"nodeType":"2239","messageId":"2240","endLine":333,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2230","line":2,"column":27,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2241","line":22,"column":9,"nodeType":"2231","messageId":"2232","endLine":22,"endColumn":14},{"ruleId":"2225","replacedBy":"2383"},{"ruleId":"2227","replacedBy":"2384"},{"ruleId":"2225","replacedBy":"2385"},{"ruleId":"2227","replacedBy":"2386"},{"ruleId":"2225","replacedBy":"2387"},{"ruleId":"2227","replacedBy":"2388"},{"ruleId":"2229","severity":1,"message":"2292","line":4,"column":3,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2263","line":6,"column":3,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":7,"column":3,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":8,"column":3,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2295","line":14,"column":10,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2345","line":16,"column":10,"nodeType":"2231","messageId":"2232","endLine":16,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2389","line":26,"column":6,"nodeType":"2257","endLine":26,"endColumn":8,"suggestions":"2390"},{"ruleId":"2225","replacedBy":"2391"},{"ruleId":"2227","replacedBy":"2392"},{"ruleId":"2229","severity":1,"message":"2292","line":4,"column":3,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2263","line":6,"column":3,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":7,"column":3,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":8,"column":3,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2295","line":14,"column":10,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2345","line":16,"column":10,"nodeType":"2231","messageId":"2232","endLine":16,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2393","line":27,"column":6,"nodeType":"2257","endLine":27,"endColumn":8,"suggestions":"2394"},{"ruleId":"2229","severity":1,"message":"2292","line":4,"column":3,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2263","line":6,"column":3,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":7,"column":3,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":8,"column":3,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2295","line":14,"column":10,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2345","line":16,"column":10,"nodeType":"2231","messageId":"2232","endLine":16,"endColumn":16},{"ruleId":"2255","severity":1,"message":"2395","line":26,"column":6,"nodeType":"2257","endLine":26,"endColumn":8,"suggestions":"2396"},{"ruleId":"2229","severity":1,"message":"2350","line":4,"column":16,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":26},{"ruleId":"2255","severity":1,"message":"2397","line":16,"column":8,"nodeType":"2257","endLine":16,"endColumn":18,"suggestions":"2398"},{"ruleId":"2343","severity":1,"message":"2381","line":52,"column":29,"nodeType":"2280","endLine":56,"endColumn":30},{"ruleId":"2343","severity":1,"message":"2381","line":57,"column":33,"nodeType":"2280","endLine":57,"endColumn":66},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2379","line":4,"column":8,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2380","line":5,"column":10,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2254","line":6,"column":10,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2268","line":7,"column":10,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2399","line":17,"column":10,"nodeType":"2231","messageId":"2232","endLine":17,"endColumn":27},{"ruleId":"2229","severity":1,"message":"2400","line":18,"column":10,"nodeType":"2231","messageId":"2232","endLine":18,"endColumn":20},{"ruleId":"2229","severity":1,"message":"2401","line":19,"column":10,"nodeType":"2231","messageId":"2232","endLine":19,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2402","line":29,"column":9,"nodeType":"2231","messageId":"2232","endLine":29,"endColumn":22},{"ruleId":"2229","severity":1,"message":"2251","line":5,"column":10,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2252","line":8,"column":13,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2241","line":18,"column":9,"nodeType":"2231","messageId":"2232","endLine":18,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2253","line":22,"column":35,"nodeType":"2231","messageId":"2232","endLine":22,"endColumn":41},{"ruleId":"2255","severity":1,"message":"2304","line":44,"column":6,"nodeType":"2257","endLine":44,"endColumn":8,"suggestions":"2403"},{"ruleId":"2247","severity":1,"message":"2248","line":60,"column":22,"nodeType":"2249","messageId":"2250","endLine":60,"endColumn":24},{"ruleId":"2278","severity":1,"message":"2279","line":342,"column":33,"nodeType":"2280","endLine":345,"endColumn":34},{"ruleId":"2237","severity":1,"message":"2238","line":507,"column":1,"nodeType":"2239","messageId":"2240","endLine":512,"endColumn":2},{"ruleId":"2237","severity":1,"message":"2238","line":516,"column":1,"nodeType":"2239","messageId":"2240","endLine":539,"endColumn":39},{"ruleId":"2229","severity":1,"message":"2253","line":9,"column":35,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2382","line":12,"column":5,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2404","line":23,"column":5,"nodeType":"2231","messageId":"2232","endLine":23,"endColumn":15},{"ruleId":"2247","severity":1,"message":"2248","line":115,"column":26,"nodeType":"2249","messageId":"2250","endLine":115,"endColumn":28},{"ruleId":"2247","severity":1,"message":"2248","line":131,"column":33,"nodeType":"2249","messageId":"2250","endLine":131,"endColumn":35},{"ruleId":"2247","severity":1,"message":"2248","line":147,"column":26,"nodeType":"2249","messageId":"2250","endLine":147,"endColumn":28},{"ruleId":"2247","severity":1,"message":"2248","line":163,"column":25,"nodeType":"2249","messageId":"2250","endLine":163,"endColumn":27},{"ruleId":"2247","severity":1,"message":"2248","line":179,"column":28,"nodeType":"2249","messageId":"2250","endLine":179,"endColumn":30},{"ruleId":"2247","severity":1,"message":"2248","line":195,"column":20,"nodeType":"2249","messageId":"2250","endLine":195,"endColumn":22},{"ruleId":"2247","severity":1,"message":"2248","line":211,"column":26,"nodeType":"2249","messageId":"2250","endLine":211,"endColumn":28},{"ruleId":"2247","severity":1,"message":"2248","line":227,"column":23,"nodeType":"2249","messageId":"2250","endLine":227,"endColumn":25},{"ruleId":"2247","severity":1,"message":"2248","line":243,"column":21,"nodeType":"2249","messageId":"2250","endLine":243,"endColumn":23},{"ruleId":"2247","severity":1,"message":"2248","line":356,"column":31,"nodeType":"2249","messageId":"2250","endLine":356,"endColumn":33},{"ruleId":"2247","severity":1,"message":"2248","line":371,"column":44,"nodeType":"2249","messageId":"2250","endLine":371,"endColumn":46},{"ruleId":"2247","severity":1,"message":"2248","line":384,"column":39,"nodeType":"2249","messageId":"2250","endLine":384,"endColumn":41},{"ruleId":"2247","severity":1,"message":"2248","line":397,"column":32,"nodeType":"2249","messageId":"2250","endLine":397,"endColumn":34},{"ruleId":"2247","severity":1,"message":"2248","line":411,"column":36,"nodeType":"2249","messageId":"2250","endLine":411,"endColumn":38},{"ruleId":"2247","severity":1,"message":"2248","line":426,"column":34,"nodeType":"2249","messageId":"2250","endLine":426,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2288","line":5,"column":28,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":31},{"ruleId":"2229","severity":1,"message":"2289","line":5,"column":33,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2405","line":6,"column":19,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":32},{"ruleId":"2229","severity":1,"message":"2406","line":6,"column":34,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":44},{"ruleId":"2229","severity":1,"message":"2407","line":6,"column":46,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":54},{"ruleId":"2229","severity":1,"message":"2354","line":15,"column":11,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":19},{"ruleId":"2229","severity":1,"message":"2408","line":15,"column":21,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":28},{"ruleId":"2229","severity":1,"message":"2353","line":15,"column":30,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":42},{"ruleId":"2229","severity":1,"message":"2286","line":15,"column":44,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":49},{"ruleId":"2229","severity":1,"message":"2409","line":31,"column":9,"nodeType":"2231","messageId":"2232","endLine":31,"endColumn":17},{"ruleId":"2225","replacedBy":"2410"},{"ruleId":"2227","replacedBy":"2411"},{"ruleId":"2225","replacedBy":"2412"},{"ruleId":"2227","replacedBy":"2413"},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2350","line":2,"column":10,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":20},{"ruleId":"2229","severity":1,"message":"2254","line":2,"column":22,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":26},{"ruleId":"2229","severity":1,"message":"2414","line":6,"column":8,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":23},{"ruleId":"2229","severity":1,"message":"2415","line":7,"column":8,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":26},{"ruleId":"2229","severity":1,"message":"2416","line":8,"column":8,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":20},{"ruleId":"2229","severity":1,"message":"2417","line":9,"column":8,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":22},{"ruleId":"2229","severity":1,"message":"2362","line":11,"column":53,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":59},{"ruleId":"2229","severity":1,"message":"2263","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2418","line":12,"column":14,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":22},{"ruleId":"2237","severity":1,"message":"2238","line":206,"column":1,"nodeType":"2239","messageId":"2240","endLine":228,"endColumn":2},{"ruleId":"2237","severity":1,"message":"2238","line":230,"column":1,"nodeType":"2239","messageId":"2240","endLine":276,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2278","severity":1,"message":"2279","line":68,"column":21,"nodeType":"2280","endLine":71,"endColumn":22},{"ruleId":"2247","severity":1,"message":"2248","line":116,"column":30,"nodeType":"2249","messageId":"2250","endLine":116,"endColumn":32},{"ruleId":"2229","severity":1,"message":"2419","line":3,"column":8,"nodeType":"2231","messageId":"2232","endLine":3,"endColumn":20},{"ruleId":"2229","severity":1,"message":"2379","line":4,"column":8,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":13},{"ruleId":"2247","severity":1,"message":"2248","line":122,"column":35,"nodeType":"2249","messageId":"2250","endLine":122,"endColumn":37},{"ruleId":"2247","severity":1,"message":"2248","line":125,"column":37,"nodeType":"2249","messageId":"2250","endLine":125,"endColumn":39},{"ruleId":"2247","severity":1,"message":"2248","line":128,"column":39,"nodeType":"2249","messageId":"2250","endLine":128,"endColumn":41},{"ruleId":"2247","severity":1,"message":"2248","line":144,"column":31,"nodeType":"2249","messageId":"2250","endLine":144,"endColumn":33},{"ruleId":"2247","severity":1,"message":"2248","line":158,"column":33,"nodeType":"2249","messageId":"2250","endLine":158,"endColumn":35},{"ruleId":"2247","severity":1,"message":"2248","line":185,"column":33,"nodeType":"2249","messageId":"2250","endLine":185,"endColumn":35},{"ruleId":"2247","severity":1,"message":"2248","line":186,"column":33,"nodeType":"2249","messageId":"2250","endLine":186,"endColumn":35},{"ruleId":"2247","severity":1,"message":"2248","line":187,"column":34,"nodeType":"2249","messageId":"2250","endLine":187,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2420","line":10,"column":5,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2421","line":13,"column":11,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":27},{"ruleId":"2229","severity":1,"message":"2422","line":15,"column":9,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":18},{"ruleId":"2247","severity":1,"message":"2248","line":101,"column":38,"nodeType":"2249","messageId":"2250","endLine":101,"endColumn":40},{"ruleId":"2247","severity":1,"message":"2248","line":102,"column":37,"nodeType":"2249","messageId":"2250","endLine":102,"endColumn":39},{"ruleId":"2247","severity":1,"message":"2248","line":103,"column":34,"nodeType":"2249","messageId":"2250","endLine":103,"endColumn":36},{"ruleId":"2247","severity":1,"message":"2248","line":104,"column":38,"nodeType":"2249","messageId":"2250","endLine":104,"endColumn":40},{"ruleId":"2247","severity":1,"message":"2248","line":105,"column":33,"nodeType":"2249","messageId":"2250","endLine":105,"endColumn":35},{"ruleId":"2278","severity":1,"message":"2279","line":120,"column":27,"nodeType":"2280","endLine":123,"endColumn":28},{"ruleId":"2247","severity":1,"message":"2248","line":128,"column":42,"nodeType":"2249","messageId":"2250","endLine":128,"endColumn":44},{"ruleId":"2423","severity":1,"message":"2424","line":128,"column":47,"nodeType":"2425","messageId":"2426","endLine":128,"endColumn":49},{"ruleId":"2423","severity":1,"message":"2424","line":128,"column":65,"nodeType":"2425","messageId":"2426","endLine":128,"endColumn":67},{"ruleId":"2423","severity":1,"message":"2427","line":128,"column":65,"nodeType":"2425","messageId":"2426","endLine":128,"endColumn":67},{"ruleId":"2247","severity":1,"message":"2248","line":128,"column":82,"nodeType":"2249","messageId":"2250","endLine":128,"endColumn":84},{"ruleId":"2423","severity":1,"message":"2427","line":128,"column":87,"nodeType":"2425","messageId":"2426","endLine":128,"endColumn":89},{"ruleId":"2237","severity":1,"message":"2238","line":163,"column":1,"nodeType":"2239","messageId":"2240","endLine":174,"endColumn":33},{"ruleId":"2247","severity":1,"message":"2248","line":33,"column":33,"nodeType":"2249","messageId":"2250","endLine":33,"endColumn":35},{"ruleId":"2278","severity":1,"message":"2279","line":37,"column":23,"nodeType":"2280","endLine":40,"endColumn":24},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2241","line":13,"column":9,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2428","line":35,"column":9,"nodeType":"2231","messageId":"2232","endLine":35,"endColumn":10},{"ruleId":"2429","severity":1,"message":"2430","line":48,"column":1,"nodeType":"2431","endLine":53,"endColumn":3},{"ruleId":"2229","severity":1,"message":"2253","line":9,"column":35,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2404","line":21,"column":5,"nodeType":"2231","messageId":"2232","endLine":21,"endColumn":15},{"ruleId":"2247","severity":1,"message":"2248","line":82,"column":30,"nodeType":"2249","messageId":"2250","endLine":82,"endColumn":32},{"ruleId":"2247","severity":1,"message":"2248","line":100,"column":25,"nodeType":"2249","messageId":"2250","endLine":100,"endColumn":27},{"ruleId":"2247","severity":1,"message":"2248","line":118,"column":28,"nodeType":"2249","messageId":"2250","endLine":118,"endColumn":30},{"ruleId":"2247","severity":1,"message":"2248","line":137,"column":18,"nodeType":"2249","messageId":"2250","endLine":137,"endColumn":20},{"ruleId":"2247","severity":1,"message":"2248","line":156,"column":23,"nodeType":"2249","messageId":"2250","endLine":156,"endColumn":25},{"ruleId":"2247","severity":1,"message":"2248","line":269,"column":29,"nodeType":"2249","messageId":"2250","endLine":269,"endColumn":31},{"ruleId":"2247","severity":1,"message":"2248","line":284,"column":34,"nodeType":"2249","messageId":"2250","endLine":284,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2253","line":6,"column":24,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":30},{"ruleId":"2229","severity":1,"message":"2286","line":6,"column":32,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":37},{"ruleId":"2229","severity":1,"message":"2432","line":6,"column":48,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":56},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2266","line":2,"column":41,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":52},{"ruleId":"2229","severity":1,"message":"2241","line":20,"column":9,"nodeType":"2231","messageId":"2232","endLine":20,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2293","line":21,"column":9,"nodeType":"2231","messageId":"2232","endLine":21,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2433","line":25,"column":28,"nodeType":"2231","messageId":"2232","endLine":25,"endColumn":40},{"ruleId":"2247","severity":1,"message":"2248","line":92,"column":31,"nodeType":"2249","messageId":"2250","endLine":92,"endColumn":33},{"ruleId":"2247","severity":1,"message":"2248","line":95,"column":33,"nodeType":"2249","messageId":"2250","endLine":95,"endColumn":35},{"ruleId":"2247","severity":1,"message":"2248","line":98,"column":35,"nodeType":"2249","messageId":"2250","endLine":98,"endColumn":37},{"ruleId":"2247","severity":1,"message":"2248","line":112,"column":31,"nodeType":"2249","messageId":"2250","endLine":112,"endColumn":33},{"ruleId":"2247","severity":1,"message":"2248","line":126,"column":33,"nodeType":"2249","messageId":"2250","endLine":126,"endColumn":35},{"ruleId":"2247","severity":1,"message":"2248","line":148,"column":31,"nodeType":"2249","messageId":"2250","endLine":148,"endColumn":33},{"ruleId":"2229","severity":1,"message":"2434","line":5,"column":10,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":19},{"ruleId":"2229","severity":1,"message":"2350","line":5,"column":21,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":31},{"ruleId":"2429","severity":1,"message":"2430","line":7,"column":1,"nodeType":"2431","endLine":9,"endColumn":3},{"ruleId":"2429","severity":1,"message":"2430","line":23,"column":1,"nodeType":"2431","endLine":29,"endColumn":3},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2237","severity":1,"message":"2238","line":91,"column":1,"nodeType":"2239","messageId":"2240","endLine":96,"endColumn":2},{"ruleId":"2435","severity":2,"message":"2436","line":22,"column":2,"nodeType":"2437","messageId":"2438","endLine":259,"endColumn":2},{"ruleId":null,"fatal":true,"severity":2,"message":"2439","line":43,"column":9},{"ruleId":"2229","severity":1,"message":"2379","line":4,"column":8,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2380","line":5,"column":10,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2440","line":13,"column":20,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":31},{"ruleId":"2255","severity":1,"message":"2441","line":32,"column":6,"nodeType":"2257","endLine":32,"endColumn":13,"suggestions":"2442"},{"ruleId":"2229","severity":1,"message":"2263","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":14,"column":3,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2290","line":15,"column":3,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2253","line":23,"column":35,"nodeType":"2231","messageId":"2232","endLine":23,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2432","line":23,"column":50,"nodeType":"2231","messageId":"2232","endLine":23,"endColumn":58},{"ruleId":"2255","severity":1,"message":"2327","line":34,"column":6,"nodeType":"2257","endLine":34,"endColumn":8,"suggestions":"2443"},{"ruleId":"2255","severity":1,"message":"2444","line":50,"column":6,"nodeType":"2257","endLine":50,"endColumn":16,"suggestions":"2445"},{"ruleId":"2247","severity":1,"message":"2248","line":138,"column":35,"nodeType":"2249","messageId":"2250","endLine":138,"endColumn":37},{"ruleId":"2247","severity":1,"message":"2248","line":311,"column":26,"nodeType":"2249","messageId":"2250","endLine":311,"endColumn":28},{"ruleId":"2247","severity":1,"message":"2248","line":325,"column":26,"nodeType":"2249","messageId":"2250","endLine":325,"endColumn":28},{"ruleId":"2247","severity":1,"message":"2248","line":338,"column":26,"nodeType":"2249","messageId":"2250","endLine":338,"endColumn":28},{"ruleId":"2278","severity":1,"message":"2279","line":400,"column":29,"nodeType":"2280","endLine":403,"endColumn":30},{"ruleId":"2229","severity":1,"message":"2353","line":5,"column":11,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":23},{"ruleId":"2229","severity":1,"message":"2253","line":5,"column":35,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2286","line":5,"column":43,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":48},{"ruleId":"2229","severity":1,"message":"2432","line":5,"column":50,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":58},{"ruleId":"2225","replacedBy":"2446"},{"ruleId":"2227","replacedBy":"2447"},{"ruleId":"2229","severity":1,"message":"2448","line":3,"column":8,"nodeType":"2231","messageId":"2232","endLine":3,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2242","line":8,"column":20,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":24},{"ruleId":"2429","severity":1,"message":"2430","line":1,"column":1,"nodeType":"2431","endLine":18,"endColumn":2},{"ruleId":"2449","severity":1,"message":"2450","line":11,"column":25,"nodeType":"2451","messageId":"2452","endLine":11,"endColumn":26,"suggestions":"2453"},{"ruleId":"2225","replacedBy":"2454"},{"ruleId":"2227","replacedBy":"2455"},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2456","line":2,"column":13,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":20},{"ruleId":"2343","severity":1,"message":"2344","line":87,"column":15,"nodeType":"2280","endLine":90,"endColumn":16},{"ruleId":"2237","severity":1,"message":"2238","line":130,"column":1,"nodeType":"2239","messageId":"2240","endLine":132,"endColumn":2},{"ruleId":"2237","severity":1,"message":"2238","line":146,"column":1,"nodeType":"2239","messageId":"2240","endLine":178,"endColumn":2},{"ruleId":"2237","severity":1,"message":"2238","line":179,"column":1,"nodeType":"2239","messageId":"2240","endLine":195,"endColumn":2},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2457","severity":1,"message":"2458","line":74,"column":9,"nodeType":"2459","endLine":74,"endColumn":19},{"ruleId":"2243","severity":1,"message":"2375","line":130,"column":47,"nodeType":"2245","messageId":"2246","endLine":130,"endColumn":49},{"ruleId":"2243","severity":1,"message":"2375","line":156,"column":47,"nodeType":"2245","messageId":"2246","endLine":156,"endColumn":49},{"ruleId":"2243","severity":1,"message":"2375","line":258,"column":45,"nodeType":"2245","messageId":"2246","endLine":258,"endColumn":47},{"ruleId":"2243","severity":1,"message":"2375","line":336,"column":21,"nodeType":"2245","messageId":"2246","endLine":336,"endColumn":23},{"ruleId":"2457","severity":1,"message":"2458","line":378,"column":7,"nodeType":"2459","endLine":378,"endColumn":17},{"ruleId":"2457","severity":1,"message":"2458","line":380,"column":7,"nodeType":"2459","endLine":380,"endColumn":17},{"ruleId":"2457","severity":1,"message":"2458","line":390,"column":11,"nodeType":"2459","endLine":390,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2457","severity":1,"message":"2458","line":74,"column":9,"nodeType":"2459","endLine":74,"endColumn":19},{"ruleId":"2243","severity":1,"message":"2375","line":130,"column":47,"nodeType":"2245","messageId":"2246","endLine":130,"endColumn":49},{"ruleId":"2243","severity":1,"message":"2375","line":156,"column":47,"nodeType":"2245","messageId":"2246","endLine":156,"endColumn":49},{"ruleId":"2243","severity":1,"message":"2375","line":258,"column":45,"nodeType":"2245","messageId":"2246","endLine":258,"endColumn":47},{"ruleId":"2243","severity":1,"message":"2375","line":336,"column":21,"nodeType":"2245","messageId":"2246","endLine":336,"endColumn":23},{"ruleId":"2457","severity":1,"message":"2458","line":378,"column":7,"nodeType":"2459","endLine":378,"endColumn":17},{"ruleId":"2457","severity":1,"message":"2458","line":380,"column":7,"nodeType":"2459","endLine":380,"endColumn":17},{"ruleId":"2457","severity":1,"message":"2458","line":390,"column":11,"nodeType":"2459","endLine":390,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2285","line":11,"column":8,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2241","line":25,"column":9,"nodeType":"2231","messageId":"2232","endLine":25,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2286","line":26,"column":35,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":40},{"ruleId":"2229","severity":1,"message":"2460","line":5,"column":10,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2461","line":5,"column":15,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":19},{"ruleId":"2229","severity":1,"message":"2462","line":5,"column":21,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":28},{"ruleId":"2229","severity":1,"message":"2463","line":5,"column":30,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":38},{"ruleId":"2255","severity":1,"message":"2322","line":40,"column":6,"nodeType":"2257","endLine":40,"endColumn":8,"suggestions":"2464"},{"ruleId":"2237","severity":1,"message":"2238","line":110,"column":1,"nodeType":"2239","messageId":"2240","endLine":139,"endColumn":2},{"ruleId":"2229","severity":1,"message":"2254","line":6,"column":21,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":25},{"ruleId":"2255","severity":1,"message":"2259","line":125,"column":6,"nodeType":"2257","endLine":125,"endColumn":16,"suggestions":"2465"},{"ruleId":"2229","severity":1,"message":"2405","line":2,"column":19,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":32},{"ruleId":"2229","severity":1,"message":"2263","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":14,"column":3,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2251","line":16,"column":10,"nodeType":"2231","messageId":"2232","endLine":16,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2466","line":18,"column":8,"nodeType":"2231","messageId":"2232","endLine":18,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2467","line":24,"column":7,"nodeType":"2231","messageId":"2232","endLine":24,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2241","line":35,"column":9,"nodeType":"2231","messageId":"2232","endLine":35,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2373","line":46,"column":10,"nodeType":"2231","messageId":"2232","endLine":46,"endColumn":15},{"ruleId":"2255","severity":1,"message":"2468","line":79,"column":6,"nodeType":"2257","endLine":79,"endColumn":8,"suggestions":"2469"},{"ruleId":"2247","severity":1,"message":"2248","line":117,"column":19,"nodeType":"2249","messageId":"2250","endLine":117,"endColumn":21},{"ruleId":"2247","severity":1,"message":"2248","line":127,"column":23,"nodeType":"2249","messageId":"2250","endLine":127,"endColumn":25},{"ruleId":"2247","severity":1,"message":"2470","line":133,"column":25,"nodeType":"2249","messageId":"2250","endLine":133,"endColumn":27},{"ruleId":"2243","severity":1,"message":"2375","line":171,"column":45,"nodeType":"2245","messageId":"2246","endLine":171,"endColumn":47},{"ruleId":"2243","severity":1,"message":"2375","line":184,"column":45,"nodeType":"2245","messageId":"2246","endLine":184,"endColumn":47},{"ruleId":"2247","severity":1,"message":"2248","line":298,"column":32,"nodeType":"2249","messageId":"2250","endLine":298,"endColumn":34},{"ruleId":"2247","severity":1,"message":"2248","line":310,"column":33,"nodeType":"2249","messageId":"2250","endLine":310,"endColumn":35},{"ruleId":"2247","severity":1,"message":"2248","line":336,"column":33,"nodeType":"2249","messageId":"2250","endLine":336,"endColumn":35},{"ruleId":"2237","severity":1,"message":"2238","line":395,"column":1,"nodeType":"2239","messageId":"2240","endLine":429,"endColumn":23},{"ruleId":"2237","severity":1,"message":"2238","line":437,"column":1,"nodeType":"2239","messageId":"2240","endLine":451,"endColumn":2},{"ruleId":"2237","severity":1,"message":"2238","line":463,"column":1,"nodeType":"2239","messageId":"2240","endLine":473,"endColumn":32},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2379","line":4,"column":8,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2380","line":5,"column":10,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2254","line":6,"column":10,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2268","line":7,"column":10,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2263","line":6,"column":3,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":7,"column":3,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":8,"column":3,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":8},{"ruleId":"2255","severity":1,"message":"2471","line":23,"column":6,"nodeType":"2257","endLine":23,"endColumn":8,"suggestions":"2472"},{"ruleId":"2229","severity":1,"message":"2263","line":6,"column":3,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":7,"column":3,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":8,"column":3,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":8},{"ruleId":"2255","severity":1,"message":"2473","line":23,"column":6,"nodeType":"2257","endLine":23,"endColumn":8,"suggestions":"2474"},{"ruleId":"2255","severity":1,"message":"2333","line":18,"column":6,"nodeType":"2257","endLine":18,"endColumn":8,"suggestions":"2475"},{"ruleId":"2247","severity":1,"message":"2248","line":115,"column":25,"nodeType":"2249","messageId":"2250","endLine":115,"endColumn":27},{"ruleId":"2247","severity":1,"message":"2248","line":115,"column":58,"nodeType":"2249","messageId":"2250","endLine":115,"endColumn":60},{"ruleId":"2247","severity":1,"message":"2248","line":127,"column":28,"nodeType":"2249","messageId":"2250","endLine":127,"endColumn":30},{"ruleId":"2229","severity":1,"message":"2263","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":14,"column":3,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":8},{"ruleId":"2255","severity":1,"message":"2468","line":51,"column":6,"nodeType":"2257","endLine":51,"endColumn":8,"suggestions":"2476"},{"ruleId":"2237","severity":1,"message":"2238","line":259,"column":1,"nodeType":"2239","messageId":"2240","endLine":269,"endColumn":2},{"ruleId":"2237","severity":1,"message":"2238","line":302,"column":1,"nodeType":"2239","messageId":"2240","endLine":316,"endColumn":2},{"ruleId":"2229","severity":1,"message":"2263","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":15,"column":3,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2286","line":23,"column":35,"nodeType":"2231","messageId":"2232","endLine":23,"endColumn":40},{"ruleId":"2229","severity":1,"message":"2477","line":26,"column":10,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2478","line":27,"column":10,"nodeType":"2231","messageId":"2232","endLine":27,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2479","line":27,"column":20,"nodeType":"2231","messageId":"2232","endLine":27,"endColumn":31},{"ruleId":"2229","severity":1,"message":"2480","line":28,"column":20,"nodeType":"2231","messageId":"2232","endLine":28,"endColumn":31},{"ruleId":"2229","severity":1,"message":"2481","line":29,"column":10,"nodeType":"2231","messageId":"2232","endLine":29,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2482","line":29,"column":20,"nodeType":"2231","messageId":"2232","endLine":29,"endColumn":31},{"ruleId":"2255","severity":1,"message":"2304","line":47,"column":6,"nodeType":"2257","endLine":47,"endColumn":8,"suggestions":"2483"},{"ruleId":"2229","severity":1,"message":"2484","line":81,"column":9,"nodeType":"2231","messageId":"2232","endLine":81,"endColumn":19},{"ruleId":"2229","severity":1,"message":"2253","line":10,"column":35,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":41},{"ruleId":"2247","severity":1,"message":"2248","line":74,"column":25,"nodeType":"2249","messageId":"2250","endLine":74,"endColumn":27},{"ruleId":"2247","severity":1,"message":"2248","line":91,"column":28,"nodeType":"2249","messageId":"2250","endLine":91,"endColumn":30},{"ruleId":"2247","severity":1,"message":"2248","line":108,"column":18,"nodeType":"2249","messageId":"2250","endLine":108,"endColumn":20},{"ruleId":"2247","severity":1,"message":"2248","line":223,"column":29,"nodeType":"2249","messageId":"2250","endLine":223,"endColumn":31},{"ruleId":"2229","severity":1,"message":"2230","line":2,"column":27,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2379","line":5,"column":8,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2380","line":6,"column":10,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2285","line":10,"column":8,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2241","line":21,"column":9,"nodeType":"2231","messageId":"2232","endLine":21,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2286","line":26,"column":54,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":59},{"ruleId":"2229","severity":1,"message":"2485","line":28,"column":10,"nodeType":"2231","messageId":"2232","endLine":28,"endColumn":15},{"ruleId":"2229","severity":1,"message":"2486","line":28,"column":17,"nodeType":"2231","messageId":"2232","endLine":28,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2379","line":3,"column":8,"nodeType":"2231","messageId":"2232","endLine":3,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2380","line":4,"column":10,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2264","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2487","line":6,"column":3,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":20},{"ruleId":"2229","severity":1,"message":"2254","line":25,"column":10,"nodeType":"2231","messageId":"2232","endLine":25,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2488","line":33,"column":10,"nodeType":"2231","messageId":"2232","endLine":33,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2272","line":39,"column":20,"nodeType":"2231","messageId":"2232","endLine":39,"endColumn":31},{"ruleId":"2229","severity":1,"message":"2273","line":40,"column":21,"nodeType":"2231","messageId":"2232","endLine":40,"endColumn":33},{"ruleId":"2229","severity":1,"message":"2274","line":41,"column":24,"nodeType":"2231","messageId":"2232","endLine":41,"endColumn":39},{"ruleId":"2229","severity":1,"message":"2275","line":42,"column":24,"nodeType":"2231","messageId":"2232","endLine":42,"endColumn":39},{"ruleId":"2229","severity":1,"message":"2489","line":52,"column":23,"nodeType":"2231","messageId":"2232","endLine":52,"endColumn":37},{"ruleId":"2255","severity":1,"message":"2490","line":57,"column":6,"nodeType":"2257","endLine":57,"endColumn":8,"suggestions":"2491"},{"ruleId":"2237","severity":1,"message":"2238","line":319,"column":1,"nodeType":"2239","messageId":"2240","endLine":323,"endColumn":2},{"ruleId":"2225","replacedBy":"2492"},{"ruleId":"2227","replacedBy":"2493"},{"ruleId":"2229","severity":1,"message":"2268","line":6,"column":10,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2263","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":14,"column":3,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2290","line":15,"column":3,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":10},{"ruleId":"2255","severity":1,"message":"2494","line":26,"column":6,"nodeType":"2257","endLine":26,"endColumn":8,"suggestions":"2495"},{"ruleId":"2278","severity":1,"message":"2279","line":86,"column":29,"nodeType":"2280","endLine":89,"endColumn":30},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2254","line":4,"column":10,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2496","line":10,"column":3,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2497","line":15,"column":3,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":19},{"ruleId":"2229","severity":1,"message":"2272","line":38,"column":20,"nodeType":"2231","messageId":"2232","endLine":38,"endColumn":31},{"ruleId":"2229","severity":1,"message":"2273","line":39,"column":21,"nodeType":"2231","messageId":"2232","endLine":39,"endColumn":33},{"ruleId":"2229","severity":1,"message":"2274","line":40,"column":24,"nodeType":"2231","messageId":"2232","endLine":40,"endColumn":39},{"ruleId":"2229","severity":1,"message":"2275","line":41,"column":24,"nodeType":"2231","messageId":"2232","endLine":41,"endColumn":39},{"ruleId":"2229","severity":1,"message":"2489","line":50,"column":23,"nodeType":"2231","messageId":"2232","endLine":50,"endColumn":37},{"ruleId":"2255","severity":1,"message":"2498","line":56,"column":6,"nodeType":"2257","endLine":56,"endColumn":8,"suggestions":"2499"},{"ruleId":"2243","severity":1,"message":"2244","line":305,"column":26,"nodeType":"2245","messageId":"2246","endLine":305,"endColumn":28},{"ruleId":"2247","severity":1,"message":"2248","line":306,"column":21,"nodeType":"2249","messageId":"2250","endLine":306,"endColumn":23},{"ruleId":"2500","severity":1,"message":"2501","line":314,"column":13,"nodeType":"2231","messageId":"2502","endLine":314,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2266","line":2,"column":41,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":52},{"ruleId":"2229","severity":1,"message":"2286","line":22,"column":35,"nodeType":"2231","messageId":"2232","endLine":22,"endColumn":40},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2237","severity":1,"message":"2238","line":67,"column":1,"nodeType":"2239","messageId":"2240","endLine":76,"endColumn":2},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2266","line":2,"column":41,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":52},{"ruleId":"2229","severity":1,"message":"2350","line":7,"column":10,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":20},{"ruleId":"2229","severity":1,"message":"2286","line":18,"column":35,"nodeType":"2231","messageId":"2232","endLine":18,"endColumn":40},{"ruleId":"2229","severity":1,"message":"2241","line":22,"column":9,"nodeType":"2231","messageId":"2232","endLine":22,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2291","line":3,"column":3,"nodeType":"2231","messageId":"2232","endLine":3,"endColumn":7},{"ruleId":"2229","severity":1,"message":"2292","line":4,"column":3,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2262","line":5,"column":3,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":11},{"ruleId":"2229","severity":1,"message":"2263","line":6,"column":3,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":7,"column":3,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":8,"column":3,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2266","line":4,"column":41,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":52},{"ruleId":"2255","severity":1,"message":"2397","line":12,"column":6,"nodeType":"2257","endLine":12,"endColumn":11,"suggestions":"2503"},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2266","line":2,"column":41,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":52},{"ruleId":"2229","severity":1,"message":"2286","line":23,"column":35,"nodeType":"2231","messageId":"2232","endLine":23,"endColumn":40},{"ruleId":"2229","severity":1,"message":"2241","line":26,"column":9,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2267","line":2,"column":17,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":2,"column":27,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2379","line":5,"column":8,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2380","line":6,"column":10,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2285","line":12,"column":8,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2241","line":21,"column":9,"nodeType":"2231","messageId":"2232","endLine":21,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2286","line":23,"column":35,"nodeType":"2231","messageId":"2232","endLine":23,"endColumn":40},{"ruleId":"2247","severity":1,"message":"2248","line":56,"column":14,"nodeType":"2249","messageId":"2250","endLine":56,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2267","line":2,"column":17,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":2,"column":27,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2251","line":8,"column":10,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2252","line":9,"column":13,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2267","line":2,"column":17,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":2,"column":27,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2286","line":23,"column":35,"nodeType":"2231","messageId":"2232","endLine":23,"endColumn":40},{"ruleId":"2247","severity":1,"message":"2248","line":59,"column":14,"nodeType":"2249","messageId":"2250","endLine":59,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2267","line":2,"column":17,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":2,"column":27,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2251","line":8,"column":10,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2252","line":9,"column":13,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2267","line":2,"column":17,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":2,"column":27,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2286","line":23,"column":35,"nodeType":"2231","messageId":"2232","endLine":23,"endColumn":40},{"ruleId":"2247","severity":1,"message":"2248","line":57,"column":14,"nodeType":"2249","messageId":"2250","endLine":57,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2267","line":2,"column":17,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":2,"column":27,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2251","line":8,"column":10,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2252","line":9,"column":13,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2268","line":6,"column":10,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2263","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":14,"column":3,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2290","line":15,"column":3,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":10},{"ruleId":"2255","severity":1,"message":"2504","line":28,"column":6,"nodeType":"2257","endLine":28,"endColumn":10,"suggestions":"2505"},{"ruleId":"2247","severity":1,"message":"2248","line":102,"column":30,"nodeType":"2249","messageId":"2250","endLine":102,"endColumn":32},{"ruleId":"2247","severity":1,"message":"2248","line":104,"column":33,"nodeType":"2249","messageId":"2250","endLine":104,"endColumn":35},{"ruleId":"2247","severity":1,"message":"2248","line":106,"column":35,"nodeType":"2249","messageId":"2250","endLine":106,"endColumn":37},{"ruleId":"2247","severity":1,"message":"2248","line":108,"column":37,"nodeType":"2249","messageId":"2250","endLine":108,"endColumn":39},{"ruleId":"2247","severity":1,"message":"2248","line":111,"column":37,"nodeType":"2249","messageId":"2250","endLine":111,"endColumn":39},{"ruleId":"2229","severity":1,"message":"2268","line":6,"column":10,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2263","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":14,"column":3,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2290","line":15,"column":3,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":10},{"ruleId":"2255","severity":1,"message":"2504","line":28,"column":6,"nodeType":"2257","endLine":28,"endColumn":10,"suggestions":"2506"},{"ruleId":"2247","severity":1,"message":"2248","line":96,"column":30,"nodeType":"2249","messageId":"2250","endLine":96,"endColumn":32},{"ruleId":"2247","severity":1,"message":"2248","line":98,"column":33,"nodeType":"2249","messageId":"2250","endLine":98,"endColumn":35},{"ruleId":"2247","severity":1,"message":"2248","line":100,"column":35,"nodeType":"2249","messageId":"2250","endLine":100,"endColumn":37},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2300","line":6,"column":27,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":35},{"ruleId":"2229","severity":1,"message":"2268","line":7,"column":10,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2262","line":11,"column":5,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2263","line":12,"column":5,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2264","line":15,"column":5,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2290","line":16,"column":5,"nodeType":"2231","messageId":"2232","endLine":16,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2286","line":24,"column":37,"nodeType":"2231","messageId":"2232","endLine":24,"endColumn":42},{"ruleId":"2229","severity":1,"message":"2253","line":24,"column":44,"nodeType":"2231","messageId":"2232","endLine":24,"endColumn":50},{"ruleId":"2229","severity":1,"message":"2263","line":13,"column":3,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":16,"column":3,"nodeType":"2231","messageId":"2232","endLine":16,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2290","line":17,"column":3,"nodeType":"2231","messageId":"2232","endLine":17,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2507","line":43,"column":11,"nodeType":"2231","messageId":"2232","endLine":43,"endColumn":23},{"ruleId":"2255","severity":1,"message":"2508","line":57,"column":6,"nodeType":"2257","endLine":57,"endColumn":12,"suggestions":"2509"},{"ruleId":"2237","severity":1,"message":"2238","line":191,"column":1,"nodeType":"2239","messageId":"2240","endLine":201,"endColumn":32},{"ruleId":"2229","severity":1,"message":"2263","line":13,"column":3,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":16,"column":3,"nodeType":"2231","messageId":"2232","endLine":16,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2290","line":17,"column":3,"nodeType":"2231","messageId":"2232","endLine":17,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2241","line":31,"column":9,"nodeType":"2231","messageId":"2232","endLine":31,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2507","line":41,"column":11,"nodeType":"2231","messageId":"2232","endLine":41,"endColumn":23},{"ruleId":"2255","severity":1,"message":"2508","line":56,"column":6,"nodeType":"2257","endLine":56,"endColumn":8,"suggestions":"2510"},{"ruleId":"2229","severity":1,"message":"2268","line":5,"column":10,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2264","line":13,"column":5,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2511","line":26,"column":12,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2512","line":26,"column":18,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":25},{"ruleId":"2255","severity":1,"message":"2513","line":42,"column":8,"nodeType":"2257","endLine":42,"endColumn":10,"suggestions":"2514"},{"ruleId":"2247","severity":1,"message":"2248","line":120,"column":45,"nodeType":"2249","messageId":"2250","endLine":120,"endColumn":47},{"ruleId":"2237","severity":1,"message":"2238","line":205,"column":1,"nodeType":"2239","messageId":"2240","endLine":220,"endColumn":35},{"ruleId":"2237","severity":1,"message":"2238","line":222,"column":1,"nodeType":"2239","messageId":"2240","endLine":241,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2264","line":13,"column":5,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2241","line":22,"column":11,"nodeType":"2231","messageId":"2232","endLine":22,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2511","line":26,"column":12,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2512","line":26,"column":18,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":25},{"ruleId":"2255","severity":1,"message":"2513","line":36,"column":8,"nodeType":"2257","endLine":36,"endColumn":10,"suggestions":"2515"},{"ruleId":"2247","severity":1,"message":"2248","line":113,"column":45,"nodeType":"2249","messageId":"2250","endLine":113,"endColumn":47},{"ruleId":"2229","severity":1,"message":"2263","line":10,"column":3,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":13,"column":3,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2254","line":15,"column":33,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":37},{"ruleId":"2229","severity":1,"message":"2286","line":24,"column":35,"nodeType":"2231","messageId":"2232","endLine":24,"endColumn":40},{"ruleId":"2229","severity":1,"message":"2253","line":24,"column":42,"nodeType":"2231","messageId":"2232","endLine":24,"endColumn":48},{"ruleId":"2229","severity":1,"message":"2241","line":25,"column":9,"nodeType":"2231","messageId":"2232","endLine":25,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2433","line":50,"column":18,"nodeType":"2231","messageId":"2232","endLine":50,"endColumn":30},{"ruleId":"2255","severity":1,"message":"2516","line":91,"column":6,"nodeType":"2257","endLine":91,"endColumn":8,"suggestions":"2517"},{"ruleId":"2247","severity":1,"message":"2248","line":189,"column":37,"nodeType":"2249","messageId":"2250","endLine":189,"endColumn":39},{"ruleId":"2247","severity":1,"message":"2248","line":192,"column":39,"nodeType":"2249","messageId":"2250","endLine":192,"endColumn":41},{"ruleId":"2247","severity":1,"message":"2248","line":195,"column":41,"nodeType":"2249","messageId":"2250","endLine":195,"endColumn":43},{"ruleId":"2247","severity":1,"message":"2248","line":211,"column":33,"nodeType":"2249","messageId":"2250","endLine":211,"endColumn":35},{"ruleId":"2247","severity":1,"message":"2248","line":225,"column":35,"nodeType":"2249","messageId":"2250","endLine":225,"endColumn":37},{"ruleId":"2247","severity":1,"message":"2248","line":249,"column":32,"nodeType":"2249","messageId":"2250","endLine":249,"endColumn":34},{"ruleId":"2247","severity":1,"message":"2248","line":250,"column":32,"nodeType":"2249","messageId":"2250","endLine":250,"endColumn":34},{"ruleId":"2247","severity":1,"message":"2248","line":251,"column":33,"nodeType":"2249","messageId":"2250","endLine":251,"endColumn":35},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2518","line":18,"column":13,"nodeType":"2231","messageId":"2232","endLine":18,"endColumn":24},{"ruleId":"2237","severity":1,"message":"2238","line":120,"column":1,"nodeType":"2239","messageId":"2240","endLine":151,"endColumn":11},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2266","line":2,"column":41,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":52},{"ruleId":"2229","severity":1,"message":"2293","line":17,"column":9,"nodeType":"2231","messageId":"2232","endLine":17,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2266","line":2,"column":41,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":52},{"ruleId":"2229","severity":1,"message":"2293","line":17,"column":9,"nodeType":"2231","messageId":"2232","endLine":17,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2266","line":2,"column":41,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":52},{"ruleId":"2229","severity":1,"message":"2286","line":16,"column":35,"nodeType":"2231","messageId":"2232","endLine":16,"endColumn":40},{"ruleId":"2229","severity":1,"message":"2241","line":17,"column":9,"nodeType":"2231","messageId":"2232","endLine":17,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2293","line":18,"column":9,"nodeType":"2231","messageId":"2232","endLine":18,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2366","line":19,"column":11,"nodeType":"2231","messageId":"2232","endLine":19,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2263","line":8,"column":3,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":10,"column":3,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2295","line":13,"column":10,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2345","line":15,"column":10,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2434","line":16,"column":16,"nodeType":"2231","messageId":"2232","endLine":16,"endColumn":25},{"ruleId":"2247","severity":1,"message":"2248","line":130,"column":28,"nodeType":"2249","messageId":"2250","endLine":130,"endColumn":30},{"ruleId":"2247","severity":1,"message":"2248","line":135,"column":30,"nodeType":"2249","messageId":"2250","endLine":135,"endColumn":32},{"ruleId":"2247","severity":1,"message":"2248","line":139,"column":32,"nodeType":"2249","messageId":"2250","endLine":139,"endColumn":34},{"ruleId":"2247","severity":1,"message":"2248","line":90,"column":46,"nodeType":"2249","messageId":"2250","endLine":90,"endColumn":48},{"ruleId":"2247","severity":1,"message":"2248","line":93,"column":46,"nodeType":"2249","messageId":"2250","endLine":93,"endColumn":48},{"ruleId":"2247","severity":1,"message":"2248","line":96,"column":46,"nodeType":"2249","messageId":"2250","endLine":96,"endColumn":48},{"ruleId":"2229","severity":1,"message":"2519","line":2,"column":8,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2263","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":10,"column":3,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2520","line":19,"column":8,"nodeType":"2231","messageId":"2232","endLine":19,"endColumn":19},{"ruleId":"2229","severity":1,"message":"2521","line":26,"column":9,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":15},{"ruleId":"2229","severity":1,"message":"2253","line":29,"column":35,"nodeType":"2231","messageId":"2232","endLine":29,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2356","line":30,"column":19,"nodeType":"2231","messageId":"2232","endLine":30,"endColumn":27},{"ruleId":"2229","severity":1,"message":"2522","line":31,"column":10,"nodeType":"2231","messageId":"2232","endLine":31,"endColumn":25},{"ruleId":"2247","severity":1,"message":"2248","line":202,"column":32,"nodeType":"2249","messageId":"2250","endLine":202,"endColumn":34},{"ruleId":"2247","severity":1,"message":"2248","line":258,"column":40,"nodeType":"2249","messageId":"2250","endLine":258,"endColumn":42},{"ruleId":"2247","severity":1,"message":"2248","line":274,"column":32,"nodeType":"2249","messageId":"2250","endLine":274,"endColumn":34},{"ruleId":"2278","severity":1,"message":"2279","line":276,"column":17,"nodeType":"2280","endLine":279,"endColumn":18},{"ruleId":"2278","severity":1,"message":"2279","line":286,"column":17,"nodeType":"2280","endLine":289,"endColumn":18},{"ruleId":"2247","severity":1,"message":"2248","line":487,"column":22,"nodeType":"2249","messageId":"2250","endLine":487,"endColumn":24},{"ruleId":"2237","severity":1,"message":"2238","line":563,"column":1,"nodeType":"2239","messageId":"2240","endLine":569,"endColumn":2},{"ruleId":"2237","severity":1,"message":"2238","line":570,"column":1,"nodeType":"2239","messageId":"2240","endLine":595,"endColumn":2},{"ruleId":"2229","severity":1,"message":"2519","line":2,"column":8,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2263","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":10,"column":3,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2520","line":19,"column":8,"nodeType":"2231","messageId":"2232","endLine":19,"endColumn":19},{"ruleId":"2229","severity":1,"message":"2521","line":24,"column":9,"nodeType":"2231","messageId":"2232","endLine":24,"endColumn":15},{"ruleId":"2229","severity":1,"message":"2253","line":27,"column":35,"nodeType":"2231","messageId":"2232","endLine":27,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2356","line":28,"column":19,"nodeType":"2231","messageId":"2232","endLine":28,"endColumn":27},{"ruleId":"2229","severity":1,"message":"2522","line":29,"column":10,"nodeType":"2231","messageId":"2232","endLine":29,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2523","line":33,"column":10,"nodeType":"2231","messageId":"2232","endLine":33,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2524","line":103,"column":9,"nodeType":"2231","messageId":"2232","endLine":103,"endColumn":25},{"ruleId":"2247","severity":1,"message":"2248","line":240,"column":40,"nodeType":"2249","messageId":"2250","endLine":240,"endColumn":42},{"ruleId":"2247","severity":1,"message":"2248","line":256,"column":32,"nodeType":"2249","messageId":"2250","endLine":256,"endColumn":34},{"ruleId":"2278","severity":1,"message":"2279","line":258,"column":17,"nodeType":"2280","endLine":261,"endColumn":18},{"ruleId":"2278","severity":1,"message":"2279","line":268,"column":17,"nodeType":"2280","endLine":271,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2519","line":2,"column":8,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2263","line":9,"column":3,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":10,"column":3,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2520","line":19,"column":8,"nodeType":"2231","messageId":"2232","endLine":19,"endColumn":19},{"ruleId":"2229","severity":1,"message":"2521","line":24,"column":9,"nodeType":"2231","messageId":"2232","endLine":24,"endColumn":15},{"ruleId":"2229","severity":1,"message":"2253","line":27,"column":35,"nodeType":"2231","messageId":"2232","endLine":27,"endColumn":41},{"ruleId":"2229","severity":1,"message":"2356","line":28,"column":19,"nodeType":"2231","messageId":"2232","endLine":28,"endColumn":27},{"ruleId":"2229","severity":1,"message":"2522","line":29,"column":10,"nodeType":"2231","messageId":"2232","endLine":29,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2523","line":33,"column":10,"nodeType":"2231","messageId":"2232","endLine":33,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2524","line":103,"column":9,"nodeType":"2231","messageId":"2232","endLine":103,"endColumn":25},{"ruleId":"2247","severity":1,"message":"2248","line":240,"column":40,"nodeType":"2249","messageId":"2250","endLine":240,"endColumn":42},{"ruleId":"2247","severity":1,"message":"2248","line":256,"column":32,"nodeType":"2249","messageId":"2250","endLine":256,"endColumn":34},{"ruleId":"2278","severity":1,"message":"2279","line":258,"column":17,"nodeType":"2280","endLine":261,"endColumn":18},{"ruleId":"2278","severity":1,"message":"2279","line":268,"column":17,"nodeType":"2280","endLine":271,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2254","line":4,"column":10,"nodeType":"2231","messageId":"2232","endLine":4,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2496","line":10,"column":3,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2497","line":15,"column":3,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":19},{"ruleId":"2229","severity":1,"message":"2525","line":27,"column":10,"nodeType":"2231","messageId":"2232","endLine":27,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2526","line":41,"column":10,"nodeType":"2231","messageId":"2232","endLine":41,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2527","line":41,"column":16,"nodeType":"2231","messageId":"2232","endLine":41,"endColumn":23},{"ruleId":"2229","severity":1,"message":"2272","line":44,"column":20,"nodeType":"2231","messageId":"2232","endLine":44,"endColumn":31},{"ruleId":"2229","severity":1,"message":"2273","line":45,"column":21,"nodeType":"2231","messageId":"2232","endLine":45,"endColumn":33},{"ruleId":"2229","severity":1,"message":"2274","line":46,"column":24,"nodeType":"2231","messageId":"2232","endLine":46,"endColumn":39},{"ruleId":"2229","severity":1,"message":"2275","line":47,"column":24,"nodeType":"2231","messageId":"2232","endLine":47,"endColumn":39},{"ruleId":"2229","severity":1,"message":"2489","line":56,"column":23,"nodeType":"2231","messageId":"2232","endLine":56,"endColumn":37},{"ruleId":"2255","severity":1,"message":"2528","line":62,"column":6,"nodeType":"2257","endLine":62,"endColumn":8,"suggestions":"2529"},{"ruleId":"2243","severity":1,"message":"2244","line":327,"column":26,"nodeType":"2245","messageId":"2246","endLine":327,"endColumn":28},{"ruleId":"2247","severity":1,"message":"2248","line":328,"column":21,"nodeType":"2249","messageId":"2250","endLine":328,"endColumn":23},{"ruleId":"2500","severity":1,"message":"2501","line":336,"column":13,"nodeType":"2231","messageId":"2502","endLine":336,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2457","severity":1,"message":"2458","line":74,"column":9,"nodeType":"2459","endLine":74,"endColumn":19},{"ruleId":"2243","severity":1,"message":"2375","line":130,"column":47,"nodeType":"2245","messageId":"2246","endLine":130,"endColumn":49},{"ruleId":"2243","severity":1,"message":"2375","line":156,"column":47,"nodeType":"2245","messageId":"2246","endLine":156,"endColumn":49},{"ruleId":"2243","severity":1,"message":"2375","line":258,"column":45,"nodeType":"2245","messageId":"2246","endLine":258,"endColumn":47},{"ruleId":"2243","severity":1,"message":"2375","line":336,"column":21,"nodeType":"2245","messageId":"2246","endLine":336,"endColumn":23},{"ruleId":"2457","severity":1,"message":"2458","line":378,"column":7,"nodeType":"2459","endLine":378,"endColumn":17},{"ruleId":"2457","severity":1,"message":"2458","line":380,"column":7,"nodeType":"2459","endLine":380,"endColumn":17},{"ruleId":"2457","severity":1,"message":"2458","line":390,"column":11,"nodeType":"2459","endLine":390,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2268","line":5,"column":10,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2264","line":13,"column":5,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2254","line":15,"column":10,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2513","line":29,"column":8,"nodeType":"2257","endLine":29,"endColumn":10,"suggestions":"2530"},{"ruleId":"2229","severity":1,"message":"2263","line":14,"column":3,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":17,"column":3,"nodeType":"2231","messageId":"2232","endLine":17,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2290","line":18,"column":3,"nodeType":"2231","messageId":"2232","endLine":18,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2241","line":36,"column":9,"nodeType":"2231","messageId":"2232","endLine":36,"endColumn":14},{"ruleId":"2255","severity":1,"message":"2508","line":63,"column":6,"nodeType":"2257","endLine":63,"endColumn":12,"suggestions":"2531"},{"ruleId":"2237","severity":1,"message":"2238","line":216,"column":1,"nodeType":"2239","messageId":"2240","endLine":226,"endColumn":32},{"ruleId":"2229","severity":1,"message":"2268","line":5,"column":10,"nodeType":"2231","messageId":"2232","endLine":5,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2264","line":13,"column":5,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2511","line":26,"column":12,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2512","line":26,"column":18,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":25},{"ruleId":"2255","severity":1,"message":"2513","line":31,"column":8,"nodeType":"2257","endLine":31,"endColumn":10,"suggestions":"2532"},{"ruleId":"2247","severity":1,"message":"2248","line":106,"column":45,"nodeType":"2249","messageId":"2250","endLine":106,"endColumn":47},{"ruleId":"2237","severity":1,"message":"2238","line":176,"column":1,"nodeType":"2239","messageId":"2240","endLine":191,"endColumn":35},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2266","line":2,"column":41,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":52},{"ruleId":"2229","severity":1,"message":"2293","line":17,"column":9,"nodeType":"2231","messageId":"2232","endLine":17,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2268","line":6,"column":10,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2263","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2264","line":14,"column":3,"nodeType":"2231","messageId":"2232","endLine":14,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2290","line":15,"column":3,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":10},{"ruleId":"2255","severity":1,"message":"2504","line":28,"column":6,"nodeType":"2257","endLine":28,"endColumn":10,"suggestions":"2533"},{"ruleId":"2247","severity":1,"message":"2248","line":96,"column":30,"nodeType":"2249","messageId":"2250","endLine":96,"endColumn":32},{"ruleId":"2247","severity":1,"message":"2248","line":98,"column":33,"nodeType":"2249","messageId":"2250","endLine":98,"endColumn":35},{"ruleId":"2247","severity":1,"message":"2248","line":100,"column":35,"nodeType":"2249","messageId":"2250","endLine":100,"endColumn":37},{"ruleId":"2247","severity":1,"message":"2248","line":102,"column":37,"nodeType":"2249","messageId":"2250","endLine":102,"endColumn":39},{"ruleId":"2247","severity":1,"message":"2248","line":105,"column":37,"nodeType":"2249","messageId":"2250","endLine":105,"endColumn":39},{"ruleId":"2229","severity":1,"message":"2534","line":10,"column":11,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":17},{"ruleId":"2278","severity":1,"message":"2279","line":61,"column":45,"nodeType":"2280","endLine":64,"endColumn":46},{"ruleId":"2225","replacedBy":"2535"},{"ruleId":"2227","replacedBy":"2536"},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2537","line":1,"column":38,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":45},{"ruleId":"2229","severity":1,"message":"2263","line":9,"column":5,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2264","line":12,"column":5,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2271","line":18,"column":8,"nodeType":"2231","messageId":"2232","endLine":18,"endColumn":20},{"ruleId":"2229","severity":1,"message":"2241","line":26,"column":11,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2538","line":29,"column":12,"nodeType":"2231","messageId":"2232","endLine":29,"endColumn":24},{"ruleId":"2255","severity":1,"message":"2539","line":44,"column":8,"nodeType":"2257","endLine":44,"endColumn":10,"suggestions":"2540"},{"ruleId":"2247","severity":1,"message":"2248","line":135,"column":44,"nodeType":"2249","messageId":"2250","endLine":135,"endColumn":46},{"ruleId":"2247","severity":1,"message":"2248","line":140,"column":48,"nodeType":"2249","messageId":"2250","endLine":140,"endColumn":50},{"ruleId":"2247","severity":1,"message":"2248","line":145,"column":52,"nodeType":"2249","messageId":"2250","endLine":145,"endColumn":54},{"ruleId":"2247","severity":1,"message":"2248","line":182,"column":40,"nodeType":"2249","messageId":"2250","endLine":182,"endColumn":42},{"ruleId":"2237","severity":1,"message":"2238","line":345,"column":1,"nodeType":"2239","messageId":"2240","endLine":384,"endColumn":63},{"ruleId":"2229","severity":1,"message":"2537","line":1,"column":38,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":45},{"ruleId":"2229","severity":1,"message":"2519","line":2,"column":8,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2263","line":10,"column":3,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":13,"column":3,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2241","line":23,"column":9,"nodeType":"2231","messageId":"2232","endLine":23,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2538","line":26,"column":10,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":22},{"ruleId":"2255","severity":1,"message":"2539","line":32,"column":6,"nodeType":"2257","endLine":32,"endColumn":8,"suggestions":"2541"},{"ruleId":"2247","severity":1,"message":"2248","line":124,"column":28,"nodeType":"2249","messageId":"2250","endLine":124,"endColumn":30},{"ruleId":"2247","severity":1,"message":"2248","line":129,"column":30,"nodeType":"2249","messageId":"2250","endLine":129,"endColumn":32},{"ruleId":"2247","severity":1,"message":"2248","line":134,"column":32,"nodeType":"2249","messageId":"2250","endLine":134,"endColumn":34},{"ruleId":"2229","severity":1,"message":"2241","line":28,"column":9,"nodeType":"2231","messageId":"2232","endLine":28,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2366","line":29,"column":11,"nodeType":"2231","messageId":"2232","endLine":29,"endColumn":13},{"ruleId":"2255","severity":1,"message":"2368","line":52,"column":6,"nodeType":"2257","endLine":52,"endColumn":8,"suggestions":"2542"},{"ruleId":"2247","severity":1,"message":"2248","line":273,"column":40,"nodeType":"2249","messageId":"2250","endLine":273,"endColumn":42},{"ruleId":"2229","severity":1,"message":"2543","line":335,"column":9,"nodeType":"2231","messageId":"2232","endLine":335,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2266","line":2,"column":41,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":52},{"ruleId":"2229","severity":1,"message":"2544","line":8,"column":8,"nodeType":"2231","messageId":"2232","endLine":8,"endColumn":15},{"ruleId":"2229","severity":1,"message":"2286","line":15,"column":35,"nodeType":"2231","messageId":"2232","endLine":15,"endColumn":40},{"ruleId":"2229","severity":1,"message":"2293","line":17,"column":9,"nodeType":"2231","messageId":"2232","endLine":17,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2366","line":18,"column":11,"nodeType":"2231","messageId":"2232","endLine":18,"endColumn":13},{"ruleId":"2229","severity":1,"message":"2537","line":1,"column":38,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":45},{"ruleId":"2229","severity":1,"message":"2519","line":2,"column":8,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2263","line":10,"column":3,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":13,"column":3,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2241","line":23,"column":9,"nodeType":"2231","messageId":"2232","endLine":23,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2538","line":26,"column":10,"nodeType":"2231","messageId":"2232","endLine":26,"endColumn":22},{"ruleId":"2255","severity":1,"message":"2539","line":32,"column":6,"nodeType":"2257","endLine":32,"endColumn":8,"suggestions":"2545"},{"ruleId":"2247","severity":1,"message":"2248","line":125,"column":28,"nodeType":"2249","messageId":"2250","endLine":125,"endColumn":30},{"ruleId":"2229","severity":1,"message":"2537","line":1,"column":38,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":45},{"ruleId":"2229","severity":1,"message":"2519","line":2,"column":8,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2263","line":10,"column":3,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":12},{"ruleId":"2229","severity":1,"message":"2288","line":11,"column":3,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2289","line":12,"column":3,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":6},{"ruleId":"2229","severity":1,"message":"2264","line":13,"column":3,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2241","line":24,"column":9,"nodeType":"2231","messageId":"2232","endLine":24,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2538","line":27,"column":10,"nodeType":"2231","messageId":"2232","endLine":27,"endColumn":22},{"ruleId":"2255","severity":1,"message":"2539","line":33,"column":6,"nodeType":"2257","endLine":33,"endColumn":8,"suggestions":"2546"},{"ruleId":"2247","severity":1,"message":"2248","line":124,"column":28,"nodeType":"2249","messageId":"2250","endLine":124,"endColumn":30},{"ruleId":"2247","severity":1,"message":"2248","line":132,"column":30,"nodeType":"2249","messageId":"2250","endLine":132,"endColumn":32},{"ruleId":"2247","severity":1,"message":"2248","line":137,"column":32,"nodeType":"2249","messageId":"2250","endLine":137,"endColumn":34},{"ruleId":"2247","severity":1,"message":"2248","line":142,"column":34,"nodeType":"2249","messageId":"2250","endLine":142,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2519","line":2,"column":8,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2263","line":10,"column":5,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2288","line":11,"column":5,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2289","line":12,"column":5,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2264","line":13,"column":5,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2271","line":20,"column":8,"nodeType":"2231","messageId":"2232","endLine":20,"endColumn":20},{"ruleId":"2229","severity":1,"message":"2547","line":29,"column":12,"nodeType":"2231","messageId":"2232","endLine":29,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2548","line":33,"column":12,"nodeType":"2231","messageId":"2232","endLine":33,"endColumn":18},{"ruleId":"2255","severity":1,"message":"2549","line":44,"column":8,"nodeType":"2257","endLine":44,"endColumn":10,"suggestions":"2550"},{"ruleId":"2247","severity":1,"message":"2248","line":213,"column":44,"nodeType":"2249","messageId":"2250","endLine":213,"endColumn":46},{"ruleId":"2247","severity":1,"message":"2248","line":221,"column":48,"nodeType":"2249","messageId":"2250","endLine":221,"endColumn":50},{"ruleId":"2247","severity":1,"message":"2248","line":228,"column":52,"nodeType":"2249","messageId":"2250","endLine":228,"endColumn":54},{"ruleId":"2237","severity":1,"message":"2238","line":442,"column":1,"nodeType":"2239","messageId":"2240","endLine":448,"endColumn":51},{"ruleId":"2229","severity":1,"message":"2519","line":2,"column":8,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2263","line":10,"column":5,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2288","line":11,"column":5,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2289","line":12,"column":5,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2264","line":13,"column":5,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2271","line":20,"column":8,"nodeType":"2231","messageId":"2232","endLine":20,"endColumn":20},{"ruleId":"2229","severity":1,"message":"2241","line":25,"column":11,"nodeType":"2231","messageId":"2232","endLine":25,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2547","line":29,"column":12,"nodeType":"2231","messageId":"2232","endLine":29,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2548","line":33,"column":12,"nodeType":"2231","messageId":"2232","endLine":33,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2551","line":33,"column":20,"nodeType":"2231","messageId":"2232","endLine":33,"endColumn":31},{"ruleId":"2255","severity":1,"message":"2549","line":44,"column":8,"nodeType":"2257","endLine":44,"endColumn":10,"suggestions":"2552"},{"ruleId":"2247","severity":1,"message":"2248","line":191,"column":44,"nodeType":"2249","messageId":"2250","endLine":191,"endColumn":46},{"ruleId":"2247","severity":1,"message":"2248","line":199,"column":48,"nodeType":"2249","messageId":"2250","endLine":199,"endColumn":50},{"ruleId":"2247","severity":1,"message":"2248","line":206,"column":52,"nodeType":"2249","messageId":"2250","endLine":206,"endColumn":54},{"ruleId":"2229","severity":1,"message":"2519","line":2,"column":8,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2263","line":10,"column":5,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2288","line":11,"column":5,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2289","line":12,"column":5,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2264","line":13,"column":5,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2271","line":20,"column":8,"nodeType":"2231","messageId":"2232","endLine":20,"endColumn":20},{"ruleId":"2229","severity":1,"message":"2241","line":25,"column":11,"nodeType":"2231","messageId":"2232","endLine":25,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2547","line":29,"column":12,"nodeType":"2231","messageId":"2232","endLine":29,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2548","line":33,"column":12,"nodeType":"2231","messageId":"2232","endLine":33,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2551","line":33,"column":20,"nodeType":"2231","messageId":"2232","endLine":33,"endColumn":31},{"ruleId":"2255","severity":1,"message":"2549","line":44,"column":8,"nodeType":"2257","endLine":44,"endColumn":10,"suggestions":"2553"},{"ruleId":"2247","severity":1,"message":"2248","line":191,"column":44,"nodeType":"2249","messageId":"2250","endLine":191,"endColumn":46},{"ruleId":"2247","severity":1,"message":"2248","line":199,"column":48,"nodeType":"2249","messageId":"2250","endLine":199,"endColumn":50},{"ruleId":"2247","severity":1,"message":"2248","line":206,"column":52,"nodeType":"2249","messageId":"2250","endLine":206,"endColumn":54},{"ruleId":"2229","severity":1,"message":"2519","line":2,"column":8,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2263","line":10,"column":5,"nodeType":"2231","messageId":"2232","endLine":10,"endColumn":14},{"ruleId":"2229","severity":1,"message":"2288","line":11,"column":5,"nodeType":"2231","messageId":"2232","endLine":11,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2289","line":12,"column":5,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":8},{"ruleId":"2229","severity":1,"message":"2264","line":13,"column":5,"nodeType":"2231","messageId":"2232","endLine":13,"endColumn":10},{"ruleId":"2229","severity":1,"message":"2271","line":20,"column":8,"nodeType":"2231","messageId":"2232","endLine":20,"endColumn":20},{"ruleId":"2229","severity":1,"message":"2241","line":25,"column":11,"nodeType":"2231","messageId":"2232","endLine":25,"endColumn":16},{"ruleId":"2229","severity":1,"message":"2547","line":29,"column":12,"nodeType":"2231","messageId":"2232","endLine":29,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2548","line":33,"column":12,"nodeType":"2231","messageId":"2232","endLine":33,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2551","line":33,"column":20,"nodeType":"2231","messageId":"2232","endLine":33,"endColumn":31},{"ruleId":"2255","severity":1,"message":"2549","line":44,"column":8,"nodeType":"2257","endLine":44,"endColumn":10,"suggestions":"2554"},{"ruleId":"2247","severity":1,"message":"2248","line":191,"column":44,"nodeType":"2249","messageId":"2250","endLine":191,"endColumn":46},{"ruleId":"2247","severity":1,"message":"2248","line":199,"column":48,"nodeType":"2249","messageId":"2250","endLine":199,"endColumn":50},{"ruleId":"2247","severity":1,"message":"2248","line":206,"column":52,"nodeType":"2249","messageId":"2250","endLine":206,"endColumn":54},{"ruleId":"2229","severity":1,"message":"2266","line":2,"column":41,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":52},{"ruleId":"2229","severity":1,"message":"2295","line":3,"column":10,"nodeType":"2231","messageId":"2232","endLine":3,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2268","line":6,"column":10,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2251","line":7,"column":10,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2466","line":9,"column":8,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2467","line":12,"column":7,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":13},{"ruleId":"2255","severity":1,"message":"2256","line":54,"column":6,"nodeType":"2257","endLine":54,"endColumn":14,"suggestions":"2555"},{"ruleId":"2278","severity":1,"message":"2279","line":82,"column":27,"nodeType":"2280","endLine":85,"endColumn":28},{"ruleId":"2247","severity":1,"message":"2248","line":93,"column":38,"nodeType":"2249","messageId":"2250","endLine":93,"endColumn":40},{"ruleId":"2423","severity":1,"message":"2424","line":93,"column":43,"nodeType":"2425","messageId":"2426","endLine":93,"endColumn":45},{"ruleId":"2423","severity":1,"message":"2424","line":93,"column":61,"nodeType":"2425","messageId":"2426","endLine":93,"endColumn":63},{"ruleId":"2423","severity":1,"message":"2427","line":93,"column":61,"nodeType":"2425","messageId":"2426","endLine":93,"endColumn":63},{"ruleId":"2247","severity":1,"message":"2248","line":93,"column":78,"nodeType":"2249","messageId":"2250","endLine":93,"endColumn":80},{"ruleId":"2423","severity":1,"message":"2427","line":93,"column":83,"nodeType":"2425","messageId":"2426","endLine":93,"endColumn":85},{"ruleId":"2429","severity":1,"message":"2430","line":87,"column":1,"nodeType":"2431","endLine":95,"endColumn":3},{"ruleId":"2229","severity":1,"message":"2267","line":1,"column":17,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":25},{"ruleId":"2229","severity":1,"message":"2230","line":1,"column":27,"nodeType":"2231","messageId":"2232","endLine":1,"endColumn":36},{"ruleId":"2229","severity":1,"message":"2266","line":2,"column":41,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":52},{"ruleId":"2229","severity":1,"message":"2268","line":6,"column":10,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2350","line":7,"column":10,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":20},{"ruleId":"2229","severity":1,"message":"2417","line":9,"column":8,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":22},{"ruleId":"2229","severity":1,"message":"2266","line":2,"column":41,"nodeType":"2231","messageId":"2232","endLine":2,"endColumn":52},{"ruleId":"2229","severity":1,"message":"2295","line":3,"column":10,"nodeType":"2231","messageId":"2232","endLine":3,"endColumn":17},{"ruleId":"2229","severity":1,"message":"2268","line":6,"column":10,"nodeType":"2231","messageId":"2232","endLine":6,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2251","line":7,"column":10,"nodeType":"2231","messageId":"2232","endLine":7,"endColumn":21},{"ruleId":"2229","severity":1,"message":"2466","line":9,"column":8,"nodeType":"2231","messageId":"2232","endLine":9,"endColumn":18},{"ruleId":"2229","severity":1,"message":"2467","line":12,"column":7,"nodeType":"2231","messageId":"2232","endLine":12,"endColumn":13},{"ruleId":"2255","severity":1,"message":"2256","line":54,"column":6,"nodeType":"2257","endLine":54,"endColumn":14,"suggestions":"2556"},{"ruleId":"2278","severity":1,"message":"2279","line":82,"column":27,"nodeType":"2280","endLine":85,"endColumn":28},{"ruleId":"2247","severity":1,"message":"2248","line":93,"column":38,"nodeType":"2249","messageId":"2250","endLine":93,"endColumn":40},{"ruleId":"2423","severity":1,"message":"2424","line":93,"column":43,"nodeType":"2425","messageId":"2426","endLine":93,"endColumn":45},{"ruleId":"2423","severity":1,"message":"2424","line":93,"column":61,"nodeType":"2425","messageId":"2426","endLine":93,"endColumn":63},{"ruleId":"2423","severity":1,"message":"2427","line":93,"column":61,"nodeType":"2425","messageId":"2426","endLine":93,"endColumn":63},{"ruleId":"2247","severity":1,"message":"2248","line":93,"column":78,"nodeType":"2249","messageId":"2250","endLine":93,"endColumn":80},{"ruleId":"2423","severity":1,"message":"2427","line":93,"column":83,"nodeType":"2425","messageId":"2426","endLine":93,"endColumn":85},"no-native-reassign",["2557"],"no-negated-in-lhs",["2558"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'PrivateRouteUser' is defined but never used.","'PrivateRouteAdmin' is defined but never used.","'PrivateRouteTL' is defined but never used.","'PrivateRouteTP' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'alert' is assigned a value but never used.","'name' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'yupResolver' is defined but never used.","'yup' is defined but never used.","'errors' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["2559"],"React Hook useEffect has missing dependencies: 'getQuery' and 'id'. Either include them or remove the dependency array.",["2560"],"'ImageUrl' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Table' is defined but never used.","'Msg' is assigned a value but never used.","'ModalFooter' is defined but never used.","'useState' is defined but never used.","'useAlert' is defined but never used.","React Hook useEffect has missing dependencies: 'getAcceptedProposal', 'getAllProposal', 'getDeclinedProposal', and 'getInprogressProposal'. Either include them or remove the dependency array.",["2561"],"'FeedbackIcon' is defined but never used.","'SetbaseMode' is assigned a value but never used.","'SetTranscode' is assigned a value but never used.","'SetAttendeeMode' is assigned a value but never used.","'SetVideoProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAssignmentData'. Either include it or remove the dependency array.",["2562"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'schedultTime' is defined but never used.","React Hook useEffect has missing dependencies: 'CountAllQuery', 'CountDeclined', 'CountInprogressAllocation', and 'CountInprogressProposal'. Either include them or remove the dependency array.",["2563"],"'Footer' is defined but never used.","'Swal' is defined but never used.","'reset' is assigned a value but never used.","'store2' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Tooltip' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'history' is assigned a value but never used.",["2564"],"'useForm' is defined but never used.","'setStore2' is assigned a value but never used.","'Reset' is defined but never used.","React Hook useEffect has a missing dependency: 'getTeamLeader'. Either include it or remove the dependency array.",["2565"],"'Redirect' is defined but never used.","'tlkey' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQueryData'. Either include it or remove the dependency array.",["2566"],"React Hook useEffect has a missing dependency: 'getQuery'. Either include it or remove the dependency array.",["2567"],"'expdeliverydate' is assigned a value but never used.","'expectedDeliveryDate' is assigned a value but never used.","'inprogress_allocation' is assigned a value but never used.","'inprogress_proposal' is assigned a value but never used.","'inprogress_assignment' is assigned a value but never used.","'admin_declined_query' is assigned a value but never used.","'customer_declined_Query' is assigned a value but never used.","'customer_declined_proposal' is assigned a value but never used.","'Customer_declined_payment' is assigned a value but never used.","'inprogress_preparation' is assigned a value but never used.","'inprogress_acceptance' is assigned a value but never used.","'client_discussion' is assigned a value but never used.","'draft_report' is assigned a value but never used.","'final_discussion' is assigned a value but never used.","'final_report' is assigned a value but never used.","'complete_inprocess' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["2568"],"React Hook useEffect has a missing dependency: 'getTaxProf'. Either include it or remove the dependency array.",["2569"],"'del' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAssignmentList'. Either include it or remove the dependency array.",["2570"],"'tpkey' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQueryData' and 'getTaxProfession'. Either include them or remove the dependency array.",["2571"],["2572"],"React Hook useEffect has a missing dependency: 'getProposalList'. Either include it or remove the dependency array.",["2573"],"no-dupe-keys","Duplicate key 'color'.","ObjectExpression",["2574"],"no-use-before-define","'name' was used before it was defined.","usedBeforeDefined","'Badge' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Select' is defined but never used.","React Hook useEffect has a missing dependency: 'getCompleteAssingment'. Either include it or remove the dependency array.",["2575"],"React Hook useEffect has a missing dependency: 'getInCompleteAssingment'. Either include it or remove the dependency array.",["2576"],"'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'getPendingforAcceptance'. Either include it or remove the dependency array.",["2577"],"'handleSubmit' is assigned a value but never used.","'register' is assigned a value but never used.","'Option' is assigned a value but never used.","'OptGroup' is assigned a value but never used.","'selectedData' is assigned a value but never used.","'setSelectedData' is assigned a value but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Button' is defined but never used.","'NavLink' is defined but never used.","React Hook useEffect has a missing dependency: 'getFeedback'. Either include it or remove the dependency array.",["2578"],"'id' is assigned a value but never used.","'cust_id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPaymentStatus'. Either include it or remove the dependency array.",["2579"],"'TeamFilter' is defined but never used.",["2580"],["2581"],"'store' is assigned a value but never used.",["2582"],"Array.prototype.map() expects a return value from arrow function.",["2583"],"React Hook useEffect has missing dependencies: 'getAdditionalQuery' and 'getQueryDetails'. Either include them or remove the dependency array.",["2584"],"'axios' is defined but never used.","'baseUrl' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'records' is assigned a value but never used.",["2557"],["2558"],["2557"],["2558"],["2557"],["2558"],"React Hook useEffect has a missing dependency: 'getPendingForAllocation'. Either include it or remove the dependency array.",["2585"],["2557"],["2558"],"React Hook useEffect has a missing dependency: 'getPendingForProposal'. Either include it or remove the dependency array.",["2586"],"React Hook useEffect has a missing dependency: 'getPendingForPayment'. Either include it or remove the dependency array.",["2587"],"React Hook useEffect has a missing dependency: 'getNotification'. Either include it or remove the dependency array.",["2588"],"'pendingAcceptence' is assigned a value but never used.","'incomplete' is assigned a value but never used.","'complete' is assigned a value but never used.","'CountComplete' is assigned a value but never used.",["2589"],"'assignment' is assigned a value but never used.","'useFieldArray' is defined but never used.","'Controller' is defined but never used.","'useWatch' is defined but never used.","'control' is assigned a value but never used.","'onSubmit' is assigned a value but never used.",["2557"],["2558"],["2557"],["2558"],"'AdditionalQuery' is defined but never used.","'AddAdditionalQuery' is defined but never used.","'DraftReports' is defined but never used.","'CommonServices' is defined but never used.","'CardText' is defined but never used.","'DownloadLink' is defined but never used.","'date_of_delivery' is assigned a value but never used.","'cust_accept_date' is assigned a value but never used.","'timeTaken' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'a' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setValue' is assigned a value but never used.","'amount_fixed' is assigned a value but never used.","'useParams' is defined but never used.","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 41 | \u001b[39m        \u001b[90m//         {course.courseName}\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 42 | \u001b[39m        \u001b[90m//     </option>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 43 | \u001b[39m        )\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 44 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 45 | \u001b[39m        \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m 46 | \u001b[39m            \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","'setInterest' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'interest.name'. Either include it or remove the dependency array.",["2590"],["2591"],"React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.",["2592"],["2557"],["2558"],"'states' is defined but never used.","no-useless-escape","Unnecessary escape character: \\_.","Literal","unnecessaryEscape",["2593","2594"],["2557"],["2558"],"'Cookies' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Tab' is defined but never used.","'Tabs' is defined but never used.","'TabList' is defined but never used.","'TabPanel' is defined but never used.",["2595"],["2596"],"'classNames' is defined but never used.","'Schema' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'userid'. Either include them or remove the dependency array.",["2597"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'getIncomplete'. Either include it or remove the dependency array.",["2598"],"React Hook useEffect has a missing dependency: 'getComplete'. Either include it or remove the dependency array.",["2599"],["2600"],["2601"],"'custId' is assigned a value but never used.","'custname' is assigned a value but never used.","'setCustName' is assigned a value but never used.","'setAssignID' is assigned a value but never used.","'assingNo' is assigned a value but never used.","'setAssingNo' is assigned a value but never used.",["2602"],"'todaysDate' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'IntegratedEditing' is defined but never used.","'loading' is assigned a value but never used.","'setCurrentDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAssignmentNo' and 'getData'. Either include them or remove the dependency array.",["2603"],["2557"],["2558"],"React Hook useEffect has a missing dependency: 'getReport'. Either include it or remove the dependency array.",["2604"],"'MonthView' is defined but never used.","'DragDropProvider' is defined but never used.","React Hook useEffect has missing dependencies: 'getAssignmentNo', 'getData', and 'getUsers'. Either include them or remove the dependency array.",["2605"],"no-redeclare","'variable' is already defined.","redeclared",["2606"],"React Hook useEffect has a missing dependency: 'getChatting'. Either include it or remove the dependency array.",["2607"],["2608"],"'message_type' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["2609"],["2610"],"'data' is assigned a value but never used.","'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMessage'. Either include it or remove the dependency array.",["2611"],["2612"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["2613"],"'totalAmount' is assigned a value but never used.","'Layout' is defined but never used.","'AdminFilter' is defined but never used.","'userid' is assigned a value but never used.","'assignmentCount' is assigned a value but never used.","'status' is assigned a value but never used.","'assingmentStatus' is assigned a value but never used.","'values' is defined but never used.","'read' is assigned a value but never used.","'setRead' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData' and 'getUsers'. Either include them or remove the dependency array.",["2614"],["2615"],["2616"],["2617"],["2618"],"'userId' is assigned a value but never used.",["2557"],["2558"],"'useMemo' is defined but never used.","'queriesCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQueriesData'. Either include it or remove the dependency array.",["2619"],["2620"],["2621"],"'sendEmail' is assigned a value but never used.","'Records' is defined but never used.",["2622"],["2623"],"'proposalCount' is assigned a value but never used.","'reject' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalData'. Either include it or remove the dependency array.",["2624"],"'setRejected' is assigned a value but never used.",["2625"],["2626"],["2627"],["2628"],["2629"],"no-global-assign","no-unsafe-negation",{"desc":"2630","fix":"2631"},{"desc":"2632","fix":"2633"},{"desc":"2634","fix":"2635"},{"desc":"2636","fix":"2637"},{"desc":"2638","fix":"2639"},{"desc":"2632","fix":"2640"},{"desc":"2641","fix":"2642"},{"desc":"2643","fix":"2644"},{"desc":"2645","fix":"2646"},{"desc":"2647","fix":"2648"},{"desc":"2649","fix":"2650"},{"desc":"2651","fix":"2652"},{"desc":"2653","fix":"2654"},{"desc":"2645","fix":"2655"},{"desc":"2656","fix":"2657"},{"desc":"2632","fix":"2658"},{"desc":"2659","fix":"2660"},{"desc":"2661","fix":"2662"},{"desc":"2663","fix":"2664"},{"desc":"2665","fix":"2666"},{"desc":"2667","fix":"2668"},{"desc":"2651","fix":"2669"},{"desc":"2647","fix":"2670"},{"desc":"2671","fix":"2672"},{"desc":"2632","fix":"2673"},{"desc":"2674","fix":"2675"},{"desc":"2676","fix":"2677"},{"desc":"2678","fix":"2679"},{"desc":"2680","fix":"2681"},{"desc":"2682","fix":"2683"},{"desc":"2671","fix":"2684"},{"desc":"2685","fix":"2686"},{"desc":"2651","fix":"2687"},{"desc":"2688","fix":"2689"},{"messageId":"2690","fix":"2691","desc":"2692"},{"messageId":"2693","fix":"2694","desc":"2695"},{"desc":"2647","fix":"2696"},{"desc":"2632","fix":"2697"},{"desc":"2698","fix":"2699"},{"desc":"2700","fix":"2701"},{"desc":"2702","fix":"2703"},{"desc":"2656","fix":"2704"},{"desc":"2698","fix":"2705"},{"desc":"2671","fix":"2706"},{"desc":"2707","fix":"2708"},{"desc":"2709","fix":"2710"},{"desc":"2711","fix":"2712"},{"desc":"2713","fix":"2714"},{"desc":"2715","fix":"2716"},{"desc":"2715","fix":"2717"},{"desc":"2718","fix":"2719"},{"desc":"2720","fix":"2721"},{"desc":"2722","fix":"2723"},{"desc":"2722","fix":"2724"},{"desc":"2725","fix":"2726"},{"desc":"2727","fix":"2728"},{"desc":"2722","fix":"2729"},{"desc":"2718","fix":"2730"},{"desc":"2722","fix":"2731"},{"desc":"2715","fix":"2732"},{"desc":"2733","fix":"2734"},{"desc":"2733","fix":"2735"},{"desc":"2667","fix":"2736"},{"desc":"2733","fix":"2737"},{"desc":"2733","fix":"2738"},{"desc":"2739","fix":"2740"},{"desc":"2739","fix":"2741"},{"desc":"2739","fix":"2742"},{"desc":"2739","fix":"2743"},{"desc":"2744","fix":"2745"},{"desc":"2744","fix":"2746"},"Update the dependencies array to be: [userId]",{"range":"2747","text":"2748"},"Update the dependencies array to be: [assingNo, getQuery, id]",{"range":"2749","text":"2750"},"Update the dependencies array to be: [getAcceptedProposal, getAllProposal, getDeclinedProposal, getInprogressProposal]",{"range":"2751","text":"2752"},"Update the dependencies array to be: [getAssignmentData]",{"range":"2753","text":"2754"},"Update the dependencies array to be: [CountAllQuery, CountDeclined, CountInprogressAllocation, CountInprogressProposal]",{"range":"2755","text":"2756"},{"range":"2757","text":"2750"},"Update the dependencies array to be: [getTeamLeader, id]",{"range":"2758","text":"2759"},"Update the dependencies array to be: [getQueryData]",{"range":"2760","text":"2761"},"Update the dependencies array to be: [getQuery, queryNo]",{"range":"2762","text":"2763"},"Update the dependencies array to be: [userid]",{"range":"2764","text":"2765"},"Update the dependencies array to be: [getTaxProf]",{"range":"2766","text":"2767"},"Update the dependencies array to be: [getAssignmentList]",{"range":"2768","text":"2769"},"Update the dependencies array to be: [getQueryData, getTaxProfession]",{"range":"2770","text":"2771"},{"range":"2772","text":"2763"},"Update the dependencies array to be: [getProposalList]",{"range":"2773","text":"2774"},{"range":"2775","text":"2750"},"Update the dependencies array to be: [getCompleteAssingment]",{"range":"2776","text":"2777"},"Update the dependencies array to be: [getInCompleteAssingment]",{"range":"2778","text":"2779"},"Update the dependencies array to be: [getPendingforAcceptance]",{"range":"2780","text":"2781"},"Update the dependencies array to be: [getFeedback]",{"range":"2782","text":"2783"},"Update the dependencies array to be: [getPaymentStatus]",{"range":"2784","text":"2785"},{"range":"2786","text":"2769"},{"range":"2787","text":"2765"},"Update the dependencies array to be: [getQuery]",{"range":"2788","text":"2789"},{"range":"2790","text":"2750"},"Update the dependencies array to be: [assingNo, getAdditionalQuery, getQueryDetails]",{"range":"2791","text":"2792"},"Update the dependencies array to be: [getPendingForAllocation]",{"range":"2793","text":"2794"},"Update the dependencies array to be: [getPendingForProposal]",{"range":"2795","text":"2796"},"Update the dependencies array to be: [getPendingForPayment]",{"range":"2797","text":"2798"},"Update the dependencies array to be: [getNotification, tokenKey]",{"range":"2799","text":"2800"},{"range":"2801","text":"2789"},"Update the dependencies array to be: [interest.name, reset]",{"range":"2802","text":"2803"},{"range":"2804","text":"2769"},"Update the dependencies array to be: [assignNo, getDetails]",{"range":"2805","text":"2806"},"removeEscape",{"range":"2807","text":"2808"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"2809","text":"2810"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"2811","text":"2765"},{"range":"2812","text":"2750"},"Update the dependencies array to be: [id, userid]",{"range":"2813","text":"2814"},"Update the dependencies array to be: [getIncomplete]",{"range":"2815","text":"2816"},"Update the dependencies array to be: [getComplete]",{"range":"2817","text":"2818"},{"range":"2819","text":"2774"},{"range":"2820","text":"2814"},{"range":"2821","text":"2789"},"Update the dependencies array to be: [getAssignmentNo, getData]",{"range":"2822","text":"2823"},"Update the dependencies array to be: [getReport]",{"range":"2824","text":"2825"},"Update the dependencies array to be: [getAssignmentNo, getData, getUsers]",{"range":"2826","text":"2827"},"Update the dependencies array to be: [getNotification, qno]",{"range":"2828","text":"2829"},"Update the dependencies array to be: [getChatting, id]",{"range":"2830","text":"2831"},{"range":"2832","text":"2831"},"Update the dependencies array to be: [item, props]",{"range":"2833","text":"2834"},"Update the dependencies array to be: [props]",{"range":"2835","text":"2836"},"Update the dependencies array to be: [getMessage]",{"range":"2837","text":"2838"},{"range":"2839","text":"2838"},"Update the dependencies array to be: [id]",{"range":"2840","text":"2841"},"Update the dependencies array to be: [getData, getUsers]",{"range":"2842","text":"2843"},{"range":"2844","text":"2838"},{"range":"2845","text":"2834"},{"range":"2846","text":"2838"},{"range":"2847","text":"2831"},"Update the dependencies array to be: [getQueriesData]",{"range":"2848","text":"2849"},{"range":"2850","text":"2849"},{"range":"2851","text":"2785"},{"range":"2852","text":"2849"},{"range":"2853","text":"2849"},"Update the dependencies array to be: [getProposalData]",{"range":"2854","text":"2855"},{"range":"2856","text":"2855"},{"range":"2857","text":"2855"},{"range":"2858","text":"2855"},"Update the dependencies array to be: [report, userId]",{"range":"2859","text":"2860"},{"range":"2861","text":"2860"},[3780,3782],"[userId]",[4479,4489],"[assingNo, getQuery, id]",[1114,1116],"[getAcceptedProposal, getAllProposal, getDeclinedProposal, getInprogressProposal]",[2877,2879],"[getAssignmentData]",[1130,1132],"[CountAllQuery, CountDeclined, CountInprogressAllocation, CountInprogressProposal]",[5123,5133],[1203,1207],"[getTeamLeader, id]",[1375,1377],"[getQueryData]",[2068,2077],"[getQuery, queryNo]",[5056,5058],"[userid]",[680,682],"[getTaxProf]",[867,869],"[getAssignmentList]",[1385,1387],"[getQueryData, getTaxProfession]",[2139,2148],[989,991],"[getProposalList]",[4963,4973],[755,757],"[getCompleteAssingment]",[665,667],"[getInCompleteAssingment]",[1101,1103],"[getPendingforAcceptance]",[646,648],"[getFeedback]",[1383,1385],"[getPaymentStatus]",[1865,1867],[2595,2597],[1369,1371],"[getQuery]",[1182,1192],[885,895],"[assingNo, getAdditionalQuery, getQueryDetails]",[644,646],"[getPendingForAllocation]",[643,645],"[getPendingForProposal]",[638,640],"[getPendingForPayment]",[479,489],"[getNotification, tokenKey]",[1460,1462],[917,924],"[interest.name, reset]",[965,967],[1326,1336],"[assignNo, getDetails]",[224,225],"",[224,224],"\\",[1179,1181],[4502,4512],[2099,2101],"[id, userid]",[581,583],"[getIncomplete]",[573,575],"[getComplete]",[646,648],[1305,1307],[1182,1184],[1633,1635],"[getAssignmentNo, getData]",[619,621],"[getReport]",[1662,1664],"[getAssignmentNo, getData, getUsers]",[425,430],"[getNotification, qno]",[681,685],"[getChatting, id]",[673,677],[1435,1441],"[item, props]",[1471,1473],"[props]",[1115,1117],"[getMessage]",[1019,1021],[2770,2772],"[id]",[1704,1706],"[getData, getUsers]",[715,717],[1551,1557],[811,813],[684,688],[1287,1289],"[getQueriesData]",[869,871],[1441,1443],[872,874],[875,877],[1323,1325],"[getProposalData]",[1330,1332],[1328,1330],[1328,1330],[1408,1416],"[report, userId]",[1414,1422]]