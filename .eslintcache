[{"E:\\Mazars_Pannel\\src\\index.js":"1","E:\\Mazars_Pannel\\src\\reportWebVitals.js":"2","E:\\Mazars_Pannel\\src\\App.js":"3","E:\\Mazars_Pannel\\src\\Service\\PublicRouteTL.js":"4","E:\\Mazars_Pannel\\src\\Service\\PublicRouteTP.js":"5","E:\\Mazars_Pannel\\src\\Service\\PublicRouteAdmin.js":"6","E:\\Mazars_Pannel\\src\\components\\PageNotFound\\PageNotFound.js":"7","E:\\Mazars_Pannel\\src\\Service\\PublicRouteUser.js":"8","E:\\Mazars_Pannel\\src\\views\\SignUpForm\\SignUp.js":"9","E:\\Mazars_Pannel\\src\\views\\MyAssingment\\MyAssingment.js":"10","E:\\Mazars_Pannel\\src\\views\\AddFressAssignment\\AddFreshAssingment.js":"11","E:\\Mazars_Pannel\\src\\views\\Dashboard\\Dashboard.js":"12","E:\\Mazars_Pannel\\src\\views\\QuestionnairePage\\QuestionnairePage.js":"13","E:\\Mazars_Pannel\\src\\views\\SelectCategoryPage\\SelectCategoryPage.js":"14","E:\\Mazars_Pannel\\src\\views\\ProposalView\\ProposalView.js":"15","E:\\Mazars_Pannel\\src\\views\\MeetingComponent\\MeetingComponent.js":"16","E:\\Mazars_Pannel\\src\\views\\QueriesTab\\QueriesTab.js":"17","E:\\Mazars_Pannel\\src\\views\\ChangePassword\\ChangePassword.js":"18","E:\\Mazars_Pannel\\src\\views\\ProposalTab\\ProposalTab.js":"19","E:\\Mazars_Pannel\\src\\views\\ForgetPassword\\ForgetPassword.js":"20","E:\\Mazars_Pannel\\src\\views\\EditQuery\\EditQuery.js":"21","E:\\Mazars_Pannel\\src\\views\\VideoCall\\VideoCall.js":"22","E:\\Mazars_Pannel\\src\\views\\Schedule\\schedule.js":"23","E:\\Mazars_Pannel\\src\\views\\ViewNotification\\ViewNotification.js":"24","E:\\Mazars_Pannel\\src\\views\\FeedbackData\\FeedbackData.js":"25","E:\\Mazars_Pannel\\src\\views\\Message\\Message.js":"26","E:\\Mazars_Pannel\\src\\views\\Feedback\\Feedback.js":"27","E:\\Mazars_Pannel\\src\\views\\NewPassword\\NewPassword.js":"28","E:\\Mazars_Pannel\\src\\views\\Chatting\\Chatting.js":"29","E:\\Mazars_Pannel\\src\\views\\AssignmentTab\\AssignmentTab.js":"30","E:\\Mazars_Pannel\\src\\views\\PaymentStatus\\PaymentStatus.js":"31","E:\\Mazars_Pannel\\src\\pages\\Admin\\AddNewTaxProf\\AddNewTaxProf.js":"32","E:\\Mazars_Pannel\\src\\pages\\Admin\\AddNewTeamLeader\\AddNewTeamLeader.js":"33","E:\\Mazars_Pannel\\src\\pages\\Admin\\Start\\Start.js":"34","E:\\Mazars_Pannel\\src\\pages\\Admin\\Dashboard\\Dashboard.js":"35","E:\\Mazars_Pannel\\src\\pages\\Admin\\Proposal\\Proposal.js":"36","E:\\Mazars_Pannel\\src\\pages\\Admin\\QueriesRecevied\\QueriesRecevied.js":"37","E:\\Mazars_Pannel\\src\\pages\\Admin\\EditTP\\EditTP.js":"38","E:\\Mazars_Pannel\\src\\pages\\Admin\\PaymentStatusTab\\PaymentStatusTab.js":"39","E:\\Mazars_Pannel\\src\\pages\\Admin\\QueryAssingment\\QueryAssingment.js":"40","E:\\Mazars_Pannel\\src\\pages\\Admin\\AssignmentTab\\index.js":"41","E:\\Mazars_Pannel\\src\\pages\\Admin\\Login\\Login.js":"42","E:\\Mazars_Pannel\\src\\pages\\Admin\\TaxProfessionalsTab\\TaxProfessionalsTab.js":"43","E:\\Mazars_Pannel\\src\\pages\\Admin\\FeedbackTab\\FeedbackTab.js":"44","E:\\Mazars_Pannel\\src\\pages\\Admin\\TeamLeaderTab\\TeamLeaderTab.js":"45","E:\\Mazars_Pannel\\src\\pages\\Admin\\Schedule\\Schedule.js":"46","E:\\Mazars_Pannel\\src\\pages\\Admin\\QueryRejection\\QueryRejection.js":"47","E:\\Mazars_Pannel\\src\\pages\\Admin\\ForgetPassword\\ForgetPassword.js":"48","E:\\Mazars_Pannel\\src\\pages\\Admin\\MeetingComponent\\MeetingComponent.js":"49","E:\\Mazars_Pannel\\src\\pages\\Admin\\PendingReceived\\PendingRecevived.js":"50","E:\\Mazars_Pannel\\src\\pages\\Admin\\Message\\Message.js":"51","E:\\Mazars_Pannel\\src\\pages\\Admin\\ViewNotification\\ViewNotification.js":"52","E:\\Mazars_Pannel\\src\\pages\\TL\\Start\\Start.js":"53","E:\\Mazars_Pannel\\src\\pages\\Admin\\QueriesTab\\QueriesTab.js":"54","E:\\Mazars_Pannel\\src\\pages\\Admin\\EditTL\\EditTL.js":"55","E:\\Mazars_Pannel\\src\\pages\\TL\\AddAssingmentStages\\AddAssingmentStages.js":"56","E:\\Mazars_Pannel\\src\\pages\\TL\\AddNew\\AddNew.js":"57","E:\\Mazars_Pannel\\src\\pages\\TL\\AddTeamProf\\AddTeamProf.js":"58","E:\\Mazars_Pannel\\src\\pages\\TL\\Dashboard\\Dashboard.js":"59","E:\\Mazars_Pannel\\src\\pages\\TL\\EditTP\\EditTP.js":"60","E:\\Mazars_Pannel\\src\\pages\\TL\\QueriesRecevied\\QueriesRecevied.js":"61","E:\\Mazars_Pannel\\src\\pages\\TL\\SendProposal\\SendProposal.js":"62","E:\\Mazars_Pannel\\src\\pages\\TL\\QueryAssingment\\QueryAssingment.js":"63","E:\\Mazars_Pannel\\src\\pages\\TL\\PaymentStatus\\PaymentStatus.js":"64","E:\\Mazars_Pannel\\src\\pages\\TL\\FeedbackTab\\FeedbackTab.js":"65","E:\\Mazars_Pannel\\src\\pages\\TL\\QueriesTab\\QueriesTab.js":"66","E:\\Mazars_Pannel\\src\\pages\\TL\\EditProposal\\EditProposal.js":"67","E:\\Mazars_Pannel\\src\\pages\\TL\\Login\\Login.js":"68","E:\\Mazars_Pannel\\src\\pages\\TL\\Message\\Message.js":"69","E:\\Mazars_Pannel\\src\\pages\\TL\\AssignmentForm\\AssignmentForm.js":"70","E:\\Mazars_Pannel\\src\\pages\\TL\\Chatting\\Chatting.js":"71","E:\\Mazars_Pannel\\src\\pages\\TL\\Schedule\\Schedule.js":"72","E:\\Mazars_Pannel\\src\\pages\\TL\\NewPassword\\NewPassword.js":"73","E:\\Mazars_Pannel\\src\\pages\\TL\\MeetingComponent\\MeetingComponent.js":"74","E:\\Mazars_Pannel\\src\\pages\\TL\\ViewNotification\\ViewNotification.js":"75","E:\\Mazars_Pannel\\src\\pages\\TL\\Proposal\\ProposalTab.js":"76","E:\\Mazars_Pannel\\src\\pages\\TL\\ViewReport\\ViewReport.js":"77","E:\\Mazars_Pannel\\src\\pages\\Admin\\NewPassword\\NewPassword.js":"78","E:\\Mazars_Pannel\\src\\pages\\TL\\PendingReceived\\PendingReceived.js":"79","E:\\Mazars_Pannel\\src\\pages\\TL\\ForgetPassword\\ForgetPassword.js":"80","E:\\Mazars_Pannel\\src\\pages\\TP\\Start\\Start.js":"81","E:\\Mazars_Pannel\\src\\pages\\TP\\Login\\Login.js":"82","E:\\Mazars_Pannel\\src\\pages\\Admin\\Chatting\\Chatting.js":"83","E:\\Mazars_Pannel\\src\\Service\\PrivateRouteTP.js":"84","E:\\Mazars_Pannel\\src\\pages\\TP\\QueriesRecevied\\QueriesRecevied.js":"85","E:\\Mazars_Pannel\\src\\pages\\TP\\QueriesTab\\QueriesTab.js":"86","E:\\Mazars_Pannel\\src\\pages\\TL\\AssignmentTab\\AssignmentTab.js":"87","E:\\Mazars_Pannel\\src\\Service\\PrivateRouteTL.js":"88","E:\\Mazars_Pannel\\src\\Service\\PrivateRouteAdmin.js":"89","E:\\Mazars_Pannel\\src\\config\\config.js":"90","E:\\Mazars_Pannel\\src\\common\\Alerts.js":"91","E:\\Mazars_Pannel\\src\\components\\Layout\\Layout.js":"92","E:\\Mazars_Pannel\\src\\pages\\TL\\AssignmentTab\\AllAssignment.js":"93","E:\\Mazars_Pannel\\src\\pages\\TL\\AssignmentTab\\DraftReportTab.js":"94","E:\\Mazars_Pannel\\src\\pages\\TL\\AssignmentTab\\DeliveryFinalTab.js":"95","E:\\Mazars_Pannel\\src\\components\\Header\\Header.js":"96","E:\\Mazars_Pannel\\src\\pages\\TP\\Complete\\Complete.js":"97","E:\\Mazars_Pannel\\src\\pages\\TP\\InComplete\\InComplete.js":"98","E:\\Mazars_Pannel\\src\\components\\QueryDetails\\QueryDetails.js":"99","E:\\Mazars_Pannel\\src\\components\\Footer\\Footer.js":"100","E:\\Mazars_Pannel\\src\\pages\\TL\\Proposal\\DeclinedProposal.js":"101","E:\\Mazars_Pannel\\src\\pages\\TL\\Proposal\\AcceptedProposal.js":"102","E:\\Mazars_Pannel\\src\\pages\\TL\\Proposal\\InprogressProposal.js":"103","E:\\Mazars_Pannel\\src\\pages\\TL\\Proposal\\AllProposal.js":"104","E:\\Mazars_Pannel\\src\\pages\\TL\\Schedule\\Demo.js":"105","E:\\Mazars_Pannel\\src\\common\\common.js":"106","E:\\Mazars_Pannel\\src\\pages\\TL\\meeting\\index.jsx":"107","E:\\Mazars_Pannel\\src\\components\\Records\\Records.js":"108","E:\\Mazars_Pannel\\src\\pages\\TL\\AssignmentTab\\FinalReportUpload.js":"109","E:\\Mazars_Pannel\\src\\pages\\TL\\AssignmentTab\\DraftReportUpload.js":"110","E:\\Mazars_Pannel\\src\\components\\Admin-Header\\Admin-Header.js":"111","E:\\Mazars_Pannel\\src\\components\\Admin-Footer\\Admin-Footer.js":"112","E:\\Mazars_Pannel\\src\\components\\Admin-Sidebar\\Admin-Sidebar.js":"113","E:\\Mazars_Pannel\\src\\components\\Search-Filter\\CustomerFilter.js":"114","E:\\Mazars_Pannel\\src\\components\\Search-Filter\\tlFilter.js":"115","E:\\Mazars_Pannel\\src\\components\\QueryDetails\\AddAdditionalQuery.js":"116","E:\\Mazars_Pannel\\src\\components\\QueryDetails\\ProposalDetails.js":"117","E:\\Mazars_Pannel\\src\\components\\QueryDetails\\AdditionalQuery.js":"118","E:\\Mazars_Pannel\\src\\components\\Search-Filter\\tpfilter.js":"119","E:\\Mazars_Pannel\\src\\components\\QueryDetails\\DraftReports.js":"120","E:\\Mazars_Pannel\\src\\components\\QueryDetails\\Feedback.js":"121","E:\\Mazars_Pannel\\src\\views\\AssignmentTab\\ViewAllReport.js":"122","E:\\Mazars_Pannel\\src\\components\\QueryDetails\\AssignmentDetails.js":"123","E:\\Mazars_Pannel\\src\\views\\AssignmentTab\\PaymentModal.js":"124","E:\\Mazars_Pannel\\src\\components\\QueryDetails\\BasicQuery.js":"125","E:\\Mazars_Pannel\\src\\views\\AssignmentTab\\RejectModal.js":"126","E:\\Mazars_Pannel\\src\\pages\\TL\\Proposal\\ChatHistory.js":"127","E:\\Mazars_Pannel\\src\\pages\\TL\\Message\\PaymentModal.js":"128","E:\\Mazars_Pannel\\src\\pages\\TL\\EditProposal\\Payment.js":"129","E:\\Mazars_Pannel\\src\\pages\\TL\\QueriesTab\\AllQuery.js":"130","E:\\Mazars_Pannel\\src\\pages\\TL\\SendProposal\\ProposalComponent.js":"131","E:\\Mazars_Pannel\\src\\pages\\Admin\\EditTL\\Reset.js":"132","E:\\Mazars_Pannel\\src\\pages\\TL\\DeclinedQuery\\DeclinedQuery.js":"133","E:\\Mazars_Pannel\\src\\pages\\TL\\InCompleteData\\InCompleteData.js":"134","E:\\Mazars_Pannel\\src\\pages\\TL\\CompleteData\\CompleteData.js":"135","E:\\Mazars_Pannel\\src\\pages\\TL\\PendingForAcceptence\\PendingForAcceptence.js":"136","E:\\Mazars_Pannel\\src\\components\\AllQueriesData\\AllQueriesData.js":"137","E:\\Mazars_Pannel\\src\\components\\DeclinedQueries\\DeclinedQueries.js":"138","E:\\Mazars_Pannel\\src\\components\\PendingForProposals\\PendingForProposals.js":"139","E:\\Mazars_Pannel\\src\\agora.config.js":"140","E:\\Mazars_Pannel\\src\\pages\\Admin\\Schedule\\Demo.js":"141","E:\\Mazars_Pannel\\src\\pages\\Admin\\AssignmentTab\\FinalReport.js":"142","E:\\Mazars_Pannel\\src\\components\\PendingForAllocation\\PendingForAllocation.js":"143","E:\\Mazars_Pannel\\src\\pages\\Admin\\AssignmentTab\\DraftReport.js":"144","E:\\Mazars_Pannel\\src\\pages\\Admin\\AssignmentTab\\AllAssignment.js":"145","E:\\Mazars_Pannel\\src\\config\\services\\TaxProffesional.js":"146","E:\\Mazars_Pannel\\src\\config\\services\\QueryDetails.js":"147","E:\\Mazars_Pannel\\src\\pages\\TL\\AgoraVideoCall\\index.jsx":"148","E:\\Mazars_Pannel\\src\\pages\\Admin\\meeting\\index.jsx":"149","E:\\Mazars_Pannel\\src\\pages\\TL\\SendProposal\\Payment.js":"150","E:\\Mazars_Pannel\\src\\components\\Search-Filter\\AdminFilter.js":"151","E:\\Mazars_Pannel\\src\\components\\PendingForAllocation\\History.js":"152","E:\\Mazars_Pannel\\src\\pages\\Admin\\AssignmentTab\\ViewAllReport.js":"153","E:\\Mazars_Pannel\\src\\config\\http\\http-common.js":"154","E:\\Mazars_Pannel\\src\\pages\\Admin\\AgoraVideoCall\\index.jsx":"155","E:\\Mazars_Pannel\\src\\pages\\TL\\PendingForAcceptence\\RejectedModal.js":"156","E:\\Mazars_Pannel\\src\\components\\Admin-Header\\NavWrapper.js":"157","E:\\Mazars_Pannel\\src\\pages\\Admin\\DeclinedProposal\\DeclinedPropoal.js":"158","E:\\Mazars_Pannel\\src\\pages\\Admin\\AcceptedProposal\\AcceptedProposal.js":"159","E:\\Mazars_Pannel\\src\\pages\\Admin\\AllProposalComponent\\AllProposalComponent.js":"160","E:\\Mazars_Pannel\\src\\components\\PendingForAcceptence\\PendingForAcceptence.js":"161","E:\\Mazars_Pannel\\src\\views\\Message\\PaymentModal.js":"162","E:\\Mazars_Pannel\\src\\views\\Schedule\\demo.js":"163","E:\\Mazars_Pannel\\src\\views\\EditQuery\\DeleteQuery.js":"164","E:\\Mazars_Pannel\\src\\views\\ProposalTab\\AllProposal.js":"165","E:\\Mazars_Pannel\\src\\views\\ProposalTab\\DeclinedProposal.js":"166","E:\\Mazars_Pannel\\src\\views\\ProposalTab\\AcceptedProposal.js":"167","E:\\Mazars_Pannel\\src\\views\\ProposalTab\\InprogressProposal.js":"168","E:\\Mazars_Pannel\\src\\components\\InputRoom\\index.js":"169","E:\\Mazars_Pannel\\src\\views\\QueriesTab\\InprogressProposal.js":"170","E:\\Mazars_Pannel\\src\\views\\QueriesTab\\InprogressAllocation.js":"171","E:\\Mazars_Pannel\\src\\views\\QueriesTab\\DeclinedQueries.js":"172","E:\\Mazars_Pannel\\src\\views\\QueriesTab\\AllQueriesData.js":"173","E:\\Mazars_Pannel\\src\\views\\ProposalView\\TermsConditions.js":"174","E:\\Mazars_Pannel\\src\\components\\Admin-Header\\CustomerNotification.js":"175","E:\\Mazars_Pannel\\src\\components\\CategorySelect\\CategorySelect.js":"176","E:\\Mazars_Pannel\\src\\Service\\PrivateRouteUser.js":"177","E:\\Mazars_Pannel\\src\\components\\meeting\\index.jsx":"178","E:\\Mazars_Pannel\\src\\pages\\TP\\NewPassword\\NewPassword.js":"179","E:\\Mazars_Pannel\\src\\pages\\TP\\ChangePassword\\ChangePassword.js":"180","E:\\Mazars_Pannel\\src\\pages\\TP\\SendProposal\\SendProposal.js":"181","E:\\Mazars_Pannel\\src\\pages\\TP\\EditProposal\\EditProposal.js":"182","E:\\Mazars_Pannel\\src\\pages\\TP\\Proposal\\Proposal.js":"183","E:\\Mazars_Pannel\\src\\pages\\TP\\Dashboard\\Dashboard.js":"184","E:\\Mazars_Pannel\\src\\pages\\TP\\ForgetPassword\\ForgetPassword.js":"185","E:\\Mazars_Pannel\\src\\views\\QueriesTab\\AdditionalQueryModal.js":"186","E:\\Mazars_Pannel\\src\\pages\\TP\\SendProposal\\ProposalComponent.js":"187","E:\\Mazars_Pannel\\src\\components\\AgoraVideoCall\\index.jsx":"188","E:\\Mazars_Pannel\\src\\views\\AssignmentTab\\AllAssignment.js":"189","E:\\Mazars_Pannel\\src\\views\\AssignmentTab\\CompletedAssignment.js":"190","E:\\Mazars_Pannel\\src\\views\\AssignmentTab\\CustomerDeclinedPayment.js":"191","E:\\Mazars_Pannel\\src\\views\\AssignmentTab\\InprogressAssignment.js":"192","E:\\Mazars_Pannel\\src\\views\\NewPassword\\ResendOtp.js":"193","E:\\Mazars_Pannel\\src\\views\\PaymentStatus\\AllPayment.js":"194","E:\\Mazars_Pannel\\src\\views\\PaymentStatus\\UnPaid.js":"195","E:\\Mazars_Pannel\\src\\views\\PaymentStatus\\Paid.js":"196","E:\\Mazars_Pannel\\src\\views\\PaymentStatus\\PaymentComponent.js":"197","E:\\Mazars_Pannel\\src\\pages\\TL\\PaymentStatus\\RejectedModal.js":"198","E:\\Mazars_Pannel\\src\\pages\\Admin\\PaymentStatusTab\\Paid.js":"199","E:\\Mazars_Pannel\\src\\pages\\Admin\\PaymentStatusTab\\Unpaid.js":"200","E:\\Mazars_Pannel\\src\\pages\\Admin\\PaymentStatusTab\\AllPayment.js":"201","E:\\Mazars_Pannel\\src\\views\\AddFressAssignment\\data.js":"202","E:\\Mazars_Pannel\\src\\views\\SignUpForm\\data.js":"203","E:\\Mazars_Pannel\\src\\pages\\Admin\\ViewProposal\\ViewComponent.js":"204","E:\\Mazars_Pannel\\src\\views\\SignUpForm\\city.js":"205","E:\\Mazars_Pannel\\src\\views\\ProposalTab\\ViewComponent.js":"206","E:\\Mazars_Pannel\\src\\components\\Common\\Mandatory.js":"207","E:\\Mazars_Pannel\\src\\views\\SignUpForm\\ResendOtp.js":"208","E:\\Mazars_Pannel\\src\\views\\SignUpForm\\GetOTP.js":"209","E:\\Mazars_Pannel\\src\\views\\VerifyOtp\\VerifyOtp.js":"210","E:\\Mazars_Pannel\\src\\views\\VrerifyOtpLogin\\VerifyOtpLogin.js":"211","E:\\Mazars_Pannel\\src\\views\\Start\\Start.js":"212","E:\\Mazars_Pannel\\src\\views\\RegisterYourSelf\\RegisterYourSelf.js":"213","E:\\Mazars_Pannel\\src\\views\\SignInForm\\SignIn.js":"214","E:\\Mazars_Pannel\\src\\views\\RegisterYourSelf\\VerifyOTP.js":"215"},{"size":494,"mtime":1627523950567,"results":"216","hashOfConfig":"217"},{"size":375,"mtime":1627523950741,"results":"218","hashOfConfig":"217"},{"size":17351,"mtime":1627794517563,"results":"219","hashOfConfig":"217"},{"size":869,"mtime":1627527225005,"results":"220","hashOfConfig":"217"},{"size":872,"mtime":1627527225020,"results":"221","hashOfConfig":"217"},{"size":815,"mtime":1627527225005,"results":"222","hashOfConfig":"217"},{"size":219,"mtime":1627527225083,"results":"223","hashOfConfig":"217"},{"size":812,"mtime":1627527225020,"results":"224","hashOfConfig":"217"},{"size":24789,"mtime":1627803648404,"results":"225","hashOfConfig":"217"},{"size":7484,"mtime":1627523951148,"results":"226","hashOfConfig":"217"},{"size":29642,"mtime":1627794518234,"results":"227","hashOfConfig":"217"},{"size":12222,"mtime":1627527225443,"results":"228","hashOfConfig":"217"},{"size":30193,"mtime":1627527225584,"results":"229","hashOfConfig":"217"},{"size":1192,"mtime":1627523951404,"results":"230","hashOfConfig":"217"},{"size":9418,"mtime":1627527225553,"results":"231","hashOfConfig":"217"},{"size":414,"mtime":1627527225474,"results":"232","hashOfConfig":"217"},{"size":4077,"mtime":1627523951393,"results":"233","hashOfConfig":"217"},{"size":13959,"mtime":1627794518239,"results":"234","hashOfConfig":"217"},{"size":4234,"mtime":1627523951338,"results":"235","hashOfConfig":"217"},{"size":3596,"mtime":1627794518245,"results":"236","hashOfConfig":"217"},{"size":17265,"mtime":1627794518240,"results":"237","hashOfConfig":"217"},{"size":395,"mtime":1627527225678,"results":"238","hashOfConfig":"217"},{"size":825,"mtime":1627527225584,"results":"239","hashOfConfig":"217"},{"size":3030,"mtime":1627527225678,"results":"240","hashOfConfig":"217"},{"size":4032,"mtime":1627527225474,"results":"241","hashOfConfig":"217"},{"size":8260,"mtime":1627527225490,"results":"242","hashOfConfig":"217"},{"size":4717,"mtime":1627527225474,"results":"243","hashOfConfig":"217"},{"size":8039,"mtime":1627794518248,"results":"244","hashOfConfig":"217"},{"size":6103,"mtime":1627523951089,"results":"245","hashOfConfig":"217"},{"size":6662,"mtime":1627527225387,"results":"246","hashOfConfig":"217"},{"size":3027,"mtime":1627527225490,"results":"247","hashOfConfig":"217"},{"size":10397,"mtime":1627523950571,"results":"248","hashOfConfig":"217"},{"size":17418,"mtime":1627523950572,"results":"249","hashOfConfig":"217"},{"size":460,"mtime":1627523950639,"results":"250","hashOfConfig":"217"},{"size":19474,"mtime":1627523950602,"results":"251","hashOfConfig":"217"},{"size":5034,"mtime":1627527225203,"results":"252","hashOfConfig":"217"},{"size":13701,"mtime":1627523950630,"results":"253","hashOfConfig":"217"},{"size":9311,"mtime":1627523950613,"results":"254","hashOfConfig":"217"},{"size":2930,"mtime":1627527225203,"results":"255","hashOfConfig":"217"},{"size":11893,"mtime":1627523950632,"results":"256","hashOfConfig":"217"},{"size":3854,"mtime":1627527225155,"results":"257","hashOfConfig":"217"},{"size":4827,"mtime":1627794517618,"results":"258","hashOfConfig":"217"},{"size":5205,"mtime":1627523950639,"results":"259","hashOfConfig":"217"},{"size":4840,"mtime":1627523950613,"results":"260","hashOfConfig":"217"},{"size":5583,"mtime":1627523950641,"results":"261","hashOfConfig":"217"},{"size":701,"mtime":1627527225211,"results":"262","hashOfConfig":"217"},{"size":4979,"mtime":1627527225203,"results":"263","hashOfConfig":"217"},{"size":2979,"mtime":1627794517617,"results":"264","hashOfConfig":"217"},{"size":408,"mtime":1627527225195,"results":"265","hashOfConfig":"217"},{"size":8163,"mtime":1627527225203,"results":"266","hashOfConfig":"217"},{"size":6358,"mtime":1627527225195,"results":"267","hashOfConfig":"217"},{"size":3327,"mtime":1627527225211,"results":"268","hashOfConfig":"217"},{"size":460,"mtime":1627523950710,"results":"269","hashOfConfig":"217"},{"size":4512,"mtime":1627523950631,"results":"270","hashOfConfig":"217"},{"size":12839,"mtime":1627523950605,"results":"271","hashOfConfig":"217"},{"size":19209,"mtime":1627523950652,"results":"272","hashOfConfig":"217"},{"size":3677,"mtime":1627523950653,"results":"273","hashOfConfig":"217"},{"size":3394,"mtime":1627523950654,"results":"274","hashOfConfig":"217"},{"size":13796,"mtime":1627523950666,"results":"275","hashOfConfig":"217"},{"size":3892,"mtime":1627523950678,"results":"276","hashOfConfig":"217"},{"size":12828,"mtime":1627523950702,"results":"277","hashOfConfig":"217"},{"size":517,"mtime":1627527225307,"results":"278","hashOfConfig":"217"},{"size":10695,"mtime":1627527225267,"results":"279","hashOfConfig":"217"},{"size":11022,"mtime":1627527225227,"results":"280","hashOfConfig":"217"},{"size":4413,"mtime":1627523950679,"results":"281","hashOfConfig":"217"},{"size":5105,"mtime":1627527225267,"results":"282","hashOfConfig":"217"},{"size":11498,"mtime":1627527225219,"results":"283","hashOfConfig":"217"},{"size":4783,"mtime":1627523950681,"results":"284","hashOfConfig":"217"},{"size":6120,"mtime":1627527225219,"results":"285","hashOfConfig":"217"},{"size":14247,"mtime":1627527225211,"results":"286","hashOfConfig":"217"},{"size":5517,"mtime":1627523950665,"results":"287","hashOfConfig":"217"},{"size":699,"mtime":1627527225299,"results":"288","hashOfConfig":"217"},{"size":6202,"mtime":1627527225219,"results":"289","hashOfConfig":"217"},{"size":396,"mtime":1627527225219,"results":"290","hashOfConfig":"217"},{"size":3495,"mtime":1627527225307,"results":"291","hashOfConfig":"217"},{"size":5076,"mtime":1627527225267,"results":"292","hashOfConfig":"217"},{"size":3031,"mtime":1627527225315,"results":"293","hashOfConfig":"217"},{"size":6143,"mtime":1627527225203,"results":"294","hashOfConfig":"217"},{"size":10307,"mtime":1627527225251,"results":"295","hashOfConfig":"217"},{"size":2982,"mtime":1627527225219,"results":"296","hashOfConfig":"217"},{"size":488,"mtime":1627523950740,"results":"297","hashOfConfig":"217"},{"size":4789,"mtime":1627523950728,"results":"298","hashOfConfig":"217"},{"size":7593,"mtime":1627523950600,"results":"299","hashOfConfig":"217"},{"size":496,"mtime":1627523950329,"results":"300","hashOfConfig":"217"},{"size":6482,"mtime":1627523950730,"results":"301","hashOfConfig":"217"},{"size":2757,"mtime":1627527225347,"results":"302","hashOfConfig":"217"},{"size":3460,"mtime":1627527225211,"results":"303","hashOfConfig":"217"},{"size":493,"mtime":1627523950329,"results":"304","hashOfConfig":"217"},{"size":497,"mtime":1627523950328,"results":"305","hashOfConfig":"217"},{"size":561,"mtime":1627527225147,"results":"306","hashOfConfig":"217"},{"size":2632,"mtime":1627527225036,"results":"307","hashOfConfig":"217"},{"size":1003,"mtime":1627523950477,"results":"308","hashOfConfig":"217"},{"size":20045,"mtime":1627794517723,"results":"309","hashOfConfig":"217"},{"size":14052,"mtime":1627527225211,"results":"310","hashOfConfig":"217"},{"size":14113,"mtime":1627527225211,"results":"311","hashOfConfig":"217"},{"size":3358,"mtime":1627794517614,"results":"312","hashOfConfig":"217"},{"size":2972,"mtime":1627527225315,"results":"313","hashOfConfig":"217"},{"size":3020,"mtime":1627527225339,"results":"314","hashOfConfig":"217"},{"size":7445,"mtime":1627527225115,"results":"315","hashOfConfig":"217"},{"size":293,"mtime":1627523950469,"results":"316","hashOfConfig":"217"},{"size":4766,"mtime":1627527225259,"results":"317","hashOfConfig":"217"},{"size":4693,"mtime":1627527225251,"results":"318","hashOfConfig":"217"},{"size":8505,"mtime":1627527225259,"results":"319","hashOfConfig":"217"},{"size":10258,"mtime":1627794517725,"results":"320","hashOfConfig":"217"},{"size":11386,"mtime":1627527225275,"results":"321","hashOfConfig":"217"},{"size":1052,"mtime":1627527225036,"results":"322","hashOfConfig":"217"},{"size":1727,"mtime":1627523950720,"results":"323","hashOfConfig":"217"},{"size":455,"mtime":1627527225139,"results":"324","hashOfConfig":"217"},{"size":3064,"mtime":1627527225219,"results":"325","hashOfConfig":"217"},{"size":4261,"mtime":1627527225219,"results":"326","hashOfConfig":"217"},{"size":3209,"mtime":1627527225036,"results":"327","hashOfConfig":"217"},{"size":451,"mtime":1627523950389,"results":"328","hashOfConfig":"217"},{"size":12114,"mtime":1627523950401,"results":"329","hashOfConfig":"217"},{"size":16767,"mtime":1627527225139,"results":"330","hashOfConfig":"217"},{"size":13899,"mtime":1627527225147,"results":"331","hashOfConfig":"217"},{"size":2176,"mtime":1627527225083,"results":"332","hashOfConfig":"217"},{"size":7097,"mtime":1627527225115,"results":"333","hashOfConfig":"217"},{"size":1655,"mtime":1627527225083,"results":"334","hashOfConfig":"217"},{"size":7314,"mtime":1627527225147,"results":"335","hashOfConfig":"217"},{"size":2733,"mtime":1627527225115,"results":"336","hashOfConfig":"217"},{"size":1496,"mtime":1627527225115,"results":"337","hashOfConfig":"217"},{"size":7603,"mtime":1627794518238,"results":"338","hashOfConfig":"217"},{"size":5765,"mtime":1627527225083,"results":"339","hashOfConfig":"217"},{"size":4790,"mtime":1627527225395,"results":"340","hashOfConfig":"217"},{"size":4140,"mtime":1627527225115,"results":"341","hashOfConfig":"217"},{"size":2899,"mtime":1627794518237,"results":"342","hashOfConfig":"217"},{"size":1767,"mtime":1627527225259,"results":"343","hashOfConfig":"217"},{"size":2304,"mtime":1627527225219,"results":"344","hashOfConfig":"217"},{"size":5159,"mtime":1627721329438,"results":"345","hashOfConfig":"217"},{"size":7426,"mtime":1627527225267,"results":"346","hashOfConfig":"217"},{"size":26443,"mtime":1627527225299,"results":"347","hashOfConfig":"217"},{"size":6500,"mtime":1627527225155,"results":"348","hashOfConfig":"217"},{"size":4226,"mtime":1627527225219,"results":"349","hashOfConfig":"217"},{"size":4554,"mtime":1627523950680,"results":"350","hashOfConfig":"217"},{"size":4539,"mtime":1627523950666,"results":"351","hashOfConfig":"217"},{"size":7056,"mtime":1627523950687,"results":"352","hashOfConfig":"217"},{"size":5594,"mtime":1627523950415,"results":"353","hashOfConfig":"217"},{"size":4479,"mtime":1627523950449,"results":"354","hashOfConfig":"217"},{"size":6824,"mtime":1627523950489,"results":"355","hashOfConfig":"217"},{"size":125,"mtime":1627527225020,"results":"356","hashOfConfig":"217"},{"size":18992,"mtime":1627527225203,"results":"357","hashOfConfig":"217"},{"size":12283,"mtime":1627523950577,"results":"358","hashOfConfig":"217"},{"size":9562,"mtime":1627523950488,"results":"359","hashOfConfig":"217"},{"size":12277,"mtime":1627523950576,"results":"360","hashOfConfig":"217"},{"size":19297,"mtime":1627523950575,"results":"361","hashOfConfig":"217"},{"size":519,"mtime":1627527225147,"results":"362","hashOfConfig":"217"},{"size":152,"mtime":1627527225147,"results":"363","hashOfConfig":"217"},{"size":15989,"mtime":1627523950656,"results":"364","hashOfConfig":"217"},{"size":1727,"mtime":1627523950650,"results":"365","hashOfConfig":"217"},{"size":5700,"mtime":1627527225299,"results":"366","hashOfConfig":"217"},{"size":15639,"mtime":1627527225139,"results":"367","hashOfConfig":"217"},{"size":1814,"mtime":1627527225083,"results":"368","hashOfConfig":"217"},{"size":3022,"mtime":1627794517616,"results":"369","hashOfConfig":"217"},{"size":192,"mtime":1627527225147,"results":"370","hashOfConfig":"217"},{"size":15984,"mtime":1627523950573,"results":"371","hashOfConfig":"217"},{"size":2745,"mtime":1627527225227,"results":"372","hashOfConfig":"217"},{"size":8952,"mtime":1627527225036,"results":"373","hashOfConfig":"217"},{"size":5640,"mtime":1627527225155,"results":"374","hashOfConfig":"217"},{"size":5425,"mtime":1627527225147,"results":"375","hashOfConfig":"217"},{"size":8974,"mtime":1627794517615,"results":"376","hashOfConfig":"217"},{"size":7071,"mtime":1627527225083,"results":"377","hashOfConfig":"217"},{"size":2309,"mtime":1627527225490,"results":"378","hashOfConfig":"217"},{"size":9257,"mtime":1627527225584,"results":"379","hashOfConfig":"217"},{"size":1845,"mtime":1627527225443,"results":"380","hashOfConfig":"217"},{"size":17128,"mtime":1627527225490,"results":"381","hashOfConfig":"217"},{"size":7783,"mtime":1627527225506,"results":"382","hashOfConfig":"217"},{"size":7246,"mtime":1627527225490,"results":"383","hashOfConfig":"217"},{"size":13167,"mtime":1627527225506,"results":"384","hashOfConfig":"217"},{"size":11262,"mtime":1627527225067,"results":"385","hashOfConfig":"217"},{"size":4498,"mtime":1627794518251,"results":"386","hashOfConfig":"217"},{"size":11325,"mtime":1627794518250,"results":"387","hashOfConfig":"217"},{"size":4822,"mtime":1627523951376,"results":"388","hashOfConfig":"217"},{"size":16207,"mtime":1627527225584,"results":"389","hashOfConfig":"217"},{"size":18251,"mtime":1627527225584,"results":"390","hashOfConfig":"217"},{"size":3742,"mtime":1627527225036,"results":"391","hashOfConfig":"217"},{"size":12108,"mtime":1627794517612,"results":"392","hashOfConfig":"217"},{"size":655,"mtime":1627523950330,"results":"393","hashOfConfig":"217"},{"size":1635,"mtime":1627523950544,"results":"394","hashOfConfig":"217"},{"size":6206,"mtime":1627527225347,"results":"395","hashOfConfig":"217"},{"size":5345,"mtime":1627527225315,"results":"396","hashOfConfig":"217"},{"size":488,"mtime":1627527225379,"results":"397","hashOfConfig":"217"},{"size":7920,"mtime":1627527225315,"results":"398","hashOfConfig":"217"},{"size":4630,"mtime":1627527225347,"results":"399","hashOfConfig":"217"},{"size":4825,"mtime":1627523950723,"results":"400","hashOfConfig":"217"},{"size":2978,"mtime":1627527225339,"results":"401","hashOfConfig":"217"},{"size":3430,"mtime":1627527225584,"results":"402","hashOfConfig":"217"},{"size":9107,"mtime":1627523950739,"results":"403","hashOfConfig":"217"},{"size":15989,"mtime":1627523950414,"results":"404","hashOfConfig":"217"},{"size":11425,"mtime":1627527225387,"results":"405","hashOfConfig":"217"},{"size":9483,"mtime":1627527225387,"results":"406","hashOfConfig":"217"},{"size":12298,"mtime":1627527225387,"results":"407","hashOfConfig":"217"},{"size":11907,"mtime":1627527225387,"results":"408","hashOfConfig":"217"},{"size":1198,"mtime":1627794518249,"results":"409","hashOfConfig":"217"},{"size":8197,"mtime":1627527225490,"results":"410","hashOfConfig":"217"},{"size":10429,"mtime":1627527225490,"results":"411","hashOfConfig":"217"},{"size":8256,"mtime":1627527225490,"results":"412","hashOfConfig":"217"},{"size":4792,"mtime":1627527225490,"results":"413","hashOfConfig":"217"},{"size":2569,"mtime":1627794517724,"results":"414","hashOfConfig":"217"},{"size":11801,"mtime":1627527225203,"results":"415","hashOfConfig":"217"},{"size":11807,"mtime":1627527225203,"results":"416","hashOfConfig":"217"},{"size":11814,"mtime":1627527225203,"results":"417","hashOfConfig":"217"},{"size":1291,"mtime":1627527225387,"results":"418","hashOfConfig":"217"},{"size":343533,"mtime":1627794519398,"results":"419","hashOfConfig":"217"},{"size":2468,"mtime":1627527225211,"results":"420","hashOfConfig":"217"},{"size":4841625,"mtime":1627527225646,"results":"421","hashOfConfig":"217"},{"size":2465,"mtime":1627527225553,"results":"422","hashOfConfig":"217"},{"size":413,"mtime":1627794517613,"results":"423","hashOfConfig":"217"},{"size":1461,"mtime":1627742252827,"results":"424","hashOfConfig":"217"},{"size":1790,"mtime":1627742252826,"results":"425","hashOfConfig":"217"},{"size":3151,"mtime":1627794519537,"results":"426","hashOfConfig":"217"},{"size":4543,"mtime":1627794519541,"results":"427","hashOfConfig":"217"},{"size":446,"mtime":1627794519516,"results":"428","hashOfConfig":"217"},{"size":5752,"mtime":1627794518372,"results":"429","hashOfConfig":"217"},{"size":6218,"mtime":1627794518765,"results":"430","hashOfConfig":"217"},{"size":5683,"mtime":1627794518442,"results":"431","hashOfConfig":"217"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},"8h6j1d",{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"439","messages":"440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"434"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"434"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"453","messages":"454","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"434"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"434"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"434"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"434"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"434"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"434"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"434"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"434"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"434"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"434"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"434"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"434"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"434"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"434"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"434"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"434"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"434"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"434"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"434"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"434"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"434"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"434"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"434"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"434"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"434"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"434"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"434"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"434"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"434"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"434"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"434"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"434"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"434"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"434"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"434"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"434"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"434"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"434"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"434"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"434"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"434"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"434"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"434"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"434"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"434"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"434"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"434"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"434"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"434"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"434"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"434"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"434"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"434"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"434"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621","usedDeprecatedRules":"434"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"434"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"434"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"434"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"434"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"434"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"434"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"434"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"434"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"434"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"434"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654","usedDeprecatedRules":"434"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"434"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"434"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663","usedDeprecatedRules":"434"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"434"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"434"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"676","usedDeprecatedRules":"434"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"434"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"434"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691","usedDeprecatedRules":"434"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"434"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"434"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"434"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"434"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"434"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"434"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"714","usedDeprecatedRules":"434"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"719","usedDeprecatedRules":"434"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"434"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"725","usedDeprecatedRules":"434"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"434"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"731","usedDeprecatedRules":"434"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"734","usedDeprecatedRules":"434"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"741","usedDeprecatedRules":"434"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"744","usedDeprecatedRules":"434"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"434"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"752","usedDeprecatedRules":"434"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755","usedDeprecatedRules":"434"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"434"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"434"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"764","usedDeprecatedRules":"434"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767","usedDeprecatedRules":"434"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770","usedDeprecatedRules":"434"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773","usedDeprecatedRules":"434"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"776","usedDeprecatedRules":"434"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"779","usedDeprecatedRules":"434"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"782","usedDeprecatedRules":"434"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"785","usedDeprecatedRules":"434"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"788","usedDeprecatedRules":"434"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791","usedDeprecatedRules":"434"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"794","usedDeprecatedRules":"434"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"797","usedDeprecatedRules":"434"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"800","usedDeprecatedRules":"434"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"803","usedDeprecatedRules":"434"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"806","usedDeprecatedRules":"434"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"809","usedDeprecatedRules":"434"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"812","usedDeprecatedRules":"434"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"815","usedDeprecatedRules":"434"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"818","usedDeprecatedRules":"434"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"821","usedDeprecatedRules":"434"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"824","usedDeprecatedRules":"434"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"827","usedDeprecatedRules":"434"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"830","usedDeprecatedRules":"434"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"835","usedDeprecatedRules":"434"},{"filePath":"836","messages":"837","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"838","usedDeprecatedRules":"434"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"841","usedDeprecatedRules":"434"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"844","usedDeprecatedRules":"434"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"847","usedDeprecatedRules":"434"},{"filePath":"848","messages":"849","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"850","usedDeprecatedRules":"434"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"853","usedDeprecatedRules":"434"},{"filePath":"854","messages":"855","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"856","usedDeprecatedRules":"434"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"434"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"864","usedDeprecatedRules":"434"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"867","usedDeprecatedRules":"434"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"870","usedDeprecatedRules":"434"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"875","usedDeprecatedRules":"434"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"878","usedDeprecatedRules":"434"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"881","usedDeprecatedRules":"434"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"884","usedDeprecatedRules":"434"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"887","usedDeprecatedRules":"434"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"890","usedDeprecatedRules":"434"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"893","usedDeprecatedRules":"434"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"896","usedDeprecatedRules":"434"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"899","usedDeprecatedRules":"434"},{"filePath":"900","messages":"901","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"902","usedDeprecatedRules":"434"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"905","usedDeprecatedRules":"434"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"908","usedDeprecatedRules":"434"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"911","usedDeprecatedRules":"434"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"914","usedDeprecatedRules":"434"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"917","usedDeprecatedRules":"434"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"920","usedDeprecatedRules":"434"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"923","usedDeprecatedRules":"434"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"926","usedDeprecatedRules":"434"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"929","usedDeprecatedRules":"434"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"932","usedDeprecatedRules":"434"},{"filePath":"933","messages":"934","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"935","usedDeprecatedRules":"434"},{"filePath":"936","messages":"937","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"938","usedDeprecatedRules":"434"},{"filePath":"939","messages":"940","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"943","messages":"944","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"945","usedDeprecatedRules":"434"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"948","usedDeprecatedRules":"434"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"951","messages":"952","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"953","usedDeprecatedRules":"434"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"956","usedDeprecatedRules":"434"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"959","usedDeprecatedRules":"434"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"962","usedDeprecatedRules":"434"},{"filePath":"963","messages":"964","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"965","usedDeprecatedRules":"434"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"968","usedDeprecatedRules":"434"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"971","usedDeprecatedRules":"434"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"974","usedDeprecatedRules":"434"},{"filePath":"975","messages":"976","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"977","usedDeprecatedRules":"434"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"980","usedDeprecatedRules":"434"},{"filePath":"981","messages":"982","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"983","usedDeprecatedRules":"434"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"986","usedDeprecatedRules":"434"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"989","usedDeprecatedRules":"434"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"992","usedDeprecatedRules":"434"},{"filePath":"993","messages":"994","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"995","usedDeprecatedRules":"434"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"998","usedDeprecatedRules":"434"},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1001","usedDeprecatedRules":"434"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1004","usedDeprecatedRules":"434"},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1007","usedDeprecatedRules":"434"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1010","usedDeprecatedRules":"434"},{"filePath":"1011","messages":"1012","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"1013","messages":"1014","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"1015","messages":"1016","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1017","usedDeprecatedRules":"434"},{"filePath":"1018","messages":"1019","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1022","usedDeprecatedRules":"434"},{"filePath":"1023","messages":"1024","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1027","usedDeprecatedRules":"434"},{"filePath":"1028","messages":"1029","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1034","messages":"1035","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1036","messages":"1037","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1038","messages":"1039","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1040","messages":"1041","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Mazars_Pannel\\src\\index.js",[],["1042","1043"],"E:\\Mazars_Pannel\\src\\reportWebVitals.js",[],"E:\\Mazars_Pannel\\src\\App.js",["1044","1045","1046","1047","1048"],"E:\\Mazars_Pannel\\src\\Service\\PublicRouteTL.js",["1049"],"import React from \"react\";\r\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\r\n\r\n\r\nconst PublicRoutesTL = ({ component: Component, ...rest }) => {\r\n\r\n    const location = useLocation();\r\n    \r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => {\r\n                const token = window.localStorage.getItem(\"tlkey\");\r\n\r\n                if (token) {\r\n                    return (\r\n                        <>\r\n                            <Redirect to={\"/teamleader/dashboard\"} />\r\n                        </>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <>\r\n                            <Component {...props} />\r\n                        </>\r\n                    )\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\n\r\nexport default PublicRoutesTL;\r\n\r\n\r\n","E:\\Mazars_Pannel\\src\\Service\\PublicRouteTP.js",["1050"],"import React from \"react\";\r\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\r\n\r\n\r\nconst PublicRoutesTP = ({ component: Component, ...rest }) => {\r\n\r\n    const location = useLocation();\r\n    \r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => {\r\n                const token = window.localStorage.getItem(\"tpkey\");\r\n\r\n                if (token) {\r\n                    return (\r\n                        <>\r\n                            <Redirect to={\"/taxprofession/dashboard\"} />\r\n                        </>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <>\r\n                            <Component {...props} />\r\n                        </>\r\n                    )\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\n\r\nexport default PublicRoutesTP;\r\n\r\n\r\n","E:\\Mazars_Pannel\\src\\Service\\PublicRouteAdmin.js",[],"E:\\Mazars_Pannel\\src\\components\\PageNotFound\\PageNotFound.js",[],"E:\\Mazars_Pannel\\src\\Service\\PublicRouteUser.js",[],"E:\\Mazars_Pannel\\src\\views\\SignUpForm\\SignUp.js",["1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079"],"E:\\Mazars_Pannel\\src\\views\\MyAssingment\\MyAssingment.js",["1080","1081"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport QueryDetails from \"../../components/QueryDetails/QueryDetails\";\r\n\r\nfunction MyAssingment() {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  const [submitData, setSubmitData] = useState([]);\r\n  const [assingNo, setAssingmentNo] = useState();\r\n  const [displayQuery, setDisplayQuery] = useState([]);\r\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\r\n  const [queryDocs, setQueryDocs] = useState([]);\r\n  const [paymentDetails, setPaymentDetails] = useState([]);\r\n  const [purpose, setPurpose] = useState([]);\r\n  const [year, setYear] = useState([]);\r\n  const [feedback, setFeedback] = useState([]);\r\n  const [reports, setReports] = useState([]);\r\n\r\n\r\n  const [diaplayProposal, setDisplayProposal] = useState({\r\n    amount: \"\",\r\n    accepted_amount: \"\",\r\n    payment_received: \"\",\r\n    cust_accept_date: \"\",\r\n    proposal_date: \"\",\r\n    description: \"\",\r\n\r\n    amount_type: \"\",\r\n    amount_fixed: \"\",\r\n    amount_hourly: \"\",\r\n    payment_terms: \"\",\r\n    no_of_installment: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n  });\r\n\r\n  const [diaplayAssignment, setDisplayAssignment] = useState([\r\n    {\r\n      assignment_number: \"\",\r\n      assignment_date: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [diaplayHistory, setDisplayHistory] = useState([\r\n    {\r\n      tlname: \"\",\r\n      date_of_allocation: \"\",\r\n      date_of_delivery: \"\",\r\n    },\r\n  ]);\r\n\r\n\r\n  useEffect(() => {\r\n    const getSubmittedAssingment = () => {\r\n      axios.get(`${baseUrl}/customers/getQueryDetails?id=${id}`).then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setSubmitData(res.data.result);\r\n          setDisplaySpecific(res.data.additional_queries);\r\n          setPaymentDetails(res.data.payment_detail);\r\n          setAssingmentNo(res.data.result[0].assign_no);\r\n          setFeedback(res.data.feedback_detail);\r\n          setReports(res.data.reports);\r\n     \r\n\r\n          var purposeItem = res.data.result[0].purpose_opinion;\r\n          var assementItem = res.data.result[0].assessment_year;\r\n\r\n          console.log(\"purposeItem-\", typeof purposeItem);\r\n          try {\r\n            var myPurpose = JSON.parse(purposeItem);\r\n            var myYear = JSON.parse(assementItem);\r\n            setPurpose(myPurpose);\r\n            setYear(myYear);\r\n          } catch (e) {\r\n            return false;\r\n          }\r\n\r\n          if (res.data.proposal_queries.length > 0) {\r\n            setDisplayProposal({\r\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\r\n              payment_received: res.data.proposal_queries[0].paid_amount,\r\n              amount: res.data.proposal_queries[0].amount,\r\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\r\n              proposal_date: res.data.proposal_queries[0].created,\r\n              description: res.data.proposal_queries[0].description,\r\n\r\n              amount_type: res.data.proposal_queries[0].amount_type,\r\n              amount_fixed: res.data.proposal_queries[0].amount,\r\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\r\n              payment_terms: res.data.proposal_queries[0].payment_terms,\r\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\r\n              installment_amount: res.data.proposal_queries[0].installment_amount,\r\n              due_date: res.data.proposal_queries[0].due_date,\r\n\r\n            });\r\n          }\r\n\r\n          if (res.data.assignment.length > 0) {\r\n            setDisplayAssignment({\r\n              assignment_number: res.data.assignment[0].assignment_number,\r\n              assignment_date: res.data.assignment[0].created,\r\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\r\n            });\r\n          }\r\n          if (res.data.history_queries.length > 0) {\r\n            setDisplayHistory({\r\n              tlname: res.data.history_queries[0].tname,\r\n              date_of_allocation:\r\n                res.data.history_queries[0].date_of_allocation,\r\n            });\r\n          }\r\n          if (res.data.queries_document) {\r\n            if (res.data.queries_document.length > 0) {\r\n              setQueryDocs(res.data.queries_document);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    };\r\n    getQuery();\r\n    getSubmittedAssingment();\r\n  }, [assingNo]);\r\n\r\n\r\n  const getQuery = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setDisplayQuery(res.data.result);\r\n        }\r\n      });\r\n  };\r\n\r\n  // console.log(\"purpose -\", JSON.parse(purpose));\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"schedule\">\r\n            <h3>Query Detail</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\r\n          <div class=\"card\">\r\n\r\n            <div\r\n              class=\"card-header\"\r\n              id=\"headingOne\"\r\n              style={{ padding: \".5rem .1rem\" }}\r\n            >\r\n              <h2 class=\"mb-0 query\">\r\n                <div>\r\n                  <button\r\n                    class=\"btn btn-success ml-3\"\r\n                    onClick={() => history.goBack()}\r\n                  >\r\n                    Go Back\r\n                  </button>\r\n                </div>\r\n              </h2>\r\n            </div>\r\n\r\n            {submitData.map((p, index) => (\r\n              <QueryDetails\r\n                p={p}\r\n                key={index}\r\n                diaplaySpecific={diaplaySpecific}\r\n                diaplayProposal={diaplayProposal}\r\n                diaplayHistory={diaplayHistory}\r\n                diaplayAssignment={diaplayAssignment}\r\n                displayQuery={displayQuery}\r\n                getQuery={getQuery}\r\n                assingNo={assingNo}\r\n                customerQuery=\"customerQuery\"\r\n                queryDocs={queryDocs}\r\n                purpose={purpose}\r\n                year={year}\r\n                paymentDetails={paymentDetails}\r\n                feedback={feedback}\r\n                reports={reports}\r\n\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default MyAssingment;\r\n\r\n// <h2 class=\"mb-0 query\">\r\n// <button\r\n//   class=\"btn btn-link btn-block text-left\"\r\n//   type=\"button\"\r\n//   data-toggle=\"collapse\"\r\n//   data-target={`#${i}`}\r\n//   aria-expanded=\"true\"\r\n//   aria-controls=\"collapseOne\"\r\n// >\r\n//   {p.assign_no}\r\n// </button>\r\n// <div style={{display:\"flex\" , justifyContent:\"space-evenly\"}}>\r\n//   <p class=\"m-0\" style={{ fontSize: \"15px\" }}>\r\n//     Submitted on\r\n//   </p>\r\n//   <p class=\"m-0\" style={{ fontSize: \"15px\" }}>\r\n//    : {p.created}\r\n//   </p>\r\n// </div>\r\n// <div class=\"d-flex\">\r\n//   <div class=\"additional\">\r\n//     <button\r\n//       class=\"btn\"\r\n//       data-toggle=\"modal\"\r\n//       data-target=\"#staticBackdrop\"\r\n//       onClick={addHandler}\r\n//     >\r\n//       Add. Query\r\n//     </button>\r\n//   </div>\r\n//   <div class=\"complete\">\r\n//     <p>Pending</p>\r\n//   </div>\r\n// </div>\r\n// </h2>\r\n","E:\\Mazars_Pannel\\src\\views\\AddFressAssignment\\AddFreshAssingment.js",["1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099"],"import { useForm, useFieldArray } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Select from \"react-select\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport Swal from \"sweetalert2\";\r\nimport { purpose, assessment_year } from \"./data\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SettingsApplications } from \"@material-ui/icons\";\r\n\r\n\r\n\r\nfunction AddFreshAssingment(props) {\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors, reset, control } = useForm({\r\n    defaultValues: {\r\n      users: [{ query: \"\" }],\r\n    },\r\n  });\r\n\r\n  const { append, remove, fields } = useFieldArray({\r\n    control,\r\n    name: \"users\",\r\n  });\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const category = window.localStorage.getItem(\"category\");\r\n  const userNameId = window.localStorage.getItem(\"name\");\r\n\r\n  const [selectedOption, setSelectedOption] = useState([]);\r\n  const [purposeOption, setPurposeOption] = useState([]);\r\n  const [custError, setcustError] = useState([])\r\n\r\n  const [load, setLoad] = useState(false);\r\n  const [selectError, setSelectError] = useState()\r\n  const [selectError2, setSelectError2] = useState()\r\n  const [specific, setSpecific] = useState();\r\n  const valiFun = (e) => {\r\n    setcustError(\"\")\r\n  }\r\n  const valiFun2 = (e) => {\r\n    setSelectError2(\"\")\r\n    setSpecific(e.target.value);\r\n  }\r\n  const purPoseQuery = (e) => {\r\n    setSelectError(\"\")\r\n    setPurposeOption(e)\r\n\r\n  }\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n    const a = value.p_fact;\r\n    const b = value.users;\r\n    if (a == '') {\r\n      setcustError(\"This feild is required\");\r\n      console.log(b)\r\n    }\r\n  \r\nelse if(purposeOption < 1) {\r\n  setSelectError(\"At lease one value should be enter\")\r\n}\r\n    else {\r\n      setcustError(\" \");\r\n      setLoad(true);\r\n      let formData = new FormData();\r\n\r\n      var uploadImg = value.upload;\r\n      if (uploadImg) {\r\n        for (var i = 0; i < uploadImg.length; i++) {\r\n          console.log(\"pics\", value.upload[i].pics[0]);\r\n          let a = value.upload[i].pics[0];\r\n          formData.append(\"upload_1[]\", a);\r\n        }\r\n      }\r\n\r\n      formData.append(\"fact\", value.p_fact);\r\n      formData.append(\"specific\", JSON.stringify(value.users));\r\n      formData.append(\"timelines\", value.p_timelines);\r\n      formData.append(\"user\", JSON.parse(userId));\r\n      formData.append(\"cid\", JSON.parse(category));\r\n      formData.append(\"softcopy_word\", Number(value.p_format_word));\r\n      formData.append(\r\n        \"softcopy_digitally_assigned\",\r\n        Number(value.p_format_digital)\r\n      );\r\n      formData.append(\r\n        \"printout_physically_assigned\",\r\n        Number(value.p_format_physically)\r\n      );\r\n      formData.append(\"case_name\", value.p_case_name);\r\n      formData.append(\"assessment_year\", JSON.stringify(selectedOption));\r\n      formData.append(\"purpose\", JSON.stringify(purposeOption));\r\n\r\n\r\n      axios\r\n        .post(`${baseUrl}/customers/PostQuestion`, formData, {\r\n          headers: {\r\n            \"content-type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then(function (response) {\r\n          console.log(\"res-\", response);\r\n          if (response.data.code === 1) {\r\n            reset();\r\n\r\n\r\n            var message = response.data.message\r\n            if (message == \"\") {\r\n              Swal.fire(\r\n                \"Success\",\r\n                `Query successfully added.`,\r\n                \"success\"\r\n              )\r\n            } else if (message.invalid) {\r\n              Swal.fire({\r\n                title: 'Error !',\r\n                html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n              })\r\n            } else if (message.faill && message.success) {\r\n              Swal.fire({\r\n                title: 'Success',\r\n                html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n                icon: 'success',\r\n              })\r\n            } else if (message.success) {\r\n              Swal.fire({\r\n                title: 'Success',\r\n                html: `<p>${message.success}</p>`,\r\n                icon: 'success',\r\n              })\r\n            }\r\n            else if (message.faill) {\r\n              Swal.fire({\r\n                title: 'Error !',\r\n                html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n                icon: 'error',\r\n              })\r\n            }\r\n\r\n            props.history.push(\"/customer/dashboard\");\r\n          } else {\r\n            setLoad(false);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"erroror - \", error);\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n        <Card>\r\n          <CardHeader>\r\n            <Row>\r\n              <Col md=\"4\">\r\n                <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                  Go Back\r\n                </button>\r\n              </Col>\r\n              <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <p style={{ fontSize: \"20px\" }}>Add Fresh Query</p>\r\n              </Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <div className=\"container\">\r\n\r\n            <div class=\"col-xl-8 col-lg-8 col-md-12 py-4\">\r\n              {load ? (\r\n                <Spinner size=\"sm\" color=\"primary\" />\r\n              ) : (\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Facts of the case *</label>\r\n                        <textarea\r\n                          className=\"form-control\"\r\n                          id=\"textarea\"\r\n                          rows=\"6\"\r\n                          name=\"p_fact\"\r\n                          onChange={valiFun}\r\n                          ref={register}\r\n                        ></textarea>\r\n                        <p style={{ \"color\": \"red\" }}>{custError}</p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"question_query mb-2\">\r\n                        <label className=\"form-label\">\r\n                          Specific Questions for advisory *\r\n                        </label>\r\n                        <div\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => append({ query: \"\" })}\r\n                        >\r\n                          +\r\n                        </div>\r\n                      </div>\r\n\r\n                      {fields.length > 0 &&\r\n                        fields.map((item, index) => (\r\n                          <div>\r\n                            {fields.length < 5 ? (\r\n                              <div\r\n                                className=\"question_query_field mb-2\"\r\n                                key={index}\r\n                              >\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  ref={register}\r\n                                  name={`users[${index}].query`}\r\n                                  onChange = {(e) =>valiFun2(e)}\r\n                                  placeholder=\"Specify your query\"\r\n                                  defaultValue={`${item.query}`}\r\n                                />\r\n                                <div\r\n                                  className=\"btn btn-primary ml-2\"\r\n                                  onClick={() => remove(index)}\r\n                                >\r\n                                  -\r\n                                </div>\r\n                              </div>\r\n                            ) : null}\r\n                          </div>\r\n                        ))}\r\n                        <p className=\"declined\">{selectError2}</p>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Case name</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_case_name\"\r\n                          ref={register}\r\n\r\n                          className=\"form-control\"\r\n                        />\r\n\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Assessment year</label>\r\n                        <Select\r\n                          closeMenuOnSelect={false}\r\n                          onChange={setSelectedOption}\r\n                          isMulti\r\n                          options={assessment_year}\r\n                        />\r\n\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                      <ImageUploads register={register} control={control} />\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">\r\n                          Format in which Opinion is required\r\n                        </label>\r\n                        <br />\r\n                        <div className=\"form-check\">\r\n                          <input\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            name=\"p_format_word\"\r\n                            ref={register}\r\n                            defaultChecked\r\n                          />\r\n                          <label className=\"form-check-label\">\r\n                            Softcopy - Word/ Pdf\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"form-check\">\r\n                          <input\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            name=\"p_format_digital\"\r\n                            ref={register}\r\n\r\n                          />\r\n                          <label className=\"form-check-label\">\r\n                            SoftCopy- Digitally Signed\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"form-check\">\r\n                          <input\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            name=\"p_format_physically\"\r\n                            ref={register}\r\n\r\n                          />\r\n                          <label className=\"form-check-label\">\r\n                            Printout- Physically Signed\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">\r\n                          Timelines within which Opinion is Required\r\n                        </label>\r\n                        <br />\r\n                        <div className=\"form-check\">\r\n                          <input\r\n                            className=\"form-check-input\"\r\n                            type=\"radio\"\r\n                            name=\"p_timelines\"\r\n                            ref={register}\r\n                            value=\"Urgent, (4-5 Working Days)\"\r\n\r\n                          />\r\n                          <label>Urgent, (4-5 Working Days)</label>\r\n                        </div>\r\n                        <div className=\"form-check\">\r\n                          <input\r\n                            className=\"form-check-input\"\r\n                            type=\"radio\"\r\n                            name=\"p_timelines\"\r\n                            ref={register}\r\n                            value=\"Regular (10-12 Working Days)\"\r\n                            defaultChecked\r\n                          />\r\n                          <label>Regular (10-12 Working Days)</label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"mb-3\">\r\n                        <label className=\"form-label\">\r\n                          Purpose for which Opinion is sought *\r\n                        </label>\r\n                        <Select\r\n                          closeMenuOnSelect={false}\r\n                          onChange={purPoseQuery}\r\n                          isMulti\r\n                          options={purpose}\r\n                        />\r\n                        <p style={{ \"color\": \"red\" }}>{selectError}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n        </Card>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddFreshAssingment;\r\n\r\n\r\n\r\nconst ImageUploads = ({ register, control }) => {\r\n  const { append, fields, remove } = useFieldArray({\r\n    control,\r\n    name: \"upload\",\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"question_query mb-2\">\r\n        <label className=\"form-label\">Upload Your Document</label>\r\n        <div className=\"btn btn-primary\" onClick={() => append({ pics: \"\" })}>\r\n          +\r\n        </div>\r\n      </div>\r\n\r\n      {fields.map((item, index) => (\r\n        <div className=\"question_query_field mb-2\" key={index}>\r\n          <input\r\n            type=\"file\"\r\n            name={`upload[${index}].pics`}\r\n            ref={register()}\r\n            className=\"form-control-file manage_file\"\r\n            defaultValue={item.pics}\r\n          />\r\n          <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\r\n            -\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import Layout from \"../../components/Layout/Layout\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import { useForm, useFieldArray } from \"react-hook-form\";\r\n// import { yupResolver } from \"@hookform/resolvers/yup\";\r\n// import axios from \"axios\";\r\n// import { baseUrl, ImageUrl } from \"../../config/config\";\r\n// import * as yup from \"yup\";\r\n// import { useAlert } from \"react-alert\";\r\n// import {\r\n//   Card,\r\n//   CardHeader,\r\n//   CardBody,\r\n//   CardTitle,\r\n//   Row,\r\n//   Col,\r\n//   Table,\r\n// } from \"reactstrap\";\r\n// import Select from \"react-select\";\r\n// import { Spinner } from \"reactstrap\";\r\n// import Alerts from \"../../common/Alerts\";\r\n// import Swal from \"sweetalert2\";\r\n// import classNames from \"classnames\";\r\n// import { purpose ,assessment_year } from \"./data\";\r\n\r\n\r\n\r\n\r\n// const Schema = yup.object().shape({\r\n//   p_fact: yup.string().required(\"mandatory\"),\r\n//   p_case_name: yup.string().required(\"mandatory\"),\r\n// });\r\n\r\n\r\n// function AddFreshAssingment(props) {\r\n//   const alert = useAlert();\r\n//   const history = useHistory();\r\n//   const [load, setLoad] = useState(false);\r\n\r\n//   const { handleSubmit, register, errors, reset, control } = useForm({\r\n//     resolver: yupResolver(Schema),\r\n//     defaultValues: {\r\n//       users: [{ query: \"\" }],\r\n//     },\r\n//   });\r\n\r\n//   const { append, remove, fields } = useFieldArray({\r\n//     control,\r\n//     name: \"users\",\r\n//   });\r\n\r\n//   const userId = window.localStorage.getItem(\"userid\");\r\n//   const category = window.localStorage.getItem(\"category\");\r\n//   const [selectedOption, setSelectedOption] = useState([]);\r\n//   const [purposeOption, setPurposeOption] = useState([]);\r\n\r\n\r\n//   const onSubmit = (value) => {\r\n//     console.log(\"value :\", value);\r\n//     setLoad(true);\r\n\r\n//     let formData = new FormData();\r\n\r\n//     var uploadImg = value.upload;\r\n//     if (uploadImg) {\r\n//       for (var i = 0; i < uploadImg.length; i++) {\r\n//         let a = value.upload[i].pics[0];\r\n//         formData.append(\"upload_1[]\", a);\r\n//       }\r\n//     }\r\n\r\n//     formData.append(\"fact\", value.p_fact);\r\n//     formData.append(\"specific\", JSON.stringify(value.users));\r\n//     formData.append(\"timelines\", value.p_timelines);\r\n//     formData.append(\"user\", JSON.parse(userId));\r\n//     formData.append(\"cid\", JSON.parse(category));\r\n//     formData.append(\"softcopy_word\", Number(value.p_format_word));\r\n//     formData.append(\r\n//       \"softcopy_digitally_assigned\",\r\n//       Number(value.p_format_digital)\r\n//     );\r\n//     formData.append(\r\n//       \"printout_physically_assigned\",\r\n//       Number(value.p_format_physically)\r\n//     );\r\n//     formData.append(\"case_name\", value.p_case_name);\r\n//     formData.append(\"assessment_year\", JSON.stringify(selectedOption));\r\n//     formData.append(\"purpose\", JSON.stringify(purposeOption));\r\n\r\n//     axios\r\n//       .post(`${baseUrl}/customers/PostQuestion`, formData, {\r\n//         headers: {\r\n//           \"content-type\": \"multipart/form-data\",\r\n//         },\r\n//       })\r\n//       .then(function (response) {\r\n//         console.log(\"res-\", response);\r\n//         console.log(\"msg-\", response.data.message[0]);\r\n//         if (response.data.code === 1) {\r\n//           reset();\r\n\r\n//           // var msg = response.data.message\r\n//           // var variable = \"Query Successfully Added\"\r\n//           // Alerts.SuccessMsg(variable, msg)\r\n\r\n//           var message = response.data.message\r\n//           if (message == \"\") {\r\n//             Swal.fire(\r\n//               \"Success\",\r\n//               `Query successfully added.`,\r\n//               \"success\"\r\n//             )\r\n//           } else if (message.invalid) {\r\n//             Swal.fire({\r\n//               title: 'Error !',\r\n//               html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n//             })\r\n//           } else if (message.faill && message.success) {\r\n//             Swal.fire({\r\n//               title: 'Success',\r\n//               html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n//               icon: 'success',\r\n//             })\r\n//           } else if (message.success) {\r\n//             Swal.fire({\r\n//               title: 'Success',\r\n//               html: `<p>${message.success}</p>`,\r\n//               icon: 'success',\r\n//             })\r\n//           }\r\n//           else if (message.faill) {\r\n//             Swal.fire({\r\n//               title: 'Error !',\r\n//               html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n//               icon: 'error',\r\n//             })\r\n//           }\r\n\r\n//           props.history.push(\"/customer/queries\");\r\n//         } else {\r\n//           setLoad(false);\r\n//         }\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(\"erroror - \", error);\r\n//       });\r\n//   };\r\n\r\n\r\n//   return (\r\n//     <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      // <Card>\r\n      //   <CardHeader>\r\n      //     <Row>\r\n      //       <Col md=\"4\">\r\n      //         <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n      //           <i class=\"fas fa-arrow-left mr-2\"></i>\r\n      //           Go Back\r\n      //         </button>\r\n      //       </Col>\r\n      //       <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      //         <p style={{ fontSize: \"20px\" }}>Add Fresh Query</p>\r\n      //       </Col>\r\n      //     </Row>\r\n      //   </CardHeader>\r\n\r\n//         <CardHeader>\r\n//           <div class=\"col-xl-8 col-lg-8 col-md-12 py-4\">\r\n//             {load ? (\r\n//               <Spinner size=\"sm\" color=\"primary\" />\r\n//             ) : (\r\n//               <form onSubmit={handleSubmit(onSubmit)}>\r\n//                 <div className=\"row\">\r\n//                   <div className=\"col-md-6\">\r\n//                     <div className=\"mb-3\">\r\n//                       <label className=\"form-label\">Facts of the case</label>\r\n//                       <textarea\r\n//                         className={classNames(\"form-control\", {\r\n//                           \"is-invalid\": errors.p_fact,\r\n//                         })}\r\n//                         id=\"textarea\"\r\n//                         rows=\"6\"\r\n//                         name=\"p_fact\"\r\n//                         ref={register}\r\n//                       ></textarea>\r\n//                       {errors.p_fact && (\r\n//                         <div className=\"invalid-feedback\">\r\n//                           {errors.p_fact.message}\r\n//                         </div>\r\n//                       )}\r\n//                     </div>\r\n//                   </div>\r\n\r\n//                   <div className=\"col-md-6\">\r\n//                     <div className=\"question_query mb-2\">\r\n//                       <label className=\"form-label\">\r\n//                         Specific Questions for advisory\r\n//                       </label>\r\n//                       <div\r\n//                         className=\"btn btn-primary\"\r\n//                         onClick={() => append({ query: \"\" })}\r\n//                       >\r\n//                         +\r\n//                       </div>\r\n//                     </div>\r\n\r\n//                     {fields.map((item, index) => (\r\n//                       <div className=\"question_query_field mb-2\" key={index}>\r\n//                         <input\r\n//                           type=\"text\"\r\n//                           className=\"form-control\"\r\n//                           ref={register}\r\n//                           name={`users[${index}].query`}\r\n//                           placeholder=\"Specify your query\"\r\n//                           defaultValue={`${item.query}`}\r\n//                         />\r\n//                         <div\r\n//                           className=\"btn btn-primary ml-2\"\r\n//                           onClick={() => remove(index)}\r\n//                         >\r\n//                           -\r\n//                         </div>\r\n//                       </div>\r\n//                     ))}\r\n//                   </div>\r\n\r\n//                   <div className=\"col-md-6\">\r\n//                     <div className=\"mb-3\">\r\n//                       <label className=\"form-label\">Case name</label>\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         name=\"p_case_name\"\r\n//                         ref={register}\r\n//                         className={classNames(\"form-control\", {\r\n//                           \"is-invalid\": errors.p_case_name,\r\n//                         })}\r\n//                       />\r\n//                       {errors.p_case_name && (\r\n//                         <div className=\"invalid-feedback\">\r\n//                           {errors.p_case_name.message}\r\n//                         </div>\r\n//                       )}\r\n//                     </div>\r\n//                   </div>\r\n//                   <div className=\"col-md-6\">\r\n//                     <div className=\"mb-3\">\r\n//                       <label className=\"form-label\">Assessment year</label>\r\n//                       <Select\r\n//                         closeMenuOnSelect={false}\r\n//                         onChange={setSelectedOption}\r\n//                         isMulti\r\n//                         options={assessment_year}\r\n//                       />\r\n//                     </div>\r\n//                   </div>\r\n\r\n//                   <div className=\"col-md-6\">\r\n//                     <ImageUploads register={register} control={control} />\r\n//                   </div>\r\n\r\n//                   <div className=\"col-md-6\">\r\n//                     <div className=\"mb-3\">\r\n//                       <label className=\"form-label\">\r\n//                         Format in which Opinion is required\r\n//                       </label>\r\n//                       <br />\r\n//                       <div className=\"form-check\">\r\n//                         <input\r\n//                           className=\"form-check-input\"\r\n//                           type=\"checkbox\"\r\n//                           name=\"p_format_word\"\r\n//                           ref={register}\r\n//                           defaultChecked\r\n//                         />\r\n//                         <label className=\"form-check-label\">\r\n//                           Softcopy - Word/ Pdf\r\n//                         </label>\r\n//                       </div>\r\n//                       <div className=\"form-check\">\r\n//                         <input\r\n//                           className=\"form-check-input\"\r\n//                           type=\"checkbox\"\r\n//                           name=\"p_format_digital\"\r\n//                           ref={register}\r\n//                         />\r\n//                         <label className=\"form-check-label\">\r\n//                           SoftCopy- Digitally Signed\r\n//                         </label>\r\n//                       </div>\r\n//                       <div className=\"form-check\">\r\n//                         <input\r\n//                           className=\"form-check-input\"\r\n//                           type=\"checkbox\"\r\n//                           name=\"p_format_physically\"\r\n//                           ref={register}\r\n//                         />\r\n//                         <label className=\"form-check-label\">\r\n//                           Printout- Physically Signed\r\n//                         </label>\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n//                   <div className=\"col-md-6\">\r\n//                     <div className=\"mb-3\">\r\n//                       <label className=\"form-label\">\r\n//                         Timelines within which Opinion is Required\r\n//                       </label>\r\n//                       <br />\r\n//                       <div className=\"form-check\">\r\n//                         <input\r\n//                           className=\"form-check-input\"\r\n//                           type=\"radio\"\r\n//                           name=\"p_timelines\"\r\n//                           ref={register}\r\n//                           value=\"Urgent, (4-5 Working Days)\"\r\n//                         />\r\n//                         <label>Urgent, (4-5 Working Days)</label>\r\n//                       </div>\r\n//                       <div className=\"form-check\">\r\n//                         <input\r\n//                           className=\"form-check-input\"\r\n//                           type=\"radio\"\r\n//                           name=\"p_timelines\"\r\n//                           ref={register}\r\n//                           value=\"Regular (10-12 Working Days)\"\r\n//                           defaultChecked\r\n//                         />\r\n//                         <label>Regular (10-12 Working Days)</label>\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n\r\n//                   <div className=\"col-md-6\">\r\n//                     <div className=\"mb-3\">\r\n//                       <label className=\"form-label\">\r\n//                         Purpose for which Opinion is sought\r\n//                       </label>\r\n//                       <Select\r\n//                         closeMenuOnSelect={false}\r\n//                         onChange={setPurposeOption}\r\n//                         isMulti\r\n//                         options={purpose}\r\n//                       />\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n\r\n//                 <button type=\"submit\" className=\"btn btn-primary\">\r\n//                   Submit\r\n//                 </button>\r\n//               </form>\r\n//             )}\r\n//           </div>\r\n//         </CardHeader>\r\n//       </Card>\r\n//     </Layout>\r\n//   );\r\n// }\r\n\r\n// export default AddFreshAssingment;\r\n\r\n\r\n// const ImageUploads = ({ register, control }) => {\r\n//   const { append, fields, remove } = useFieldArray({\r\n//     control,\r\n//     name: \"upload\",\r\n//   });\r\n//   return (\r\n//     <>\r\n//       <div className=\"question_query mb-2\">\r\n//         <label className=\"form-label\">Upload Your Document</label>\r\n//         <div className=\"btn btn-primary\" onClick={() => append({ pics: \"\" })}>\r\n//           +\r\n//         </div>\r\n//       </div>\r\n\r\n//       {fields.map((item, index) => (\r\n//         <div className=\"question_query_field mb-2\" key={index}>\r\n//           <input\r\n//             type=\"file\"\r\n//             name={`upload[${index}].pics`}\r\n//             ref={register()}\r\n//             className=\"form-control-file manage_file\"\r\n//             defaultValue={item.pics}\r\n//           />\r\n//           <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\r\n//             -\r\n//           </div>\r\n//         </div>\r\n//       ))}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n\r\n\r\n\r\n","E:\\Mazars_Pannel\\src\\views\\Dashboard\\Dashboard.js",["1100","1101","1102"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\n\r\n\r\nfunction Dashboard() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n\r\n  const [allQueries, setAllQueries] = useState({\r\n    total: '',\r\n    inprogress_queries: '',\r\n    inprogress_allocation: '',\r\n    inprogress_proposal: '',\r\n    inprogress_assignment: '',\r\n    complete_query: '',\r\n    declined_queries: '',\r\n    admin_declined_query: '',\r\n    customer_declined_Query: '',\r\n    customer_declined_proposal: '',\r\n    Customer_declined_payment: '',\r\n\r\n    allproposal: '',\r\n    accepted_proposals: '',\r\n    InProgress: '',\r\n    inprogress_preparation: '',\r\n    inprogress_acceptance: '',\r\n    declined: '',\r\n\r\n    allassignment: '',\r\n    inprogress: '',\r\n    complete: '',\r\n    customer_declined_Pay: '',\r\n\r\n\r\n    paid: '',\r\n    unpaid: '',\r\n    totalpayment: '',\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n  const { total, inprogress_queries,\r\n    inprogress_allocation, inprogress_proposal,\r\n    inprogress_assignment, complete_query,\r\n    declined_queries, admin_declined_query,\r\n    customer_declined_Query, customer_declined_proposal,\r\n    Customer_declined_payment,\r\n    allproposal,\r\n    inprogress_preparation,\r\n    declined, inprogress_acceptance,\r\n    accepted_proposals, InProgress,\r\n    allassignment, inprogress, complete,\r\n    customer_declined_Pay,\r\n    paid, unpaid, totalpayment,\r\n  } = allQueries;\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getAllQueries = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/totalComplete?uid=${JSON.parse(userId)}`)\r\n        .then((response) => {\r\n          console.log(\"code---\", response);\r\n          if (response.data.code === 1) {\r\n            setAllQueries({\r\n              total: response.data.result.total,\r\n              inprogress_queries: response.data.result.inprogress_queries,\r\n              inprogress_allocation: response.data.result.inprogress_allocation,\r\n              inprogress_proposal: response.data.result.inprogress_proposal,\r\n              inprogress_assignment: response.data.result.inprogress_assignment,\r\n              complete_query: response.data.result.complete_query,\r\n              declined_queries: response.data.result.declined_queries,\r\n              admin_declined_query: response.data.result.admin_declined_query,\r\n              customer_declined_Query: response.data.result.customer_declined_Query,\r\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\r\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\r\n\r\n              allproposal: response.data.result.proposal.allproposal,\r\n              InProgress: response.data.result.proposal.InProgress,\r\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\r\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\r\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\r\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\r\n\r\n\r\n              allassignment: response.data.result.assignment.allassignment,\r\n              inprogress: response.data.result.assignment.inprogress,\r\n              complete: response.data.result.assignment.complete,\r\n              customer_declined_Pay: response.data.result.assignment.customer_declined_payment,\r\n\r\n\r\n\r\n              totalpayment: response.data.result.payments.totalpayment,\r\n              paid: response.data.result.payments.paid,\r\n              unpaid: response.data.result.payments.unpaid,\r\n\r\n\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\", error);\r\n        });\r\n    };\r\n\r\n\r\n    getAllQueries();\r\n  }, []);\r\n\r\n  console.log(\"declined\", declined)\r\n\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3 content_header\">\r\n          <table className=\"table table-striped first main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\"> All Queries</th>\r\n                <th>{total}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n          <table className=\"table table-striped second main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Queries</th>\r\n                <th>{inprogress_queries}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Allocation</td>\r\n                <td>{inprogress_allocation}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Proposals</td>\r\n                <td>{inprogress_proposal}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Assignments</td>\r\n                <td>{inprogress_assignment}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n\r\n          <table className=\"table table-striped third main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Completed; Queries</th>\r\n                <th>{complete_query}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Completed; Assignments</td>\r\n                <td>{complete_query}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n\r\n          <table className=\"table table-striped forth main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Declined; Queries</th>\r\n                <th>{declined_queries}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Admin Declined; Queries</td>\r\n                <td>{admin_declined_query}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Customer Declined; Queries</td>\r\n                <td>{customer_declined_Query}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Customer Declined; Proposals</td>\r\n                <td>{customer_declined_proposal}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Customer Declined; Payment</td>\r\n                <td>{Customer_declined_payment}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n\r\n          <table className=\"table table-striped fifth main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Proposals</th>\r\n                <th>{allproposal}</th>\r\n\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped sixth main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Proposals</th>\r\n                <th>{InProgress}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody classNameName=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Preparation</td>\r\n                <td>{inprogress_preparation}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Acceptance</td>\r\n                <td>{inprogress_acceptance}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <table className=\"table table-striped seventh main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Accepted; Proposals </th>\r\n                <th>{accepted_proposals}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped eight main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Customer Declined; Proposals</th>\r\n                <th>{declined}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n          <table className=\"table table-striped ninth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Assignments</th>\r\n                <th>{allassignment}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Assignments</th>\r\n                <th>{inprogress}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Completed; Assignments</th>\r\n                <th>{complete}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Customer Declined; Payment</th>\r\n                <th>{customer_declined_Pay}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n        </div>\r\n\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n\r\n          <table className=\"table table-striped twelvth main_table\">\r\n            <thead className=\"payment_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Payments</th>\r\n                <th>{totalpayment}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n          <table className=\"table table-striped thirteen main_table\">\r\n            <thead className=\"payment_thead2\">\r\n              <tr>\r\n                <th className=\"left_side\">Paid</th>\r\n                <th>{paid}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped thirteen main_table\">\r\n            <thead className=\"payment_thead2\">\r\n              <tr>\r\n                <th className=\"left_side\">Unpaid</th>\r\n                <th>{unpaid}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n","E:\\Mazars_Pannel\\src\\views\\QuestionnairePage\\QuestionnairePage.js",["1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118"],"import { useForm, useFieldArray } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Select from \"react-select\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nfunction Questionnaire(props) {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, errors, reset, control } = useForm();\r\n  const { append, remove, fields } = useFieldArray({\r\n    control,\r\n    name: \"specific\",\r\n  });\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const category = window.localStorage.getItem(\"category\");\r\n  const userNameId = window.localStorage.getItem(\"name\");\r\n  const [selectedOption, setSelectedOption] = useState([]);\r\n  const [purposeOption, setPurposeOption] = useState([]);\r\n  const [custError, setcustError] = useState([])\r\n \r\n  const [modal, setModal] = useState(true);\r\n  const toggle = () => setModal(!modal);\r\n  const [load, setLoad] = useState(false);\r\n  const [selectError, setSelectError] = useState()\r\n\r\n\r\nconst valiFun = (e) =>{\r\n  setcustError(\"\")\r\n}\r\nconst purPoseQuery = (e) => {\r\n  setSelectError(\"\")\r\n  setPurposeOption(e)\r\n}\r\n  const onSubmit = (value) => {\r\n    const a = value.p_fact;\r\n    \r\n    if (a == ''){\r\n     \r\n    setcustError(\"This feild is required\");\r\n    console.log(\"secondValidation\")\r\n    }\r\n    \r\n   else if(purposeOption === \"undefined\" || purposeOption === '' || purposeOption.length ===0 || purposeOption === \"null\"){\r\n     setSelectError(\"Please select atlease one value\")\r\n   }\r\n    else {\r\n      setcustError(\" \");\r\n      setLoad(true);\r\n    let formData = new FormData();\r\n\r\n    var uploadImg = value.upload;\r\n    if (uploadImg) {\r\n      for (var i = 0; i < uploadImg.length; i++) {\r\n        console.log(\"pics\", value.upload[i].pics[0]);\r\n        let a = value.upload[i].pics[0];\r\n        formData.append(\"upload_1[]\", a);\r\n      }\r\n    }\r\n   \r\n    formData.append(\"fact\", value.p_fact);\r\n    formData.append(\"specific\", JSON.stringify(value.specific));\r\n    formData.append(\"timelines\", value.p_timelines);\r\n    formData.append(\"user\", JSON.parse(userId));\r\n    formData.append(\"cid\", JSON.parse(category));\r\n    formData.append(\"softcopy_word\", Number(value.p_format_word));\r\n    formData.append(\r\n      \"softcopy_digitally_assigned\",\r\n      Number(value.p_format_digital)\r\n    );\r\n    formData.append(\r\n      \"printout_physically_assigned\",\r\n      Number(value.p_format_physically)\r\n    );\r\n\r\n    formData.append(\"case_name\", value.p_case_name);\r\n    formData.append(\"assessment_year\", JSON.stringify(selectedOption));\r\n    formData.append(\"purpose\", JSON.stringify(purposeOption));\r\n   \r\n   \r\n      axios\r\n      .post(`${baseUrl}/customers/PostQuestion`, formData, {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          reset();\r\n\r\n          // var msg = response.data.message\r\n          // var variable = \"Query Successfully Added\"\r\n          // Alerts.SuccessMsg(variable, msg)\r\n\r\n          var message = response.data.message\r\n          if (message == \"\") {\r\n            Swal.fire(\r\n              \"Success\",\r\n              `Query successfully added.`,\r\n              \"success\"\r\n            )\r\n          } else if (message.invalid) {\r\n            Swal.fire({\r\n              title: 'Error !',\r\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n            })\r\n          } else if (message.faill && message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n              icon: 'success',\r\n            })\r\n          } else if (message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p>${message.success}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n          else if (message.faill) {\r\n            Swal.fire({\r\n              title: 'Error !',\r\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n              icon: 'error',\r\n            })\r\n          }\r\n\r\n          props.history.push(\"/customer/dashboard\");\r\n        } else {\r\n          setLoad(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n    }\r\n    \r\n     \r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const SuccessMesg = () => {\r\n    return (\r\n      <>\r\n        <Modal isOpen={modal} toggle={toggle} size=\"sm\">\r\n          <ModalHeader toggle={toggle}></ModalHeader>\r\n\r\n          <ModalBody>\r\n            <br />\r\n            <div class=\"modal-body\">\r\n              <h1 style={{ textAlign: \"center\", fontSize: \"1.5rem\" }}>\r\n                {JSON.parse(userNameId)} , You have Successfully Registered\r\n              </h1>\r\n            </div>\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header id={JSON.parse(userNameId)} />\r\n      <div className=\"container\">\r\n        {SuccessMesg()}\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Basic Questionnaire</h2>\r\n          </div>\r\n          {load ? (\r\n            <Spinner size=\"sm\" color=\"primary\" />\r\n          ) : (\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Facts of the case</label>\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      id=\"textarea\"\r\n                      rows=\"6\"\r\n                      name=\"p_fact\"\r\n                      onChange={valiFun}\r\n                      ref={register}\r\n                    ></textarea>\r\n                    <p style={{\"color\" :\"red\"}}>{custError}</p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"question_query mb-2\">\r\n                    <label className=\"form-label\">\r\n                      Specific Questions for advisory\r\n                    </label>\r\n                    <div\r\n                      className=\"btn btn-primary\"\r\n                      onClick={() => append({ query: \"\" })}\r\n                    >\r\n                      +\r\n                    </div>\r\n                  </div>\r\n\r\n                  {fields.length > 0 &&\r\n                    fields.map((item, index) => (\r\n                      <div>\r\n                        {fields.length < 5 ? (\r\n                          <div\r\n                            className=\"question_query_field mb-2\"\r\n                            key={index}\r\n                          >\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              ref={register}\r\n                              name={`specific[${index}].query`}\r\n                              placeholder=\"Specify your query\"\r\n                            />\r\n                            <div\r\n                              className=\"btn btn-primary ml-2\"\r\n                              onClick={() => remove(index)}\r\n                            >\r\n                              -\r\n                            </div>\r\n                          </div>\r\n                        ) : null}\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                  <ImageUploads register={register} control={control} />\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Case name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"p_case_name\"\r\n                      ref={register}\r\n                      \r\n                      className=\"form-control\"\r\n                    />\r\n                  \r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Assessment year</label>\r\n                    <Select\r\n                      closeMenuOnSelect={false}\r\n                      onChange={setSelectedOption}\r\n                      isMulti\r\n                      options={assessment_year}\r\n                    />\r\n                   \r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"mb-3\">\r\n                    <label className=\"form-label\">\r\n                      Format in which Opinion is required\r\n                    </label>\r\n                    <br />\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        name=\"p_format_word\"\r\n                        ref={register}\r\n                      // value=\"1\"\r\n                      />\r\n                      <label className=\"form-check-label\">\r\n                        Softcopy - Word/ Pdf\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        name=\"p_format_digital\"\r\n                        ref={register}\r\n                      // value=\"1\"\r\n                      />\r\n                      <label className=\"form-check-label\">\r\n                        SoftCopy- Digitally Signed\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        name=\"p_format_physically\"\r\n                        ref={register}\r\n                      // value=\"1\"\r\n                      />\r\n                      <label className=\"form-check-label\">\r\n                        Printout- Physically Signed\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"mb-3\">\r\n                    <label className=\"form-label\">\r\n                      Timelines within which Opinion is Required\r\n                    </label>\r\n                    <br />\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        name=\"p_timelines\"\r\n                        ref={register}\r\n                        value=\"Urgent, (4-5 Working Days)\"\r\n                        defaultChecked\r\n                      />\r\n                      <label>Urgent, (4-5 Working Days)</label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        type=\"radio\"\r\n                        name=\"p_timelines\"\r\n                        ref={register}\r\n                        value=\"Regular (10-12 Working Days)\"\r\n                      />\r\n                      <label>Regular (10-12 Working Days)</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"mb-3\">\r\n                    <label className=\"form-label\">\r\n                      Purpose for which Opinion is sought\r\n                    </label>\r\n                    <Select\r\n                      closeMenuOnSelect={false}\r\n                      onChange={purPoseQuery}\r\n                      isMulti\r\n                      options={purpose}\r\n                    />\r\n                       <p style={{\"color\" : \"red\"}}>{selectError}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Questionnaire;\r\n\r\nconst purpose = [\r\n  { value: \"Assessment\", label: \"Assessment\" },\r\n  { value: \"Appeal\", label: \"Appeal\" },\r\n  { value: \"Filing before any Court\", label: \"Filing before any Court\" },\r\n  {\r\n    value: \"Filing before any Authority\",\r\n    label: \"Filing before any Authority\",\r\n  },\r\n  { value: \"Others\", label: \"Others\" },\r\n];\r\n\r\nconst assessment_year = [\r\n  {\r\n    value: \"2010-11\",\r\n    label: \"2010-11\",\r\n  },\r\n  {\r\n    value: \"2011-12\",\r\n    label: \"2011-12\",\r\n  },\r\n  {\r\n    value: \"2012-13\",\r\n    label: \"2012-13\",\r\n  },\r\n  {\r\n    value: \"2013-14\",\r\n    label: \"2013-14\",\r\n  },\r\n  {\r\n    value: \"2014-15\",\r\n    label: \"2014-15\",\r\n  },\r\n  {\r\n    value: \"2015-16\",\r\n    label: \"2015-16\",\r\n  },\r\n  {\r\n    value: \"2016-17\",\r\n    label: \"2016-17\",\r\n  },\r\n  {\r\n    value: \"2017-18\",\r\n    label: \"2017-18\",\r\n  },\r\n  {\r\n    value: \"2018-19\",\r\n    label: \"2018-19\",\r\n  },\r\n  {\r\n    value: \"2019-20\",\r\n    label: \"2019-20\",\r\n  },\r\n  {\r\n    value: \"2020-21\",\r\n    label: \"2020-21\",\r\n  },\r\n  {\r\n    value: \"2021-22\",\r\n    label: \"2021-22\",\r\n  },\r\n  {\r\n    value: \"2022-23\",\r\n    label: \"2022-23\",\r\n  }\r\n];\r\n\r\nconst ImageUploads = ({ register, control }) => {\r\n  const { append, fields, remove } = useFieldArray({\r\n    control,\r\n    name: \"upload\",\r\n  });\r\n  return (\r\n    <>\r\n      <div className=\"question_query mb-2\">\r\n        <label className=\"form-label\">Upload Your Document</label>\r\n        <div className=\"btn btn-primary\" onClick={() => append({ pics: \"\" })}>\r\n          +\r\n        </div>\r\n      </div>\r\n\r\n      {fields.map((item, index) => (\r\n        <div className=\"question_query_field mb-2\" key={index}>\r\n          <input\r\n            type=\"file\"\r\n            name={`upload[${index}].pics`}\r\n            ref={register()}\r\n            className=\"form-control-file manage_file\"\r\n            defaultValue={item.pics}\r\n          />\r\n          <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\r\n            -\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n{\r\n  /* <div className=\"col-md-6\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">\r\n                    Purpose for which Opinion is sought\r\n                  </label>\r\n                  <select\r\n                    className=\"form-select form-control\"\r\n                    name=\"p_purpose\"\r\n                    aria-label=\"Default select example\"\r\n                    ref={register}\r\n                  >\r\n                    <option value=\"\">--select--</option>\r\n                    {Opinion.map((p, i) => (\r\n                      <option key={i} value={p.sought}>\r\n                        {p.sought}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div> */\r\n}\r\n","E:\\Mazars_Pannel\\src\\views\\SelectCategoryPage\\SelectCategoryPage.js",["1119","1120","1121"],"import React from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CategorySelect from \"../../components/CategorySelect/CategorySelect\";\r\n\r\nfunction SelectCategoryPage() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <p style={{ fontSize: \"20px\" }}>Select Category</p>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardHeader>\r\n          <CategorySelect addfreshbtn=\"addfreshbtn\" />\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default SelectCategoryPage;\r\n","E:\\Mazars_Pannel\\src\\views\\ProposalView\\ProposalView.js",["1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useParams, useHistory, Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport TermsConditions from \"./TermsConditions\";\r\nimport CommonServices from \"../../common/common\";\r\nimport Alerts from \"../../common/Alerts\";\r\n\r\n\r\n\r\nfunction ProposalView(props) {\r\n  const { handleSubmit, register, reset, errors } = useForm();\r\n  const alert = useAlert();\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [queryStatus, setQueryStatus] = useState(null);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [diaplayProposal, setDisplayProposal] = useState({\r\n    amount: \"\",\r\n    proposal_date: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n\r\n    amount_type: \"\",\r\n    amount_fixed: \"\",\r\n    amount_hourly: \"\",\r\n\r\n    payment_terms: \"\",\r\n    no_of_installment: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n  });\r\n\r\n  const { amount, proposal_date,\r\n    name, description,\r\n    amount_type, amount_fixed, amount_hourly,\r\n    payment_terms,\r\n    no_of_installment,\r\n    installment_amount,\r\n    due_date,\r\n  } = diaplayProposal\r\n\r\n\r\n  useEffect(() => {\r\n    const getProposalDetails = () => {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/getQueryDetails?id=${id}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            console.log(res.data.result[0].query_status);\r\n            setQueryStatus(res.data.result[0].query_status);\r\n            setDisplayProposal({\r\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\r\n              payment_received: res.data.proposal_queries[0].paid_amount,\r\n              amount: res.data.proposal_queries[0].amount,\r\n              proposal_date: res.data.proposal_queries[0].created,\r\n              name: res.data.proposal_queries[0].tlname,\r\n              description: res.data.proposal_queries[0].description,\r\n              amount_type: res.data.proposal_queries[0].amount_type,\r\n              amount_fixed: res.data.proposal_queries[0].amount_fixed,\r\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\r\n\r\n              payment_terms: res.data.proposal_queries[0].payment_terms,\r\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\r\n              installment_amount: res.data.proposal_queries[0].installment_amount,\r\n              due_date: res.data.proposal_queries[0].due_date,\r\n\r\n\r\n            });\r\n          }\r\n        });\r\n    };\r\n    getProposalDetails();\r\n  }, []);\r\n\r\n  const [addPaymentModal, setPaymentModal] = useState(false);\r\n  const readTerms = () => {\r\n    console.log(\"key\");\r\n    setPaymentModal(!addPaymentModal);\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"status\", 5);\r\n    formData.append(\"terms_condition\", Number(value.p_terms_condition));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/ProposalAccept`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n\r\n        var variable = \"Proposal accepted successfully.\"\r\n        Alerts.SuccessNormal(variable)\r\n        props.history.push('/customer/proposal')\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n  const installAmount = (data) => {\r\n    var item = data.split(',')\r\n    console.log(\"item\", item);\r\n\r\n    const dataItem = item.map((p, i) =>\r\n    (\r\n      <>\r\n        <p>{CommonServices.removeTime(p)}</p>\r\n      </>\r\n    ))\r\n    return dataItem;\r\n  }\r\n\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <p style={{ fontSize: \"20px\" }}>Proposal Details</p>\r\n            </Col>\r\n            <Col\r\n              md=\"4\"\r\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            ></Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <table class=\"table table-bordered\">\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Name of Team Leader</th>\r\n                <td>{name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date of Allocation</th>\r\n                <td>{CommonServices.removeTime(proposal_date)}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Proposed Amount</th>\r\n                <td>{amount}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Scope of Work</th>\r\n                <td>{description}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Amount</th>\r\n                <td>\r\n                  <tr>\r\n                    <th>Amount Type</th>\r\n                    <th>Price</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{CommonServices.capitalizeFirstLetter(amount_type)}</td>\r\n                    <td>\r\n                      {\r\n                        amount_type == \"fixed\" ?\r\n                          amount\r\n                          :\r\n                          amount_type == \"hourly\" ?\r\n                            amount_hourly\r\n                            :\r\n                            amount_type == \"mixed\" ?\r\n                              <div>\r\n                                <p>Fixed : {amount}</p>\r\n                                <p>Hourly : {amount_hourly}</p>\r\n                              </div>\r\n                              :\r\n                              \"\"\r\n                      }\r\n                    </td>\r\n                  </tr>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <th scope=\"row\">Payment Terms</th>\r\n                {\r\n                  payment_terms == \"lumpsum\" ?\r\n                    <td>\r\n                      <tr>\r\n                        <th>Payment Type</th>\r\n                        <th>Due Dates</th>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>{CommonServices.capitalizeFirstLetter(payment_terms)}</td>\r\n                        <td>\r\n                          {CommonServices.removeTime(due_date)}\r\n                        </td>\r\n                      </tr>\r\n                    </td>\r\n                    :\r\n                    payment_terms == \"installment\" ?\r\n                      <td>\r\n                        <tr>\r\n                          <th>Payment Type</th>\r\n                          <th>No of Installments</th>\r\n                          <th>Installment Amount</th>\r\n                          <th>Due Dates</th>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>{payment_terms}</td>\r\n                          <td>{no_of_installment}</td>\r\n                          <td>{installAmount(installment_amount)}</td>\r\n                          <td>{installAmount(due_date)}</td>\r\n                        </tr>\r\n                      </td>\r\n                      :\r\n                      \"\"\r\n                }\r\n\r\n\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Proposal Status</th>\r\n                <td>\r\n                  {queryStatus == \"4\" && \"Inprogress\"}\r\n                  {queryStatus == \"6\" && \"Declined\"}\r\n                  {(queryStatus == \"5\" || queryStatus > 6) && \"Accepted\"}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n\r\n          </table>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"mb-3\">\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    name=\"p_terms_condition\"\r\n                    ref={register}\r\n                  />\r\n                  <label className=\"form-check-label\"\r\n                    title=\"Read\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => readTerms()}\r\n                  >\r\n                    General terms & condition\r\n                  </label>\r\n                </div>\r\n                <br />\r\n                <div className=\"form-check\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </form>\r\n        </CardBody>\r\n\r\n        <TermsConditions\r\n          readTerms={readTerms}\r\n          addPaymentModal={addPaymentModal}\r\n        // getProposalData={getProposalDetails}\r\n        />\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ProposalView;\r\n","E:\\Mazars_Pannel\\src\\views\\MeetingComponent\\MeetingComponent.js",["1138","1139"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport Meeting from \"../../components/meeting/index\";\r\n\r\nfunction MeetingComponent(props) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Meeting />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default MeetingComponent;\r\n","E:\\Mazars_Pannel\\src\\views\\QueriesTab\\QueriesTab.js",["1140","1141","1142","1143","1144","1145"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\nimport AllQueriesData from \"./AllQueriesData\";\r\nimport InprogressAllocation from \"./InprogressAllocation\";\r\nimport InprogressProposal from \"./InprogressProposal\";\r\nimport DeclinedQueries from \"./DeclinedQueries\";\r\n\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n  const [allQueriesCount, setAllQueriesCount] = useState(\"\");\r\n  const [inprogressAllocation, setInprogressAllocation] = useState(\"\");\r\n  const [inprogressProposal, setInprogressProposal] = useState(\"\");\r\n  const [declined, setDeclined] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    CountAllQuery();\r\n    CountInprogressAllocation();\r\n    CountInprogressProposal();\r\n    CountDeclined();\r\n  }, []);\r\n\r\n\r\n  const CountAllQuery = (data) => {\r\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setAllQueriesCount(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const CountInprogressAllocation = () => {\r\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=1`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setInprogressAllocation(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const CountInprogressProposal = () => {\r\n    axios.get(`${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=2`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setInprogressProposal(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const CountDeclined = () => {\r\n    axios.get(`${baseUrl}/customers/declinedQueries?uid=${JSON.parse(userId)}`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setDeclined(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Queries ({allQueriesCount})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Queries({inprogressAllocation})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Completed; Queries ({inprogressProposal})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n              Declined; Queries ({declined})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllQueriesData />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <InprogressAllocation />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <InprogressProposal />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DeclinedQueries />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n\r\n\r\n\r\n","E:\\Mazars_Pannel\\src\\views\\ChangePassword\\ChangePassword.js",["1146","1147"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"../../assets/css/style.css\";\r\nimport \"../../assets/css/media.css\";\r\nimport axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\nimport {Button } from '@material-ui/core';\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport Alerts from \"../../common/Alerts\";\r\n\r\n// const Schema = yup.object().shape({\r\n//   p_name: yup.string().required(\"required user id\"),\r\n//   p_password: yup.string().required(\"required password\"),\r\n//   p_confirm_password: yup.string().required(\"required confirm password\"),\r\n// });\r\n\r\nfunction ChangePassword(props) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  const alert = useAlert();\r\n  // const { handleSubmit, register, reset, errors } = useForm({\r\n  //   resolver: yupResolver(Schema),\r\n  // });\r\n\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\r\n\r\n\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const togglePasssword2 = () => {\r\n    setPasswordShow2(!isPasswordShow2)\r\n  };\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"id\", JSON.parse(userId));\r\n    formData.append(\"user_id\", value.p_email);\r\n    formData.append(\"password\", value.p_password);\r\n    formData.append(\"rpassword\", value.p_confirm_password);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/passChange`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n\r\n          var variable = \"Change Password Successfully\"\r\n          Alerts.SuccessNormal(variable)\r\n          reset();\r\n        } else if (response.data.code === 0) {\r\n          console.log(response.data.result);\r\n\r\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\r\n          reset();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Change Password</h2>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    placeholder=\"Enter email id\"\r\n                    ref={register({\r\n                      required: \"This field is required\",\r\n                      pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                        message: \"Please enter valid email address\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_email.message}{\" \"}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">New Password</label>\r\n                  <input\r\n                    type={isPasswordShow ? \"text\" : \"password\"}\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_password,\r\n                    })}\r\n                    onPaste={((e) => {\r\n                      e.preventDefault();\r\n                      return false;\r\n                    })}\r\n                    placeholder=\"Enter Your Password\"\r\n                    name=\"p_password\"\r\n                    ref={register({\r\n                      required: \"This field is required\",\r\n                      pattern: {\r\n                        value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\r\n                        message:\r\n                          \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword}\r\n                  />\r\n                  {errors.p_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Confirm Password</label>\r\n                  <input\r\n                 onPaste={((e) => {\r\n                  e.preventDefault();\r\n                  return false;\r\n                })}\r\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_confirm_password,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"p_confirm_password\"\r\n                    ref={register({\r\n                      required: \"This field is required\",\r\n                      validate: (value) =>\r\n                        value === getValues(\"p_password\") ||\r\n                        \"password doesn 't match\",\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword2}\r\n                  />\r\n                  {errors.p_confirm_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_confirm_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Submit\r\n            </Button>\r\n             <Link to=\"/customer/dashboard\" style={{\"margin\" :\"10px\"}}>\r\n             <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n             Cancle\r\n            </Button>\r\n             </Link>\r\n             \r\n             \r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n\r\n\r\n\r\n","E:\\Mazars_Pannel\\src\\views\\ProposalTab\\ProposalTab.js",["1148","1149","1150","1151","1152"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\n\r\nimport AllProposal from \"./AllProposal\";\r\nimport InprogressProposal from \"./InprogressProposal\";\r\nimport AcceptedProposal from \"./AcceptedProposal\";\r\nimport DeclinedProposal from \"./DeclinedProposal\";\r\n\r\n\r\n\r\n\r\nfunction Proposal(props) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n  const [allProposalCount, setAllProposalCount] = useState(\"\");\r\n  const [inprogressProposalCount, setInprogressProposalCount] = useState(\"\");\r\n  const [acceptedProposalCount, setAcceptedProposalCount] = useState(\"\");\r\n  const [declinedProposalCount, setDeclinedProposalCount] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    getAllProposal();\r\n    getInprogressProposal();\r\n    getAcceptedProposal();\r\n    getDeclinedProposal();\r\n  }, []);\r\n\r\n\r\n  const getAllProposal = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setAllProposalCount(res.data.result.length);\r\n      });\r\n  };\r\n\r\n  const getInprogressProposal = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=1`)\r\n      .then((response) => {\r\n        console.log(\"code---\", response);\r\n        if (response.data.code === 1) {\r\n          setInprogressProposalCount(response.data.result.length);\r\n        }\r\n      })\r\n  };\r\n\r\n  const getAcceptedProposal = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=2`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setAcceptedProposalCount(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getDeclinedProposal = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=3`)\r\n      .then((response) => {\r\n        console.log(\"code---\", response);\r\n        if (response.data.code === 1) {\r\n          setDeclinedProposalCount(response.data.result.length);\r\n        }\r\n      })\r\n  };\r\n\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n  console.log(\"allProposalCount\", allProposalCount)\r\n\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Proposals ({allProposalCount})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Proposals ({inprogressProposalCount})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Accepted; Proposals ({acceptedProposalCount})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n              Declined; Proposals ({declinedProposalCount})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllProposal />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <InprogressProposal />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <AcceptedProposal />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DeclinedProposal />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Proposal;\r\n\r\n\r\n\r\n\r\n","E:\\Mazars_Pannel\\src\\views\\ForgetPassword\\ForgetPassword.js",["1153","1154","1155","1156","1157","1158","1159"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"../../assets/css/style.css\";\r\nimport \"../../assets/css/media.css\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n// import NewPassword from \"../NewPassword/NewPassword\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alerts from \"../../common/Alerts\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n});\r\n\r\nfunction ForgetPassword(props) {\r\n  console.log(\"props : \", props.location.email);\r\n\r\n  const alert = useAlert();\r\n\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/forgototp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n\r\n          var variable = \"OTP sent to your email address. \"\r\n          Alerts.SuccessNormal(variable)\r\n\r\n          props.history.push(`/customer/new-password/${value.p_email}`)\r\n        } else if (response.data.code === 0) {\r\n          console.log(response.data.result);\r\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  const valueHandler = () => {\r\n    var item = props.location.email\r\n    if (item == \"null\") {\r\n      console.log(\"item : \", item)\r\n      // return '';\r\n    } else {\r\n      return item\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header cust_sign=\"cust_sign\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Forgot Password</h2>\r\n          </div>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_email,\r\n                })}\r\n                name=\"p_email\"\r\n                ref={register}\r\n                placeholder=\"Enter Email\"\r\n                defaultValue={valueHandler()}\r\n              />\r\n              {errors.p_email && (\r\n                <div className=\"invalid-feedback\">{errors.p_email.message}</div>\r\n              )}\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgetPassword;\r\n\r\n{\r\n  /* <Link\r\n            to={{\r\n              pathname: `/customer/new-password`,\r\n              email:`${value.p_email}`\r\n            }}\r\n          ></Link>; */\r\n}\r\n\r\n  // const sendEmail = (email) => {\r\n  //   return (\r\n  //     <Link\r\n  //       to={{\r\n  //         pathname: `/customer/new-password`,\r\n  //         email: `${email}`,\r\n  //       }}\r\n  //     ></Link>\r\n  //   );\r\n  // };\r\n","E:\\Mazars_Pannel\\src\\views\\EditQuery\\EditQuery.js",["1160","1161","1162","1163","1164","1165","1166","1167","1168"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, ImageUrl } from \"../../config/config\";\r\nimport * as yup from \"yup\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Card, CardHeader, Row, Col } from \"reactstrap\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport DeleteQuery from \"./DeleteQuery\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\n\r\nfunction EditQuery(props) {\r\n  // const { Option } = Select;\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const { handleSubmit, register, errors, reset, control, setValue } = useForm({\r\n    defaultValues: {\r\n      users: [{ query: \"\" }],\r\n    },\r\n  });\r\n\r\n  const { append, remove, fields } = useFieldArray({\r\n    control,\r\n    name: \"users\",\r\n  });\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const category = window.localStorage.getItem(\"category\");\r\n\r\n  // const [selectedData, setSelectedData] = useState(\"\");\r\n  const [queryDocs, setQueryDocs] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState([]);\r\n  const [purposeOption, setPurposeOption] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getQuery();\r\n  }, []);\r\n\r\n\r\n  const getQuery = () => {\r\n    axios.get(`${baseUrl}/customers/getQueryDetails?id=${id}`).then((res) => {\r\n      console.log(res);\r\n      console.log(\"result\", res.data.result[0]);\r\n      console.log(\"result\", res.data.result[0].purpose_opinion);\r\n\r\n      // var purposeItem = res.data.result[0].purpose_opinion;\r\n      // console.log(\"purposeItem-\", typeof purposeItem);\r\n\r\n      if (res) {\r\n        // setLoad(true);\r\n\r\n        var specific = res.data.result[0].specific_query;\r\n        if (specific == \"undefined\") {\r\n        } else var sepData = JSON.parse(specific);\r\n        reset({\r\n          users: sepData,\r\n        });\r\n\r\n        var value = res.data.result[0].assessment_year;\r\n        var purposeItem = res.data.result[0].purpose_opinion;\r\n\r\n        console.log(\"assem\", value);\r\n        try {\r\n          var myObj = JSON.parse(value);\r\n          var myPurpose = JSON.parse(purposeItem);\r\n\r\n          setSelectedOption(myObj);\r\n          setPurposeOption(myPurpose);\r\n        } catch (e) {\r\n          return false;\r\n        }\r\n\r\n        console.log(\"purpose[0]\", purpose[0]);\r\n        setValue(\"fact_case\", res.data.result[0].fact_case);\r\n        setValue(\"case_name\", res.data.result[0].case_name);\r\n        setValue(\"p_Softcopy_word\", Boolean(+res.data.result[0].softcopy_word));\r\n        setValue(\r\n          \"p_Softcopy_digital\",\r\n          Boolean(+res.data.result[0].softcopy_digitally_assigned)\r\n        );\r\n        setValue(\r\n          \"p_Softcopy_physical\",\r\n          Boolean(+res.data.result[0].printout_physically_assigned)\r\n        );\r\n        setValue(\"p_timelines\", res.data.result[0].Timelines);\r\n        setQueryDocs(res.data.queries_document);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value\", value);\r\n    setLoad(true);\r\n    let formData = new FormData();\r\n\r\n    var uploadImg = value.upload;\r\n    if (uploadImg) {\r\n      for (var i = 0; i < uploadImg.length; i++) {\r\n        console.log(\"pics\", value.upload[i].pics[0]);\r\n\r\n        let a = value.upload[i].pics[0];\r\n        formData.append(\"upload_1[]\", a);\r\n      }\r\n    }\r\n    formData.append(\"fact\", value.fact_case);\r\n    formData.append(\"specific\", JSON.stringify(value.specific));\r\n    formData.append(\"timelines\", value.p_timelines);\r\n    formData.append(\"user\", JSON.parse(userId));\r\n    formData.append(\"id\", id);\r\n    formData.append(\"cid\", JSON.parse(category));\r\n    formData.append(\"softcopy_word\", Number(value.p_Softcopy_word));\r\n    formData.append(\r\n      \"softcopy_digitally_assigned\",\r\n      Number(value.p_Softcopy_digital)\r\n    );\r\n    formData.append(\r\n      \"printout_physically_assigned\",\r\n      Number(value.p_Softcopy_physical)\r\n    );\r\n    formData.append(\"case_name\", value.case_name);\r\n    formData.append(\"assessment_year\", JSON.stringify(selectedOption));\r\n    formData.append(\"purpose\", JSON.stringify(purposeOption));\r\n\r\n    axios\r\n      .post(`${baseUrl}/customers/PostEditQuestion`, formData, {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n\r\n          var message = response.data.message\r\n          if (message == \"\") {\r\n            Swal.fire(\r\n              \"Success\",\r\n              `Query successfully updated.`,\r\n              \"success\"\r\n            )\r\n          } else if (message.invalid) {\r\n            Swal.fire({\r\n              title: 'Error !',\r\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n            })\r\n          } else if (message.faill && message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n              icon: 'success',\r\n            })\r\n          } else if (message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p>${message.success}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n          else if (message.faill) {\r\n            Swal.fire({\r\n              title: 'Error !',\r\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n              icon: 'error',\r\n            })\r\n          }\r\n\r\n          // var msg = response.data.message\r\n          // var variable = \"Query Successfully Updated\"\r\n          // Alerts.SuccessMsg(variable, msg)\r\n\r\n          props.history.push(\"/customer/queries\");\r\n        } else {\r\n          setLoad(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <p style={{ fontSize: \"20px\" }}>Update Query</p>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n              <DeleteQuery id={id} />\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        <CardHeader>\r\n          <div class=\"col-xl-8 col-lg-8 col-md-12 py-4\">\r\n            {load ? (\r\n              <Spinner size=\"sm\" color=\"primary\" />\r\n            ) : (\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Facts of the case</label>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"textarea\"\r\n                        rows=\"6\"\r\n                        name=\"fact_case\"\r\n                        ref={register}\r\n                      ></textarea>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"question_query mb-2\">\r\n                      <label className=\"form-label\">\r\n                        Specific Questions for advisory\r\n                      </label>\r\n                      <div\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => append({ query: \"\" })}\r\n                      >\r\n                        +\r\n                      </div>\r\n                    </div>\r\n\r\n                    {fields.map((item, index) => (\r\n                      <div className=\"question_query_field mb-2\" key={index}>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                          name={`specific[${index}].query`}\r\n                          defaultValue={`${item.query}`}\r\n                          placeholder=\"Specify your query\"\r\n                        />\r\n                        <div\r\n                          className=\"btn btn-primary ml-2\"\r\n                          onClick={() => remove(index)}\r\n                        >\r\n                          -\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Case name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"case_name\"\r\n                        ref={register}\r\n                        className=\"form-control\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Assessment year</label>\r\n\r\n                      <Select\r\n                        closeMenuOnSelect={false}\r\n                        onChange={setSelectedOption}\r\n                        value={selectedOption}\r\n                        isMulti\r\n                        options={assessment_year}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <ImageUploads register={register} control={control} />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">\r\n                        Format in which Opinion is required\r\n                      </label>\r\n                      <br />\r\n                      <div className=\"form-check\">\r\n                        <input\r\n                          className=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          name=\"p_Softcopy_word\"\r\n                          ref={register}\r\n                        />\r\n                        <label className=\"form-check-label\">\r\n                          Softcopy - Word/ Pdf\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                        <input\r\n                          className=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          name=\"p_Softcopy_digital\"\r\n                          ref={register}\r\n                        />\r\n                        <label className=\"form-check-label\">\r\n                          SoftCopy- Digitally Signed\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                        <input\r\n                          className=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          name=\"p_Softcopy_physical\"\r\n                          ref={register}\r\n                        />\r\n                        <label className=\"form-check-label\">\r\n                          Printout- Physically Signed\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">\r\n                        Timelines within which Opinion is Required\r\n                      </label>\r\n                      <br />\r\n                      <div className=\"form-check\">\r\n                        <input\r\n                          className=\"form-check-input\"\r\n                          type=\"radio\"\r\n                          name=\"p_timelines\"\r\n                          ref={register}\r\n                          value=\"Urgent, (4-5 Working Days)\"\r\n                        // disabled\r\n                        />\r\n                        <label>Urgent, (4-5 Working Days)</label>\r\n                      </div>\r\n                      <div className=\"form-check\">\r\n                        <input\r\n                          className=\"form-check-input\"\r\n                          type=\"radio\"\r\n                          name=\"p_timelines\"\r\n                          ref={register}\r\n                          value=\"Regular (10-12 Working Days)\"\r\n                        // disabled\r\n                        />\r\n                        <label>Regular (10-12 Working Days)</label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Display Documents</label>\r\n                      <br />\r\n\r\n                      <>\r\n                        <div>\r\n                          {queryDocs.map((p, i) => (\r\n                            <ul>\r\n                              <li>\r\n                                <a\r\n                                  href={`${ImageUrl}/${p.assign_no}/${p.name}`}\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  <i\r\n                                    class=\"fa fa-photo\"\r\n                                    style={{ width: \"50\", height: \"20\" }}\r\n                                  ></i>\r\n                                  <span style={{ marginLeft: \"10px\" }}>{p.name}</span>\r\n                                </a>\r\n                              </li>\r\n                            </ul>\r\n                          ))}\r\n\r\n                        </div>\r\n                      </>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">\r\n                        Purpose for which Opinion is sought\r\n                      </label>\r\n                      <Select\r\n                        closeMenuOnSelect={false}\r\n                        onChange={setPurposeOption}\r\n                        value={purposeOption}\r\n                        isMulti\r\n                        options={purpose}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Update\r\n                </button>\r\n              </form>\r\n            )}\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default EditQuery;\r\n\r\nconst ImageUploads = ({ register, control }) => {\r\n  const { append, fields, remove } = useFieldArray({\r\n    control,\r\n    name: \"upload\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"question_query mb-2\">\r\n        <label className=\"form-label\">Upload Your Document</label>\r\n        <div className=\"btn btn-primary\" onClick={() => append({ pics: \"\" })}>\r\n          +\r\n        </div>\r\n      </div>\r\n\r\n      {fields.map((item, index) => (\r\n        <div className=\"question_query_field mb-2\" key={index}>\r\n          <input\r\n            type=\"file\"\r\n            name={`upload[${index}].pics`}\r\n            ref={register()}\r\n            className=\"form-control-file manage_file\"\r\n            defaultValue={item.pics}\r\n          />\r\n          <div className=\"btn btn-primary ml-2\" onClick={() => remove(index)}>\r\n            -\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst assessment_year = [\r\n  {\r\n    value: \"2010-11\",\r\n    label: \"2010-11\",\r\n  },\r\n  {\r\n    value: \"2011-12\",\r\n    label: \"2011-12\",\r\n  },\r\n  {\r\n    value: \"2012-13\",\r\n    label: \"2012-13\",\r\n  },\r\n  {\r\n    value: \"2013-14\",\r\n    label: \"2013-14\",\r\n  },\r\n  {\r\n    value: \"2014-15\",\r\n    label: \"2014-15\",\r\n  },\r\n  {\r\n    value: \"2015-16\",\r\n    label: \"2015-16\",\r\n  },\r\n  {\r\n    value: \"2016-17\",\r\n    label: \"2016-17\",\r\n  },\r\n  {\r\n    value: \"2017-18\",\r\n    label: \"2017-18\",\r\n  },\r\n  {\r\n    value: \"2018-19\",\r\n    label: \"2018-19\",\r\n  },\r\n  {\r\n    value: \"2019-20\",\r\n    label: \"2019-20\",\r\n  },\r\n  {\r\n    value: \"2020-21\",\r\n    label: \"2020-21\",\r\n  },\r\n  {\r\n    value: \"2021-22\",\r\n    label: \"2021-22\",\r\n  },\r\n  {\r\n    value: \"2022-23\",\r\n    label: \"2022-23\",\r\n  }\r\n];\r\n\r\nconst purpose = [\r\n  { value: \"Assessment\", label: \"Assessment\" },\r\n  { value: \"Appeal\", label: \"Appeal\" },\r\n  { value: \"Filing before any Court\", label: \"Filing before any Court\" },\r\n  {\r\n    value: \"Filing before any Authority\",\r\n    label: \"Filing before any Authority\",\r\n  },\r\n  { value: \"Others\", label: \"Others\" },\r\n];\r\n\r\n// console.log(\"value :\", value);\r\n\r\n// console.log(\"arr\", arr);\r\n// const [user, setUser] = useState({\r\n//   fact: \"\",\r\n//   case_assement: \"\",\r\n//   p_Softcopy_word: \"\",\r\n//   p_Softcopy_digital: \"\",\r\n//   p_Softcopy_physical: \"\",\r\n// });\r\n// const {\r\n//   fact,\r\n//   case_assement,\r\n//   p_Softcopy_word,\r\n//   p_Softcopy_digital,\r\n//   p_Softcopy_physical,\r\n// } = user;\r\n{\r\n  /* <SelectComponent\r\n                        assessmentYear={assessmentYear}\r\n                        updateValue={updateValue}\r\n                      /> */\r\n}\r\n\r\n\r\n\r\n{/* <table class=\"table table-bordered\">\r\n                            <tr>\r\n                              <th scope=\"col\">#</th>\r\n                              <th scope=\"col\">View</th>\r\n                              <th scope=\"col\">Name</th>\r\n                            </tr>\r\n                            {queryDocs.map((p, i) => (\r\n                              <tr>\r\n                                <td>{i + 1}</td>\r\n                                <td>\r\n                                  <a\r\n                                    href={`http://65.0.220.156/mazarapi/assets/image/${p.assign_no}/${p.name}`}\r\n                                    target=\"_blank\"\r\n                                  >\r\n                                    <i\r\n                                      class=\"fa fa-photo\"\r\n                                      style={{ width: \"50\", height: \"20\" }}\r\n                                    ></i>\r\n                                  </a>\r\n                                </td>\r\n                                <td>{p.name}</td>\r\n                              </tr>\r\n                            ))}\r\n                          </table> */}","E:\\Mazars_Pannel\\src\\views\\VideoCall\\VideoCall.js",["1169","1170"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport Index from \"../../components/InputRoom/index\";\r\n\r\nfunction VideoCall() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n        <Index />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default VideoCall;\r\n","E:\\Mazars_Pannel\\src\\views\\Schedule\\schedule.js",["1171","1172","1173","1174","1175"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport Demo from \"./demo\";\r\n\r\nfunction Schedule() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"7\">\r\n              <CardTitle tag=\"h4\">Schedule </CardTitle>\r\n            </Col>\r\n            <Col md=\"5\"></Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <Demo />\r\n        <CardBody></CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Schedule;\r\n","E:\\Mazars_Pannel\\src\\views\\ViewNotification\\ViewNotification.js",["1176","1177","1178","1179","1180","1181","1182","1183"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\nfunction ViewNotification() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    getChatting();\r\n  }, [id]);\r\n\r\n  const getChatting = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/viewNotification`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          setData(response.data.result[0]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  console.log(\"data-\", data);\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message Details</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <table class=\"table table-bordered\">\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Query No</th>\r\n                <td>{data.assign_no}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\"> System Generated</th>\r\n                <td>{data.name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date</th>\r\n                <td>\r\n                  {CommonServices.removeTime(data.setdate)}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Message</th>\r\n                <td>{data.message}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Type</th>\r\n                <td>\r\n                  {data.type == \"1\"\r\n                    ? \"info\"\r\n                    : data.type == \"2\"\r\n                      ? \"Proposal Discuss\"\r\n                      : data.type == \"3\"\r\n                        ? \"Draft Discuss\"\r\n                        : null}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ViewNotification;\r\n","E:\\Mazars_Pannel\\src\\views\\FeedbackData\\FeedbackData.js",["1184","1185","1186","1187"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\n\r\nfunction FeedbackData(props) {\r\n    console.log(\"props\", props.location.obj)\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [query, setQuery] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        getMessage();\r\n    }, []);\r\n\r\n\r\n    const getMessage = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/getFeedback?uid=${JSON.parse(userId)}`\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setQuery(res.data.result);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"10px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"60px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <p>{CommonServices.removeTime(row.created)}</p>\r\n                            <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(row.created)}</p>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"40px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        {row.assign_no}\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Feedback\",\r\n            dataField: \"feedback\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"150px\" };\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n            <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"9\">\r\n                            <CardTitle tag=\"h4\">Feedback</CardTitle>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={query}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default FeedbackData;\r\n        // {\r\n        //     text: \"Time\",\r\n        //     sort: true,\r\n        //     headerStyle: () => {\r\n        //         return { fontSize: \"12px\", width: \"30px\" };\r\n        //     },\r\n        //     formatter: function nameFormatter(cell, row) {\r\n        //         console.log(row);\r\n        //         return (\r\n        //             <>\r\n        //                 {CommonServices.removeDate(row.created)}\r\n        //             </>\r\n        //         );\r\n        //     },\r\n        // },","E:\\Mazars_Pannel\\src\\views\\Message\\Message.js",["1188","1189","1190","1191","1192","1193","1194","1195"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport PaymentModal from \"./PaymentModal\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\n\r\nfunction Message(props) {\r\n    console.log(\"props\", props.location.obj)\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [query, setQuery] = useState([]);\r\n    const [data, setData] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const paymentHandler = (key) => {\r\n        console.log(\"key\", key);\r\n        setPaymentModal(!addPaymentModal);\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     var dataItem = props.location.obj.message_type\r\n    //     setData(dataItem)\r\n    // }, [data]);\r\n\r\n\r\n    useEffect(() => {\r\n        getMessage();\r\n    }, []);\r\n\r\n\r\n    const getMessage = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}\r\n                &type_list=all`\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setQuery(res.data.result);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            sort: true,\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"10px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <p>{CommonServices.removeTime(row.setdate)}</p>\r\n                            <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(row.setdate)}</p>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",      \r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        {row.assign_no}\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Message\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"180px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link to={`/customer/view-notification/${row.id}`}>\r\n                            {\r\n                                row.is_read == \"0\" ?\r\n                                    <div\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"space-between\"\r\n                                        }}\r\n                                        onClick={() => readNotification(row.id)}\r\n                                        title=\"unread\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                                    </div>\r\n\r\n                                    :\r\n                                    <div\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"space-between\"\r\n                                        }}\r\n                                        title=\"read\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                                    </div>\r\n\r\n                            }\r\n                        </Link>\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    // readnotification\r\n    const readNotification = (id) => {\r\n\r\n        console.log(\"call\", id)\r\n        axios\r\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\r\n            .then(function (response) {\r\n                console.log(\"delete-\", response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"erroror - \", error);\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n            <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"9\">\r\n                            <CardTitle tag=\"h4\">Message</CardTitle>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={query}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n\r\n                    <PaymentModal\r\n                        paymentHandler={paymentHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                    // data={data}\r\n                    // getProposalData={getAssignmentData}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n\r\n{/* <Col md=\"3\">\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}\r\n                                class=\"btn btn-primary\"\r\n                            // onClick={() => paymentHandler()}\r\n                            >\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: `/customer/chatting`,\r\n                                        obj: props.location.obj\r\n                                    }}\r\n\r\n                                >\r\n                                    Add Message\r\n                                </Link>\r\n                            </div>\r\n                        </Col> */}\r\n\r\n{/* <Link to={`/customer/view-notification/${row.id}`}>\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                <div>{row.message}</div>\r\n                                <div>{\r\n                                    row.is_read == \"0\" ?\r\n                                        <p style={{ color: 'blue' }} title=\"read\"\r\n                                            onClick={() => readNotification(row.id)}\r\n                                        >\r\n                                            <i class=\"fa fa-bullseye\"></i>\r\n                                        </p>\r\n                                        :\r\n                                        <p style={{ color: 'green' }} title=\"unread\"\r\n                                        >\r\n                                            <i class=\"fa fa-circle\"></i>\r\n                                        </p>\r\n                                }\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Link> */}","E:\\Mazars_Pannel\\src\\views\\Feedback\\Feedback.js",["1196","1197","1198","1199"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../common/Alerts\";\r\n\r\nconst Schema = yup.object().shape({\r\n  p_feedback: yup.string().required(\"required feedback\"),\r\n});\r\n\r\n\r\nfunction Feedback({ props }) {\r\n\r\n  console.log(\"pp\", props);\r\n\r\n\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", id);\r\n    formData.append(\"feedback\", value.p_feedback);\r\n    formData.append(\"user_id\", JSON.parse(userId));\r\n    // formData.append(\"tl_id\", value.p_teamleader);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/PostUserFeedback`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          reset();\r\n          var variable = \"Feedback Successfully Sent \"\r\n          Alerts.SuccessNormal(variable)\r\n\r\n          // props.history.push(routes);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <ArrowBackIcon />\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Feedback</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Query No.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_query\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    value={id}\r\n                    disabled\r\n                  />\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Feedback</label>\r\n                  <textarea\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_feedback,\r\n                    })}\r\n                    placeholder=\"Feedback text here\"\r\n                    rows=\"5\"\r\n                    ref={register}\r\n                    name=\"p_feedback\"\r\n                  ></textarea>\r\n                  {errors.p_feedback && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_feedback.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Feedback;\r\n\r\n\r\n{/* <select\r\n                      class=\"form-control\"\r\n                      name=\"p_assignment\"\r\n                      ref={register}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n\r\n                      {assignment.map((p, i) => (\r\n                        <option key={i} value={p.assign_no}>\r\n                          {p.assign_no}\r\n                        </option>\r\n                      ))}\r\n                    </select> */}\r\n // useEffect(() => {\r\n  //   const getAssingment = () => {\r\n  //     axios.get(`${baseUrl}/customers/getAssignedAssignments?user=${JSON.parse(userId)}`).then((res) => {\r\n  //       console.log(res);\r\n  //       if (res.data.code === 1) {\r\n  //         setAssingment(res.data.result);\r\n  //       }\r\n  //     });\r\n  //   };\r\n\r\n  //   getAssingment();\r\n  // }, []);\r\n","E:\\Mazars_Pannel\\src\\views\\NewPassword\\NewPassword.js",["1200","1201","1202","1203","1204","1205","1206"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"../../assets/css/style.css\";\r\nimport \"../../assets/css/media.css\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Alerts from \"../../common/Alerts\";\r\n\r\n\r\nfunction NewPassword(props) {\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n  const { id } = useParams();\r\n\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const [isPasswordShow2, setPasswordShow2] = useState(false);\r\n\r\n\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const togglePasssword2 = () => {\r\n    setPasswordShow2(!isPasswordShow2)\r\n  };\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    // formData.append(\"user_id\", value.p_name);\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"code\", value.p_code);\r\n    formData.append(\"password\", value.p_password);\r\n    formData.append(\"rpassword\", value.p_confirm_password);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/resetpassword`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n\r\n          var variable = \"Reset Password Successfully \"\r\n          Alerts.SuccessNormal(variable)\r\n\r\n\r\n\r\n          reset();\r\n          props.history.push(\"/customer/signin\");\r\n        } else if (response.data.code === 0) {\r\n          console.log(response.data.result);\r\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header cust_sign=\"cust_sign\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Reset Password</h2>\r\n          </div>\r\n\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    placeholder=\"Enter Email\"\r\n                    defaultValue={id}\r\n                    ref={register({\r\n                      required: \"This field is required\",\r\n                      pattern: {\r\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                        message: \"Please enter valid email address\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_email.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">OTP</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_code,\r\n                    })}\r\n                    name=\"p_code\"\r\n                    placeholder=\"Enter otp\"\r\n                    ref={register({\r\n                      required: \"This field is required\",\r\n                    })}\r\n                  />\r\n                  {errors.p_code && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_code.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">New Password</label>\r\n                  <input\r\n                    type={isPasswordShow ? \"text\" : \"password\"}\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_password,\r\n                    })}\r\n                    placeholder=\"Enter Your Password\"\r\n                    name=\"p_password\"\r\n                    ref={register({\r\n                      required: \"This field is required\",\r\n                      pattern: {\r\n                        value:\r\n                          /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\r\n                        message:\r\n                          \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\r\n                      },\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword}\r\n                  />\r\n                  {errors.p_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Confirm Password</label>\r\n                  <input\r\n                    type={isPasswordShow2 ? \"text\" : \"password\"}\r\n                    id=\"password\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_confirm_password,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"p_confirm_password\"\r\n                    ref={register({\r\n                      required: \"This field is required\",\r\n                      validate: (value) =>\r\n                        value === getValues(\"p_password\") ||\r\n                        \"password doesn 't match\",\r\n                    })}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow2 ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword2}\r\n                  />\r\n                  {errors.p_confirm_password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_confirm_password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n\r\n\r\n          </form>\r\n\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewPassword;\r\n\r\n// const Schema = yup.object().shape({\r\n//   p_name: yup.string().required(\"required user id\"),\r\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n//   p_code: yup.string().required(\"required otp \"),\r\n//   // p_password: yup.string().required(\"required password\"),\r\n//   // p_confirm_password: yup.string().required(\"required confirm password\"),\r\n// });\r\n\r\n\r\n\r\n{/* <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <div className=\"form-group\">\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className={classNames(\"form-control\", {\r\n                    \"is-invalid\": errors.p_email,\r\n                  })}\r\n                  name=\"p_email\"\r\n                  placeholder=\"Enter Email\"\r\n                  defaultValue={id}\r\n                  ref={register({\r\n                    required: \"This field is required\",\r\n                    pattern: {\r\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                      message: \"Please enter valid email address\",\r\n                    },\r\n                  })}\r\n                />\r\n                {errors.p_email && (\r\n                  <div className=\"invalid-feedback\">\r\n                    {errors.p_email.message}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">OTP</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className={classNames(\"form-control\", {\r\n                    \"is-invalid\": errors.p_code,\r\n                  })}\r\n                  name=\"p_code\"\r\n                  placeholder=\"Enter otp\"\r\n                  ref={register({\r\n                    required: \"This field is required\",\r\n                  })}\r\n                />\r\n                {errors.p_code && (\r\n                  <div className=\"invalid-feedback\">\r\n                    {errors.p_code.message}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <label className=\"form-label\">New Password</label>\r\n              <input\r\n                type={isPasswordShow ? \"text\" : \"password\"}\r\n                id=\"password\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_password,\r\n                })}\r\n                placeholder=\"Enter Your Password\"\r\n                name=\"p_password\"\r\n                ref={register({\r\n                  required: \"This field is required\",\r\n                  pattern: {\r\n                    value:\r\n                      /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\r\n                    message:\r\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\r\n                  },\r\n                })}\r\n              />\r\n              <i\r\n                className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                onClick={togglePasssword}\r\n              />\r\n              {errors.p_password && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_password.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Confirm Password</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"password\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_confirm_password,\r\n                })}\r\n                placeholder=\"Confirm Password\"\r\n                name=\"p_confirm_password\"\r\n                ref={register({\r\n                  required: \"This field is required\",\r\n                  validate: (value) =>\r\n                    value === getValues(\"p_password\") ||\r\n                    \"password doesn 't match\",\r\n                })}\r\n              />\r\n              {errors.p_confirm_password && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_confirm_password.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        */}","E:\\Mazars_Pannel\\src\\views\\Chatting\\Chatting.js",["1207","1208","1209","1210","1211","1212"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  message_type: yup.string().required(\"required message type\"),\r\n  p_message: yup.string().required(\"required message\"),\r\n});\r\n\r\n\r\nfunction Chatting(props) {\r\n\r\n  console.log(\"props\", props)\r\n\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  const [item, setItem] = useState(\"\");\r\n  const [data, setData] = useState({})\r\n\r\n  const { message_type, query_id, query_No, routes } = data\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect\", props)\r\n    const dataItem = props.location.obj\r\n\r\n    if (dataItem) {\r\n      localStorage.setItem(\"myDataCust\", JSON.stringify(dataItem));\r\n    }\r\n    var myData = localStorage.getItem(\"myDataCust\");\r\n    var data2 = JSON.parse(myData)\r\n    setData(data2)\r\n    setItem(data2.message_type)\r\n  }, [item]);\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", query_id);\r\n    formData.append(\"message_type\", value.message_type);\r\n    formData.append(\"message\", value.p_message);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          reset();\r\n\r\n          var variable = \"Message Successfully Sent \"\r\n          Alerts.SuccessNormal(variable)\r\n\r\n          // alert.success(\" message successfully sent!\");\r\n          props.history.push(routes);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Query No.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_query\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    value={query_No}\r\n                    disabled\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Message Type</label>\r\n                  {\r\n                    item &&\r\n                    <select\r\n                      className={classNames(\"form-control\", {\r\n                        \"is-invalid\": errors.message_type,\r\n                      })}\r\n                      name=\"message_type\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                      defaultValue={item}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Query Discussion</option>\r\n                      <option value=\"2\">Proposal Discussion</option>\r\n                      <option value=\"5\">Payment Discussion</option>\r\n                      <option value=\"3\">Assignment Discussion</option>\r\n                      <option value=\"1\">Others</option>\r\n                    </select>\r\n                  }\r\n\r\n                  {errors.message_type && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.message_type.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Message</label>\r\n                  <textarea\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_message,\r\n                    })}\r\n                    placeholder=\"Message text here\"\r\n                    rows=\"5\"\r\n                    ref={register}\r\n                    name=\"p_message\"\r\n                  ></textarea>\r\n                  {errors.p_message && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_message.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Send\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n          </form>\r\n        </CardBody>\r\n\r\n      </Card>\r\n    </Layout >\r\n  );\r\n}\r\n\r\nexport default Chatting;\r\n\r\n\r\n{/* <select\r\n                    class=\"form-control\"\r\n                    name=\"p_sms_type\"\r\n                    ref={register}\r\n                    value={query_No}\r\n                  >\r\n                    <option value=\"\">--select--</option>\r\n                    <option value=\"1\">Information</option>\r\n                    <option value=\"2\">Proposal Discussion</option>\r\n                    <option value=\"3\">Assignment Discussion</option>\r\n                  </select> */}","E:\\Mazars_Pannel\\src\\views\\AssignmentTab\\AssignmentTab.js",["1213","1214","1215","1216","1217","1218","1219","1220"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl,ReportUrl } from \"../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport { useAlert } from \"react-alert\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport PaymentModal from \"./PaymentModal\";\r\nimport RejectedModal from \"./RejectModal\";\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport Alerts from \"../../common/Alerts\";\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\n\r\n\r\n\r\nfunction AssignmentTab() {\r\n  const history = useHistory();\r\n  const alert = useAlert();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n  const [assignmentCount, setAssignmentQueries] = useState(\"\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [baseMode, SetbaseMode] = useState(\"avc\");\r\n  const [transcode, SetTranscode] = useState(\"interop\");\r\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\r\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\r\n\r\n  const [rejectedItem, setRejectedItem] = useState({});\r\n  const [report, setReport] = useState();\r\n\r\n  const [pay, setPay] = useState({\r\n    pay: \"\",\r\n    amount: \"\",\r\n    accepted_amount: \"\",\r\n    paid_amount: \"\",\r\n\r\n    amount_type: \"\",\r\n    amount_fixed: \"\",\r\n    amount_hourly: \"\",\r\n\r\n    payment_terms: \"\",\r\n    no_of_installment: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n  });\r\n\r\n  const [addPaymentModal, setPaymentModal] = useState(false);\r\n  const paymentHandler = (key) => {\r\n    setPaymentModal(!addPaymentModal);\r\n    setPay({\r\n      amount: key.accepted_amount,\r\n      id: key.id,\r\n      accepted_amount: key.accepted_amount,\r\n      paid_amount: key.paid_amount,\r\n\r\n      amount_type: key.amount_type,\r\n      amount_fixed: key.amount_fixed,\r\n      amount_hourly: key.amount_hourly,\r\n\r\n\r\n      payment_terms: key.payment_terms,\r\n      no_of_installment: key.no_of_installment,\r\n      installment_amount: key.installment_amount,\r\n      due_date: key.due_date,\r\n\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const [rejectModal, setRejectModal] = useState(false);\r\n  const rejectHandler = (key) => {\r\n    setRejectModal(!rejectModal);\r\n    setRejectedItem(key);\r\n  };\r\n\r\n\r\n\r\n  const [reportModal, setReportModal] = useState(false);\r\n  const ViewReport = (key) => {\r\n    console.log(\"key - \", key);\r\n    setReportModal(!reportModal);\r\n    setReport(key);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getAssignmentData();\r\n  }, []);\r\n\r\n\r\n  const getAssignmentData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setAssignmentDisplay(res.data.result);\r\n          setAssignmentQueries(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.created);\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link to={`/customer/my-assingment/${row.id}`}>\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Exp_Delivery_Date\",\r\n      text: \"Expected date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.created);\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"final_date\",\r\n      text: \"Actual date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.final_date);\r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00\") {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Deliverable\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        // console.log(row.final_report);\r\n        return (\r\n          <>\r\n\r\n            {\r\n              row.status == \"Payment decliend\" ? null :\r\n                <div>\r\n                  {row.assignment_draft_report || row.final_report ?\r\n                    <div title=\"View All Report\"\r\n                      style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n                      onClick={() => ViewReport(row.assign_no)}\r\n                    >\r\n                      <DescriptionOutlinedIcon color=\"secondary\" />\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n\r\n                  {row.assignment_draft_report && !row.final_report ? (\r\n                    row.draft_report == \"completed\" ?\r\n                      null :\r\n                      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n\r\n                        <div style={{ cursor: \"pointer\" }} title=\"Accepted\">\r\n                          <i\r\n                            class=\"fa fa-check\"\r\n                            style={{\r\n                              color: \"green\",\r\n                              fontSize: \"16px\",\r\n                            }}\r\n                            onClick={() => acceptHandler(row)}\r\n                          ></i>\r\n                        </div>\r\n\r\n                        <div title=\"Send Message\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/customer/chatting/${row.id}`,\r\n                              obj: {\r\n                                message_type: \"3\",\r\n                                query_No: row.assign_no,\r\n                                query_id: row.id,\r\n                                routes: `/customer/assignment`\r\n                              }\r\n                            }}\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                fontSize: 16,\r\n                                cursor: \"pointer\",\r\n                                marginLeft: \"8px\",\r\n                                color: \"green\"\r\n                              }}\r\n                            ></i>\r\n                          </Link>\r\n                        </div>\r\n                      </div>\r\n\r\n                  ) : null}\r\n\r\n                </div>\r\n            }\r\n\r\n\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Team Leader name and contact number, email\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: priceFormatter,\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      dataField: \"\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", width: \"70px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n\r\n            {\r\n              row.status == \"Payment Decliend\" ? null :\r\n                <div\r\n                  style={{ cursor: \"pointer\" }}\r\n                  title=\"Pay Amount\"\r\n                  onClick={() => paymentHandler(row)}>\r\n                  <PaymentIcon color=\"primary\" />\r\n                </div>\r\n            }\r\n\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  //accept handler\r\n  const acceptHandler = (key) => {\r\n    console.log(\"acceptHandler\", key);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", key.id);\r\n    formData.append(\"query_no\", key.assign_no);\r\n    formData.append(\"type\", 1);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/draftAccept`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"response-\", response);\r\n        if (response.data.code === 1) {\r\n\r\n          var variable = \"Draft accepted successfully \"\r\n          Alerts.SuccessNormal(variable)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n  //tl,phone,email\r\n  function priceFormatter(cell, row) {\r\n    console.log(\"row\", row);\r\n    if (row) {\r\n      return (\r\n        <>\r\n          <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\r\n          <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\r\n          <p style={{ fontSize: \"10px\" }}>{row.email}</p>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  //handleJoin\r\n  const handleJoin = (id) => {\r\n    console.log(\"id\", id);\r\n    Cookies.set(\"channel\", id);\r\n    Cookies.set(\"baseMode\", baseMode);\r\n    Cookies.set(\"transcode\", transcode);\r\n    Cookies.set(\"attendeeMode\", attendeeMode);\r\n    Cookies.set(\"videoProfile\", videoProfile);\r\n    history.push(\"/customer/meeting\");\r\n  };\r\n\r\n\r\n  function schedultTime(cell, row) {\r\n    // console.log(\"schedultTime\", row);\r\n    console.log(\"schedultTime\", row.schedule_time);\r\n    // console.log(\"setSeconds\", setSeconds(row.schedule_time));\r\n\r\n    var d = row.schedule_time;\r\n    var date = new Date(d); // some mock date\r\n    var milliseconds = date.getTime();\r\n    console.log(\"milliseconds - \", milliseconds);\r\n\r\n    var date2 = new Date(); // current time\r\n    var milliseconds2 = date2.getTime();\r\n    console.log(\"current - \", milliseconds2);\r\n\r\n    var diff = milliseconds - milliseconds2;\r\n    console.log(\"diff - \", diff);\r\n    var total = diff - 900000;\r\n    console.log(\"total - \", total);\r\n\r\n    if (total > 0 && 900000 > total) {\r\n      return (\r\n        <>\r\n          <div style={{ cursor: \"pointer\" }} title=\"Video Chat\">\r\n            <i\r\n              class=\"fa fa-video-camera\"\r\n              style={{ color: \"red\", fontSize: \"16px\" }}\r\n              onClick={() => handleJoin(row.id)}\r\n            ></i>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"7\">\r\n              <CardTitle tag=\"h4\">Assignment ({assignmentCount})</CardTitle>\r\n            </Col>\r\n            <Col md=\"5\"></Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        <CardHeader>\r\n          <CustomerFilter\r\n            setData={setAssignmentDisplay}\r\n            getData={getAssignmentData}\r\n            id={userId}\r\n            assignment=\"assignment\"\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignmentDisplay}\r\n            columns={columns}\r\n          />\r\n          <PaymentModal\r\n            paymentHandler={paymentHandler}\r\n            addPaymentModal={addPaymentModal}\r\n            pay={pay}\r\n            getProposalData={getAssignmentData}\r\n          />\r\n\r\n          <RejectedModal\r\n            rejectHandler={rejectHandler}\r\n            rejectModal={rejectModal}\r\n            rejectedItem={rejectedItem}\r\n            getPendingforAcceptance={getAssignmentData}\r\n          />\r\n\r\n          <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            getPendingforAcceptance={getAssignmentData}\r\n          />\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AssignmentTab;\r\n\r\n\r\n{/* {!row.final_report == \"\" ? (\r\n                  <div title=\"Final Report\">\r\n                    <a\r\n                      href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.final_report}`}\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>\r\n                    </a>\r\n                  </div>\r\n                ) : row.assignment_draft_report ? (\r\n                  <div title=\"Draft Report\">\r\n                    <a\r\n                      href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.assignment_draft_report}`}\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>\r\n                    </a>\r\n                  </div>\r\n                ) : null} */}\r\n\r\n\r\n{/* {row.vstart < 11 &&\r\n                row.vend >= 0 &&\r\n                !(row.vstart == null && row.vend == null) ? (\r\n                <div style={{ cursor: \"pointer\" }} title=\"Video Chat\">\r\n                  <i\r\n                    class=\"fa fa-video-camera\"\r\n                    style={{ color: \"red\", fontSize: \"16px\" }}\r\n                    onClick={() => handleJoin(row.id)}\r\n                  ></i>\r\n                </div>\r\n              ) : null} */}\r\n\r\n{/* <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/customer/chatting/${row.id}`,\r\n                    obj: {\r\n                      message_type: \"3\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.id,\r\n                      routes: `/customer/assignment`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n              <div title=\"Send Feedback\" style={{ cursor: \"pointer\" }}>\r\n                <Link to={`/customer/feedback/${row.assign_no}`}>\r\n                  <FeedbackIcon />\r\n                </Link>\r\n              </div> */}","E:\\Mazars_Pannel\\src\\views\\PaymentStatus\\PaymentStatus.js",["1221","1222","1223","1224"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport PaymentModal from \"./PaymentModal\";\r\nimport Records from \"../../components/Records/Records\";\r\n\r\n\r\nfunction PaymentStatus() {\r\n  const alert = useAlert();\r\n  const { id } = useParams();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  // const cust_id = window.localStorage.getItem(\"userid\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [pay, setPay] = useState([]);\r\n  const [count, setCount] = useState(\"\");\r\n  const [payment, setPayment] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [assignNo, setAssignNo] = useState(\"\");\r\n\r\n  const [addPaymentModal, setPaymentModal] = useState(false);\r\n  const paymentHandler = (key) => {\r\n    console.log(\"key\", key.assign_no);\r\n    setPaymentModal(!addPaymentModal);\r\n    setAssignNo(key.assign_no)\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getPaymentStatus();\r\n  }, []);\r\n  // /tl/getUploadedProposals?cid=customer_id\r\n\r\n  const getPaymentStatus = () => {\r\n    axios.get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setPayment(res.data.result);\r\n        setCount(res.data.result.length);\r\n        setRecords(res.data.result.length);\r\n\r\n      }\r\n    });\r\n  };\r\n\r\n  const toggle = (key) => {\r\n    console.log(\"key\", key);\r\n    setModal(!modal);\r\n\r\n    fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/vnd.github.cloak-preview\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        setPay(response.payment_detail);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"query_created_date\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.query_created_date);\r\n        var oldDate = row.query_created_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/customer/my-assingment/${row.assign_id}`,\r\n                routes: \"paymentstatus\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of acceptance of Proposal\",\r\n      dataField: \"cust_accept_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.cust_accept_date);\r\n        var oldDate = row.cust_accept_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"accepted_amount\",\r\n      text: \"Accepted Amount \",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#21a3ce\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Amount Paid\",\r\n      dataField: \"paid_amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#064606\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#064606\" };\r\n      },\r\n    },\r\n\r\n    {\r\n      text: \"Amount Outstanding\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"darkred\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"darkred\" };\r\n      },\r\n      formatter: function amountOutstading(cell, row) {\r\n        console.log(\"dt\", row.paid_amount);\r\n        console.log(\"dt\", row.accepted_amount);\r\n        var p = row.paid_amount;\r\n        var a = row.accepted_amount;\r\n        return a - p;\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Payment\",\r\n      dataField: \"cust_paid_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.cust_paid_date);\r\n        var oldDate = row.cust_paid_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Completion\",\r\n      dataField: \"final_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.final_date);\r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    // {\r\n    //   text: \"Action\",\r\n    //   style: {\r\n    //     fontSize: \"11px\",\r\n    //   },\r\n    //   headerStyle: () => {\r\n    //     return { fontSize: \"11px\" };\r\n    //   },\r\n    //   formatter: function (cell, row) {\r\n    //     return (\r\n    //       <>\r\n\r\n    //         <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100px\" }}>\r\n    //           <div title=\"Payment History\">\r\n    //             <i\r\n    //               class=\"fa fa-credit-card\"\r\n    //               style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n    //               onClick={() => toggle(row.assign_id)}\r\n    //             ></i>\r\n    //           </div>\r\n    //           <div title=\"schedule call\">\r\n    //             <Link\r\n    //               to={{\r\n    //                 pathname: `/teamleader/schedule`,\r\n    //               }}\r\n    //             >\r\n    //               <i\r\n    //                 class=\"fa fa-caret-square-o-right\"\r\n    //                 style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n    //               ></i>\r\n    //             </Link>\r\n\r\n    //           </div>\r\n    //           <div>\r\n    //             <i\r\n    //               class=\"fa fa-exchange\"\r\n    //               style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n    //               onClick={() => sendEmail(row.assign_id)}\r\n    //             ></i>\r\n    //           </div>\r\n\r\n    //           <div style={{ cursor: \"pointer\" }} title=\"Payment decline\">\r\n    //             <i\r\n    //               class=\"fa fa-comments-o\"\r\n    //               style={{ color: \"green\", fontSize: \"16px\" }}\r\n    //               onClick={() => paymentHandler(row)}\r\n    //             ></i>\r\n    //           </div>\r\n    //         </div>\r\n    //       </>\r\n    //     );\r\n    //   },\r\n    // },\r\n  ];\r\n\r\n\r\n  const sendEmail = (key) => {\r\n    console.log(\"key\", key);\r\n\r\n    axios\r\n      .get(`${baseUrl}/customers/paymentemail?id=${key}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Layout custDashboard=\"custDashboard\" custUserId={userId}>\r\n        <Card>\r\n          <CardHeader>\r\n            <Row>\r\n              <Col md=\"7\">\r\n                <CardTitle tag=\"h4\">Payment Status ({count})</CardTitle>\r\n              </Col>\r\n              <Col md=\"5\"></Col>\r\n            </Row>\r\n          </CardHeader>\r\n\r\n          <CardHeader>\r\n            <CustomerFilter\r\n              setData={setPayment}\r\n              getData={getPaymentStatus}\r\n              paymentStatus=\"paymentStatus\"\r\n              setRecords={setRecords}\r\n              records={records}\r\n              id={userId}\r\n            />\r\n          </CardHeader>\r\n\r\n          <CardBody>\r\n            <Records records={records} />\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={payment}\r\n              columns={columns}\r\n              classes=\"table-responsive\"\r\n            />\r\n\r\n            <PaymentModal\r\n              paymentHandler={paymentHandler}\r\n              addPaymentModal={addPaymentModal}\r\n              assignNo={assignNo}\r\n            />\r\n\r\n\r\n            <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n              <ModalHeader toggle={toggle}>History</ModalHeader>\r\n              <ModalBody>\r\n                <table class=\"table table-bordered\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"row\">S.No</th>\r\n                      <th scope=\"row\">Date</th>\r\n                      <th scope=\"row\">Amount</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {pay.length > 0\r\n                    ? pay.map((p, i) => (\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>{i + 1}</td>\r\n                          <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                          <td>{p.paid_amount}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ))\r\n                    : null}\r\n                </table>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"secondary\" onClick={toggle}>\r\n                  Cancel\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n\r\n          </CardBody>\r\n        </Card>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaymentStatus;\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\AddNewTaxProf\\AddNewTaxProf.js",["1225","1226","1227","1228","1229","1230","1231","1232","1233"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\nconst Schema = yup.object().shape({\r\n  p_name: yup.string().required(\"required name\"),\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n  p_phone: yup\r\n    .string()\r\n    .required(\"required phone no\")\r\n    .matches(/^[0-9]+$/, \"Must be only digits\")\r\n    .min(10, \"Must be exactly 10 digits\")\r\n    .max(20, \"max 20 digits\"),\r\n  p_tax: yup.string().required(\"required category\"),\r\n  p_tax2: yup.string().required(\"required sub category\"),\r\n  p_teamleader: yup.string().required(\"required sub teamleader\"),\r\n});\r\n\r\nfunction AddNew() {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const [teamleader, setTeamLeader] = useState([]);\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const history = useHistory();\r\n  const [tax, setTax] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n\r\n  const [store, setStore] = useState(\"\");\r\n  const [store2, setStore2] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getTeamLeader = () => {\r\n      axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setTeamLeader(res.data.result);\r\n        }\r\n      });\r\n    };\r\n    getTeamLeader();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCategory = () => {\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setTax(res.data.result);\r\n        }\r\n      });\r\n    };\r\n\r\n    getCategory();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result);\r\n        }\r\n      });\r\n    };\r\n    getSubCategory();\r\n  }, [store]);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"phone\", value.p_phone);\r\n    formData.append(\"pcat_id\", value.p_tax);\r\n    formData.append(\"cat_id\", value.p_tax2);\r\n    formData.append(\"type\", \"tp\");\r\n    formData.append(\"tp_id\", value.p_teamleader);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/AddTaxProfessional`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n\r\n          var variable = \"Tax Professional Created Successfully\"\r\n          Alerts.SuccessNormal(variable)\r\n\r\n          history.goBack();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <div class=\"col-md-12 d-flex\">\r\n            <div>\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </div>\r\n            <div class=\"text-center ml-5\">\r\n              <h4>Add New Tax Professionals</h4>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n\r\n        <CardHeader>\r\n          <div class=\"row mt-3\">\r\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_name,\r\n                        })}\r\n                        name=\"p_name\"\r\n                        ref={register}\r\n                      />\r\n                      {errors.p_name && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_name.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Phone Number</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_phone,\r\n                        })}\r\n                        name=\"p_phone\"\r\n                        ref={register}\r\n                      />\r\n                      {errors.p_phone && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_phone.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Email</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_email,\r\n                        })}\r\n                        name=\"p_email\"\r\n                        ref={register}\r\n                      />\r\n                      {errors.p_email && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_email.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Select teamleader</label>\r\n                      <select\r\n                        name=\"p_teamleader\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_teamleader,\r\n                        })}\r\n                        ref={register}\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        {teamleader.map((p) => (\r\n                          <option key={p.Id} value={p.id}>\r\n                            {p.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.p_teamleader && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_teamleader.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Category</label>\r\n                      <select\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_tax,\r\n                        })}\r\n                        name=\"p_tax\"\r\n                        ref={register}\r\n                        onChange={(e) => setStore(e.target.value)}\r\n                      >\r\n                        <option value=\"\">--Select Category--</option>\r\n                        {tax.map((p, index) => (\r\n                          <option key={index} value={p.id}>\r\n                            {p.details}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.p_tax && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_tax.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Sub Category</label>\r\n                      <select\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_tax2,\r\n                        })}\r\n                        name=\"p_tax2\"\r\n                        ref={register}\r\n                        onChange={(e) => setStore2(e.target.value)}\r\n                      >\r\n                        <option value=\"\">--Select Sub-Category--</option>\r\n                        {tax2.map((p, index) => (\r\n                          <option key={index} value={p.id}>\r\n                            {p.details}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {errors.p_tax2 && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_tax2.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddNew;\r\n\r\n// const Schema = yup.object().shape({\r\n//   p_name: yup.string().required(\"required name\"),\r\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n//   p_phone: yup\r\n//   .string()\r\n//   .required(\"required phone no\")\r\n//   .matches(/^[0-9]+$/, \"Must be only digits\")\r\n//   .min(10, \"Must be exactly 10 digits\")\r\n//   .max(20, \"max 20 digits\"),\r\n// });\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\AddNewTeamLeader\\AddNewTeamLeader.js",["1234","1235","1236","1237","1238"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Select from \"react-select\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Card, CardHeader } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_name: yup.string().required(\"required name\"),\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n  p_phone: yup\r\n    .string()\r\n    .required(\"required phone no\")\r\n    .matches(/^[0-9]+$/, \"Must be only digits\")\r\n    .min(10, \"Must be exactly 10 digits\")\r\n    .max(20, \"max 20 digits\"),\r\n\r\n});\r\n\r\n\r\nfunction AddNew() {\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [tax, setTax] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [mdata, setmdata] = useState([]);\r\n  const [mdataName, setMdataname] = useState([]);\r\n  const [mcatname, setmcatname] = useState([]);\r\n  const [mcategory, setmcategory] = useState([]);\r\n  const [store, setStore] = useState([]);\r\n  var a;\r\n  const options = tax.map(d => ({\r\n    \"value\": d.id,\r\n    \"label\": d.details\r\n  }))\r\n  const options2 = tax2.map(v => ({\r\n    \"value\": v.id,\r\n    \"label\": v.details\r\n  }))\r\n\r\n\r\n  useEffect(() => {\r\n    const getCategory = async () => {\r\n      await axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\r\n        if (res.data.code === 1) {\r\n          setTax(res.data.result);\r\n        }\r\n      });\r\n    };\r\n\r\n    getCategory();\r\n  }, []);\r\n\r\n  \r\n  useEffect(() => {\r\n    const getSubCategory = async () => {\r\n\r\n      await axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\r\n\r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result)\r\n        }\r\n      });\r\n    };\r\n\r\n\r\n    getSubCategory();\r\n    console.log(store)\r\n  }, [store]);\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(mcategory)\r\n    let formData = new FormData();\r\n    console.log(mcategory)\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"phone\", value.p_phone);\r\n\r\n    formData.append(\"type\", \"tl\");\r\n\r\n    formData.append(\"cat_id\", mdata)\r\n\r\n    formData.append(\"pcat_id\", mcategory)\r\n    formData.append(\"allpcat_id\", mcatname)\r\n    formData.append(\"allcat_id\", mdataName)\r\n\r\n\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AddTeamLead`,\r\n      data: formData,\r\n    })\r\n\r\n      .then(function (response) {\r\n\r\n        if (response.data.code === 1) {\r\n          alert.success(\"TL created  !\");\r\n          console.log(response)\r\n          history.goBack();\r\n        }\r\n        if (response.data.code === 0) {\r\n          response.data.message.map((i) => {\r\n            alert.error(i)\r\n          })\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n\r\n      });\r\n\r\n  };\r\n\r\n  const multiple = (e) => {\r\n    e.map((val) => {\r\n      setmdata([...mdata, val.value])\r\n      setMdataname([...mdataName, val.label])\r\n    })\r\n  }\r\n  const multiple2 = (v) => {\r\n    v.map((val) => {\r\n\r\n      setmcategory([...mcategory, val.value])\r\n      setmcatname([...mcatname, val.label])\r\n      setStore(val.value)\r\n\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <div class=\"col-md-12 d-flex\">\r\n            <div>\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </div>\r\n            <div class=\"text-center ml-5\">\r\n              <h4>Add New Team Leader</h4>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n\r\n        <CardHeader>\r\n          <div class=\"row mt-3\">\r\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_name,\r\n                        })}\r\n                        name=\"p_name\"\r\n                        ref={register}\r\n                      />\r\n                      {errors.p_name && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_name.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Phone Number</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_phone,\r\n                        })}\r\n                        name=\"p_phone\"\r\n                        ref={register}\r\n                      />\r\n                      {errors.p_phone && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_phone.message}\r\n\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Category</label>\r\n                      <Select isMulti options={options} onChange={multiple2}>\r\n\r\n                      </Select>\r\n\r\n                      {errors.p_tax && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_tax.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Sub Category</label>\r\n                      <Select isMulti options={options2} onChange={multiple}>\r\n\r\n                      </Select>\r\n\r\n\r\n                      {errors.p_tax2 && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_tax2.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                      <label>Email</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        className={classNames(\"form-control\", {\r\n                          \"is-invalid\": errors.p_email,\r\n                        })}\r\n                        name=\"p_email\"\r\n                        ref={register}\r\n                      />\r\n                      {errors.p_email && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.p_email.message}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddNew;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import Layout from \"../../../components/Layout/Layout\";\r\n// import { useForm } from \"react-hook-form\";\r\n// import { yupResolver } from \"@hookform/resolvers/yup\";\r\n// import * as yup from \"yup\";\r\n// import axios from \"axios\";\r\n// import { baseUrl } from \"../../../config/config\";\r\n// import { useAlert } from \"react-alert\";\r\n// import { Card, CardHeader } from \"reactstrap\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import classNames from \"classnames\";\r\n// import Alerts from \"../../../common/Alerts\";\r\n\r\n\r\n// const Schema = yup.object().shape({\r\n//   p_name: yup.string().required(\"required name\"),\r\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n//   p_phone: yup\r\n//     .string()\r\n//     .required(\"required phone no\")\r\n//     .matches(/^[0-9]+$/, \"Must be only digits\")\r\n//     .min(10, \"Must be exactly 10 digits\")\r\n//     .max(20, \"max 20 digits\"),\r\n//   p_tax: yup.string().required(\"required category\"),\r\n//   p_tax2: yup.string().required(\"required sub category\"),\r\n// });\r\n\r\n\r\n// function AddNew() {\r\n//   const alert = useAlert();\r\n//   const history = useHistory();\r\n\r\n//   const { handleSubmit, register, reset, errors } = useForm({\r\n//     resolver: yupResolver(Schema),\r\n//   });\r\n\r\n//   const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n//   const [tax, setTax] = useState([]);\r\n//   const [tax2, setTax2] = useState([]);\r\n\r\n//   const [store, setStore] = useState(\"\");\r\n//   const [store2, setStore2] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const getCategory = () => {\r\n//       axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\r\n//         console.log(res);\r\n//         if (res.data.code === 1) {\r\n//           setTax(res.data.result);\r\n//         }\r\n//       });\r\n//     };\r\n\r\n//     getCategory();\r\n//   }, []);\r\n\r\n\r\n//   useEffect(() => {\r\n//     const getSubCategory = () => {\r\n//       axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\r\n//         console.log(res);\r\n//         if (res.data.code === 1) {\r\n//           setTax2(res.data.result);\r\n//         }\r\n//       });\r\n//     };\r\n//     getSubCategory();\r\n//   }, [store]);\r\n\r\n\r\n\r\n//   const onSubmit = (value) => {\r\n//     console.log(\"value :\", value);\r\n\r\n//     let formData = new FormData();\r\n//     formData.append(\"email\", value.p_email);\r\n//     formData.append(\"name\", value.p_name);\r\n//     formData.append(\"phone\", value.p_phone);\r\n//     formData.append(\"pcat_id\", value.p_tax);\r\n//     formData.append(\"cat_id\", value.p_tax2);\r\n//     formData.append(\"type\", \"tl\");\r\n\r\n//     axios({\r\n//       method: \"POST\",\r\n//       url: `${baseUrl}/tl/AddTeamLead`,\r\n//       data: formData,\r\n//     })\r\n//       .then(function (response) {\r\n//         console.log(\"res-\", response);\r\n//         if (response.data.code === 1) {\r\n\r\n//           var variable = \"Team Leader Created Successfully\"\r\n//           Alerts.SuccessNormal(variable)\r\n\r\n//           history.goBack();\r\n//         }\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(\"erroror - \", error);\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n//       <Card>\r\n//         <CardHeader>\r\n//           <div class=\"col-md-12 d-flex\">\r\n//             <div>\r\n//               <button\r\n//                 class=\"btn btn-success ml-3\"\r\n//                 onClick={() => history.goBack()}\r\n//               >\r\n//                 <i class=\"fas fa-arrow-left mr-2\"></i>\r\n//                 Go Back\r\n//               </button>\r\n//             </div>\r\n//             <div class=\"text-center ml-5\">\r\n//               <h4>Add New Team Leader</h4>\r\n//             </div>\r\n//           </div>\r\n//         </CardHeader>\r\n\r\n//         <CardHeader>\r\n//           <div class=\"row mt-3\">\r\n//             <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n//             <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n//               <form onSubmit={handleSubmit(onSubmit)}>\r\n//                 <div class=\"row\">\r\n//                   <div class=\"col-md-6\">\r\n//                     <div class=\"form-group\">\r\n//                       <label>Name</label>\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         className={classNames(\"form-control\", {\r\n//                           \"is-invalid\": errors.p_name,\r\n//                         })}\r\n//                         name=\"p_name\"\r\n//                         ref={register}\r\n//                       />\r\n//                       {errors.p_name && (\r\n//                         <div className=\"invalid-feedback\">\r\n//                           {errors.p_name.message}\r\n//                         </div>\r\n//                       )}\r\n//                     </div>\r\n//                   </div>\r\n\r\n//                   <div class=\"col-md-6\">\r\n//                     <div class=\"form-group\">\r\n//                       <label>Phone Number</label>\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         className={classNames(\"form-control\", {\r\n//                           \"is-invalid\": errors.p_phone,\r\n//                         })}\r\n//                         name=\"p_phone\"\r\n//                         ref={register}\r\n//                       />\r\n//                       {errors.p_phone && (\r\n//                         <div className=\"invalid-feedback\">\r\n//                           {errors.p_phone.message}\r\n//                         </div>\r\n//                       )}\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n\r\n//                 <div class=\"row\">\r\n//                   <div class=\"col-md-6\">\r\n//                     <div class=\"form-group\">\r\n//                       <label>Category</label>\r\n//                       <select\r\n//                         className={classNames(\"form-control\", {\r\n//                           \"is-invalid\": errors.p_tax,\r\n//                         })}\r\n//                         name=\"p_tax\"\r\n//                         ref={register}\r\n//                         onChange={(e) => setStore(e.target.value)}\r\n//                       >\r\n//                         <option value=\"\">--Select Category--</option>\r\n//                         {tax.map((p, index) => (\r\n//                           <option key={index} value={p.id}>\r\n//                             {p.details}\r\n//                           </option>\r\n//                         ))}\r\n//                       </select>\r\n//                       {errors.p_tax && (\r\n//                         <div className=\"invalid-feedback\">\r\n//                           {errors.p_tax.message}\r\n//                         </div>\r\n//                       )}\r\n//                     </div>\r\n//                   </div>\r\n//                   <div class=\"col-md-6\">\r\n//                     <div class=\"form-group\">\r\n//                       <label>Sub Category</label>\r\n//                       <select\r\n//                         className={classNames(\"form-control\", {\r\n//                           \"is-invalid\": errors.p_tax2,\r\n//                         })}\r\n//                         name=\"p_tax2\"\r\n//                         ref={register}\r\n//                         onChange={(e) => setStore2(e.target.value)}\r\n//                       >\r\n//                         <option value=\"\">--Select Sub-Category--</option>\r\n//                         {tax2.map((p, index) => (\r\n//                           <option key={index} value={p.id}>\r\n//                             {p.details}\r\n//                           </option>\r\n//                         ))}\r\n//                       </select>\r\n//                       {errors.p_tax2 && (\r\n//                         <div className=\"invalid-feedback\">\r\n//                           {errors.p_tax2.message}\r\n//                         </div>\r\n//                       )}\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n\r\n//                 <div class=\"row\">\r\n//                   <div class=\"col-md-12\">\r\n//                     <div class=\"form-group\">\r\n//                       <label>Email</label>\r\n//                       <input\r\n//                         type=\"email\"\r\n//                         className={classNames(\"form-control\", {\r\n//                           \"is-invalid\": errors.p_email,\r\n//                         })}\r\n//                         name=\"p_email\"\r\n//                         ref={register}\r\n//                       />\r\n//                       {errors.p_email && (\r\n//                         <div className=\"invalid-feedback\">\r\n//                           {errors.p_email.message}\r\n//                         </div>\r\n//                       )}\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//                 <button type=\"submit\" className=\"btn btn-primary\">\r\n//                   Submit\r\n//                 </button>\r\n//               </form>\r\n//             </div>\r\n//             <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n//           </div>\r\n//         </CardHeader>\r\n//       </Card>\r\n//     </Layout>\r\n//   );\r\n// }\r\n\r\n// export default AddNew;\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\Start\\Start.js",[],"E:\\Mazars_Pannel\\src\\pages\\Admin\\Dashboard\\Dashboard.js",["1239","1240"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index1.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Dashboard() {\r\n  const userId = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [allQueries, setAllQueries] = useState({\r\n    total: '',\r\n    inprogress_queries: '',\r\n    inprogress_allocation: '',\r\n    inprogress_proposal: '',\r\n    inprogress_assignment: '',\r\n    complete_query: '',\r\n    declined_queries: '',\r\n    admin_declined_query: '',\r\n    customer_declined_Query: '',\r\n    customer_declined_proposal: '',\r\n    Customer_declined_payment: '',\r\n\r\n    allproposal: '',\r\n    accepted_proposals: '',\r\n    InProgress: '',\r\n    inprogress_preparation: '',\r\n    inprogress_acceptance: '',\r\n    declined: '',\r\n  });\r\n\r\n\r\n  const [assignment, setAssignment] = useState({\r\n    inprogress: '',\r\n    complete: '',\r\n    client_discussion: '',\r\n    draft_report: '',\r\n    final_discussion: '',\r\n    final_report: '',\r\n    complete_inprocess: '',\r\n    customer_declined_payment: ''\r\n  });\r\n\r\n  const [payment, setPayment] = useState({\r\n    paid: '',\r\n    unpaid: '',\r\n  });\r\n\r\n  const { total, inprogress_queries,\r\n    inprogress_allocation, inprogress_proposal,\r\n    inprogress_assignment, complete_query,\r\n    declined_queries, admin_declined_query,\r\n    customer_declined_Query, customer_declined_proposal,\r\n    Customer_declined_payment,\r\n    allproposal,\r\n    inprogress_preparation,\r\n    declined, inprogress_acceptance,\r\n    accepted_proposals, InProgress } = allQueries;\r\n\r\n\r\n  const {\r\n    inprogress,\r\n    complete, client_discussion, draft_report, final_discussion,\r\n    final_report, complete_inprocess,\r\n    customer_declined_payment } = assignment;\r\n\r\n  const {\r\n    paid,\r\n    unpaid } = payment;\r\n\r\n\r\n  useEffect(() => {\r\n    const getAllQueries = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/totalComplete`)\r\n        .then((response) => {\r\n          console.log(\"code---\", response);\r\n          if (response.data.code === 1) {\r\n            setAllQueries({\r\n              total: response.data.result.total,\r\n              inprogress_queries: response.data.result.inprogress_queries,\r\n              inprogress_allocation: response.data.result.inprogress_allocation,\r\n              inprogress_proposal: response.data.result.inprogress_proposal,\r\n              inprogress_assignment: response.data.result.inprogress_assignment,\r\n              complete_query: response.data.result.complete_query,\r\n              declined_queries: response.data.result.declined_queries,\r\n              admin_declined_query: response.data.result.admin_declined_query,\r\n              customer_declined_Query: response.data.result.customer_declined_Query,\r\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\r\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\r\n\r\n              allproposal: response.data.result.proposal.allproposal,\r\n              InProgress: response.data.result.proposal.InProgress,\r\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\r\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\r\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\r\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\", error);\r\n        });\r\n    };\r\n\r\n    const getAssignment = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getAssignmentsCount`)\r\n        .then((response) => {\r\n          console.log(\"code---\", response);\r\n          if (response.data.code === 1) {\r\n            setAssignment({\r\n              inprogress: response.data.result.inprogress,\r\n              complete: response.data.result.complete,\r\n              client_discussion: response.data.result.client_discussion,\r\n              draft_report: response.data.result.draft_report,\r\n              final_discussion: response.data.result.final_discussion,\r\n              final_report: response.data.result.final_report,\r\n              complete_inprocess: response.data.result.complete_inprocess,\r\n              customer_declined_payment: response.data.result.customer_declined_payment,\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\", error);\r\n        });\r\n    };\r\n\r\n    const getPayment = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getAssignmentsPaymentCount`)\r\n        .then((response) => {\r\n          console.log(\"code---\", response);\r\n          if (response.data.code === 1) {\r\n            setPayment({\r\n              paid: response.data.result.paid,\r\n              unpaid: response.data.result.unpaid,\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\", error);\r\n        });\r\n    };\r\n\r\n    getAllQueries();\r\n    getPayment();\r\n    getAssignment();\r\n  }, []);\r\n\r\n  console.log(\"declined\", declined)\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3 content_header\">\r\n          <table className=\"table table-striped first main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Queries</th>\r\n                <th>{total}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n          <table className=\"table table-striped second main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Queries</th>\r\n                <th>{inprogress_queries}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Allocation</td>\r\n                <td>{inprogress_allocation}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Proposals</td>\r\n                <td>{inprogress_proposal}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Assignments</td>\r\n                <td>{inprogress_assignment}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n\r\n          <table className=\"table table-striped third main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Completed; Queries</th>\r\n                <th>{complete_query}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Completed; Assignments</td>\r\n                <td>{complete_query}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n\r\n          <table className=\"table table-striped forth main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Declined; Queries</th>\r\n                <th>{declined_queries}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Admin Declined; Queries</td>\r\n                <td>{admin_declined_query}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\"> Customer Declined; Queries</td>\r\n                <td>{customer_declined_Query}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Customer Declined; Proposals</td>\r\n                <td>{customer_declined_proposal}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Customer Declined; Payment</td>\r\n                <td>{Customer_declined_payment}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n\r\n          <table className=\"table table-striped fifth main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Proposals</th>\r\n                <th>{allproposal}</th>\r\n\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped sixth main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Proposals</th>\r\n                <th>{InProgress}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody classNameName=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Preparation</td>\r\n                <td>{inprogress_preparation}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Acceptance</td>\r\n                <td>{inprogress_acceptance}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <table className=\"table table-striped seventh main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Accepted; Proposals </th>\r\n                <th>{accepted_proposals}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped eight main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Customer Declined; Proposals</th>\r\n                <th>{declined}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n          <table className=\"table table-striped ninth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Assignments</th>\r\n                <th>{inprogress + complete + +(customer_declined_payment)}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Assignments</th>\r\n                <th>{inprogress}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody classNameName=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Client Discussion</td>\r\n                <td>{client_discussion}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Draft Reports</td>\r\n                <td>{draft_report}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Final Discussion</td>\r\n                <td>{final_discussion}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Delivery of Final Reports</td>\r\n                <td>{final_report}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Awaiting Completion</td>\r\n                <td>{complete_inprocess}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Completed; Assignments</th>\r\n                <th>{complete}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Customer Declined; Payment</th>\r\n                <th>{customer_declined_payment}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n        </div>\r\n\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n\r\n          <table className=\"table table-striped twelvth main_table\">\r\n            <thead className=\"payment_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Payments</th>\r\n                <th>{unpaid + paid}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n          <table className=\"table table-striped thirteen main_table\">\r\n            <thead className=\"payment_thead2\">\r\n              <tr>\r\n                <th className=\"left_side\">Paid</th>\r\n                <th>{paid}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped thirteen main_table\">\r\n            <thead className=\"payment_thead2\">\r\n              <tr>\r\n                <th className=\"left_side\">Unpaid</th>\r\n                <th>{unpaid}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n\r\n{/* \r\n      <div className=\"card\">\r\n        <div class=\"card-header\">\r\n          All Queries :  {total}\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\" style={{ width: \"400px\" }}>Inprogress Queries</th>\r\n                <th scope=\"col\">{inprogress_queries}</th>\r\n              </tr>\r\n            </thead>\r\n           <tbody className=\"table_body\">\r\n              <tr>\r\n                <td>Inprogress; Allocation</td>\r\n                <td>{inprogress_allocation}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Inprogress; Proposals</td>\r\n                <td>{inprogress_proposal}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Inprogress; Assignments</td>\r\n                <td>{inprogress_assignment}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\" style={{ width: \"400px\" }}>Completed Queries</th>\r\n                <th scope=\"col\">{complete_query}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>Completed; Assignments</td>\r\n                <td>{complete_query}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\" style={{ width: \"400px\" }}>Declined Queries</th>\r\n                <th scope=\"col\">{declined_queries}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>Admin Declined; Queries</td>\r\n                <td>{admin_declined_query}</td>\r\n              </tr>\r\n              <tr>\r\n                <td> Customer Declined; Queries</td>\r\n                <td>{customer_declined_Query}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Customer Declined; Proposals</td>\r\n                <td>{customer_declined_proposal}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Customer Declined; Payment</td>\r\n                <td>{Customer_declined_payment}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n        All Proposals :  {allproposal}\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\" style={{ width: \"400px\" }}>Inprogress Proposals</th>\r\n                <th scope=\"col\">{InProgress}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>Inprogress; Preparation</td>\r\n                <td>{inprogress_preparation}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Inprogress; Acceptance</td>\r\n                <td>{inprogress_acceptance}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\" style={{ width: \"400px\" }}>Accepted; Proposals </th>\r\n                <th scope=\"col\">{accepted_proposals}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\" style={{ width: \"400px\" }}>Customer Declined; Proposals</th>\r\n                <th scope=\"col\">{declined}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n        All Assignments :  {inprogress + complete + +(customer_declined_payment)}\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\" style={{ width: \"400px\" }}>Inprogress Assignments</th>\r\n                <th scope=\"col\">{inprogress}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>Client Discussion</td>\r\n                <td>{client_discussion}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Draft Reports</td>\r\n                <td>{draft_report}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Final Discussion</td>\r\n                <td>{final_discussion}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Delivery of Final Reports</td>\r\n                <td>{final_report}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Awaiting Completion</td>\r\n                <td>{complete_inprocess}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\" style={{ width: \"400px\" }}>Completed; Assignments</th>\r\n                <th scope=\"col\">{complete}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\" style={{ width: \"400px\" }}>Customer Declined; Payment</th>\r\n                <th scope=\"col\">{customer_declined_payment}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n        All Payments :  {unpaid + paid}\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\" style={{ width: \"400px\" }}>Paid</th>\r\n                <th scope=\"col\">{paid}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\" style={{ width: \"400px\" }}>Unpaid</th>\r\n                <th scope=\"col\">{unpaid}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n */}","E:\\Mazars_Pannel\\src\\pages\\Admin\\Proposal\\Proposal.js",["1241","1242","1243","1244"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\nimport AllProposalComponent from \"../AllProposalComponent/AllProposalComponent\";\r\nimport PendingForAcceptence from \"../../../components/PendingForAcceptence/PendingForAcceptence\";\r\nimport AcceptedProposal from \"../AcceptedProposal/AcceptedProposal\";\r\nimport DeclinedPropoal from \"../DeclinedProposal/DeclinedPropoal\";\r\n\r\nfunction Proposal(props) {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [allProposalCount, setAllProposalCount] = useState(\"\");\r\n  const [pendingProposalCount, setPendingProposalCount] = useState(\"\");\r\n  const [acceptedProposalCount, setAcceptedProposalCount] = useState(\"\");\r\n  const [declinedProposalCount, setDeclinedProposalCount] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getAllProposal = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getProposals`)\r\n        .then((response) => {\r\n          console.log(\"code---\", response);\r\n          if (response.data.code === 1) {\r\n            setAllProposalCount(response.data.result.length);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\", error);\r\n        });\r\n    };\r\n\r\n    const getAcceptedProposal = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getProposals?status1=2`)\r\n        .then((response) => {\r\n          console.log(\"code---\", response);\r\n          if (response.data.code === 1) {\r\n            setAcceptedProposalCount(response.data.result.length);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\", error);\r\n        });\r\n    };\r\n\r\n    const getDeclinedProposal = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getProposals?&status=6`)\r\n        .then((response) => {\r\n          console.log(\"code---\", response);\r\n          if (response.data.code === 1) {\r\n            setDeclinedProposalCount(response.data.result.length);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\", error);\r\n        });\r\n    };\r\n\r\n    const getPendingForAcceptence = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getProposals?status1=1`)\r\n        .then((response) => {\r\n          console.log(\"code---\", response);\r\n          if (response.data.code === 1) {\r\n            setPendingProposalCount(response.data.result.length);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\", error);\r\n        });\r\n    };\r\n\r\n    getAllProposal();\r\n    getAcceptedProposal();\r\n    getDeclinedProposal();\r\n    getPendingForAcceptence();\r\n  }, []);\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Proposals ({allProposalCount})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Proposals ({pendingProposalCount})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Accepted; Proposals ({acceptedProposalCount})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n              Customer Declined; Proposals ({declinedProposalCount})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllProposalComponent />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <PendingForAcceptence />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <AcceptedProposal />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DeclinedPropoal />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Proposal;\r\n\r\n\r\n// const allProposal = (data) => {\r\n//   setAllProposalCount(data);\r\n// };\r\n\r\n// const pendingProposal = (data) => {\r\n//   setPendingProposalCount(data);\r\n// };\r\n\r\n// const acceptedProposal = (data) => {\r\n//   setAcceptedProposalCount(data);\r\n// };\r\n\r\n// const declinedProposal = (data) => {\r\n//   setDeclinedProposalCount(data);\r\n// };\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\QueriesRecevied\\QueriesRecevied.js",["1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\r\n\r\nfunction QueriesRecevied(props) {\r\n  console.log(\"props\", props);\r\n\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const [submitData, setSubmitData] = useState([]);\r\n  const [assingNo, setAssingmentNo] = useState();\r\n  const [displayQuery, setDisplayQuery] = useState([]);\r\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\r\n  const [queryDocs, setQueryDocs] = useState([]);\r\n  const [paymentDetails, setPaymentDetails] = useState([]);\r\n  const [feedback, setFeedback] = useState([]);\r\n  const [reports, setReports] = useState([]);\r\n\r\n  const [purpose, setPurpose] = useState([]);\r\n  const [year, setYear] = useState([]);\r\n\r\n  const [diaplayProposal, setDisplayProposal] = useState({\r\n    amount: \"\",\r\n    accepted_amount: \"\",\r\n    payment_received: \"\",\r\n    cust_accept_date: \"\",\r\n    proposal_date: \"\",\r\n    description: \"\",\r\n\r\n    amount_type: \"\",\r\n    amount_fixed: \"\",\r\n    amount_hourly: \"\",\r\n    payment_terms: \"\",\r\n    no_of_installment: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n  });\r\n\r\n  const [diaplayAssignment, setDisplayAssignment] = useState([\r\n    {\r\n      assignment_number: \"\",\r\n      assignment_date: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [diaplayHistory, setDisplayHistory] = useState([\r\n    {\r\n      tlname: \"\",\r\n      date_of_allocation: \"\",\r\n      date_of_delivery: \"\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const getSubmittedAssingment = () => {\r\n      axios.get(`${baseUrl}/tl/getQueryDetails?id=${id}`).then((res) => {\r\n        console.log(\"admin QD\", res);\r\n        if (res.data.code === 1) {\r\n\r\n          if (res.data.result) {\r\n            if (res.data.result[0].name == null) {\r\n              console.log(\"null\")\r\n            }\r\n            else {\r\n              setSubmitData(res.data.result);\r\n            }\r\n          }\r\n          \r\n          if (res.data.additional_queries) {\r\n            setDisplaySpecific(res.data.additional_queries);\r\n          }\r\n          if (res.data.payment_detail) {\r\n            setPaymentDetails(res.data.payment_detail);\r\n          }\r\n          if (res.data.feedback_detail) {\r\n            setFeedback(res.data.feedback_detail);\r\n          }\r\n          if (res.data.result[0].assign_no) {\r\n            setAssingmentNo(res.data.result[0].assign_no);\r\n          }\r\n\r\n          if (res.data.reports) {\r\n            setReports(res.data.reports);\r\n          }\r\n\r\n\r\n          var purposeItem = res.data.result[0].purpose_opinion;\r\n          var assementItem = res.data.result[0].assessment_year;\r\n\r\n          console.log(\"purposeItem-\", typeof purposeItem);\r\n          try {\r\n            var myPurpose = JSON.parse(purposeItem);\r\n            var myYear = JSON.parse(assementItem);\r\n            setPurpose(myPurpose);\r\n            setYear(myYear);\r\n          } catch (e) {\r\n            return false;\r\n          }\r\n\r\n          if (res.data.proposal_queries.length > 0) {\r\n            setDisplayProposal({\r\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\r\n              payment_received: res.data.proposal_queries[0].paid_amount,\r\n              amount: res.data.proposal_queries[0].amount,\r\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\r\n              proposal_date: res.data.proposal_queries[0].created,\r\n              description: res.data.proposal_queries[0].description,\r\n\r\n              amount_type: res.data.proposal_queries[0].amount_type,\r\n              amount_fixed: res.data.proposal_queries[0].amount,\r\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\r\n              payment_terms: res.data.proposal_queries[0].payment_terms,\r\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\r\n              installment_amount: res.data.proposal_queries[0].installment_amount,\r\n              due_date: res.data.proposal_queries[0].due_date,\r\n            });\r\n          }\r\n\r\n          if (res.data.assignment.length > 0) {\r\n            setDisplayAssignment({\r\n              assignment_number: res.data.assignment[0].assignment_number,\r\n              assignment_date: res.data.assignment[0].created,\r\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\r\n            });\r\n          }\r\n          if (res.data.history_queries.length > 0) {\r\n            setDisplayHistory({\r\n              tlname: res.data.history_queries[0].tname,\r\n              date_of_allocation:\r\n                res.data.history_queries[0].date_of_allocation,\r\n            });\r\n          }\r\n          if (res.data.queries_document) {\r\n            if (res.data.queries_document.length > 0) {\r\n              setQueryDocs(res.data.queries_document);\r\n            }\r\n          }\r\n\r\n\r\n        }\r\n      });\r\n    };\r\n    getQuery();\r\n    getSubmittedAssingment();\r\n  }, [assingNo]);\r\n\r\n  const getQuery = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setDisplayQuery(res.data.result);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"schedule\">\r\n            <h3>Query Detail</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\r\n          <div class=\"card\">\r\n            <div\r\n              class=\"card-header\"\r\n              id=\"headingOne\"\r\n              style={{ padding: \".5rem .1rem\" }}\r\n            >\r\n              <h2 class=\"mb-0 query ml-3\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/${props.location.routes}`,\r\n                    index: props.location.index,\r\n                  }}\r\n                >\r\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\r\n                </Link>\r\n              </h2>\r\n            </div>\r\n\r\n            {submitData.map((p, index) => (\r\n              <QueryDetails\r\n                p={p}\r\n                key={index}\r\n                diaplaySpecific={diaplaySpecific}\r\n                diaplayProposal={diaplayProposal}\r\n                diaplayHistory={diaplayHistory}\r\n                diaplayAssignment={diaplayAssignment}\r\n                displayQuery={displayQuery}\r\n                getQuery={getQuery}\r\n                assingNo={assingNo}\r\n                queryDocs={queryDocs}\r\n                paymentDetails={paymentDetails}\r\n                purpose={purpose}\r\n                year={year}\r\n                feedback={feedback}\r\n                reports={reports}\r\n\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesRecevied;\r\n\r\n{\r\n  /* <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <p style={{fontSize:\"20px\"}}>Query Details</p>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          {submitData.map((p, i) => (\r\n            <div class=\"card-body\">\r\n              <table class=\"table table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">Titles</th>\r\n                    <th scope=\"col\">Data</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                    <th scope=\"row\">Query No</th>\r\n                    <td>{p.assign_no}</td>\r\n                  </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Query Status</th>\r\n                    <td>{p.status}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Facts of the case</th>\r\n                    <td>{p.fact_case}</td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\r\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">\r\n                      Timelines within which Opinion is Required\r\n                    </th>\r\n                    <td colspan=\"1\">{p.Timelines}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">specific questions</th>\r\n                    <td colspan=\"1\">\r\n                      {diaplaySpecific.map((p, i) => (\r\n                        <p>{p.text}</p>\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <th scope=\"row\">Documents</th>\r\n                    <td>\r\n                      {p.upload_doc_1 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n\r\n                      {p.upload_doc_2 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n\r\n                      {p.upload_doc_3 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Format in which Opinion is required</th>\r\n                    <td colspan=\"1\">\r\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\r\n                      <p>\r\n                        {p.softcopy_digitally_assigned === \"1\" &&\r\n                          \"SoftCopy- Digitally Signed\"}\r\n                      </p>\r\n\r\n                      <p>\r\n                        {p.printout_physically_assigned === \"1\" &&\r\n                          \"Printout- Physically Signed\"}\r\n                      </p>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                </tbody>\r\n              </table>\r\n\r\n              <table class=\"table table-bordered\">\r\n                {displayQuery.length > 0 && (\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\r\n                        Additional Queries\r\n                      </th>\r\n                      <th scope=\"col\">Date Submission</th>\r\n                      <th scope=\"col\">Documents</th>\r\n                    </tr>\r\n                  </thead>\r\n                )}\r\n\r\n                {displayQuery.map((p, i) => (\r\n                  <tbody>\r\n                    <tr key={i}>\r\n                      <td>{p.additional_queries}</td>\r\n                      <td>{ChangeFormateDate(p.created)}</td>\r\n                      <td>\r\n                          {p.upload_doc == \"\" ? (\r\n                            \"\"\r\n                          ) : (\r\n                            <p>\r\n                              <a\r\n                                href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc}`}\r\n                              >\r\n                                <i class=\"fa fa-photo\"></i>\r\n                              </a>\r\n                            </p>\r\n                          )}\r\n                        </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))}\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </CardBody>\r\n      </Card> */\r\n}\r\n// useEffect(() => {\r\n//   const getSubmittedAssingment = () => {\r\n//     axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\r\n//       console.log(res);\r\n//       if (res.data.code === 1) {\r\n//         setSubmitData(res.data.result);\r\n//         setDisplaySpecific(res.data.additional_queries);\r\n//         setAssingmentNo(res.data.result[0].assign_no);\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   getSubmittedAssingment();\r\n//   getQuery();\r\n// }, [assingNo]);\r\n\r\n// console.log(assingNo);\r\n\r\n{\r\n  /* <button\r\n                  class=\"btn btn-success\"\r\n                  onClick={() => history.goBack(\"4\")}\r\n                >\r\n                  Go Back\r\n                </button> */\r\n}\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\EditTP\\EditTP.js",["1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport { Select, Form, Input, Button } from \"antd\";\r\nimport TaxProffesionalService from \"../../../config/services/TaxProffesional\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\nfunction EditTP() {\r\n  const { Option } = Select;\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const alert = useAlert();\r\n\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [tax, setTax] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n\r\n  const [store, setStore] = useState(\"\");\r\n  const [store2, setStore2] = useState(null);\r\n  const [value, setValue] = useState({});\r\n  const [teamleader, setTeamLeader] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getTutorial(id);\r\n  }, [id]);\r\n\r\n  const getTutorial = (id) => {\r\n    TaxProffesionalService.get(id)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.code === 1) {\r\n          setValue(res.data.result[0]);\r\n          setStore(res.data.result[0].pcat_id);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getTeamLeader = () => {\r\n      axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setTeamLeader(res.data.result);\r\n        }\r\n      });\r\n    };\r\n    getTeamLeader();\r\n  }, []);\r\n\r\n  const handleChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setStore(value);\r\n  };\r\n\r\n  // console.log(\"value -\", value.name);\r\n  const data1 = value.name;\r\n  const data2 = value.email;\r\n  const data3 = value.phone;\r\n  const data4 = value.pcat_id;\r\n  const data5 = value.cat_id;\r\n  const data6 = value.tl_id;\r\n\r\n  useEffect(() => {\r\n    const getCategory = () => {\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setTax(res.data.result);\r\n        }\r\n      });\r\n    };\r\n\r\n    getCategory();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result);\r\n        }\r\n      });\r\n    };\r\n    getSubCategory();\r\n  }, [store]);\r\n\r\n\r\n  const onFinish = (value) => {\r\n    console.log(\"value :\", value);\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"email\", value.email);\r\n    formData.append(\"name\", value.name);\r\n    formData.append(\"phone\", value.phone);\r\n    formData.append(\"pcat_id\", value.category);\r\n    formData.append(\"cat_id\", value.sub_category);\r\n    formData.append(\"id\", id);\r\n    formData.append(\"tp_id\", value.select_teamleader);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/updateTP`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          var variable = \"Tax Professional Updated Successfully\"\r\n          Alerts.SuccessNormal(variable)\r\n          history.goBack();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <div class=\"col-md-12 d-flex\">\r\n            <div>\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </div>\r\n            <div class=\"text-center ml-5\">\r\n              <h4>Edit Tax Professional</h4>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n\r\n        {!data1 ? (\r\n          <CardHeader>loading ...</CardHeader>\r\n        ) : (\r\n          <CardHeader>\r\n            <div class=\"row mt-3\">\r\n              <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n              <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n                <Form\r\n                  name=\"basic\"\r\n                  initialValues={{\r\n                    name: `${data1}`,\r\n                    email: `${data2}`,\r\n                    phone: `${data3}`,\r\n                    category: `${data4}`,\r\n                    sub_category: `${data5}`,\r\n                    select_teamleader: `${data6}`,\r\n                  }}\r\n                  onFinish={onFinish}\r\n                >\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Name</label>\r\n                        <Form.Item name=\"name\">\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Phone Number</label>\r\n                        <Form.Item name=\"phone\">\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Email</label>\r\n                        <Form.Item name=\"email\">\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Select teamleader</label>\r\n                        <Form.Item name=\"select_teamleader\">\r\n                          <Select>\r\n                            <Option value=\"\">--select--</Option>\r\n                            {teamleader.map((p, index) => (\r\n                              <Option key={p.Id} value={p.id}>\r\n                                {p.name}\r\n                              </Option>\r\n                            ))}\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Category</label>\r\n                        <Form.Item name=\"category\">\r\n                          <Select onChange={handleChange}>\r\n                            <Option value=\"\">--Select Category--</Option>\r\n                            {tax.map((p, index) => (\r\n                              <Option key={index} value={p.id}>\r\n                                {p.details}\r\n                              </Option>\r\n                            ))}\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Sub Category</label>\r\n                        <Form.Item name=\"sub_category\">\r\n                          <Select>\r\n                            <Option value=\"\">--Select Sub-Category--</Option>\r\n                            {tax2.map((p, index) => (\r\n                              <Option key={index} value={p.id}>\r\n                                {p.details}\r\n                              </Option>\r\n                            ))}\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <Form.Item>\r\n                          <Button type=\"primary\" htmlType=\"submit\">\r\n                            Update\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </CardHeader>\r\n        )}\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default EditTP;\r\n\r\n\r\n// useEffect(() => {\r\n//   const getTaxProfessional = () => {\r\n//     axios.get(`${baseUrl}/tp/getTaxProfessional?id=${id}`).then((res) => {\r\n//       console.log(res);\r\n//       if (res.data.code === 1) {\r\n//         setUser({\r\n//           name: res.data.result[0].name,\r\n//           email: res.data.result[0].email,\r\n//           phone: res.data.result[0].phone,\r\n//         });\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   getTaxProfessional();\r\n// }, [id]);\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\PaymentStatusTab\\PaymentStatusTab.js",["1268","1269","1270"],"import React from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport PaidComponent from \"../../../components/PaidComponent/PaidComponent\";\r\n\r\nfunction PaymentStatusTab() {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <PaidComponent />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default PaymentStatusTab;\r\n\r\n// <div class=\"row mt-3\">\r\n// <div class=\"col-md-12\" style={{ top: \"-12px\" }}>\r\n//   <ul\r\n//     class=\"nav nav-pills mb-3 col-sm-12\"\r\n//     style={{ justifyContent: \"space-around\" }}\r\n//     id=\"pills-tab\"\r\n//     role=\"tablist\"\r\n//   >\r\n//     <li class=\"nav-item\" role=\"presentation\">\r\n//       <a\r\n//         class=\"nav-link text-white active\"\r\n//         id=\"pills-a-tab\"\r\n//         data-toggle=\"pill\"\r\n//         href=\"#a\"\r\n//         role=\"tab\"\r\n//         aria-controls=\"pills-a\"\r\n//         aria-selected=\"true\"\r\n//       >\r\n//        Partial Received\r\n//       </a>\r\n//     </li>\r\n\r\n//     <li class=\"nav-item\" role=\"presentation\">\r\n//       <a\r\n//         class=\"nav-link text-white\"\r\n//         id=\"pills-b-tab\"\r\n//         data-toggle=\"pill\"\r\n//         href=\"#b\"\r\n//         role=\"tab\"\r\n//         aria-controls=\"pills-b\"\r\n//         aria-selected=\"false\"\r\n//       >\r\n//        Full Received\r\n//       </a>\r\n//     </li>\r\n//   </ul>\r\n\r\n//   <div class=\"tab-content\" id=\"pills-tabContent\">\r\n//     <div\r\n//       class=\"tab-pane fade show active\"\r\n//       id=\"a\"\r\n//       role=\"tabpanel\"\r\n//       aria-labelledby=\"pills-a-tab\"\r\n//     >\r\n//          <UnPaidComponent />\r\n//     </div>\r\n\r\n//     <div\r\n//       class=\"tab-pane fade\"\r\n//       id=\"b\"\r\n//       role=\"tabpanel\"\r\n//       aria-labelledby=\"pills-b-tab\"\r\n//     >\r\n//       <PaidComponent />\r\n//     </div>\r\n//   </div>\r\n// </div>\r\n// </div>\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\QueryAssingment\\QueryAssingment.js",["1271","1272","1273","1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useParams, Link, Redirect } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\n\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_taxprof: yup.string().required(\"required team leader\"),\r\n  p_expdeldate: yup.string().required(\"required  Exp. delivery date \"),\r\n});\r\n\r\n\r\nfunction QueryAssingment(props) {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const { id } = useParams();\r\n\r\n  const [taxLeaderDisplay, setTaxLeaderDisplay] = useState([]);\r\n  const [teamID, setTeamID] = useState(null);\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [query, setQuery] = useState(true);\r\n\r\n  const [expectedDate, setExpectedDate] = useState(\"\");\r\n\r\n  const [hideQuery, setHideQuery] = useState({\r\n    name: \"\",\r\n    timeline: \"\",\r\n    date_allocation: \"\",\r\n    expdeliverydate: \"\",\r\n  });\r\n\r\n  const userId = window.localStorage.getItem(\"adminkey\");\r\n  const tlkey = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [queryData, setQuerData] = useState({\r\n    queryNo: \"\",\r\n    timelines: \"\",\r\n    custId: \"\",\r\n  });\r\n\r\n  const { queryNo, timelines, custId } = queryData;\r\n\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  console.log(\"current_date :\", current_date);\r\n  const [item] = useState(current_date);\r\n\r\n  useEffect(() => {\r\n    getTaxLeader();\r\n    getQueryData();\r\n  }, []);\r\n\r\n  const getTaxLeader = () => {\r\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setTaxLeaderDisplay(res.data.result);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getQueryData = () => {\r\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setQuerData({\r\n          queryNo: res.data.result[0].assign_no,\r\n          timelines: res.data.result[0].Timelines,\r\n          custId: res.data.result[0].customer_id,\r\n        });\r\n        // expectedDeliveryDate(res.data.result[0].Timelines);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQuery();\r\n  }, [queryNo]);\r\n\r\n  const getQuery = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/CheckIfAssigned?assignno=${queryNo}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setQuery(false);\r\n          setHideQuery({\r\n            name: res.data.meta[0].name,\r\n            timeline: res.data.meta[0].timeline,\r\n            date_allocation: res.data.meta[0].date_allocation,\r\n            expdeliverydate: res.data.meta[0].expdeliverydate,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"val-\", e.target.value);\r\n    setTeamID(e.target.value);\r\n    var value = taxLeaderDisplay.filter(function (item) {\r\n      return item.id == e.target.value;\r\n    });\r\n    console.log(value[0].name);\r\n    setTeamName(value[0].name);\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n    var expdeliverydate = value.p_expdeldate.replace(\r\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\r\n      \"$3-$1-$2\"\r\n    );\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"who\", teamID);\r\n    formData.append(\"id\", id);\r\n    formData.append(\"user\", JSON.parse(userId));\r\n    formData.append(\"type\", \"admin\");\r\n    formData.append(\"types\", \"tl\");\r\n    formData.append(\"name\", teamName);\r\n    formData.append(\"timeline\", value.p_timelines);\r\n    formData.append(\"expdeliverydate\", value.p_expdeldate);\r\n    formData.append(\"assignNo\", queryNo);\r\n    formData.append(\"customer_id\", custId);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AddQueryAssignment`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n\r\n          var variable = \"Query Assigned Successfully\"\r\n          Alerts.SuccessNormal(variable)\r\n\r\n          getQuery();\r\n          props.history.push({\r\n            pathname: `/admin/queriestab`,\r\n            index: 1,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  const expectedDeliveryDate = (key) => {\r\n    console.log(\"timlines : \", key);\r\n\r\n    const d = new Date();\r\n\r\n    if (key == \"Urgent, (4-5 Working Days)\") {\r\n      const d2 = new Date(d.getTime() + 432000000);\r\n      const new_date =\r\n        d2.getFullYear() + \"-\" + (d2.getMonth() + 1) + \"-\" + d2.getDate();\r\n      // d2.getDate() + \"/\" + (d2.getMonth() + 1) + \"/\" + d2.getFullYear();\r\n\r\n      console.log(\"Urgent:\", new_date);\r\n      setExpectedDate(new_date);\r\n    } else if (key == \"Regular (10-12 Working Days)\") {\r\n      const d2 = new Date(d.getTime() + 1296000000);\r\n      const new_date =\r\n        d2.getFullYear() + \"-\" + (d2.getMonth() + 1) + \"-\" + d2.getDate();\r\n      console.log(\"regular:\", new_date);\r\n      setExpectedDate(new_date);\r\n    }\r\n  };\r\n\r\n  console.log(\"expectedDate\", expectedDate)\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/admin/queriestab`,\r\n                  index: 1,\r\n                }}\r\n              >\r\n                <button class=\"btn btn-success ml-3\">\r\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                  Go Back\r\n                </button>\r\n              </Link>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <h2>Query Allocation</h2>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardHeader>\r\n          <div class=\"row mt-3\">\r\n            <div class=\"col-md-12\">\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <table class=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Query No.</th>\r\n                      <th scope=\"col\">Team Leaders</th>\r\n                      <th scope=\"col\">Expected Timeline</th>\r\n                      <th scope=\"col\">Exp. Delivery Date</th>\r\n                      <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {query ? (\r\n                      <tr>\r\n                        <th scope=\"row\">{queryNo}</th>\r\n                        <td>\r\n                          <select\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.p_taxprof,\r\n                            })}\r\n                            name=\"p_taxprof\"\r\n                            ref={register}\r\n                            onChange={(e) => handleChange(e)}\r\n                          >\r\n                            <option value=\"\">-select-</option>\r\n                            {taxLeaderDisplay.map((p, index) => (\r\n                              <option key={index} value={p.id}>\r\n                                {p.name}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.p_taxprof && (\r\n                            <div className=\"invalid-feedback\">\r\n                              {errors.p_taxprof.message}\r\n                            </div>\r\n                          )}\r\n                        </td>\r\n\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            ref={register}\r\n                            name=\"p_timelines\"\r\n                            value={timelines}\r\n                            class=\"form-control\"\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"date\"\r\n                            ref={register}\r\n                            name=\"p_expdeldate\"\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\": errors.p_expdeldate,\r\n                            })}\r\n                            min={item}\r\n                          />\r\n                          {errors.p_expdeldate && (\r\n                            <div className=\"invalid-feedback\">\r\n                              {errors.p_expdeldate.message}\r\n                            </div>\r\n                          )}\r\n                        </td>\r\n\r\n                        <td>\r\n                          <button type=\"submit\" class=\"btn btn-success\">\r\n                            Assign\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr>\r\n                        <th scope=\"row\">{queryNo}</th>\r\n                        <td>\r\n                          <select class=\"form-control w-75 p-0\" disabled>\r\n                            <option>{hideQuery.name}</option>\r\n                          </select>\r\n                        </td>\r\n\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            ref={register}\r\n                            name=\"p_timelines\"\r\n                            class=\"form-control\"\r\n                            value={hideQuery.timeline}\r\n                            disabled\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <input\r\n                            type=\"text\"\r\n                            ref={register}\r\n                            name=\"p_expdeldate\"\r\n                            class=\"form-control\"\r\n                            value={hideQuery.expdeliverydate}\r\n                            disabled\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <button class=\"btn btn-success\" disabled>\r\n                            Assigned\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueryAssingment;\r\n\r\n// <Card>\r\n//         <CardHeader>\r\n//           <Row>\r\n//             <Col md=\"4\">\r\n//               <button\r\n//                 class=\"btn btn-success ml-3\"\r\n//                 onClick={() => history.goBack()}\r\n//               >\r\n//                 <i class=\"fas fa-arrow-left mr-2\"></i>\r\n//                 Go Back\r\n//               </button>\r\n//             </Col>\r\n//             <Col md=\"8\">\r\n//               <h4>Add Assignment Stages (Max 5)</h4>\r\n//             </Col>\r\n//           </Row>\r\n//         </CardHeader>\r\n//         <CardHeader></CardHeader>\r\n//       </Card>\r\n\r\n// d2.getDate() + \"/\" + (d2.getMonth() + 1) + \"/\" + d2.getFullYear();\r\n// <Link\r\n//   to={{\r\n//     pathname: `/admin/queriestab`,\r\n//     index: 1,\r\n//   }}\r\n// />;\r\n\r\n// <Redirect\r\n//   to={{\r\n//     pathname: `/admin/queriestab`,\r\n//     index: 1,\r\n//   }}\r\n// />;\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\AssignmentTab\\index.js",["1286","1287","1288"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\nimport AssignmentComponent from \"./AllAssignment\";\r\nimport DraftReport from \"./DraftReport\";\r\nimport FinalReport from \"./FinalReport\";\r\n\r\nfunction AssignmentTab(props) {\r\n    // console.log(\"queries tab: \", props);\r\n\r\n    const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n    const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\r\n    const [draft, setDraft] = useState(\"\");\r\n    const [final, setFinal] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        CountAllAssignment();\r\n        CountDraftReport();\r\n        CountFinalReport();\r\n    }, []);\r\n\r\n\r\n    const CountAllAssignment = (data) => {\r\n        axios.get(`${baseUrl}/tl/getAssignments`).then((res) => {\r\n            console.log(res);\r\n            if (res.data.code === 1) {\r\n                setAllAssignmentCount(res.data.result.length);\r\n            }\r\n        });\r\n    };\r\n\r\n    const CountDraftReport = () => {\r\n        axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1`).then((res) => {\r\n            console.log(res);\r\n            if (res.data.code === 1) {\r\n                setDraft(res.data.result.length);\r\n            }\r\n        });\r\n    };\r\n\r\n    const CountFinalReport = () => {\r\n        axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1`).then((res) => {\r\n            console.log(res);\r\n            if (res.data.code === 1) {\r\n                setFinal(res.data.result.length);\r\n            }\r\n        });\r\n    };\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    useLayoutEffect(() => {\r\n        setTabIndex(props.location.index || 0);\r\n    }, [props.location.index]);\r\n\r\n\r\n    const myStyle1 = {\r\n        backgroundColor: \"grey\",\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n\r\n    return (\r\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n            <div>\r\n                <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n                    <TabList\r\n                        style={{\r\n                            listStyleType: \"none\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                        }}\r\n                    >\r\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n                            All Assignments ({allAssignmentCount})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n                            Inprogress; Draft Reports  ({draft})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n                        Inprogress; Delivery of Final Reports ({final})\r\n                        </Tab>\r\n\r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                        <AssignmentComponent />\r\n                    </TabPanel>\r\n\r\n                    <TabPanel>\r\n                        <DraftReport />\r\n                    </TabPanel>\r\n\r\n                    <TabPanel>\r\n                        <FinalReport />\r\n                    </TabPanel>\r\n                </Tabs>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default AssignmentTab;\r\n\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\Login\\Login.js",["1289","1290","1291"],"import React, { useState } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"required password\")\r\n    .min(5, \"at least 5 digits\")\r\n    .max(20, \"max 20 digits\"),\r\n});\r\n\r\nfunction Login(props) {\r\n  const alert = useAlert();\r\n\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const [email, setEmail] = useState(null);\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"userid\", value.p_email);\r\n    formData.append(\"password\", value.password);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/admin/login`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          Alerts.SuccessLogin()\r\n\r\n          localStorage.setItem(\r\n            \"adminkey\",\r\n            JSON.stringify(response.data[\"user id\"])\r\n          );\r\n          props.history.push(\"/admin/dashboard\");\r\n        } else if (response.data.code === 0) {\r\n          console.log(response.data.result);\r\n          Alerts.ErrorLogin()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n  const handleChange = (e) => {\r\n    console.log(\"val-\", e.target.value);\r\n    setEmail(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <Header admin=\"admin\" />\r\n      <div class=\"container\">\r\n        <div class=\"form\">\r\n          <div class=\"heading\">\r\n            <h2>ADMIN LOGIN</h2>\r\n          </div>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    ref={register}\r\n                    placeholder=\"Enter Email\"\r\n                    onChange={(e) => handleChange(e)}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_email.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Password</label>\r\n                  <input\r\n                    type={isPasswordShow ? \"text\" : \"password\"}\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    name=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                    ref={register}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n\r\n            <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\r\n              <Link\r\n                to={{\r\n                  pathname: \"/admin/forget-password\",\r\n                  email: `${email}`,\r\n                }}\r\n              >\r\n                Forgot Password\r\n              </Link>\r\n\r\n              {/* <Link to={`/admin/forget-password`}>Forgot Password</Link> */}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\TaxProfessionalsTab\\TaxProfessionalsTab.js",["1292","1293"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from \"sweetalert2\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TaxProffesionalService from \"../../../config/services/TaxProffesional\";\r\n\r\nfunction TaxProfessionalsTab() {\r\n  const alert = useAlert();\r\n  const [data, setData] = useState([]);\r\n  const [tpCount, setTpCount] = useState(\"\");\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  useEffect(() => {\r\n    getTaxProf();\r\n  }, []);\r\n\r\n  const getTaxProf = () => {\r\n    TaxProffesionalService.getAll()\r\n      .then((response) => {\r\n        setData(response.data.result);\r\n        setTpCount(response.data.result.length);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"email\",\r\n      text: \"Email\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"phone\",\r\n      text: \"Phone\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Edit\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <Link to={`/admin/edittp/${row.id}`}>\r\n              <i\r\n                className=\"fa fa-edit\"\r\n                style={{\r\n                  fontSize: 18,\r\n                  cursor: \"pointer\",\r\n                  marginLeft: \"8px\",\r\n                }}\r\n              ></i>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"phone\",\r\n      text: \"Delete\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <i\r\n              className=\"fa fa-trash\"\r\n              style={{ fontSize: 20, cursor: \"pointer\", marginLeft: \"8px\" }}\r\n              onClick={() => del(row.id)}\r\n            ></i>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  //check\r\n  const del = (id) => {\r\n    console.log(\"del\", id);\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"It will permanently deleted !\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteCliente(id);\r\n      }\r\n    });\r\n  };\r\n\r\n  // delete data\r\n  const deleteCliente = (id) => {\r\n    console.log(\"del\", id);\r\n    axios\r\n      .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\r\n      .then(function (response) {\r\n        console.log(\"delete-\", response);\r\n        if (response.data.code === 1) {\r\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n          getTaxProf();\r\n        } else {\r\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n  \r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"10\">\r\n              <CardTitle tag=\"h4\">Tax Professionals ({tpCount})</CardTitle>\r\n            </Col>\r\n            <Col md=\"2\">\r\n              <Link to={\"/admin/addnewtp\"} class=\"btn btn-primary\">\r\n                Add New\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={data}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default TaxProfessionalsTab;\r\n// const getTaxProf = () => {\r\n//   axios.get(`${baseUrl}/tp/getTaxProfessional`).then((res) => {\r\n//     console.log(res);\r\n//     if (res.data.code === 1) {\r\n//       setData(res.data.result);\r\n//       setTpCount(res.data.result.length);\r\n//     }\r\n//   });\r\n// };\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\FeedbackTab\\FeedbackTab.js",["1294","1295","1296"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport FeedbackService from \"../../../config/services/QueryDetails\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\n\r\nfunction FeedbackTab() {\r\n  const alert = useAlert();\r\n\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const [feedbackData, setFeedBackData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getFeedback();\r\n  }, []);\r\n\r\n  const getFeedback = () => {\r\n    FeedbackService.getAll()\r\n      .then((response) => {\r\n        setFeedBackData(response.data.result);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"10px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"60px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <div style={{ display: \"flex\" }}>\r\n              <p>{CommonServices.removeTime(row.created)}</p>\r\n              <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(row.created)}</p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"40px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return <>{row.assign_no}</>;\r\n      },\r\n    },\r\n    {\r\n      text: \"Feedback\",\r\n      dataField: \"feedback\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"150px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <div>\r\n              {\r\n                row.admin_read == \"0\" ?\r\n                  <div\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      display: \"flex\", justifyContent: \"space-between\"\r\n                    }}\r\n                    onClick={() => readNotification(row.id)}\r\n                    title=\"unread\"\r\n                  >\r\n                    <p>{row.feedback}  - By {row.name}</p>\r\n                    <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                  </div>\r\n                  :\r\n                  <div\r\n                    style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}\r\n                    title=\"read\"\r\n                  >\r\n                    <p>{row.feedback}  - By {row.name}</p>\r\n                    <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  // readnotification\r\n  const readNotification = (id) => {\r\n\r\n    console.log(\"call\", id)\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"type\", \"admin\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/markReadFeedback`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response)\r\n        if (response.data.code === 1) {\r\n          getFeedback()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n        <Card>\r\n          <CardHeader>\r\n            <Row>\r\n              <Col md=\"7\">\r\n                <CardTitle tag=\"h4\">Feedback</CardTitle>\r\n              </Col>\r\n              <Col md=\"5\"></Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={feedbackData}\r\n              columns={columns}\r\n              rowIndex\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FeedbackTab;\r\n\r\n\r\n\r\n// const getFeedback = () => {\r\n//   axios.get(`${baseUrl}/customers/getFeedback`).then((res) => {\r\n//     console.log(res);\r\n//     if (res.data.code === 1) {\r\n//       setFeedBackData(res.data.result);\r\n//     }\r\n//   });\r\n// };\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\TeamLeaderTab\\TeamLeaderTab.js",["1297","1298","1299"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Swal from \"sweetalert2\";\r\nfunction TeamLeaderTab() {\r\n  const alert = useAlert();\r\n  const [data, setData] = useState([]);\r\n  const [tlCount, setTlCount] = useState(\"\");\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" ,width:\"50px\"};\r\n      },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      // dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter : function nameFormatter(cell, row) {\r\n        var digit2 = [];\r\n        digit2 = row.allpcat_id.split(\",\")\r\n       \r\n        return(\r\n          <>\r\n          \r\n         {\r\n            digit2.map((e) => {\r\n            return(\r\n              <>\r\n             {e + \",\"}\r\n              </>\r\n            ) \r\n          })\r\n         }\r\n          </>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      \r\n     \r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter : function nameFormatter(cell, row) {\r\n        var digit = [];\r\n        digit = row.allcat_id.split(\",\")\r\n       \r\n        return(\r\n          <>\r\n          \r\n         {\r\n            digit.map((e) => {\r\n            return(\r\n              <>\r\n             {e + \",\"}\r\n              </>\r\n            ) \r\n          })\r\n         }\r\n          </>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      dataField: \"email\",\r\n      text: \"Email\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"phone\",\r\n      text: \"Phone\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Edit\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <Link to={`/admin/edittl/${row.id}`}>\r\n              <i\r\n                className=\"fa fa-edit\"\r\n                style={{\r\n                  fontSize: 18,\r\n                  cursor: \"pointer\",\r\n                  marginLeft: \"8px\",\r\n                }}\r\n              ></i>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"phone\",\r\n      text: \"Delete\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <i\r\n              className=\"fa fa-trash\"\r\n              style={{ fontSize: 20, cursor: \"pointer\", marginLeft: \"8px\" }}\r\n              onClick={() => del(row.id)}\r\n            ></i>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getTeamLeader();\r\n   \r\n  }, []);\r\n\r\n  const getTeamLeader = () => {\r\n    axios.get(`${baseUrl}/tl/getTeamLeader`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        console.log(data)\r\n        setData(res.data.result);\r\n        setTlCount(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n//check\r\n  const del = (id) => {\r\n    console.log(\"del\", id);\r\n\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"It will permanently deleted !\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteCliente(id);\r\n      }\r\n    });\r\n  };\r\n\r\n  // delete data\r\n  const deleteCliente = (id) => {\r\n    axios\r\n      .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\r\n      .then(function (response) {\r\n        console.log(\"delete-\", response);\r\n        if (response.data.code === 1) {\r\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n          getTeamLeader();\r\n        } else {\r\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"10\">\r\n              <CardTitle tag=\"h4\">Team Leaders ({tlCount})</CardTitle>\r\n            </Col>\r\n            <Col md=\"2\">\r\n              <Link to={\"/admin/addnewtl\"} class=\"btn btn-primary\">\r\n                Add New\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={data}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default TeamLeaderTab;","E:\\Mazars_Pannel\\src\\pages\\Admin\\Schedule\\Schedule.js",["1300","1301"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Demo from \"./Demo\";\r\n\r\nfunction Schedule() {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"7\">\r\n              <CardTitle tag=\"h4\">Schedule </CardTitle>\r\n            </Col>\r\n            <Col md=\"5\"></Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <Demo />\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Schedule;","E:\\Mazars_Pannel\\src\\pages\\Admin\\QueryRejection\\QueryRejection.js",["1302","1303","1304","1305","1306","1307","1308","1309","1310"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useParams, Link, Redirect } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n    Tooltip,\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\nfunction QueryRejection(props) {\r\n    const { id } = useParams();\r\n\r\n    const { handleSubmit, register, reset, errors } = useForm();\r\n    const userId = window.localStorage.getItem(\"adminkey\");\r\n\r\n\r\n    const onSubmit = (value) => {\r\n        console.log(\"value :\", value)\r\n        let formData = new FormData();\r\n        formData.append(\"id\", id);\r\n        formData.append(\"notes\", value.p_notes);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/admin/setAdminreject`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n                console.log(\"res-\", response);\r\n                if (response.data.code === 1) {\r\n                    var variable = \"Query declined successfully. \"\r\n                    Alerts.SuccessNormal(variable)\r\n\r\n                    props.history.push({\r\n                        pathname: `/admin/queriestab`,\r\n                        index: 1,\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"erroror - \", error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\r\n            <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"4\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: `/admin/queriestab`,\r\n                                    index: 1,\r\n                                }}\r\n                            >\r\n                                <button class=\"btn btn-success ml-3\">\r\n                                    <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                                    Go Back\r\n                                </button>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                            <div style={{ textAlign: \"center\" }}>\r\n                                <h2>Decline Query</h2>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardHeader>\r\n                    <div class=\"row mt-3\">\r\n                        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n                        <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Notes</label>\r\n                                            <textarea\r\n                                                className=\"form-control\"\r\n                                                id=\"textarea\"\r\n                                                rows=\"6\"\r\n                                                name=\"p_notes\"\r\n                                                ref={register}\r\n                                            ></textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">\r\n                                    Submit\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n                    </div>\r\n\r\n                </CardHeader>\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default QueryRejection;","E:\\Mazars_Pannel\\src\\pages\\Admin\\ForgetPassword\\ForgetPassword.js",["1311","1312","1313","1314","1315","1316","1317","1318"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n// import NewPassword from \"../NewPassword/NewPassword\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n});\r\n\r\n\r\n\r\nfunction ForgetPassword(props) {\r\n  const alert = useAlert();\r\n\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n\r\n    // axios({\r\n    //   method: \"POST\",\r\n    //   url: `${baseUrl}/customers/forgototp`,\r\n    //   data: formData,\r\n    // })\r\n    //   .then(function (response) {\r\n    //     console.log(\"res-\", response);\r\n    //     if (response.data.code === 1) {\r\n    //       alert.success(\"otp send your email !\");\r\n    //       props.history.push(\"/admin/new-password\");\r\n    //     } else if (response.data.code === 0) {\r\n    //       console.log(response.data.result);   \r\n    //       Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(\"erroror - \", error);\r\n    //   });\r\n  };\r\n\r\n  const valueHandler = () => {\r\n    var item = props.location.email\r\n    if (item == \"null\") {\r\n      console.log(\"item : \", item)\r\n      // return '';\r\n    } else {\r\n      return item\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Header admin=\"admin\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Forgot Password</h2>\r\n          </div>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_email,\r\n                })}\r\n                name=\"p_email\"\r\n                ref={register}\r\n                placeholder=\"Enter Email\"\r\n                defaultValue={valueHandler()}\r\n              />\r\n              {errors.p_email && (\r\n                <div className=\"invalid-feedback\">{errors.p_email.message}</div>\r\n              )}\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgetPassword;\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\MeetingComponent\\MeetingComponent.js",["1319","1320"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport Meeting from \"../meeting/index\";\r\n\r\nfunction MeetingComponent(props) {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Meeting />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default MeetingComponent;\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\PendingReceived\\PendingRecevived.js",["1321","1322","1323","1324","1325","1326"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\n// import \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\n\r\n\r\nfunction PendingRecevied() {\r\n  const [submitData, setSubmitData] = useState([]);\r\n  const [assingNo, setAssingmentNo] = useState();\r\n  const [displayQuery, setDisplayQuery] = useState([]);\r\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  useEffect(() => {\r\n    const getSubmittedAssingment = () => {\r\n      axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setSubmitData(res.data.result);\r\n          setDisplaySpecific(res.data.additional_queries);\r\n          setAssingmentNo(res.data.result[0].assign_no);\r\n        }\r\n      });\r\n    };\r\n\r\n    getSubmittedAssingment();\r\n    getQuery();\r\n  }, [assingNo]);\r\n\r\n  console.log(assingNo);\r\n\r\n  const getQuery = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setDisplayQuery(res.data.result);\r\n        }\r\n      });\r\n  };\r\n\r\n     //change date format\r\n     function ChangeFormateDate(oldDate) {\r\n      console.log(\"date\", oldDate);\r\n      if (oldDate == null) {\r\n        return null;\r\n      }\r\n      return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n    }\r\n    \r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n              {/* <p>{assingNo}</p> */}\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          {submitData.map((p, i) => (\r\n            <div class=\"card-body\">\r\n              <table class=\"table table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">Titles</th>\r\n                    <th scope=\"col\">Data</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                    <th scope=\"row\">Query No</th>\r\n                    <td>{p.assign_no}</td>\r\n                  </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Query Status</th>\r\n                    <td>{p.status}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Facts of the case</th>\r\n                    <td>{p.fact_case}</td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\r\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">\r\n                      Timelines within which Opinion is Required\r\n                    </th>\r\n                    <td colspan=\"1\">{p.Timelines}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">specific questions</th>\r\n                    <td colspan=\"1\">\r\n                      {diaplaySpecific.map((p, i) => (\r\n                        <p>{p.text}</p>\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <th scope=\"row\">Documents</th>\r\n                    <td>\r\n                      {p.upload_doc_1 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n\r\n                      {p.upload_doc_2 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n\r\n                      {p.upload_doc_3 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Format in which Opinion is required</th>\r\n                    <td colspan=\"1\">\r\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\r\n                      <p>\r\n                        {p.softcopy_digitally_assigned === \"1\" &&\r\n                          \"SoftCopy- Digitally Signed\"}\r\n                      </p>\r\n\r\n                      <p>\r\n                        {p.printout_physically_assigned === \"1\" &&\r\n                          \"Printout- Physically Signed\"}\r\n                      </p>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Action</th>\r\n                    <td>\r\n                    {p.allocation_status == \"0\" || p.allocation_status == \"3\"  ? (\r\n                        <Link to={`/admin/queryassing/${p.id}`}>\r\n                        <i class=\"fa fa-share\"></i>\r\n                      </Link>\r\n                      ) : (                  \r\n                       null\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                 \r\n                </tbody>\r\n              </table>\r\n\r\n              <table class=\"table table-bordered\">\r\n                {displayQuery.length > 0 && (\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\r\n                        Additional Queries\r\n                      </th>\r\n                      <th scope=\"col\">Date Submission</th>\r\n                      <th scope=\"col\">Documents</th>\r\n                    </tr>\r\n                  </thead>\r\n                )}\r\n\r\n                {displayQuery.map((p, i) => (\r\n                  <tbody>\r\n                    <tr key={i}>\r\n                      <td>{p.additional_queries}</td>\r\n                      <td>{ChangeFormateDate(p.created)}</td>\r\n                      <td>\r\n                        {p.upload_doc == \"\" ? (\r\n                          \"\"\r\n                        ) : (\r\n                          <p>\r\n                            <a\r\n                              href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc}`}\r\n                            >\r\n                              <i class=\"fa fa-photo\"></i>\r\n                            </a>\r\n                          </p>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))}\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default PendingRecevied;\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\Message\\Message.js",["1327","1328","1329","1330","1331","1332","1333"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n// import PaymentModal from \"./PaymentModal\";\r\nimport CommonServices from \"../../../common/common\";\r\n\r\n\r\nfunction Message(props) {\r\n    console.log(\"props\", props.location.obj)\r\n\r\n    const userId = window.localStorage.getItem(\"adminkey\");\r\n    const [query, setQuery] = useState([]);\r\n    const [data, setData] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        getMessage();\r\n    }, []);\r\n\r\n\r\n    const getMessage = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}&type_list=all`\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setQuery(res.data.result);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"20px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <p>{CommonServices.removeTime(row.setdate)}</p>\r\n                            <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(row.setdate)}</p>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        {row.assign_no}\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Message\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"180px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link to={`/admin/view-notification/${row.id}`}>\r\n                            {\r\n                                row.is_read == \"0\" ?\r\n                                    <div\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            display: \"flex\", justifyContent: \"space-between\"\r\n                                        }}\r\n                                        onClick={() => readNotification(row.id)}\r\n                                        title=\"unread\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                                    </div>\r\n                                    :\r\n                                    <div\r\n                                        style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}\r\n                                        title=\"read\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                                    </div>\r\n                            }\r\n                        </Link>\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    // readnotification\r\n    const readNotification = (id) => {\r\n\r\n        console.log(\"call\", id)\r\n        axios\r\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\r\n            .then(function (response) {\r\n                console.log(\"delete-\", response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"erroror - \", error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\r\n            <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"9\">\r\n                            <CardTitle tag=\"h4\">Message</CardTitle>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={query}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n\r\n{/* <Col md=\"3\">\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}\r\n                                class=\"btn btn-primary\"\r\n                            // onClick={() => paymentHandler()}\r\n                            >\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: `/customer/chatting`,\r\n                                        obj: props.location.obj\r\n                                    }}\r\n\r\n                                >\r\n                                    Add Message\r\n                                </Link>\r\n                            </div>\r\n                        </Col> */}","E:\\Mazars_Pannel\\src\\pages\\Admin\\ViewNotification\\ViewNotification.js",["1334","1335","1336","1337","1338","1339","1340","1341","1342","1343"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport CommonServices from \"../../../common/common\";\r\n\r\nfunction ViewNotification() {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    getChatting();\r\n  }, [id]);\r\n\r\n  const getChatting = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"uid\", JSON.parse(userid));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/viewNotification`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          setData(response.data.result[0]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  console.log(\"data-\", data);\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message Details</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <table class=\"table table-bordered\">\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Query No</th>\r\n                <td>{data.assign_no}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\"> System Generated</th>\r\n                <td>{data.name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date</th>\r\n                <td>\r\n                  {CommonServices.removeTime(data.setdate)}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Message</th>\r\n                <td>{data.message}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Type</th>\r\n                <td>\r\n                  {data.type == \"1\"\r\n                    ? \"Others\"\r\n                    : data.type == \"2\"\r\n                      ? \"Proposal Discussion\"\r\n                      : data.type == \"3\"\r\n                        ? \"Assignment Discussion\"\r\n                        : data.type == \"4\"\r\n                          ? \"Query Discussion\"\r\n                          :\r\n                          data.type == \"5\"\r\n                            ? \"Payment Discussion\"\r\n                            :\r\n                            null\r\n                  }\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ViewNotification;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\Start\\Start.js",[],"E:\\Mazars_Pannel\\src\\pages\\Admin\\QueriesTab\\QueriesTab.js",["1344","1345","1346","1347"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nimport PendingForAllocation from \"../../../components/PendingForAllocation/PendingForAllocation\";\r\nimport PendingForProposals from \"../../../components/PendingForProposals/PendingForProposals\";\r\nimport DeclinedQueries from \"../../../components/DeclinedQueries/DeclinedQueries\";\r\nimport AllQueriesData from \"../../../components/AllQueriesData/AllQueriesData\";\r\nimport { Tab, Tabs, TabPanel, TabList } from \"react-tabs\";\r\n\r\n\r\nfunction QueriesTab(props) {\r\n  // console.log(\"queries tab: \", props);\r\n\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [allQueriesCount, setAllQueriesCount] = useState(\"\");\r\n  const [pendingProposalCount, setPendingProposalCount] = useState(\"\");\r\n  const [declined, setDeclined] = useState(\"\");\r\n  const [inprogressAllocation, setInprogressAllocation] = useState();\r\n\r\n\r\n  useEffect(() => {\r\n    CountAllQuery();\r\n    CountInprogressAllocation();\r\n    CountInprogressProposal();\r\n    CountDeclined();\r\n  }, []);\r\n\r\n\r\n  const CountAllQuery = (data) => {\r\n    axios.get(`${baseUrl}/admin/getAllQueries`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setAllQueriesCount(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const CountInprogressAllocation = () => {\r\n    axios.get(`${baseUrl}/admin/pendingAllocation`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setInprogressAllocation(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const CountInprogressProposal = () => {\r\n    axios.get(`${baseUrl}/admin/pendingProposal`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setPendingProposalCount(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  const CountDeclined = () => {\r\n    axios.get(`${baseUrl}/admin/declinedQueries`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setDeclined(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Queries ({allQueriesCount})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Allocation ({inprogressAllocation})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Inprogress; Proposals ({pendingProposalCount})\r\n            </Tab>\r\n\r\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n              Declined Queries ({declined})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllQueriesData />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <PendingForAllocation />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <PendingForProposals />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DeclinedQueries />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n\r\n\r\n  // const count_PFA = window.localStorage.getItem(\"count_PFA\");\r\n\r\n  // const CountAllQuery = (data) => {\r\n  //   setAllQueriesCount(data);\r\n  // };\r\n\r\n  // const CountPendingProposal = (data) => {\r\n  //   setPendingProposalCount(data);\r\n  // };\r\n\r\n  // const CountPendingForPayment = (data) => {\r\n  //   setPendingforPayment(data);\r\n  // };\r\n\r\n  // const CountPendingForAllocation = (data) => {\r\n  //   setPendingforAllocation(data);\r\n  // };\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\EditTL\\EditTL.js",["1348","1349","1350","1351","1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport Reset from \"./Reset\";\r\nimport { Select, Form, Input, Button } from \"antd\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\nfunction EditTL() {\r\n  const { Option } = Select;\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const alert = useAlert();\r\n\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [tax, setTax] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n\r\n  const [store, setStore] = useState(\"\");\r\n  const [store2, setStore2] = useState(null);\r\n  const [value, setValue] = useState({});\r\n\r\n  const handleChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setStore(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTeamLeader();\r\n  }, [id]);\r\n\r\n  const getTeamLeader = () => {\r\n    axios.get(`${baseUrl}/tl/getTeamLeader?id=${id}`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n      setValue(res.data.result[0]);\r\n      setStore(res.data.result[0].pcat_id);\r\n      }\r\n    });\r\n  };\r\n  console.log(\"value -\", value.name);\r\n  const data1 = value.name;\r\n  const data2 = value.email;\r\n  const data3 = value.phone;\r\n  const data4 = value.pcat_id;\r\n  const data5 = value.cat_id;\r\n\r\n  useEffect(() => {\r\n    const getCategory = () => {\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setTax(res.data.result);\r\n        }\r\n      });\r\n    };\r\n\r\n    getCategory();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result);\r\n        }\r\n      });\r\n    };\r\n    getSubCategory();\r\n  }, [store]);\r\n\r\n\r\n\r\n  const onFinish = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.email);\r\n    formData.append(\"name\", value.name);\r\n    formData.append(\"phone\", value.phone);\r\n    formData.append(\"pcat_id\", value.category);\r\n    formData.append(\"cat_id\", value.sub_category);\r\n    formData.append(\"id\", id);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/updateTeamLeader`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          \r\n          var variable = \"Team Leader Updated Successfully\"\r\n          Alerts.SuccessNormal(variable)\r\n          history.goBack();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <div class=\"col-md-12 d-flex\">\r\n            <div>\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </div>\r\n            <div class=\"text-center ml-5\">\r\n              <h4>Edit Team Leader</h4>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n\r\n        {!data1 ? (\r\n          <CardHeader>loading ...</CardHeader>\r\n        ) : (\r\n          <CardHeader>\r\n            <div class=\"row mt-3\">\r\n              <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n              <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n                <Form\r\n                  name=\"basic\"\r\n                  initialValues={{\r\n                    name: `${data1}`,\r\n                    email: `${data2}`,\r\n                    phone: `${data3}`,\r\n                    category: `${data4}`,\r\n                    sub_category: `${data5}`,\r\n                  }}\r\n                  onFinish={onFinish}\r\n                >\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Name</label>\r\n                        <Form.Item name=\"name\">\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Phone Number</label>\r\n                        <Form.Item name=\"phone\">\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Category</label>\r\n                        <div class=\"form-group\">\r\n                          <Form.Item name=\"category\">\r\n                            <Select onChange={handleChange}>\r\n                              <Option value=\"\">--Select Category--</Option>\r\n                              {tax.map((p, index) => (\r\n                                <Option key={index} value={p.id}>\r\n                                  {p.details}\r\n                                </Option>\r\n                              ))}\r\n                            </Select>\r\n                          </Form.Item>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Sub Category</label>\r\n                        <Form.Item name=\"sub_category\">\r\n                          <Select>\r\n                            <Option value=\"\">--Select Sub-Category--</Option>\r\n                            {tax2.map((p, index) => (\r\n                              <Option key={index} value={p.id}>\r\n                                {p.details}\r\n                              </Option>\r\n                            ))}\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"form-group\">\r\n                        <label>Email</label>\r\n                        <Form.Item name=\"email\">\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <Form.Item>\r\n                          <Button type=\"primary\" htmlType=\"submit\">\r\n                            Update\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </CardHeader>\r\n        )}\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default EditTL;\r\n\r\n// setValue(\"p_name\", res.data.result[0].name);\r\n// setValue(\"p_email\", res.data.result[0].email);\r\n// setUser({\r\n//   name: res.data.result[0].name,\r\n//   email: res.data.result[0].email,\r\n//   phone: res.data.result[0].phone,\r\n//   category: res.data.result[0].parent_id,\r\n//   sub_category: res.data.result[0].cat_name,\r\n// });\r\n// const [user, setUser] = useState({\r\n//   name: \"\",\r\n//   email: \"\",\r\n//   phone: \"\",\r\n//   category: \"\",\r\n//   sub_category: \"\",\r\n// });\r\n\r\n// const { name, email, phone, category, sub_category } = user;\r\n{\r\n  /* <div class=\"row mt-3\">\r\n            <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n            <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n              <div>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Name</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          name=\"p_name\"\r\n                          ref={register}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Phone Number</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          class=\"form-control\"\r\n                          name=\"p_phone\"\r\n                          ref={register}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Category</label>\r\n\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"p_tax\"\r\n                          ref={register}\r\n                          value={store}\r\n                          onChange={(e) => setStore(e.target.value)}\r\n                        >\r\n                          <option value=\"\">--Select Category--</option>\r\n                          {tax.map((p, index) => (\r\n                            <option key={index} value={p.id}>\r\n                              {p.details}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>Sub Category</label>\r\n                        <select\r\n                          className=\"form-select form-control\"\r\n                          name=\"p_tax2\"\r\n                          ref={register}\r\n                          onChange={(e) => setStore2(e.target.value)}\r\n                        >\r\n                          <option value=\"\">--Select Sub-Category--</option>\r\n                          {tax2.map((p, index) => (\r\n                            <option key={index} value={p.id}>\r\n                              {p.details}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input\r\n                          type=\"email\"\r\n                          class=\"form-control\"\r\n                          name=\"p_email\"\r\n                          ref={register}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Update\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div> */\r\n}\r\n\r\n// const [interest, setInterest] = useState(\"Direct Tax\");\r\n\r\n// const [selectedOption, setSelectedOption] = useState([]);\r\n// const [tax, setTax] = useState([]);\r\n// const [tax2, setTax2] = useState([]);\r\n\r\n// const [store, setStore] = useState(\"\");\r\n// const [store2, setStore2] = useState(null);\r\n\r\n// useEffect(() => {\r\n//   getTeamLeader();\r\n// }, []);\r\n\r\n// const getTeamLeader = () => {\r\n//   axios.get(`${baseUrl}/tl/getTeamLeader?id=${id}`).then((res) => {\r\n//     console.log(res);\r\n//     console.log(res.data.result[0]);\r\n//     if (res.data.code === 1) {\r\n//       // setSelectedOption(res.data.result);\r\n//       // setInterest(res.data.result[0].parent_id)\r\n//       // reset(res.data.result[0]);\r\n\r\n//       setValue(\"p_name\", res.data.result[0].name);\r\n//       setValue(\"p_email\", res.data.result[0].email);\r\n//       setValue(\"p_phone\", res.data.result[0].phone);\r\n//       setValue(\"p_tax\", res.data.result[0].parent_id);\r\n//       setValue(\"p_tax2\", res.data.result[0].cat_name);\r\n//     }\r\n//   });\r\n// };\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\AddAssingmentStages\\AddAssingmentStages.js",["1363","1364","1365","1366","1367","1368","1369","1370","1371","1372","1373"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams, useHistory, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\n\r\nfunction AddAssingmentStages() {\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const [assignmentStages, setAssignmentstages] = useState([]);\r\n  const [clientDiscussion, setClientDiscussion] = useState(null);\r\n\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getAssignmentList();\r\n  }, []);\r\n\r\n  const getAssignmentList = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(\"dt -\",res.data.result[0].client_discussion);\r\n\r\n        if (res.data.code === 1) {\r\n          setAssignmentstages(res.data.result);\r\n          reset(res.data.result[0]);\r\n          setClientDiscussion(res.data.result[0].client_discussion)\r\n        }\r\n      });\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(value);\r\n\r\n    let formData = new FormData();\r\n\r\n    // formData.append(\"user\", JSON.parse(userid));\r\n    formData.append(\"q_id\", id);\r\n    formData.append(\"user_id\", JSON.parse(userid));\r\n    formData.append(\"stage_1_status\", value.client_discussion);\r\n    formData.append(\"stage_2_status\", value.draft_report);\r\n    formData.append(\"stage_3_status\", value.final_discussion);\r\n    formData.append(\"stage_4_status\", value.delivery_report);\r\n    formData.append(\"stage_5_status\", value.other_stage);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/postAssignmentStages`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          alert.success(<Msg />);\r\n          getAssignmentList();\r\n          history.push(\"/teamleader/assignment\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  //alert msg\r\n  const Msg = () => {\r\n    return (\r\n      <>\r\n        <p style={{ fontSize: \"10px\" }}>Assignment successfully added </p>\r\n      </>\r\n    );\r\n  };\r\n\r\n  console.log(\"clientDiscussion\", clientDiscussion);\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Assignment Stages</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardHeader>\r\n          <div class=\"row mt-3\">\r\n            {assignmentStages.map((p, i) => (\r\n              <>\r\n                {p.client_discussion == \"completed\" &&\r\n                p.delivery_report == \"completed\" &&\r\n                p.draft_report == \"completed\" &&\r\n                p.final_discussion == \"completed\" &&\r\n                p.other_stage == \"completed\" ? (\r\n                  <div class=\"col-md-12\">\r\n                    <div class=\"col-md-8\">\r\n                      <br />\r\n                      <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Client Discussion\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.client_discussion}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Draft Report\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.draft_report}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Final Discussion\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.final_discussion}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Delivery of report\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.delivery_report}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <label\r\n                                style={{\r\n                                  fontSize: \"20px\",\r\n                                  fontWeight: \"500\",\r\n                                  paddingTop: \"30px\",\r\n                                }}\r\n                              >\r\n                                Complete\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                              <select\r\n                                class=\"form-control\"\r\n                                ref={register}\r\n                                disabled\r\n                              >\r\n                                <option>{p.other_stage}</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <br />\r\n                        <div class=\"form-group\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            class=\"btn btn-primary\"\r\n                            disabled\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div class=\"col-md-12\">\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Client Discussion\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <select\r\n                              class=\"form-control\"\r\n                              ref={register}\r\n                              name=\"client_discussion\"\r\n                            >\r\n                              <option value=\"inprogress\">Inprogress</option>\r\n                              <option value=\"completed\">Completed</option>\r\n                              <option value=\"notApplicable\">\r\n                                Not Applicable\r\n                              </option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        {/* {p.client_discussion == \"completed\" ? null : ( */}\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div>\r\n                              <Link\r\n                                to={{\r\n                                  pathname: `/teamleader/assignment-form/${p.assign_id}`,\r\n                                  clients:`${clientDiscussion}`,\r\n                                }}\r\n                              >\r\n                                View Details\r\n                              </Link>\r\n                              {/* <Link\r\n                                  to={`/teamleader/assignment-form/${p.assign_id}`}\r\n                                >\r\n                                  View Details\r\n                                </Link> */}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* )} */}\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Draft Report\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <select\r\n                              class=\"form-control\"\r\n                              ref={register}\r\n                              name=\"draft_report\"\r\n                            >\r\n                              <option value=\"inprogress\">Inprogress</option>\r\n                              <option value=\"completed\">Completed</option>\r\n                              <option value=\"notApplicable\">\r\n                                Not Applicable\r\n                              </option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div>\r\n                              <Link\r\n                                to={`/teamleader/view-report/${p.assign_no}`}\r\n                              >\r\n                                View Report\r\n                              </Link>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Final Discussion\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <select\r\n                              class=\"form-control\"\r\n                              ref={register}\r\n                              name=\"final_discussion\"\r\n                            >\r\n                              <option value=\"inprogress\">Inprogress</option>\r\n                              <option value=\"completed\">Completed</option>\r\n                              <option value=\"notApplicable\">\r\n                                Not Applicable\r\n                              </option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Delivery of report\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <select\r\n                              class=\"form-control\"\r\n                              ref={register}\r\n                              name=\"delivery_report\"\r\n                            >\r\n                              <option value=\"inprogress\">Inprogress</option>\r\n                              <option value=\"completed\">Completed</option>\r\n                              <option value=\"notApplicable\">\r\n                                Not Applicable\r\n                              </option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <label\r\n                              style={{\r\n                                fontSize: \"20px\",\r\n                                fontWeight: \"500\",\r\n                                paddingTop: \"30px\",\r\n                              }}\r\n                            >\r\n                              Complete\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <select\r\n                              class=\"form-control\"\r\n                              ref={register}\r\n                              name=\"other_stage\"\r\n                            >\r\n                              <option value=\"inprogress\">Inprogress</option>\r\n                              <option value=\"completed\">Completed</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <div class=\"form-group\">\r\n                            <div></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <br />\r\n                      <div class=\"form-group\">\r\n                        <button type=\"submit\" class=\"btn btn-primary\">\r\n                          Submit\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                )}\r\n              </>\r\n            ))}\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddAssingmentStages;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\AddNew\\AddNew.js",["1374","1375","1376"],"import React from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\n// import './index.css'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\"; \r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\n\r\n// const Schema = yup.object().shape({\r\n//   p_name: yup.string().required(\"required name\"),\r\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n//   p_phone: yup\r\n//   .string()\r\n//   .required(\"required phone no\")\r\n//   .matches(/^[0-9]+$/, \"Must be only digits\")\r\n//   .min(10, \"Must be exactly 10 digits\")\r\n//   .max(20, \"max 20 digits\"),\r\n// });\r\n\r\n\r\n\r\nfunction AddNew() {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"phone\", value.p_phone);\r\n    formData.append(\"type\", \"tp\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/AddTaxProfessional`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);     \r\n        if (response.data.code === 1) {\r\n          alert.success(\"TP created  !\");\r\n          reset();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"text-center\">\r\n            <h3>Add New Tax Professionals</h3>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n          <div>\r\n          <form onSubmit={handleSubmit(onSubmit)}>   \r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      name=\"p_name\"\r\n                      ref={register}\r\n                    />\r\n                   \r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      class=\"form-control\"\r\n                      name=\"p_email\"\r\n                    ref={register}\r\n                    />\r\n                    \r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"form-group\">\r\n                    <label>Phone Number</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      name=\"p_phone\"\r\n                      ref={register}\r\n                    />\r\n                    \r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddNew;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\AddTeamProf\\AddTeamProf.js",["1377","1378","1379","1380"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\nfunction AddTeamProf() {\r\n  const alert = useAlert();\r\n  const [data, setData] = useState([]);\r\n  const [count, setCount] = useState(\"\");\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  useEffect(() => {\r\n    getTaxProf();\r\n  }, []);\r\n\r\n  const getTaxProf = () => {\r\n    axios\r\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setData(res.data.result);\r\n          setCount(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Email\",\r\n      dataField: \"email\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Phone\",\r\n      dataField: \"phone\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n  ];\r\n  // delete data\r\n  const del = (id) => {\r\n    console.log(\"del\", id);\r\n\r\n    axios\r\n      .get(`${baseUrl}/delete/TaxLead/${id}`)\r\n      .then(function (response) {\r\n        console.log(\"delete-\", response);\r\n        alert.success(\"successfully deleted \");\r\n        getTaxProf();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"10\">\r\n              <CardTitle tag=\"h4\">Tax Professionals ({count})</CardTitle>\r\n            </Col>\r\n            <Col md=\"2\"></Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={data}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n\r\n          {/* <Table responsive=\"sm\" bordered>\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">S.No</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Phone No.</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((p, i) => (\r\n                <tr>\r\n                  <th scope=\"row\">{i + 1}</th>\r\n                  <td>{p.name}</td>\r\n                  <td>{p.email}</td>\r\n                  <td>{p.phone}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table> */}\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AddTeamProf;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\Dashboard\\Dashboard.js",["1381","1382","1383","1384"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Dashboard() {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [allQueries, setAllQueries] = useState({\r\n    total: '',\r\n    inprogress_queries: '',\r\n    inprogress_allocation: '',\r\n    inprogress_proposal: '',\r\n    inprogress_assignment: '',\r\n    complete_query: '',\r\n    declined_queries: '',\r\n    admin_declined_query: '',\r\n    customer_declined_Query: '',\r\n    customer_declined_proposal: '',\r\n    Customer_declined_payment: '',\r\n\r\n    allproposal: '',\r\n    accepted_proposals: '',\r\n    InProgress: '',\r\n    inprogress_preparation: '',\r\n    inprogress_acceptance: '',\r\n    declined: '',\r\n  });\r\n\r\n\r\n  const [assignment, setAssignment] = useState({\r\n    inprogress: '',\r\n    complete: '',\r\n    client_discussion: '',\r\n    draft_report: '',\r\n    final_discussion: '',\r\n    final_report: '',\r\n    complete_inprocess: '',\r\n    customer_declined_payment: ''\r\n  });\r\n\r\n  const [payment, setPayment] = useState({\r\n    paid: '',\r\n    unpaid: '',\r\n    totalpayment: '',\r\n  });\r\n\r\n  const { total, inprogress_queries,\r\n    inprogress_allocation, inprogress_proposal,\r\n    inprogress_assignment, complete_query,\r\n    declined_queries, admin_declined_query,\r\n    customer_declined_Query, customer_declined_proposal,\r\n    Customer_declined_payment,\r\n    allproposal,\r\n    inprogress_preparation,\r\n    declined, inprogress_acceptance,\r\n    accepted_proposals, InProgress } = allQueries;\r\n\r\n\r\n  const {\r\n    inprogress,\r\n    complete, client_discussion, draft_report, final_discussion,\r\n    final_report, complete_inprocess,\r\n    customer_declined_payment } = assignment;\r\n\r\n  const {\r\n    paid,\r\n    unpaid,\r\n    totalpayment } = payment;\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const getAllQueries = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/totalComplete?tl_id=${JSON.parse(userid)}`)\r\n        .then((response) => {\r\n          console.log(\"code---\", response);\r\n          if (response.data.code === 1) {\r\n            setAllQueries({\r\n              total: response.data.result.total,\r\n              inprogress_queries: response.data.result.inprogress_queries,\r\n              inprogress_allocation: response.data.result.inprogress_allocation,\r\n              inprogress_proposal: response.data.result.inprogress_proposal,\r\n              inprogress_assignment: response.data.result.inprogress_assignment,\r\n              complete_query: response.data.result.complete_query,\r\n              declined_queries: response.data.result.declined_queries,\r\n              admin_declined_query: response.data.result.admin_declined_query,\r\n              customer_declined_Query: response.data.result.customer_declined_Query,\r\n              customer_declined_proposal: response.data.result.customer_declined_proposal,\r\n              Customer_declined_payment: response.data.result.Customer_declined_payment,\r\n\r\n              allproposal: response.data.result.proposal.allproposal,\r\n              InProgress: response.data.result.proposal.InProgress,\r\n              inprogress_preparation: response.data.result.proposal.inprogress_preparation,\r\n              inprogress_acceptance: response.data.result.proposal.inprogress_acceptance,\r\n              accepted_proposals: response.data.result.proposal.accepted_proposals,\r\n              declined: response.data.result.proposal[\"customer_declined_proposals \"],\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\", error);\r\n        });\r\n    };\r\n\r\n    const getAssignment = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getAssignmentsCount?tl_id=${JSON.parse(userid)}`)\r\n        .then((response) => {\r\n          console.log(\"code---\", response);\r\n          if (response.data.code === 1) {\r\n            setAssignment({\r\n              inprogress: response.data.result.inprogress,\r\n              complete: response.data.result.complete,\r\n              client_discussion: response.data.result.client_discussion,\r\n              draft_report: response.data.result.draft_report,\r\n              final_discussion: response.data.result.final_discussion,\r\n              final_report: response.data.result.final_report,\r\n              complete_inprocess: response.data.result.complete_inprocess,\r\n              customer_declined_payment: response.data.result.customer_declined_payment,\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\", error);\r\n        });\r\n    };\r\n\r\n    const getPayment = () => {\r\n      axios\r\n        .get(`${baseUrl}/admin/getAssignmentsPaymentCount?tl_id=${JSON.parse(userid)}`)\r\n        .then((response) => {\r\n          console.log(\"code---\", response);\r\n          if (response.data.code === 1) {\r\n            setPayment({\r\n              paid: response.data.result.paid,\r\n              unpaid: response.data.result.unpaid,\r\n              totalpayment: response.data.result.totalpayment,\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error\", error);\r\n        });\r\n    };\r\n\r\n    getAllQueries();\r\n    getPayment();\r\n    getAssignment();\r\n  }, []);\r\n\r\n\r\n\r\n  var todaysDate = new Date();\r\n  console.log(todaysDate);\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n\r\n      <div className=\"row\">\r\n\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n          <table className=\"table table-striped first main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Queries</th>\r\n                <th>{total}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n          <table className=\"table table-striped second main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Queries</th>\r\n                <th>{inprogress_queries}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Allocation</td>\r\n                <td>{inprogress_allocation}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Proposals</td>\r\n                <td>{inprogress_proposal}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Assignments</td>\r\n                <td>{inprogress_assignment}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n\r\n          <table className=\"table table-striped third main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Completed; Queries</th>\r\n                <th>{complete_query}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Completed; Assignments</td>\r\n                <td>{complete_query}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n\r\n          <table className=\"table table-striped forth main_table\">\r\n            <thead className=\"query_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Declined; Queries</th>\r\n                <th>{declined_queries}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody className=\"table_body\">\r\n              {/* <tr>\r\n                <td className=\"left_side\">Admin Declined; Queries</td>\r\n                <td>{admin_declined_query}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\"> Customer Declined; Queries</td>\r\n                <td>{customer_declined_Query}</td>\r\n              </tr> */}\r\n              <tr>\r\n                <td className=\"left_side\">Customer Declined; Proposals</td>\r\n                <td>{customer_declined_proposal}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Customer Declined; Payment</td>\r\n                <td>{Customer_declined_payment}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n\r\n          <table className=\"table table-striped fifth main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Proposals</th>\r\n                <th>{allproposal}</th>\r\n\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped sixth main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Proposals</th>\r\n                <th>{InProgress}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody classNameName=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Preparation</td>\r\n                <td>{inprogress_preparation}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Inprogress; Acceptance</td>\r\n                <td>{inprogress_acceptance}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <table className=\"table table-striped seventh main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Accepted; Proposals </th>\r\n                <th>{accepted_proposals}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped eight main_table\">\r\n            <thead className=\"proposal_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">Customer Declined; Proposals</th>\r\n                <th>{declined}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n          <table className=\"table table-striped ninth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Assignments</th>\r\n                <th>{inprogress + complete + +(customer_declined_payment)}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Inprogress; Assignments</th>\r\n                <th>{inprogress}</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody classNameName=\"table_body\">\r\n              <tr>\r\n                <td className=\"left_side\">Client Discussion</td>\r\n                <td>{client_discussion}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Draft Reports</td>\r\n                <td>{draft_report}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Final Discussion</td>\r\n                <td>{final_discussion}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Delivery of Final Reports</td>\r\n                <td>{final_report}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"left_side\">Awaiting Completion</td>\r\n                <td>{complete_inprocess}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Completed; Assignments</th>\r\n                <th>{complete}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped tenth main_table\">\r\n            <thead className=\"assignment_thead\">\r\n\r\n              <tr>\r\n                <th className=\"left_side\">Customer Declined; Payment</th>\r\n                <th>{customer_declined_payment}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n        </div>\r\n\r\n\r\n        <div className=\"col-md-3 content_header\">\r\n\r\n          <table className=\"table table-striped twelvth main_table\">\r\n            <thead className=\"payment_thead\">\r\n              <tr>\r\n                <th className=\"left_side\">All Payments</th>\r\n                <th>{totalpayment}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n          <table className=\"table table-striped thirteen main_table\">\r\n            <thead className=\"payment_thead2\">\r\n              <tr>\r\n                <th className=\"left_side\">Paid</th>\r\n                <th>{paid}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n\r\n          <table className=\"table table-striped thirteen main_table\">\r\n            <thead className=\"payment_thead2\">\r\n              <tr>\r\n                <th className=\"left_side\">Unpaid</th>\r\n                <th>{unpaid}</th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// var todaysDate = new Date();\r\n//   console.log(todaysDate);\r\n// function convertDate(date) {\r\n//   var yyyy = date.getFullYear().toString();\r\n//   var mm = (date.getMonth() + 1).toString();\r\n//   var dd = date.getDate().toString();\r\n\r\n//   var mmChars = mm.split(\"\");\r\n//   var ddChars = dd.split(\"\");\r\n\r\n//   return (\r\n//     yyyy +\r\n//     \"-\" +\r\n//     (mmChars[1] ? mm : \"0\" + mmChars[0]) +\r\n//     \"-\" +\r\n//     (ddChars[1] ? dd : \"0\" + ddChars[0])\r\n//   );\r\n// }\r\n\r\n// console.log(convertDate(todaysDate));\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\EditTP\\EditTP.js",["1385","1386"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nfunction EditTP() {\r\n  const { id } = useParams();\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n  const { name, email, phone } = user;\r\n\r\n  useEffect(() => {\r\n    const getTeamLeader = () => {\r\n      axios.get(`${baseUrl}/tp/getTaxProfessional?id=${id}`).then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setUser({\r\n            name: res.data.result[0].name,\r\n            email: res.data.result[0].email,\r\n            phone: res.data.result[0].phone,\r\n          });\r\n        }\r\n      });\r\n    };\r\n    getTeamLeader();\r\n  }, [id]);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"phone\", value.p_phone);\r\n    formData.append(\"id\", JSON.parse(userid));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/updateTP`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          alert.success(\"TL updated  !\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"text-center\">\r\n            <h3>Edit Tax Professional</h3>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n        <div class=\"col-lg-8 col-xl-8 col-md-12\">\r\n          <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      name=\"p_name\"\r\n                      defaultValue={name}\r\n                      ref={register}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      class=\"form-control\"\r\n                      name=\"p_email\"\r\n                      defaultValue={email}\r\n                      ref={register}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"form-group\">\r\n                    <label>Phone Number</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      name=\"p_phone\"\r\n                      defaultValue={phone}\r\n                      ref={register}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-2 col-xl-2 col-md-12\"></div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default EditTP;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\QueriesRecevied\\QueriesRecevied.js",["1387","1388"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\r\n\r\nfunction QueriesRecevied(props) {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [submitData, setSubmitData] = useState([]);\r\n  const [assingNo, setAssingmentNo] = useState();\r\n  const [displayQuery, setDisplayQuery] = useState([]);\r\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\r\n  const [queryDocs, setQueryDocs] = useState([]);\r\n  const [paymentDetails, setPaymentDetails] = useState([]);\r\n  const [purpose, setPurpose] = useState([]);\r\n  const [year, setYear] = useState([]);\r\n  const [feedback, setFeedback] = useState([]);\r\n  const [reports, setReports] = useState([]);\r\n\r\n\r\n  const [diaplayProposal, setDisplayProposal] = useState({\r\n    amount: \"\",\r\n    accepted_amount: \"\",\r\n    payment_received: \"\",\r\n    cust_accept_date: \"\",\r\n    proposal_date: \"\",\r\n    description: \"\",\r\n\r\n    amount_type: \"\",\r\n    amount_fixed: \"\",\r\n    amount_hourly: \"\",\r\n    payment_terms: \"\",\r\n    no_of_installment: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n  });\r\n\r\n  const [diaplayAssignment, setDisplayAssignment] = useState([\r\n    {\r\n      assignment_number: \"\",\r\n      assignment_date: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [diaplayHistory, setDisplayHistory] = useState([\r\n    {\r\n      tlname: \"\",\r\n      date_of_allocation: \"\",\r\n      date_of_delivery: \"\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const getSubmittedAssingment = () => {\r\n      axios.get(`${baseUrl}/tl/getQueryDetails?id=${id}`).then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n\r\n          if (res.data.result) {\r\n            if (res.data.result[0].name == null) {\r\n              console.log(\"null\")\r\n            }\r\n            else {\r\n              setSubmitData(res.data.result);\r\n            }\r\n          }\r\n\r\n          if (res.data.additional_queries) {\r\n            setDisplaySpecific(res.data.additional_queries);\r\n          }\r\n          if (res.data.payment_detail) {\r\n            setPaymentDetails(res.data.payment_detail);\r\n          }\r\n          if (res.data.feedback_detail) {\r\n            setFeedback(res.data.feedback_detail);\r\n          }\r\n          if (res.data.result[0].assign_no) {\r\n            setAssingmentNo(res.data.result[0].assign_no);\r\n          }\r\n\r\n          if (res.data.reports) {\r\n            setReports(res.data.reports);\r\n          }\r\n\r\n          var purposeItem = res.data.result[0].purpose_opinion;\r\n          var assementItem = res.data.result[0].assessment_year;\r\n\r\n          console.log(\"purposeItem-\", typeof purposeItem);\r\n          try {\r\n            var myPurpose = JSON.parse(purposeItem);\r\n            var myYear = JSON.parse(assementItem);\r\n            setPurpose(myPurpose);\r\n            setYear(myYear);\r\n          } catch (e) {\r\n            return false;\r\n          }\r\n\r\n          if (res.data.proposal_queries.length > 0) {\r\n            setDisplayProposal({\r\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\r\n              payment_received: res.data.proposal_queries[0].paid_amount,\r\n              amount: res.data.proposal_queries[0].amount,\r\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\r\n              proposal_date: res.data.proposal_queries[0].created,\r\n              description: res.data.proposal_queries[0].description,\r\n\r\n              amount_type: res.data.proposal_queries[0].amount_type,\r\n              amount_fixed: res.data.proposal_queries[0].amount,\r\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\r\n              payment_terms: res.data.proposal_queries[0].payment_terms,\r\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\r\n              installment_amount: res.data.proposal_queries[0].installment_amount,\r\n              due_date: res.data.proposal_queries[0].due_date,\r\n            });\r\n          }\r\n\r\n          if (res.data.assignment.length > 0) {\r\n            setDisplayAssignment({\r\n              assignment_number: res.data.assignment[0].assignment_number,\r\n              assignment_date: res.data.assignment[0].created,\r\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\r\n            });\r\n          }\r\n          if (res.data.history_queries.length > 0) {\r\n            setDisplayHistory({\r\n              tlname: res.data.history_queries[0].tname,\r\n              date_of_allocation:\r\n                res.data.history_queries[0].date_of_allocation,\r\n            });\r\n          }\r\n          if (res.data.queries_document) {\r\n            if (res.data.queries_document.length > 0) {\r\n              setQueryDocs(res.data.queries_document);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    };\r\n    getQuery();\r\n    getSubmittedAssingment();\r\n  }, [assingNo]);\r\n\r\n  const getQuery = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setDisplayQuery(res.data.result);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"schedule\">\r\n            <h3>Query Detail</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\r\n          <div class=\"card\">\r\n            <div\r\n              class=\"card-header\"\r\n              id=\"headingOne\"\r\n              style={{ padding: \".5rem .1rem\" }}\r\n            >\r\n              <h2 class=\"mb-0 query ml-3\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/teamleader/${props.location.routes}`,\r\n                    index: props.location.index,\r\n                  }}\r\n                >\r\n                  <button class=\"btn btn-success ml-3\">Go Back</button>\r\n                </Link>\r\n              </h2>\r\n            </div>\r\n            {submitData.map((p, index) => (\r\n              <QueryDetails\r\n                p={p}\r\n                key={index}\r\n                diaplaySpecific={diaplaySpecific}\r\n                diaplayProposal={diaplayProposal}\r\n                diaplayHistory={diaplayHistory}\r\n                diaplayAssignment={diaplayAssignment}\r\n                displayQuery={displayQuery}\r\n                getQuery={getQuery}\r\n                assingNo={assingNo}\r\n                queryDocs={queryDocs}\r\n                paymentDetails={paymentDetails}\r\n                purpose={purpose}\r\n                year={year}\r\n                feedback={feedback}\r\n                reports={reports}\r\n\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesRecevied;\r\n\r\n\r\n// useEffect(() => {\r\n//   const getQueryDetails = () => {\r\n//     axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\r\n//       console.log(res);\r\n//       if (res.data.code === 1) {\r\n//         setSubmitData(res.data.result);\r\n//         setDisplaySpecific(res.data.additional_queries);\r\n//         setAssingmentNo(res.data.result[0].assign_no);\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   getQueryDetails();\r\n//   getAdditionalQuery();\r\n// }, [assingNo]);\r\n\r\n//   <Card>\r\n//   <CardHeader>\r\n//     <Row>\r\n//       <Col md=\"4\">\r\n//         <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n//           <i class=\"fas fa-arrow-left mr-2\"></i>\r\n//           Go Back\r\n//         </button>\r\n//       </Col>\r\n//       <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n//         <p style={{ fontSize: \"20px\" }}>Query Details</p>\r\n//       </Col>\r\n//       <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n//       </Col>\r\n//     </Row>\r\n//   </CardHeader>\r\n//   <CardBody>\r\n//     {submitData.map((p, i) => (\r\n//       <div class=\"card-body\">\r\n//         <table class=\"table table-bordered\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th scope=\"col\">Titles</th>\r\n//               <th scope=\"col\">Data</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//           <tr>\r\n//               <th scope=\"row\">Query No</th>\r\n//               <td>{p.assign_no}</td>\r\n//             </tr>\r\n//           <tr>\r\n//               <th scope=\"row\">Query Status</th>\r\n//               <td>{p.status}</td>\r\n//             </tr>\r\n//             <tr>\r\n//               <th scope=\"row\">Facts of the case</th>\r\n//               <td>{p.fact_case}</td>\r\n//             </tr>\r\n\r\n//             <tr>\r\n//               <th scope=\"row\">Purpose for which Opinion is sought</th>\r\n//               <td colspan=\"1\">{p.purpose_opinion}</td>\r\n//             </tr>\r\n//             <tr>\r\n//               <th scope=\"row\">\r\n//                 Timelines within which Opinion is Required\r\n//               </th>\r\n//               <td colspan=\"1\">{p.Timelines}</td>\r\n//             </tr>\r\n//             <tr>\r\n//               <th scope=\"row\">specific questions</th>\r\n//               <td colspan=\"1\">\r\n//                 {diaplaySpecific.map((p, i) => (\r\n//                   <p>{p.text}</p>\r\n//                 ))}\r\n//               </td>\r\n//             </tr>\r\n\r\n//             <tr>\r\n//               <th scope=\"row\">Documents</th>\r\n//               <td>\r\n//                 {p.upload_doc_1 == null ? (\r\n//                   \"\"\r\n//                 ) : (\r\n//                   <p>\r\n//                     <a\r\n//                       href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\r\n//                     >\r\n//                       <i class=\"fa fa-photo\"></i>\r\n//                     </a>\r\n//                   </p>\r\n//                 )}\r\n\r\n//                 {p.upload_doc_2 == null ? (\r\n//                   \"\"\r\n//                 ) : (\r\n//                   <p>\r\n//                     <a\r\n//                       href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\r\n//                     >\r\n//                       <i class=\"fa fa-photo\"></i>\r\n//                     </a>\r\n//                   </p>\r\n//                 )}\r\n\r\n//                 {p.upload_doc_3 == null ? (\r\n//                   \"\"\r\n//                 ) : (\r\n//                   <p>\r\n//                     <a\r\n//                       href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\r\n//                     >\r\n//                       <i class=\"fa fa-photo\"></i>\r\n//                     </a>\r\n//                   </p>\r\n//                 )}\r\n//               </td>\r\n//             </tr>\r\n//             <tr>\r\n//               <th scope=\"row\">Format in which Opinion is required</th>\r\n//               <td colspan=\"1\">\r\n//                 <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\r\n//                 <p>\r\n//                   {p.softcopy_digitally_assigned === \"1\" &&\r\n//                     \"SoftCopy- Digitally Signed\"}\r\n//                 </p>\r\n\r\n//                 <p>\r\n//                   {p.printout_physically_assigned === \"1\" &&\r\n//                     \"Printout- Physically Signed\"}\r\n//                 </p>\r\n//               </td>\r\n//             </tr>\r\n\r\n//           </tbody>\r\n//         </table>\r\n\r\n//         <table class=\"table table-bordered\">\r\n//           {displayQuery.length > 0 && (\r\n//             <thead>\r\n//               <tr>\r\n//                 <th scope=\"col\" style={{ width: \"33.3%\" }}>\r\n//                   Additional Queries\r\n//                 </th>\r\n//                 <th scope=\"col\">Date Submission</th>\r\n//                 <th scope=\"col\">Documents</th>\r\n//               </tr>\r\n//             </thead>\r\n//           )}\r\n\r\n//           {displayQuery.map((p, i) => (\r\n//             <tbody>\r\n//               <tr key={i}>\r\n//                 <td>{p.additional_queries}</td>\r\n//                 <td>{ChangeFormateDate(p.created)}</td>\r\n//                 <td>\r\n//                     {p.upload_doc == \"\" ? (\r\n//                       \"\"\r\n//                     ) : (\r\n//                       <p>\r\n//                         <a\r\n//                           href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc}`}\r\n//                         >\r\n//                           <i class=\"fa fa-photo\"></i>\r\n//                         </a>\r\n//                       </p>\r\n//                     )}\r\n//                   </td>\r\n//               </tr>\r\n//             </tbody>\r\n//           ))}\r\n//         </table>\r\n//       </div>\r\n//     ))}\r\n//   </CardBody>\r\n// </Card>\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\SendProposal\\SendProposal.js",["1389","1390"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {  useParams } from \"react-router-dom\";\r\nimport ProposalComponent from \"./ProposalComponent\";\r\n\r\n\r\nfunction SendProposal() {\r\n    const { id } = useParams();\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  return (\r\n    <>\r\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n        <ProposalComponent id={id}/>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SendProposal;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\QueryAssingment\\QueryAssingment.js",["1391","1392","1393","1394","1395","1396","1397","1398","1399","1400"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useParams, useHistory, Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_taxprof: yup.string().required(\"required team leader\"),\r\n  p_expdeldate: yup.string().required(\"required  Exp. delivery date \"),\r\n});\r\n\r\n\r\nfunction QueryAssingment() {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [taxProfessionDisplay, setTaxProfessionDisplay] = useState([]);\r\n  const [taxID, setTaxID] = useState(null);\r\n  const [teamName, setTeamName] = useState('');\r\n\r\n  const [hideQuery, setHideQuery] = useState({\r\n    name: \"\",\r\n    timeline: \"\",\r\n    date_allocation: \"\",\r\n    expdeliverydate: \"\",\r\n  });\r\n\r\n  const [query, setQuery] = useState(true);\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n  const tpkey = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [queryData, setQuerData] = useState({\r\n    queryNo: \"\",\r\n    timelines: \"\",\r\n    custId: \"\",\r\n    expect_dd: \"\",\r\n  });\r\n\r\n  const { queryNo, timelines, custId, expect_dd } = queryData;\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  console.log(\"current_date :\", current_date);\r\n  const [item] = useState(current_date);\r\n\r\n\r\n  useEffect(() => {\r\n    getTaxProfession();\r\n    getQueryData();\r\n  }, []);\r\n\r\n  const getTaxProfession = () => {\r\n    axios\r\n      .get(`${baseUrl}/tp/getTaxProfessional?tl_id=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setTaxProfessionDisplay(res.data.result);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getQueryData = () => {\r\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setQuerData({\r\n          queryNo: res.data.result[0].assign_no,\r\n          timelines: res.data.result[0].Timelines,\r\n          custId: res.data.result[0].customer_id,\r\n          expect_dd: res.data.result[0].Exp_Delivery_Date,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQuery();\r\n  }, [queryNo]);\r\n\r\n  const getQuery = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/TlCheckIfAssigned?assignno=${queryNo}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setQuery(false);\r\n          // setHideQuery(res.data.meta);\r\n          setHideQuery({\r\n            name: res.data.meta[0].name,\r\n            timeline: res.data.meta[0].timeline,\r\n            date_allocation: res.data.meta[0].date_allocation,\r\n            expdeliverydate: res.data.meta[0].expdeliverydate,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"val-\", e.target.value);\r\n    setTaxID(e.target.value)\r\n    var value = taxProfessionDisplay.filter(function (item) {\r\n      return item.id == e.target.value\r\n    })\r\n    console.log(value[0]);\r\n    setTeamName(value[0].name)\r\n  }\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    var expdeliverydate = value.p_expdeldate.replace(\r\n      /(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/,\r\n      \"$3-$1-$2\"\r\n    );\r\n    if(expdeliverydate === '' || expdeliverydate === \"undefined\"){\r\n      Alerts.ErrorNormal(\"Please select a date\")\r\n    }\r\nelse{\r\n  let formData = new FormData();\r\n  formData.append(\"who\", taxID);\r\n  formData.append(\"id\", id);\r\n  formData.append(\"user\", JSON.parse(userId));\r\n  formData.append(\"type\", \"tl\");\r\n  formData.append(\"types\", \"tp\");\r\n  formData.append(\"name\", teamName);\r\n  formData.append(\"timeline\", value.p_timelines);\r\n  formData.append(\"expdeliverydate\", expdeliverydate);\r\n  formData.append(\"assignNo\", queryNo);\r\n  formData.append(\"customer_id\", custId);\r\n\r\n  axios({\r\n    method: \"POST\",\r\n    url: `${baseUrl}/tl/AddQueryAssignment`,\r\n    data: formData,\r\n  })\r\n    .then(function (response) {\r\n      console.log(\"res-\", response);\r\n      if (response.data.code === 1) {\r\n        var variable = \"Query Assigned Successfully\"\r\n        Alerts.SuccessNormal(variable)\r\n        getQuery();\r\n        reset();\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"erroror - \", error);\r\n    });\r\n}\r\n   \r\n  };\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/teamleader/queriestab`,\r\n                  index: 0,\r\n                }}\r\n              >\r\n                <button\r\n                  class=\"btn btn-success ml-3\"\r\n                >\r\n                  <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                  Go Back\r\n                </button>\r\n              </Link>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <h2>Query Allocation</h2>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardHeader>\r\n          <div class=\"row mt-3\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12\">\r\n              <div class=\"col-md-12\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <table class=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">Query No.</th>\r\n                        <th scope=\"col\">Tax Professional</th>\r\n                        <th scope=\"col\">Expected Timeline</th>\r\n                        <th scope=\"col\">Exp. Delivery Date</th>\r\n                        <th scope=\"col\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {query ? (\r\n                        <tr>\r\n                          <th scope=\"row\">{queryNo}</th>\r\n                          <td>\r\n                            <select\r\n                              className={classNames(\"form-control\", {\r\n                                \"is-invalid\": errors.p_taxprof,\r\n                              })}\r\n                              name=\"p_taxprof\"\r\n                              ref={register}\r\n                              onChange={(e) => handleChange(e)}\r\n                            >\r\n                              <option value=\"\">--select--</option>\r\n                              {taxProfessionDisplay.map((p, index) => (\r\n                                <option key={index} value={p.id}>\r\n                                  {p.name}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                            {errors.p_taxprof && (\r\n                              <div className=\"invalid-feedback\">\r\n                                {errors.p_taxprof.message}\r\n                              </div>\r\n                            )}\r\n                          </td>\r\n\r\n                          <td>\r\n                            <input\r\n                              type=\"text\"\r\n                              ref={register}\r\n                              name=\"p_timelines\"\r\n                              value={timelines}\r\n                              class=\"form-control\"\r\n                            />\r\n                          </td>\r\n                          <td>\r\n                            <input\r\n                              type=\"text\"\r\n                              ref={register}\r\n                              name=\"p_expdeldate\"\r\n                              className={classNames(\"form-control\", {\r\n                                \"is-invalid\": errors.p_expdeldate,\r\n                              })}\r\n                              value={expect_dd}\r\n                              min={item}\r\n                            />\r\n                            {errors.p_expdeldate && (\r\n                              <div className=\"invalid-feedback\">\r\n                                {errors.p_expdeldate.message}\r\n                              </div>\r\n                            )}\r\n                          </td>\r\n\r\n                          <td>\r\n                            <button type=\"submit\" class=\"btn btn-success\">\r\n                              Assign\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      ) : (\r\n                        <tr>\r\n                          <th scope=\"row\">{queryNo}</th>\r\n                          <td>\r\n                            <select class=\"form-control w-75 p-0\" disabled>\r\n                              <option>{hideQuery.name}</option>\r\n                            </select>\r\n                          </td>\r\n\r\n                          <td>\r\n                            <input\r\n                              type=\"text\"\r\n                              ref={register}\r\n                              name=\"p_timelines\"\r\n                              value={hideQuery.timeline}\r\n                              disabled\r\n                              class=\"form-control\"\r\n                            />\r\n                          </td>\r\n                          <td>\r\n                            <input\r\n                              type=\"date\"\r\n                              ref={register}\r\n                              name=\"p_expdeldate\"\r\n                              value={hideQuery.expdeliverydate}\r\n                              disabled\r\n                              class=\"form-control\"\r\n                            />\r\n                          </td>\r\n\r\n                          <td>\r\n                            <button class=\"btn btn-success\" disabled>\r\n                              Assigned\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueryAssingment;\r\n\r\n// var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\PaymentStatus\\PaymentStatus.js",["1401","1402","1403","1404","1405","1406"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport PaymentModal from \"./PaymentModal\";\r\n\r\n\r\nfunction PaymentStatus() {\r\n  const alert = useAlert();\r\n  const { id } = useParams();\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const cust_id = window.localStorage.getItem(\"userid\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [pay, setPay] = useState([]);\r\n  const [count, setCount] = useState(\"\");\r\n  const [payment, setPayment] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [assignNo, setAssignNo] = useState(\"\");\r\n\r\n  const [addPaymentModal, setPaymentModal] = useState(false);\r\n  const paymentHandler = (key) => {\r\n    console.log(\"key\", key.assign_no);\r\n    setPaymentModal(!addPaymentModal);\r\n    setAssignNo(key.assign_no)\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getPaymentStatus();\r\n  }, []);\r\n\r\n  const getPaymentStatus = () => {\r\n    axios.get(`${baseUrl}/tl/getUploadedProposals?uid=${JSON.parse(userid)}`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setPayment(res.data.result);\r\n        setCount(res.data.result.length);\r\n        setRecords(res.data.result.length);\r\n\r\n      }\r\n    });\r\n  };\r\n\r\n  const toggle = (key) => {\r\n    console.log(\"key\", key);\r\n    setModal(!modal);\r\n\r\n    fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/vnd.github.cloak-preview\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        setPay(response.payment_detail);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"query_created_date\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.query_created_date);\r\n        var oldDate = row.query_created_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            {/* <Link to={`/teamleader/queries/${row.assign_id}`}>\r\n              {row.assign_no}\r\n            </Link> */}\r\n\r\n            <Link\r\n              to={{\r\n                pathname: `/teamleader/queries/${row.assign_id}`,\r\n                routes: \"paymentstatus\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of acceptance of Proposal\",\r\n      dataField: \"cust_accept_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.cust_accept_date);\r\n        var oldDate = row.cust_accept_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"accepted_amount\",\r\n      text: \"Accepted Amount \",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#21a3ce\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Amount Paid\",\r\n      dataField: \"paid_amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#064606\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#064606\" };\r\n      },\r\n    },\r\n\r\n    {\r\n      text: \"Amount Outstanding\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"darkred\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"darkred\" };\r\n      },\r\n      formatter: function amountOutstading(cell, row) {\r\n        console.log(\"dt\", row.paid_amount);\r\n        console.log(\"dt\", row.accepted_amount);\r\n        var p = row.paid_amount;\r\n        var a = row.accepted_amount;\r\n        return a - p;\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Payment\",\r\n      dataField: \"cust_paid_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.cust_paid_date);\r\n        var oldDate = row.cust_paid_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Completion\",\r\n      dataField: \"final_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.final_date);\r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"60px\" }}>\r\n              {\r\n                row.paid_status == \"0\" ? null :\r\n                  <div title=\"Payment History\">\r\n                    <i\r\n                      class=\"fa fa-credit-card\"\r\n                      style={{ color: \"green\", fontSize: \"16px\", cursor: \"pointer\" }}\r\n                      onClick={() => toggle(row.assign_id)}\r\n                    ></i>\r\n                  </div>\r\n              }\r\n\r\n              {\r\n                (row.paid_status == \"0\") ?\r\n                  <div style={{ cursor: \"pointer\" }} title=\"Payment decline\">\r\n                    <i\r\n                      class=\"fa fa-comments-o\"\r\n                      style={{ color: \"green\", fontSize: \"16px\" }}\r\n                      onClick={() => paymentHandler(row)}\r\n                    ></i>\r\n                  </div>\r\n                  :\r\n                  null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  const sendEmail = (key) => {\r\n    console.log(\"key\", key);\r\n\r\n    axios\r\n      .get(`${baseUrl}/customers/paymentemail?id=${key}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n        <Card>\r\n          <CardHeader>\r\n            <Row>\r\n              <Col md=\"7\">\r\n                <CardTitle tag=\"h4\">Payment Status ({count})</CardTitle>\r\n              </Col>\r\n              <Col md=\"5\"></Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <CardHeader>\r\n            <TeamFilter\r\n              setData={setPayment}\r\n              getData={getPaymentStatus}\r\n              paymentStatus=\"paymentStatus\"\r\n              setRecords={setRecords}\r\n              records={records}\r\n            />\r\n          </CardHeader>\r\n\r\n          <CardBody>\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={payment}\r\n              columns={columns}\r\n              classes=\"table-responsive\"\r\n            />\r\n\r\n            <PaymentModal\r\n              paymentHandler={paymentHandler}\r\n              addPaymentModal={addPaymentModal}\r\n              assignNo={assignNo}\r\n            />\r\n\r\n\r\n            <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n              <ModalHeader toggle={toggle}>History</ModalHeader>\r\n              <ModalBody>\r\n                <table class=\"table table-bordered\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"row\">S.No</th>\r\n                      <th scope=\"row\">Date</th>\r\n                      <th scope=\"row\">Amount</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {pay.length > 0\r\n                    ? pay.map((p, i) => (\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>{i + 1}</td>\r\n                          <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                          <td>{p.paid_amount}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ))\r\n                    : null}\r\n                </table>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"secondary\" onClick={toggle}>\r\n                  Cancel\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n\r\n          </CardBody>\r\n        </Card>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaymentStatus;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\FeedbackTab\\FeedbackTab.js",["1407","1408","1409","1410"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nfunction FeedbackTab() {\r\n  const alert = useAlert();\r\n\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [feedbackData, setFeedBackData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getFeedback();\r\n  }, []);\r\n\r\n  const getFeedback = () => {\r\n    axios\r\n      .get(`${baseUrl}/customers/getFeedback?tl_id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setFeedBackData(res.data.result);\r\n        }\r\n      });\r\n  };\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"10px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"60px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <div style={{ display: \"flex\" }}>\r\n              <p>{CommonServices.removeTime(row.created)}</p>\r\n              <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(row.created)}</p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"40px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Feedback\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"150px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <div>\r\n              {\r\n                row.tl_read == \"0\" ?\r\n                  <div\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      display: \"flex\", justifyContent: \"space-between\"\r\n                    }}\r\n                    onClick={() => readNotification(row.id)}\r\n                    title=\"unread\"\r\n                  >\r\n                    <p>{row.feedback}  - By {row.name}</p>\r\n                    <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                  </div>\r\n\r\n                  :\r\n                  <div\r\n                    style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}\r\n                    title=\"read\"\r\n                  >\r\n                    <p>{row.feedback}  - By {row.name}</p>\r\n                    <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  // readnotification\r\n  const readNotification = (id) => {\r\n\r\n    console.log(\"call\", id)\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"type\", \"tl\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/markReadFeedback`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response)\r\n        if (response.data.code === 1) {\r\n          // alert.success(\"successfully read!\");\r\n          getFeedback()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n        <Card>\r\n          <CardHeader>\r\n            <Row>\r\n              <Col md=\"7\">\r\n                <CardTitle tag=\"h4\">Feedback</CardTitle>\r\n              </Col>\r\n              <Col md=\"5\"></Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={feedbackData}\r\n              columns={columns}\r\n              rowIndex\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FeedbackTab;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\QueriesTab\\QueriesTab.js",["1411","1412","1413","1414","1415","1416"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nimport PendingForAcceptence from \"../PendingForAcceptence/PendingForAcceptence\";\r\nimport InCompleteData from \"../InCompleteData/InCompleteData\";\r\nimport CompleteData from \"../CompleteData/CompleteData\";\r\nimport DeclinedQuery from \"../DeclinedQuery/DeclinedQuery\";\r\nimport AllQuery from \"./AllQuery\";\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  const [pendindForAccepttence, setPendingForAcceptence] = useState(\"\");\r\n  const [incomplete, setIncomplete] = useState(\"\");\r\n  const [complete, setcomplete] = useState(\"\");\r\n\r\n  const [allQuery, setAllQuery] = useState(\"\");\r\n  const [declined, setDeclined] = useState(\"\");\r\n\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const AllQuery = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setAllQuery(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getPendindForAccepttence = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setPendingForAcceptence(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getIncomplete = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=1`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setIncomplete(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getComplete = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=2`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setcomplete(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const Declined = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/declinedQueries?id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setDeclined(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    getPendindForAccepttence();\r\n    getIncomplete();\r\n    getComplete();\r\n    AllQuery();\r\n    Declined()\r\n  }, []);\r\n\r\n  const updateTab = (key) => {\r\n    setTabIndex(key)\r\n  }\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Query ({allQuery})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Pending For Acceptence ({pendindForAccepttence})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Inprogress; Queries ({incomplete})\r\n            </Tab>\r\n            <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n              Completed; Queries ({complete})\r\n            </Tab>\r\n            <Tab style={tabIndex == 4 ? myStyle2 : myStyle1}>\r\n              Declined; Queries ({declined})\r\n            </Tab>\r\n          </TabList>\r\n\r\n\r\n          <TabPanel>\r\n            <AllQuery\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <PendingForAcceptence\r\n              updateTab={updateTab}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <InCompleteData\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <CompleteData\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <DeclinedQuery\r\n            />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n\r\n  // const CountPendingForAcceptence = (data) => {\r\n  //   setPendingForAcceptence(data);\r\n  // };\r\n\r\n  // const CountIncomplete = (data) => {\r\n  //   setIncomplete(data);\r\n  // };\r\n\r\n  // const CountComplete = (data) => {\r\n  //   setComplete(data);\r\n  // };","E:\\Mazars_Pannel\\src\\pages\\TL\\EditProposal\\EditProposal.js",["1417","1418","1419","1420","1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport Payment from \"./Payment\";\r\nimport Select from \"react-select\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\n\r\nfunction EditComponent() {\r\n\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [custId, setCustId] = useState(\"\");\r\n  const [store, setStore] = useState(null);\r\n  const [amount, setAmount] = useState();\r\n  const [date, setDate] = useState();\r\n \r\n  const [payment, setPayment] = useState([]);\r\n  const [installment, setInstallment] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [diserror, setdiserror] = useState(\"\")\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [proposal, setProposal] = useState({\r\n    query: \"\",\r\n    name: \"\",\r\n    fixed_amount: \"\",\r\n    payable: \"\",\r\n    description: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n  });\r\n\r\n\r\n  const { query, name, description, fixed_amount,\r\n    due_date, installment_amount } = proposal;\r\n\r\n  useEffect(() => {\r\n    getQuery();\r\n  }, []);\r\n\r\n\r\n  const getQuery = () => {\r\n    axios.get(`${baseUrl}/tl/getProposalDetail?id=${id}`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setProposal({\r\n          name: res.data.result.name,\r\n          query: res.data.result.assign_no,\r\n          fixed_amount: res.data.result.amount,\r\n          description: res.data.result.description,\r\n          installment_amount: res.data.result.installment_amount,\r\n          due_date: res.data.result.due_date,\r\n        });\r\n\r\n        var payment_terms = res.data.result.payment_terms\r\n        var no_of_installment = res.data.result.no_of_installment\r\n\r\n        const data1 = {\r\n          label: payment_terms,\r\n          value: payment_terms,\r\n        }\r\n\r\n        const data2 = {\r\n          label: no_of_installment,\r\n          value: no_of_installment,\r\n        }\r\n\r\n        // console.log(\"data1\", data1)\r\n        setPayment(data1);\r\n        setInstallment(data2);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\r\n      setCustId(res.data.id);\r\n    };\r\n    getUser();\r\n  }, [id]);\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(value);\r\n\r\n    console.log(\"amount\", amount);\r\n    console.log(\"date\", date);\r\n\r\n\r\n    var lumsum = value.p_inst_date\r\n    setDate(lumsum)\r\n\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"assign_no\", value.p_assingment);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"type\", \"tl\");\r\n    formData.append(\"id\", JSON.parse(userid));\r\n    formData.append(\"description\", value.description);\r\n    formData.append(\"customer_id\", custId);\r\n    formData.append(\"assign_id\", id);\r\n\r\n    formData.append(\"amount_type\", \"fixed\");\r\n    formData.append(\"amount\", value.p_fixed);\r\n    formData.append(\"installment_amount\", amount);\r\n    formData.append(\"payment_terms\", payment.value);\r\n    formData.append(\"no_of_installment\", installment.value);\r\n\r\n    payment.label == \"lumpsum\" ?\r\n      formData.append(\"due_date\", lumsum) :\r\n      formData.append(\"due_date\", date)\r\n\r\n      if (payment.value == \"installment\") {\r\n        let sum = amount.reduce(myFunction)\r\n        function myFunction(total, value) {\r\n          return Number(total) + Number(value);\r\n        }\r\n        console.log(due_date)\r\n        if (value.p_fixed != sum) {\r\n          console.log(due_date)\r\n         \r\n          Alerts.ErrorNormal(`installment amount should be eqaul to ${value.p_fixed}`)\r\n          return false\r\n        }\r\n        else{\r\n          console.log(due_date)\r\n          Alerts.ErrorNormal(`installment amount should be eqaul to ${value.p_fixed}`)\r\n          axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/tl/updateProposal`,\r\n            data: formData,\r\n          })\r\n          .then(function (response) {\r\n            console.log(\"res-\", response);\r\n            if (response.data.code === 1) {\r\n              reset();\r\n\r\n              var variable = \"Proposal Successfully Sent \"\r\n              Alerts.SuccessNormal(variable)\r\n\r\n              history.push(\"/teamleader/proposal\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"erroror - \", error);\r\n          });\r\n        }\r\n      }\r\n   else{\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/updateProposal`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          // getQuery();\r\n\r\n          var variable = \"Proposal Updated Successfully \"\r\n          Alerts.SuccessNormal(variable)\r\n          history.push(\"/teamleader/proposal\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n   }\r\n  };\r\n\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"val-\", e.target.value);\r\n    if (isNaN(e.target.value)) {\r\n      setdiserror(\"Please enter digit only\");\r\n    }\r\n    else{\r\n      setdiserror(\"\");\r\n    }\r\n    \r\n  };\r\n\r\n  const paymentAmount = (data) => {\r\n    console.log(\"paymentAmount\", data)\r\n\r\n    var array1 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      console.log(\"val\", value);\r\n      array1.push(value)\r\n    });\r\n    console.log(\"array1\", array1);\r\n\r\n    setAmount(array1);\r\n  };\r\n\r\n  const paymentDate = (data) => {\r\n    console.log(\"paymentDate\", data)\r\n\r\n    var array2 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      console.log(\"val\", value);\r\n      array2.push(value)\r\n    });\r\n    console.log(\"array2\", array2);\r\n    setDate(array2);\r\n  };\r\n\r\n\r\n  console.log(\"installment : \", installment.label)\r\n\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"5\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"7\">\r\n              <div class=\"btn ml-3\">\r\n                <h4>Edit Proposal</h4>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n              <div class=\"col-md-6\">\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Query No.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_assingment\"\r\n                    class=\"form-control\"\r\n                    value={query}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Fee</label>\r\n                  <select\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                    name=\"p_type\"\r\n                    onChange={(e) => setStore(e.target.value)}\r\n                  >\r\n                    {/* <option value=\"\">--select type--</option> */}\r\n                    <option value=\"fixed\">Fixed Price</option>\r\n                  </select>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Fixed Price</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_fixed\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    placeholder=\"Enter Fixed Price\"\r\n                    defaultValue={fixed_amount}\r\n                    onChange = {handleChange}\r\n                  />\r\n                </div>\r\n                  <p style={{\"color\" : \"red\"}}>{diserror}</p>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Scope of Work</label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    id=\"textarea\"\r\n                    rows=\"3\"\r\n                    name=\"description\"\r\n                    defaultValue={description}\r\n                    ref={register}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"col-md-6\">\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Customer Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_name\"\r\n                    class=\"form-control\"\r\n                    value={name}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Payment Terms</label>\r\n                  <Select\r\n                    closeMenuOnSelect={true}\r\n                    onChange={setPayment}\r\n                    value={payment}\r\n                    options={paymentsTerms}\r\n                  />\r\n\r\n                </div>\r\n\r\n                {payment.label == \"lumpsum\" ? (\r\n                  <div class=\"form-group\">\r\n                    <label>Due Dates</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"p_inst_date\"\r\n                      className=\"form-control\"\r\n                      ref={register}\r\n                      placeholder=\"Enter Hourly basis\"\r\n                      defaultValue={due_date}\r\n                    />\r\n                  </div>\r\n                ) :\r\n                  payment.label == \"installment\" ? (\r\n                    <div class=\"form-group\">\r\n                      <label>No of Installments</label>\r\n\r\n                      <Select\r\n                        closeMenuOnSelect={true}\r\n                        onChange={setInstallment}\r\n                        value={installment}\r\n                        options={noInstallments}\r\n                      />\r\n\r\n                    </div>\r\n                  )\r\n                    : \"\"\r\n                }\r\n                {\r\n                  payment.label == \"lumpsum\"\r\n                    ?\r\n                    \"\"\r\n                    :\r\n                    <Payment\r\n                      installment={installment.label}\r\n                      paymentAmount={paymentAmount}\r\n                      paymentDate={paymentDate}\r\n                      installment_amount={installment_amount}\r\n                      due_date={due_date}\r\n                    />\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group col-md-6\">\r\n              <button type=\"submit\" class=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default EditComponent;\r\n\r\nconst paymentsTerms = [\r\n  {\r\n    value: \"lumpsum\",\r\n    label: \"lumpsum\",\r\n  },\r\n  {\r\n    value: \"installment\",\r\n    label: \"installment\",\r\n  },\r\n];\r\n\r\nconst noInstallments = [\r\n  {\r\n    value: \"2\",\r\n    label: \"2\",\r\n  },\r\n  {\r\n    value: \"3\",\r\n    label: \"3\",\r\n  },\r\n  {\r\n    value: \"4\",\r\n    label: \"4\",\r\n  },\r\n];\r\n\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\Login\\Login.js",["1432","1433","1434"],"import React, { useState } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"required password\")\r\n    .min(5, \"at least 5 digits\")\r\n    .max(20, \"max 20 digits\"),\r\n});\r\n\r\nfunction Login(props) {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const [email, setEmail] = useState(null);\r\n\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"id\", value.p_email);\r\n    formData.append(\"password\", value.password);\r\n    formData.append(\"type\", \"tl\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/login`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          Alerts.SuccessLogin()\r\n          localStorage.setItem(\r\n            \"tlkey\",\r\n            JSON.stringify(response.data[\"user id\"])\r\n          );\r\n          props.history.push(\"/teamleader/dashboard\");\r\n        } else if (response.data.code === 0) {\r\n          console.log(response.data.result);\r\n          Alerts.ErrorLogin()\r\n\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"val-\", e.target.value);\r\n    setEmail(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <Header mtl=\"mtl\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>MTL Login</h2>\r\n          </div>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    ref={register}\r\n                    placeholder=\"Enter Email\"\r\n                    onChange={(e) => handleChange(e)}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_email.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Password</label>\r\n                  <input\r\n                    type={isPasswordShow ? \"text\" : \"password\"}\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    name=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                    ref={register}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n            <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\r\n              <Link\r\n                to={{\r\n                  pathname: \"/teamleader/forget-password\",\r\n                  email: `${email}`,\r\n                }}\r\n              >\r\n                Forgot Password\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\Message\\Message.js",["1435","1436","1437","1438","1439","1440"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport PaymentModal from \"./PaymentModal\";\r\nimport CommonServices from \"../../../common/common\";\r\n\r\nfunction Message(props) {\r\n    console.log(\"props\", props.location.obj)\r\n    const alert = useAlert();\r\n\r\n    const userId = window.localStorage.getItem(\"tlkey\");\r\n    const [query, setQuery] = useState([]);\r\n    const [data, setData] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const paymentHandler = (key) => {\r\n        console.log(\"key\", key);\r\n        setPaymentModal(!addPaymentModal);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMessage();\r\n    }, []);\r\n\r\n\r\n    const getMessage = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}`\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setQuery(res.data.result);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"10px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <p>{CommonServices.removeTime(row.setdate)}</p>\r\n                            <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(row.setdate)}</p>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"30px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        {/* <Link to={`/customer/my-assingment/${row.id}`}> */}\r\n                        {row.assign_no}\r\n                        {/* </Link> */}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Message\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"180px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link to={`/teamleader/view-notification/${row.id}`}>\r\n                            {\r\n                                row.is_read == \"0\" ?\r\n                                    <div\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            display: \"flex\", justifyContent: \"space-between\"\r\n                                        }}\r\n                                        onClick={() => readNotification(row.id)}\r\n                                        title=\"unread\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"red\" }}></i>\r\n                                    </div>\r\n                                    :\r\n                                    <div\r\n                                        style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}\r\n                                        title=\"read\"\r\n                                    >\r\n                                        <p>{row.message}</p>\r\n                                        <i class=\"fa fa-bullseye\" style={{ color: \"green\" }}></i>\r\n                                    </div>\r\n                            }\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    // readnotification\r\n    const readNotification = (id) => {\r\n        console.log(\"call\", id)\r\n        axios\r\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\r\n            .then(function (response) {\r\n                console.log(\"delete-\", response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"erroror - \", error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\r\n            <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"9\">\r\n                            <CardTitle tag=\"h4\">Message</CardTitle>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={query}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                    <PaymentModal\r\n                        paymentHandler={paymentHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Message;","E:\\Mazars_Pannel\\src\\pages\\TL\\AssignmentForm\\AssignmentForm.js",["1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { baseUrl,ReportUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction AssignmentForm(props) {\r\n  console.log(\"props\", props.location.clients);\r\n\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, errors, reset, setValue } = useForm();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [assignNo, setAssignNo] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [store, setStore] = useState(null);\r\n  const [item, setItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getAssignmentList();\r\n  }, []);\r\n\r\n  const getAssignmentList = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getUploadedProposals?assign_no=${id}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(res.data.result);\r\n        if (res.data.code === 1) {\r\n          setAssignNo(res.data.result[0].assign_no);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDetails();\r\n  }, [assignNo]);\r\n\r\n  const getDetails = (value) => {\r\n    console.log(\"value :\", value);\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", assignNo);\r\n    formData.append(\"uid\", JSON.parse(userid));\r\n    formData.append(\"stages_type\", \"client_discussion\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/getstagesinfo`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          setData(response.data.result);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"assign_id\", id);\r\n    formData.append(\"assign_no\", assignNo);\r\n    formData.append(\"uid\", JSON.parse(userid));\r\n    formData.append(\"stages_type\", \"client_discussion\");\r\n    formData.append(\"notes\", value.p_notes);\r\n    formData.append(\"receive_sent_date\", value.p_date);\r\n    formData.append(\"notes_type\", value.p_type);\r\n    formData.append(\"type_info\", value.p_info);\r\n    formData.append(\"upload\", value.p_upload[0]);\r\n    formData.append(\"send_received\", item);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/addAssignmentStages`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          alert.success(<Msg />);\r\n          getDetails();\r\n          reset();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  //alert msg\r\n  const Msg = () => {\r\n    return (\r\n      <>\r\n        <p style={{ fontSize: \"10px\" }}>success</p>\r\n      </>\r\n    );\r\n  };\r\n\r\n  console.log(\"item - \", item);\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Client Discussion Information</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardHeader>\r\n          {props.location.clients == \"completed\" ? (\r\n            <div>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Titles</label>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"textarea\"\r\n                        rows=\"2\"\r\n                        name=\"p_notes\"\r\n                        ref={register}\r\n                        disabled\r\n                      ></textarea>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Date</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        name=\"p_date\"\r\n                        className=\"form-control\"\r\n                        ref={register}\r\n                        disabled\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Upload Documents</label>\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"p_upload\"\r\n                        ref={register}\r\n                        className=\"form-control-file\"\r\n                        disabled\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Send/Received</label>\r\n                      <select\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                        name=\"p_type\"\r\n                        onChange={(e) => setItem(e.target.value)}\r\n                        disabled\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        <option value=\"send\">Send</option>\r\n                        <option value=\"received\">Received</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Notes Type</label>\r\n                      <select\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                        name=\"p_type\"\r\n                        onChange={(e) => setStore(e.target.value)}\r\n                        disabled\r\n                      >\r\n                        <option value=\"\">--select type--</option>\r\n                        <option value=\"email\">Email</option>\r\n                        <option value=\"phone\">Phone</option>\r\n                        <option value=\"other\">Other</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-2\">\r\n                    <div class=\"form-group\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-block\"\r\n                        disabled\r\n                      >\r\n                        submit\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Titles</label>\r\n                      <textarea\r\n                        className=\"form-control\"\r\n                        id=\"textarea\"\r\n                        rows=\"2\"\r\n                        name=\"p_notes\"\r\n                        ref={register}\r\n                      ></textarea>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Date</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        name=\"p_date\"\r\n                        className=\"form-control\"\r\n                        ref={register}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Upload Documents</label>\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"p_upload\"\r\n                        ref={register}\r\n                        className=\"form-control-file\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Send/Received</label>\r\n                      <select\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                        name=\"p_type\"\r\n                        onChange={(e) => setItem(e.target.value)}\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        <option value=\"send\">Send</option>\r\n                        <option value=\"received\">Received</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label>Notes Type</label>\r\n                      <select\r\n                        class=\"form-control\"\r\n                        ref={register}\r\n                        name=\"p_type\"\r\n                        onChange={(e) => setStore(e.target.value)}\r\n                      >\r\n                        <option value=\"\">--select type--</option>\r\n                        <option value=\"email\">Email</option>\r\n                        <option value=\"phone\">Phone</option>\r\n                        <option value=\"other\">Other</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {store == \"email\" && (\r\n                    <div class=\"col-md-4\">\r\n                      <div class=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_info\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {store == \"phone\" && (\r\n                    <div class=\"col-md-4\">\r\n                      <div class=\"form-group\">\r\n                        <label>Phone</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_info\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {store == \"other\" && (\r\n                    <div class=\"col-md-4\">\r\n                      <div class=\"form-group\">\r\n                        <label>Notes info</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"p_info\"\r\n                          className=\"form-control\"\r\n                          ref={register}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-2\">\r\n                    <div class=\"form-group\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-block\"\r\n                      >\r\n                        submit\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          )}\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <CardHeader>\r\n            <Row>\r\n              <Col md=\"4\">\r\n                <h4>List</h4>\r\n              </Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <div class=\"my-3\">\r\n            <table class=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"row\">S.No</th>\r\n                  <th scope=\"row\">Documents</th>\r\n                  <th scope=\"row\">Titles</th>\r\n                  <th scope=\"row\">Notes type</th>\r\n                  <th scope=\"row\">Notes Info</th>\r\n                  <th scope=\"row\">Date</th>\r\n                  <th scope=\"row\">send/Received</th>\r\n                </tr>\r\n              </thead>\r\n              {data.length > 0\r\n                ? data.map((p, i) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>\r\n                        {p.document && (\r\n                          <p style={{ display: \"flex\" }}>\r\n\r\n                            <a\r\n                              href={`${ReportUrl}/${p.assign_no}/${p.document}`}\r\n                              target=\"_blank\"\r\n                            >\r\n                              <i class=\"fa fa-photo\"></i>\r\n                            </a>\r\n                            <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\r\n                          </p>\r\n                        )}\r\n                      </td>\r\n                      <td>{p.notes}</td>\r\n                      <td>{p.notes_type}</td>\r\n                      <td>{p.type_info}</td>\r\n                      <td>{p.receive_sent_date}</td>\r\n                      <td>{p.send_received}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n                : null}\r\n            </table>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AssignmentForm;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\Chatting\\Chatting.js",["1453","1454","1455","1456","1457","1458"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Schema = yup.object().shape({\r\n  msg_type: yup.string().required(\"required message type\"),\r\n  p_message: yup.string().required(\"required message\"),\r\n});\r\n\r\n\r\n\r\nfunction Chatting(props) {\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [item, setItem] = useState(\"\");\r\n  const [data, setData] = useState({})\r\n  const { message_type, query_id, query_No, routes } = data\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect\", props)\r\n    const dataItem = props.location.obj\r\n\r\n    if (dataItem) {\r\n      localStorage.setItem(\"myDataTL\", JSON.stringify(dataItem));\r\n    }\r\n    var myData = localStorage.getItem(\"myDataTL\");\r\n\r\n    var data2 = JSON.parse(myData)\r\n    setData(data2)\r\n    setItem(data2.message_type)\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", query_id);\r\n    formData.append(\"message_type\", value.msg_type);\r\n    formData.append(\"message\", value.p_message);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          reset();\r\n\r\n          var variable = \"Message Successfully Sent \"\r\n          Alerts.SuccessNormal(variable)\r\n          props.history.push(routes);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Query No.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_query\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    value={query_No}\r\n                    disabled\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Message Type</label>\r\n                  {\r\n                    item &&\r\n                    <select\r\n                      className={classNames(\"form-control\", {\r\n                        \"is-invalid\": errors.msg_type,\r\n                      })}\r\n                      name=\"msg_type\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Query Discussion</option>\r\n                      <option value=\"2\">Proposal Discussion</option>\r\n                      <option value=\"5\">Payment Discussion</option>\r\n                      <option value=\"3\">Assignment Discussion</option>\r\n                      <option value=\"1\">Others</option>\r\n                    </select>\r\n                  }\r\n                  {errors.msg_type && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.msg_type.message}\r\n                    </div>\r\n                  )}\r\n\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Message</label>\r\n                  <textarea\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_message,\r\n                    })}\r\n                    placeholder=\"Message text here\"\r\n                    rows=\"5\"\r\n                    ref={register}\r\n                    name=\"p_message\"\r\n                  ></textarea>\r\n                  {errors.p_message && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_message.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Send\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n          </form>\r\n        </CardBody>\r\n\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Chatting;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\Schedule\\Schedule.js",["1459","1460"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport Demo from \"./Demo\";\r\n\r\nfunction Schedule() {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n    return (\r\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"7\">\r\n              <CardTitle tag=\"h4\">Schedule </CardTitle>\r\n            </Col>\r\n            <Col md=\"5\"></Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <Demo />\r\n      </Card>\r\n    </Layout>\r\n    );\r\n}\r\n\r\nexport default Schedule;","E:\\Mazars_Pannel\\src\\pages\\TL\\NewPassword\\NewPassword.js",["1461","1462","1463","1464"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nfunction NewPassword(props) {\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n  const { id } = useParams();\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    // formData.append(\"user_id\", value.p_name);\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"code\", value.p_code);\r\n    formData.append(\"password\", value.p_password);\r\n    formData.append(\"rpassword\", value.p_confirm_password);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/resetpassword`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          alert.success(\"reset password successfully!\");\r\n          reset();\r\n          props.history.push(\"/teamleader/login\");\r\n        } else if (response.data.code === 0) {\r\n          console.log(response.data.result);\r\n          // alert.error(response.data.result);\r\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header mtl=\"mtl\"/>\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Reset Password</h2>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-group\">\r\n             \r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className={classNames(\"form-control\", {\r\n                    \"is-invalid\": errors.p_email,\r\n                  })}\r\n                  name=\"p_email\"\r\n                  placeholder=\"Enter Email\"\r\n                  defaultValue={id}\r\n                  ref={register({\r\n                    required: \"This field is required\",\r\n                    pattern: {\r\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                      message: \"Please enter valid email address\",\r\n                    },\r\n                  })}\r\n                />\r\n                {errors.p_email && (\r\n                  <div className=\"invalid-feedback\">\r\n                    {errors.p_email.message}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">OTP</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className={classNames(\"form-control\", {\r\n                    \"is-invalid\": errors.p_code,\r\n                  })}\r\n                  name=\"p_code\"\r\n                  placeholder=\"Enter otp\"\r\n                  ref={register({\r\n                    required: \"This field is required\",\r\n                  })}\r\n                />\r\n                {errors.p_code && (\r\n                  <div className=\"invalid-feedback\">\r\n                    {errors.p_code.message}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <label className=\"form-label\">New Password</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"password\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_password,\r\n                })}\r\n                placeholder=\"Enter Your Password\"\r\n                name=\"p_password\"\r\n                ref={register({\r\n                  required: \"This field is required\",\r\n                  pattern: {\r\n                    value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\r\n                    message:\r\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\r\n                  },\r\n                })}\r\n              />\r\n              {errors.p_password && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_password.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Confirm Password</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"password\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_confirm_password,\r\n                })}\r\n                placeholder=\"Confirm Password\"\r\n                name=\"p_confirm_password\"\r\n                ref={register({\r\n                  required: \"This field is required\",\r\n                  validate: (value) =>\r\n                    value === getValues(\"p_password\") ||\r\n                    \"password doesn 't match\",\r\n                })}\r\n              />\r\n              {errors.p_confirm_password && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_confirm_password.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewPassword;\r\n\r\n\r\n// const Schema = yup.object().shape({\r\n//   p_name: yup.string().required(\"required user id\"),\r\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n//   p_code: yup.string().required(\"required otp \"),\r\n//   // p_password: yup.string().required(\"required password\"),\r\n//   // p_confirm_password: yup.string().required(\"required confirm password\"),\r\n// });\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\MeetingComponent\\MeetingComponent.js",["1465","1466"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport Meeting from \"../meeting/index\";\r\n\r\nfunction MeetingComponent(props) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Meeting />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default MeetingComponent;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\ViewNotification\\ViewNotification.js",["1467","1468","1469","1470","1471","1472","1473","1474","1475","1476"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport CommonServices from \"../../../common/common\";\r\n\r\nfunction ViewNotification() {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    getChatting();\r\n  }, [id]);\r\n\r\n  const getChatting = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"uid\", JSON.parse(userid));\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/viewNotification`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          setData(response.data.result[0]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  console.log(\"data-\", data);\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message Details</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <table class=\"table table-bordered\">\r\n            {/* <thead>\r\n              <tr>\r\n                <th scope=\"col\">Titles</th>\r\n                <th scope=\"col\">Data</th>\r\n              </tr>\r\n            </thead> */}\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Query No</th>\r\n                <td>{data.assign_no}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\"> System Generated</th>\r\n                <td>{data.name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date</th>\r\n                <td>\r\n                  {CommonServices.removeTime(data.setdate)}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Message</th>\r\n                <td>{data.message}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Type</th>\r\n                <td>\r\n                  {data.type == \"1\"\r\n                    ? \"Others\"\r\n                    : data.type == \"2\"\r\n                      ? \"Proposal Discussion\"\r\n                      : data.type == \"3\"\r\n                        ? \"Assignment Discussion\"\r\n                        : data.type == \"4\"\r\n                          ? \"Query Discussion\"\r\n                          :\r\n                          data.type == \"5\"\r\n                            ? \"Payment Discussion\"\r\n                            :\r\n                            null\r\n                  }\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ViewNotification;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\Proposal\\ProposalTab.js",["1477","1478","1479","1480","1481"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nimport AllProposal from \"./AllProposal\";\r\nimport InprogressProposal from \"./InprogressProposal\";\r\nimport AcceptedProposal from \"./AcceptedProposal\";\r\nimport DeclinedProposal from \"./DeclinedProposal\";\r\n\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n\r\n\r\n    const [allProposal, setAllProposal] = useState(\"\");\r\n    const [inprogressProposal, setInprogressProposal] = useState(\"\");\r\n    const [acceptedProposal, setAcceptedProposal] = useState(\"\");\r\n    const [declinedProposal, setDeclinedProposal] = useState(\"\");\r\n\r\n\r\n\r\n\r\n    const myStyle1 = {\r\n        backgroundColor: \"grey\",\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n    const myStyle2 = {\r\n        padding: \"12px\",\r\n        borderRadius: \"50px\",\r\n        width: \"200px\",\r\n        textAlign: \"center\",\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n        cursor: \"pointer\",\r\n    };\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        setTabIndex(props.location.index || 0);\r\n    }, [props.location.index]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const AllProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}`)\r\n                .then((response) => {\r\n                    console.log(\"code---\", response);\r\n                    if (response.data.code === 1) {\r\n                        setAllProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        const InprogressProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=1`)\r\n                .then((response) => {\r\n                    console.log(\"code---\", response);\r\n                    if (response.data.code === 1) {\r\n                        setInprogressProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        const AcceptedProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=2`)\r\n                .then((response) => {\r\n                    console.log(\"code---\", response);\r\n                    if (response.data.code === 1) {\r\n                        setAcceptedProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        const DeclinedProposal = () => {\r\n            axios\r\n                .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=3`)\r\n                .then((response) => {\r\n                    console.log(\"code---\", response);\r\n                    if (response.data.code === 1) {\r\n                        setDeclinedProposal(response.data.result.length);\r\n                    }\r\n                })\r\n        };\r\n\r\n        AllProposal();\r\n        InprogressProposal();\r\n        AcceptedProposal();\r\n        DeclinedProposal();\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n            <div>\r\n                <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n                    <TabList\r\n                        style={{\r\n                            listStyleType: \"none\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                        }}\r\n                    >\r\n                        <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n                            All Proposals ({allProposal})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n                            Inprogress; Proposals ({inprogressProposal})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n                            Accepted; Proposals ({acceptedProposal})\r\n                        </Tab>\r\n                        <Tab style={tabIndex == 3 ? myStyle2 : myStyle1}>\r\n                            Customer Declined; Proposals ({declinedProposal})\r\n                        </Tab>\r\n                    </TabList>\r\n\r\n                    <TabPanel>\r\n                        <AllProposal />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <InprogressProposal />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <AcceptedProposal />\r\n                    </TabPanel>\r\n                    <TabPanel>\r\n                        <DeclinedProposal />\r\n                    </TabPanel>\r\n                </Tabs>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\ViewReport\\ViewReport.js",["1482","1483","1484","1485","1486","1487"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\n\r\nfunction ViewReport() {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getReport();\r\n  }, []);\r\n\r\n  const getReport = () => {\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", id);\r\n    formData.append(\"uid\", JSON.parse(userid));\r\n    formData.append(\"stages_type\", 2);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/getstagesinfo`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          setData(response.data.result);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>ViewReport</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div class=\"my-3\">\r\n            <table class=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"row\">S.No</th>\r\n                  <th scope=\"row\">Report</th>\r\n                </tr>\r\n              </thead>\r\n              {data.length > 0\r\n                ? data.map((p, i) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>\r\n                        {p.document && (\r\n                          <p style={{ display: \"flex\" }}>\r\n                            <a\r\n                              href={`${ReportUrl}/${p.assign_no}/${p.document}`}\r\n                              target=\"_blank\"\r\n                            >\r\n                              <i class=\"fa fa-photo\"></i>\r\n                            </a>\r\n                            <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\r\n                          </p>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n                : null}\r\n            </table>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ViewReport;\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\NewPassword\\NewPassword.js",["1488","1489","1490","1491"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nfunction NewPassword(props) {\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    // formData.append(\"user_id\", value.p_name);\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"code\", value.p_code);\r\n    formData.append(\"password\", value.p_password);\r\n    formData.append(\"rpassword\", value.p_confirm_password);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/resetpassword`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          alert.success(\"reset password successfully!\");\r\n          reset();\r\n          props.history.push(\"/admin/login\");\r\n        } else if (response.data.code === 0) {\r\n          console.log(response.data.result);\r\n          // alert.error(response.data.result);\r\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n       <Header admin=\"admin\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Reset Password</h2>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-group\">\r\n             \r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className={classNames(\"form-control\", {\r\n                    \"is-invalid\": errors.p_email,\r\n                  })}\r\n                  name=\"p_email\"\r\n                  placeholder=\"Enter Email\"\r\n                  defaultValue={props.location.email}\r\n                  ref={register({\r\n                    required: \"This field is required\",\r\n                    pattern: {\r\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                      message: \"Please enter valid email address\",\r\n                    },\r\n                  })}\r\n                />\r\n                {errors.p_email && (\r\n                  <div className=\"invalid-feedback\">\r\n                    {errors.p_email.message}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">OTP</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className={classNames(\"form-control\", {\r\n                    \"is-invalid\": errors.p_code,\r\n                  })}\r\n                  name=\"p_code\"\r\n                  placeholder=\"Enter otp\"\r\n                  ref={register({\r\n                    required: \"This field is required\",\r\n                  })}\r\n                />\r\n                {errors.p_code && (\r\n                  <div className=\"invalid-feedback\">\r\n                    {errors.p_code.message}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <label className=\"form-label\">New Password</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"password\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_password,\r\n                })}\r\n                placeholder=\"Enter Your Password\"\r\n                name=\"p_password\"\r\n                ref={register({\r\n                  required: \"This field is required\",\r\n                  pattern: {\r\n                    value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\r\n                    message:\r\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\r\n                  },\r\n                })}\r\n              />\r\n              {errors.p_password && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_password.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Confirm Password</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"password\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_confirm_password,\r\n                })}\r\n                placeholder=\"Confirm Password\"\r\n                name=\"p_confirm_password\"\r\n                ref={register({\r\n                  required: \"This field is required\",\r\n                  validate: (value) =>\r\n                    value === getValues(\"p_password\") ||\r\n                    \"password doesn 't match\",\r\n                })}\r\n              />\r\n              {errors.p_confirm_password && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_confirm_password.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewPassword;\r\n\r\n\r\n// const Schema = yup.object().shape({\r\n//   p_name: yup.string().required(\"required user id\"),\r\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n//   p_code: yup.string().required(\"required otp \"),\r\n//   // p_password: yup.string().required(\"required password\"),\r\n//   // p_confirm_password: yup.string().required(\"required confirm password\"),\r\n// });\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\PendingReceived\\PendingReceived.js",["1492","1493","1494","1495","1496"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\n// import \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nfunction PendingRecevied() {\r\n  const [submitData, setSubmitData] = useState([]);\r\n  const [assingNo, setAssingmentNo] = useState();\r\n  const [displayQuery, setDisplayQuery] = useState([]);\r\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\r\n  const alert = useAlert();\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  useEffect(() => {\r\n    getQueryDetails();\r\n    getAdditionalQuery();\r\n  }, [assingNo]);\r\n\r\n  const getQueryDetails = () => {\r\n    axios.get(`${baseUrl}/tl/GetQueryDetails?id=${id}`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setSubmitData(res.data.result);\r\n        setDisplaySpecific(res.data.additional_queries);\r\n        setAssingmentNo(res.data.result[0].assign_no);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getAdditionalQuery = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setDisplayQuery(res.data.result);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n\r\n\r\n  const acceptHandler = (key) => {\r\n    console.log(\"acceptHandler\", key);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"set\", 1);\r\n    formData.append(\"tlid\", JSON.parse(userid));\r\n    formData.append(\"assignment_id\", key.id);\r\n    formData.append(\"allocation_id\", key.allocation_id);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"response-\", response);\r\n        if (response.data.code === 1) {\r\n          alert.success(\"Query accepted\");\r\n          history.goBack()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  const rejectHandler = (key) => {\r\n    console.log(\"rejectHandler\", key);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"set\", 0);\r\n    formData.append(\"tlid\", JSON.parse(userid));\r\n    formData.append(\"assignment_id\", key.id);\r\n    formData.append(\"allocation_id\", key.allocation_id);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          alert.success(\"Query rejected\");\r\n          history.goBack()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n \r\n\r\n     //change date format\r\n     function ChangeFormateDate(oldDate) {\r\n      console.log(\"date\", oldDate);\r\n      if (oldDate == null) {\r\n        return null;\r\n      }\r\n      return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n    }\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button class=\"btn btn-success\" onClick={() => history.goBack()}>\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <p style={{ fontSize: \"20px\" }}>Query Details</p>\r\n            </Col>\r\n            <Col md=\"4\" style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n              {/* <p>{assingNo}</p> */}\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          {submitData.map((p, i) => (\r\n            <div class=\"card-body\">\r\n              <table class=\"table table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">Titles</th>\r\n                    <th scope=\"col\">Data</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                    <th scope=\"row\">Query No</th>\r\n                    <td>{p.assign_no}</td>\r\n                  </tr>\r\n                <tr>\r\n                    <th scope=\"row\">Query Status</th>\r\n                    <td>{p.status}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Facts of the case</th>\r\n                    <td>{p.fact_case}</td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <th scope=\"row\">Purpose for which Opinion is sought</th>\r\n                    <td colspan=\"1\">{p.purpose_opinion}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">\r\n                      Timelines within which Opinion is Required\r\n                    </th>\r\n                    <td colspan=\"1\">{p.Timelines}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">specific questions</th>\r\n                    <td colspan=\"1\">\r\n                      {diaplaySpecific.map((p, i) => (\r\n                        <p>{p.text}</p>\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                    <th scope=\"row\">Documents</th>\r\n                    <td>\r\n                      {p.upload_doc_1 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_1}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n\r\n                      {p.upload_doc_2 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_2}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n\r\n                      {p.upload_doc_3 == null ? (\r\n                        \"\"\r\n                      ) : (\r\n                        <p>\r\n                          <a\r\n                            href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc_3}`}\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"row\">Format in which Opinion is required</th>\r\n                    <td colspan=\"1\">\r\n                      <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\r\n                      <p>\r\n                        {p.softcopy_digitally_assigned === \"1\" &&\r\n                          \"SoftCopy- Digitally Signed\"}\r\n                      </p>\r\n\r\n                      <p>\r\n                        {p.printout_physically_assigned === \"1\" &&\r\n                          \"Printout- Physically Signed\"}\r\n                      </p>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <th scope=\"row\">Accept / Reject</th>\r\n                    <td>\r\n                    <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-evenly\",\r\n                          color: \"#6967ce\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        id=\"div1\"\r\n                      >\r\n                        <div\r\n                          id=\"accept\"\r\n                          title=\"Accept Assignment\"\r\n                          onClick={() => acceptHandler(p)}\r\n                        >\r\n                          <i class=\"fa fa-check\" style={{ color: \"green\" }}></i>\r\n                        </div>\r\n                        <div\r\n                          id=\"reject\"\r\n                          title=\"Reject Assignment\"\r\n                          onClick={() => rejectHandler(p)}\r\n                        >\r\n                          <i class=\"fa fa-times\" style={{ color: \"red\" }}></i>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n              <table class=\"table table-bordered\">\r\n                {displayQuery.length > 0 && (\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\" style={{ width: \"33.3%\" }}>\r\n                        Additional Queries\r\n                      </th>\r\n                      <th scope=\"col\">Date Submission</th>\r\n                      <th scope=\"col\">Documents</th>\r\n                    </tr>\r\n                  </thead>\r\n                )}\r\n\r\n                {displayQuery.map((p, i) => (\r\n                  <tbody>\r\n                    <tr key={i}>\r\n                      <td>{p.additional_queries}</td>\r\n                      <td>{ChangeFormateDate(p.created)}</td>\r\n                      <td>\r\n                        {p.upload_doc == \"\" ? (\r\n                          \"\"\r\n                        ) : (\r\n                          <p>\r\n                            <a\r\n                              href={`http://13.232.121.233/mazarapi/assets/image/${p.upload_doc}`}\r\n                            >\r\n                              <i class=\"fa fa-photo\"></i>\r\n                            </a>\r\n                          </p>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))}\r\n              </table>\r\n            </div>\r\n          ))}\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default PendingRecevied;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\ForgetPassword\\ForgetPassword.js",["1497","1498","1499","1500"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n// import NewPassword from \"../NewPassword/NewPassword\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n});\r\n\r\n\r\n\r\nfunction ForgetPassword(props) {\r\n  const alert = useAlert();\r\n\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"type\", \"tl\");\r\n\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/forgototp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          alert.success(\"otp send your email !\");\r\n          props.history.push(`/teamleader/new-password/${value.p_email}`);\r\n        } else if (response.data.code === 0) {\r\n          console.log(response.data.result);\r\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n  const valueHandler = () => {\r\n    var item = props.location.email\r\n    if (item == \"null\") {\r\n      console.log(\"item : \", item)\r\n      // return '';\r\n    } else {\r\n      return item\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header mtl=\"mtl\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Forgot Password</h2>\r\n          </div>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_email,\r\n                })}\r\n                name=\"p_email\"\r\n                ref={register}\r\n                placeholder=\"Enter Email\"\r\n                defaultValue={valueHandler()}\r\n\r\n              />\r\n              {errors.p_email && (\r\n                <div className=\"invalid-feedback\">{errors.p_email.message}</div>\r\n              )}\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgetPassword;\r\n","E:\\Mazars_Pannel\\src\\pages\\TP\\Start\\Start.js",[],"E:\\Mazars_Pannel\\src\\pages\\TP\\Login\\Login.js",["1501","1502","1503"],"import React, { useState } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"required password\")\r\n    .min(5, \"at least 5 digits\")\r\n    .max(20, \"max 20 digits\"),\r\n});\r\n\r\nfunction Login(props) {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const [email, setEmail] = useState(null);\r\n  const [isPasswordShow, setPasswordShow] = useState(false);\r\n  const togglePasssword = () => {\r\n    setPasswordShow(!isPasswordShow)\r\n  };\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"id\", value.p_email);\r\n    formData.append(\"password\", value.password);\r\n    formData.append(\"type\", \"tp\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tp/login`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          Alerts.SuccessLogin()\r\n          localStorage.setItem(\r\n            \"tpkey\",\r\n            JSON.stringify(response.data[\"user id\"])\r\n          );\r\n          props.history.push(\"/taxprofessional/dashboard\");\r\n        } else if (response.data.code === 0) {\r\n          console.log(response.data.result);\r\n          Alerts.ErrorLogin()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"val-\", e.target.value);\r\n    setEmail(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <Header mtp=\"mtp\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>MTP Login</h2>\r\n          </div>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_email,\r\n                    })}\r\n                    name=\"p_email\"\r\n                    ref={register}\r\n                    placeholder=\"Enter Email\"\r\n                    onChange={(e) => handleChange(e)}\r\n                  />\r\n                  {errors.p_email && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_email.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Password</label>\r\n                  <input\r\n                    type={isPasswordShow ? \"text\" : \"password\"}\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    name=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                    ref={register}\r\n                  />\r\n                  <i\r\n                    className={`fa ${isPasswordShow ? \"fa-eye-slash\" : \"fa-eye\"} password-icon`}\r\n                    onClick={togglePasssword}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.password.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n            <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\r\n              <Link\r\n                to={{\r\n                  pathname: \"/taxprofessional/forget-password\",\r\n                  email: `${email}`,\r\n                }}\r\n              >\r\n                Forgot Password\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\Chatting\\Chatting.js",["1504","1505","1506","1507","1508","1509"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport classNames from \"classnames\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  message_type: yup.string().required(\"required message type\"),\r\n  p_message: yup.string().required(\"required message\"),\r\n  p_to: yup.string().required(\"required to\"),\r\n});\r\n\r\n\r\n\r\nfunction Chatting(props) {\r\n\r\n  console.log(\"props\", props)\r\n\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { handleSubmit, register, errors, reset } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const userId = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [item, setItem] = useState(\"\");\r\n\r\n  const [data, setData] = useState({})\r\n  const { query_id, query_No, routes } = data\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect\", props)\r\n    const dataItem = props.location.obj\r\n\r\n    if (dataItem) {\r\n      localStorage.setItem(\"myDataAdmin\", JSON.stringify(dataItem));\r\n    }\r\n    var myData = localStorage.getItem(\"myDataAdmin\");\r\n    var data2 = JSON.parse(myData)\r\n    setData(data2)\r\n    setItem(data2.message_type)\r\n  }, [item]);\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", query_id);\r\n    formData.append(\"message_type\", value.message_type);\r\n    formData.append(\"message\", value.p_message);\r\n    formData.append(\"to\", value.p_to);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/admin/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          reset();\r\n\r\n          var variable = \"Message Successfully Sent \"\r\n          Alerts.SuccessNormal(variable)\r\n          props.history.push(routes);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout adminDashboard=\"adminDashboard\" adminUserId={userId}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"8\">\r\n              <h4>Message</h4>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"row\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Query No.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_query\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    value={query_No}\r\n                    disabled\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Message Type</label>\r\n                  {\r\n                    item &&\r\n                    <select\r\n                      className={classNames(\"form-control\", {\r\n                        \"is-invalid\": errors.message_type,\r\n                      })}\r\n                      name=\"message_type\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                      defaultValue={item}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Query Discussion</option>\r\n                      <option value=\"2\">Proposal Discussion</option>\r\n                      <option value=\"5\">Payment Discussion</option>\r\n                      <option value=\"3\">Assignment Discussion</option>\r\n                      <option value=\"1\">Others</option>\r\n                    </select>\r\n                  }\r\n                  {errors.message_type && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.message_type.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>To</label>\r\n                  <select\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_to,\r\n                    })}\r\n                    name=\"p_to\"\r\n                    ref={register}\r\n                    style={{ height: \"33px\" }}\r\n                  >\r\n                    <option value=\"\">--select--</option>\r\n                    <option value=\"customer\">Customer</option>\r\n                    <option value=\"tl\">Team Leader</option>\r\n                    <option value=\"both\">Both</option>\r\n                  </select>\r\n                  {errors.p_to && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_to.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Message</label>\r\n                  <textarea\r\n                    className={classNames(\"form-control\", {\r\n                      \"is-invalid\": errors.p_message,\r\n                    })}\r\n                    placeholder=\"Message text here\"\r\n                    rows=\"5\"\r\n                    ref={register}\r\n                    name=\"p_message\"\r\n                  ></textarea>\r\n                  {errors.p_message && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.p_message.message}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Send\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n          </form>\r\n        </CardBody>\r\n\r\n      </Card>\r\n    </Layout >\r\n  );\r\n}\r\n\r\nexport default Chatting;\r\n\r\n\r\n{/* <select\r\n                    class=\"form-control\"\r\n                    name=\"p_sms_type\"\r\n                    ref={register}\r\n                    value={query_No}\r\n                  >\r\n                    <option value=\"\">--select--</option>\r\n                    <option value=\"1\">Information</option>\r\n                    <option value=\"2\">Proposal Discussion</option>\r\n                    <option value=\"3\">Assignment Discussion</option>\r\n                  </select> */}\r\n\r\n                    // useEffect(() => {\r\n  //   const getQuery = () => {\r\n  //     axios.get(`${baseUrl}/customers/getAssignedAssignments?user=${JSON.parse(userId)}\r\n  //     &type=1`)\r\n  //       .then((res) => {\r\n  //         console.log(res);\r\n  //         if (res.data.code === 1) {\r\n  //           // setAssingment(res.data.result);\r\n  //         }\r\n  //       });\r\n  //   };\r\n\r\n  //   getQuery();\r\n  // }, []);\r\n    // const dataItem = props.location.obj\r\n  // const { message_type, query_id, query_No, routes } = dataItem","E:\\Mazars_Pannel\\src\\Service\\PrivateRouteTP.js",[],"E:\\Mazars_Pannel\\src\\pages\\TP\\QueriesRecevied\\QueriesRecevied.js",["1510","1511"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport QueryDetails from \"../../../components/QueryDetails/QueryDetails\";\r\n\r\nfunction QueriesRecevied() {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const [submitData, setSubmitData] = useState([]);\r\n  const [assingNo, setAssingmentNo] = useState();\r\n  const [displayQuery, setDisplayQuery] = useState([]);\r\n  const [diaplaySpecific, setDisplaySpecific] = useState([]);\r\n  const [queryDocs, setQueryDocs] = useState([]);\r\n  const [paymentDetails, setPaymentDetails] = useState([]);\r\n  const [purpose, setPurpose] = useState([]);\r\n  const [year, setYear] = useState([]);\r\n  const [feedback, setFeedback] = useState([]);\r\n  const [reports, setReports] = useState([]);\r\n\r\n  const [diaplayProposal, setDisplayProposal] = useState({\r\n    amount: \"\",\r\n    accepted_amount: \"\",\r\n    payment_received: \"\",\r\n    cust_accept_date: \"\",\r\n    proposal_date: \"\",\r\n    description: \"\",\r\n\r\n    amount_type: \"\",\r\n    amount_fixed: \"\",\r\n    amount_hourly: \"\",\r\n    payment_terms: \"\",\r\n    no_of_installment: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n  });\r\n\r\n  const [diaplayAssignment, setDisplayAssignment] = useState([\r\n    {\r\n      assignment_number: \"\",\r\n      assignment_date: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [diaplayHistory, setDisplayHistory] = useState([\r\n    {\r\n      tlname: \"\",\r\n      date_of_allocation: \"\",\r\n      date_of_delivery: \"\",\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const getSubmittedAssingment = () => {\r\n      axios.get(`${baseUrl}/customers/getQueryDetails?id=${id}`).then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setSubmitData(res.data.result);\r\n          setDisplaySpecific(res.data.additional_queries);\r\n          setPaymentDetails(res.data.payment_detail);\r\n          setAssingmentNo(res.data.result[0].assign_no);\r\n          setFeedback(res.data.feedback_detail);\r\n          setReports(res.data.reports);\r\n\r\n          var purposeItem = res.data.result[0].purpose_opinion;\r\n          var assementItem = res.data.result[0].assessment_year;\r\n\r\n          console.log(\"purposeItem-\", typeof purposeItem);\r\n          try {\r\n            var myPurpose = JSON.parse(purposeItem);\r\n            var myYear = JSON.parse(assementItem);\r\n            setPurpose(myPurpose);\r\n            setYear(myYear);\r\n          } catch (e) {\r\n            return false;\r\n          }\r\n\r\n          if (res.data.proposal_queries.length > 0) {\r\n            setDisplayProposal({\r\n              accepted_amount: res.data.proposal_queries[0].accepted_amount,\r\n              payment_received: res.data.proposal_queries[0].paid_amount,\r\n              amount: res.data.proposal_queries[0].amount,\r\n              cust_accept_date: res.data.proposal_queries[0].cust_accept_date,\r\n              proposal_date: res.data.proposal_queries[0].created,\r\n              description: res.data.proposal_queries[0].description,\r\n\r\n              amount_type: res.data.proposal_queries[0].amount_type,\r\n              amount_fixed: res.data.proposal_queries[0].amount,\r\n              amount_hourly: res.data.proposal_queries[0].amount_hourly,\r\n              payment_terms: res.data.proposal_queries[0].payment_terms,\r\n              no_of_installment: res.data.proposal_queries[0].no_of_installment,\r\n              installment_amount: res.data.proposal_queries[0].installment_amount,\r\n              due_date: res.data.proposal_queries[0].due_date,\r\n            });\r\n          }\r\n\r\n          if (res.data.assignment.length > 0) {\r\n            setDisplayAssignment({\r\n              assignment_number: res.data.assignment[0].assignment_number,\r\n              assignment_date: res.data.assignment[0].created,\r\n              date_of_delivery: res.data.assignment[0].date_of_delivery,\r\n            });\r\n          }\r\n          if (res.data.history_queries.length > 0) {\r\n            setDisplayHistory({\r\n              tlname: res.data.history_queries[0].tname,\r\n              date_of_allocation:\r\n                res.data.history_queries[0].date_of_allocation,\r\n            });\r\n          }\r\n          if (res.data.queries_document) {\r\n            if (res.data.queries_document.length > 0) {\r\n              setQueryDocs(res.data.queries_document);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    };\r\n    getQuery();\r\n    getSubmittedAssingment();\r\n  }, [assingNo]);\r\n\r\n  const getQuery = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/GetAdditionalQueries?assignno=${assingNo}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setDisplayQuery(res.data.result);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"schedule\">\r\n            <h3>Query Detail</h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12\">\r\n          <div class=\"card\">\r\n            <div\r\n              class=\"card-header\"\r\n              id=\"headingOne\"\r\n              style={{ padding: \".5rem .1rem\" }}\r\n            >\r\n              <h2 class=\"mb-0 query ml-3\">\r\n                <button\r\n                  class=\"btn btn-success\"\r\n                  onClick={() => history.goBack(\"4\")}\r\n                >\r\n                  Go Back\r\n                </button>\r\n              </h2>\r\n            </div>\r\n            {submitData.map((p, index) => (\r\n              <QueryDetails\r\n                p={p}\r\n                key={index}\r\n                diaplaySpecific={diaplaySpecific}\r\n                diaplayProposal={diaplayProposal}\r\n                diaplayHistory={diaplayHistory}\r\n                diaplayAssignment={diaplayAssignment}\r\n                displayQuery={displayQuery}\r\n                getQuery={getQuery}\r\n                assingNo={assingNo}\r\n                queryDocs={queryDocs}\r\n                paymentDetails={paymentDetails}\r\n                purpose={purpose}\r\n                year={year}\r\n                feedback={feedback}\r\n                reports={reports}\r\n\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesRecevied;\r\n","E:\\Mazars_Pannel\\src\\pages\\TP\\QueriesTab\\QueriesTab.js",["1512","1513","1514","1515","1516","1517"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nimport InComplete from \"../InComplete/InComplete\";\r\nimport Complete from \"../Complete/Complete\";\r\n\r\nfunction QueriesTab() {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  // const [pendingAcceptence, setPendingAcceptence] = useState(\"\");\r\n  // const [incomplete, setIncomplete] = useState(\"\");\r\n  // const [complete, setComplete] = useState(\"\");\r\n\r\n  // const CountPendingForAcceptence = (data) => {\r\n  //   setPendingAcceptence(data);\r\n  // };\r\n\r\n  // const CountIncomplete = (data) => {\r\n  //   setIncomplete(data);\r\n  // };\r\n\r\n  // const CountComplete = (data) => {\r\n  //   setComplete(data);\r\n  // };\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-md-12\">\r\n          <ul\r\n            class=\"nav nav-pills mb-3\"\r\n            style={{ justifyContent: \"space-around\" }}\r\n            id=\"pills-tab\"\r\n            role=\"tablist\"\r\n          >\r\n            <li class=\"nav-item\" role=\"presentation\">\r\n              <a\r\n                class=\"nav-link text-white active\"\r\n                id=\"pills-incomplete-tab\"\r\n                data-toggle=\"pill\"\r\n                href=\"#incomplete\"\r\n                role=\"tab\"\r\n                aria-controls=\"pills-incomplete\"\r\n                aria-selected=\"false\"\r\n              >\r\n                Inprogress\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\" role=\"presentation\">\r\n              <a\r\n                class=\"nav-link text-white\"\r\n                id=\"pills-complete-tab\"\r\n                data-toggle=\"pill\"\r\n                href=\"#complete\"\r\n                role=\"tab\"\r\n                aria-controls=\"pills-complete\"\r\n                aria-selected=\"false\"\r\n              >\r\n                Complete\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <div class=\"tab-content\" id=\"pills-tabContent\">\r\n            <div\r\n              class=\"tab-pane fade show active\"\r\n              id=\"incomplete\"\r\n              role=\"tabpanel\"\r\n              aria-labelledby=\"pills-incomplete-tab\"\r\n            >\r\n              <InComplete />\r\n            </div>\r\n\r\n            <div\r\n              class=\"tab-pane fade\"\r\n              id=\"complete\"\r\n              role=\"tabpanel\"\r\n              aria-labelledby=\"pills-complete-tab\"\r\n            >\r\n              <Complete />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\AssignmentTab\\AssignmentTab.js",["1518","1519","1520","1521"],"import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\n\r\nimport AllAssignment from \"./AllAssignment\";\r\nimport DraftReportTab from \"./DraftReportTab\";\r\nimport DeliveryFinalTab from \"./DeliveryFinalTab\";\r\n\r\n\r\n\r\nfunction QueriesTab(props) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n\r\n  const [allAssignmentCount, setAllAssignmentCount] = useState(\"\");\r\n  const [draft, setDraft] = useState(\"\");\r\n  const [final, setFinal] = useState();\r\n\r\n\r\n  const myStyle1 = {\r\n    backgroundColor: \"grey\",\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n  const myStyle2 = {\r\n    padding: \"12px\",\r\n    borderRadius: \"50px\",\r\n    width: \"200px\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"blue\",\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n  };\r\n\r\n\r\n  useLayoutEffect(() => {\r\n    setTabIndex(props.location.index || 0);\r\n  }, [props.location.index]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const AllAssignment = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setAllAssignmentCount(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getDraftReports = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setDraft(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getFinalReports = () => {\r\n      axios\r\n        .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setFinal(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    AllAssignment();\r\n    getDraftReports();\r\n    getFinalReports();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <Layout TLDashboard=\"TLDashboard\" TLuserId={userid}>\r\n      <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              All Assignments ({allAssignmentCount})\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>\r\n              Inprogress; Draft Reports ({draft})\r\n            </Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>\r\n              Inprogress; Delivery of Final ({final})\r\n            </Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <AllAssignment />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DraftReportTab />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <DeliveryFinalTab />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default QueriesTab;\r\n\r\n","E:\\Mazars_Pannel\\src\\Service\\PrivateRouteTL.js",[],"E:\\Mazars_Pannel\\src\\Service\\PrivateRouteAdmin.js",[],"E:\\Mazars_Pannel\\src\\config\\config.js",[],"E:\\Mazars_Pannel\\src\\common\\Alerts.js",["1522"],"import Swal from \"sweetalert2\";\r\n\r\n// SuccessLogin\r\nconst SuccessLogin = () => {\r\n    return (\r\n        Swal.fire(\r\n            'Success',\r\n            'Login Successfully',\r\n            'success'\r\n        )\r\n    )\r\n}\r\n\r\n\r\n// ErrorLogin\r\nconst ErrorLogin = () => {\r\n    return (\r\n        Swal.fire(\r\n            \"Oops...\",\r\n            \"Error : Incorrect Email OR Password\",\r\n            \"error\"\r\n        )\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n// Success\r\nconst SuccessMsg = (variable, key) => {\r\n    return (\r\n        Swal.fire(\r\n            'Success',\r\n            ` ${variable ? variable : \"\"} </br> </br>\r\n             ${key.faill ? key.faill : \"\"} </br></br> \r\n              ${key.success ? key.success : \"\"}`,\r\n            'success'\r\n        )\r\n    )\r\n}\r\n\r\n\r\n// Success\r\nconst SuccessReport = (message) => {\r\n    if (message.invalid) {\r\n        Swal.fire(\r\n            \"Error\",\r\n            `${message.invalid}`,\r\n            \"error\"\r\n        )\r\n    } else if (message.faill && message.success) {\r\n        Swal.fire(\r\n            'Success',\r\n            ` ${message.faill} <br/><br/> \r\n            ${message.success}`,\r\n            'success'\r\n        )\r\n    } else if (message.success) {\r\n        Swal.fire(\r\n            'Success',\r\n            ` ${message.success}`,\r\n            'success'\r\n        )\r\n    }\r\n    else if (message.faill) {\r\n        Swal.fire(\r\n            'Error',\r\n            ` ${message.faill} <br/>`,\r\n            'error'\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// SuccessNormal\r\nconst SuccessNormal = (variable) => {\r\n    return (\r\n        Swal.fire(\r\n            'Success',\r\n            ` ${variable} </br> `,\r\n            'success'\r\n        )\r\n    )\r\n}\r\n\r\n\r\n// ErrorLogin\r\nconst ErrorDelete = () => {\r\n    return (\r\n        Swal.fire(\r\n            \"Error\",\r\n            \"Permission denied.\",\r\n            \"error\"\r\n        )\r\n    )\r\n}\r\n\r\n// ErrorLogin\r\nconst ErrorEdit = () => {\r\n    return (\r\n        Swal.fire(\r\n            \"Error\",\r\n            \"Permission denied.\",\r\n            \"error\"\r\n        )\r\n    )\r\n}\r\n\r\n\r\n// SuccessNormal\r\nconst ErrorNormal = (variable) => {\r\n    return (\r\n        Swal.fire(\r\n            'Error',\r\n            ` ${variable} </br> `,\r\n            'error'\r\n        )\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    SuccessLogin,\r\n    ErrorLogin,\r\n    SuccessMsg,\r\n    SuccessNormal,\r\n    SuccessReport,\r\n    ErrorDelete,\r\n    ErrorEdit,\r\n    ErrorNormal\r\n};\r\n\r\n\r\n\r\n\r\n// Swal.fire(`oops : ${response.data.result}`)","E:\\Mazars_Pannel\\src\\components\\Layout\\Layout.js",["1523"],"import Sidebar from \"../Admin-Sidebar/Admin-Sidebar\";\r\nimport Header from \"../Admin-Header/Admin-Header\";\r\nimport Footer from \"../Admin-Footer/Admin-Footer\";\r\n\r\n\r\n\r\nfunction Layout(props) {\r\n  // console.log(props)\r\n  const {\r\n    custDashboard, adminDashboard, TLDashboard,\r\n    TPDashboard,\r\n    custUserId, adminUserId, TLuserId, TPuserId } = props\r\n  return (\r\n    <>\r\n      <Header\r\n        custUserId={custUserId}\r\n        adminUserId={adminUserId}\r\n        TLuserId={TLuserId}\r\n        TPuserId={TPuserId}\r\n      />\r\n\r\n      <Sidebar\r\n        custDashboard={custDashboard}\r\n        adminDashboard={adminDashboard}\r\n        TLDashboard={TLDashboard}\r\n        TPDashboard={TPDashboard}\r\n      />\r\n\r\n      <div class=\"app-content content\" style={{ marginTop: \"100px\" }}>\r\n        <div class=\"content-wrapper\">\r\n          <div class=\"content-body\">\r\n            {props.children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Footer /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\AssignmentTab\\AllAssignment.js",["1524","1525","1526","1527","1528","1529","1530","1531","1532","1533","1534","1535","1536","1537","1538","1539","1540","1541","1542","1543","1544","1545","1546","1547","1548","1549","1550","1551","1552","1553"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Tooltip,\r\n} from \"reactstrap\";\r\nimport DraftReportModal from \"./DraftReportUpload\";\r\nimport FinalReportUpload from \"./FinalReportUpload\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport * as Cookies from \"js-cookie\";\r\n\r\n\r\n\r\nfunction AssignmentTab() {\r\n\r\n  const history = useHistory();\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n  const [count, setCount] = useState(\"\");\r\n  const [assignment, setAssignment] = useState([]);\r\n  const [id, setId] = useState(\"\");\r\n  const [finalId, setFinalId] = useState(\"\");\r\n\r\n  const [records, setRecords] = useState([]);\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [status, setStatus] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n  const [hide, setHide] = useState();\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  console.log(\"current_date :\", current_date);\r\n  const [item] = useState(current_date);\r\n\r\n  const [baseMode, SetbaseMode] = useState(\"avc\");\r\n  const [transcode, SetTranscode] = useState(\"interop\");\r\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\r\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\r\n\r\n  useEffect(() => {\r\n    getAssignmentList();\r\n  }, []);\r\n\r\n  const getAssignmentList = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setAssignment(res.data.result);\r\n          setCount(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  //get category\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n    console.log(\"resetCategory ..\");\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentList();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n    console.log(\"resetData ..\");\r\n    reset();\r\n    setStatus([]);\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentList();\r\n  };\r\n\r\n  //assingmentStatus\r\n  const assingmentStatus = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setStatus(value);\r\n  };\r\n\r\n\r\n  //columns\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"date_of_query\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.date_of_query);\r\n        var oldDate = row.date_of_query;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>       \r\n            <Link\r\n              to={{\r\n                pathname: `/teamleader/queries/${row.q_id}`,\r\n                routes: \"assignment\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"200px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                {row.client_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\r\n                {row.draft_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                {row.final_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Delivery of report :</span>\r\n                {row.delivery_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\r\n                {row.other_stage}\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Expected date of delivery\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.Exp_Delivery_Date);\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Actual date of delivery\",\r\n      dataField: \"final_date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.final_date);\r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Deliverable\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {!row.final_report == \"\" ? (\r\n              <div>\r\n                <a\r\n                  href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.final_report}`}\r\n                  target=\"_blank\"\r\n                >\r\n                  <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\r\n                  final\r\n                </a>\r\n              </div>\r\n            ) : row.assignement_draft_report ? (\r\n              <div>\r\n                <a\r\n                  href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.assignement_draft_report}`}\r\n                  target=\"_blank\"\r\n                >\r\n                  <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\r\n                  draft\r\n                </a>\r\n              </div>\r\n            ) : null}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Assignment Stage\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div\r\n              title=\"Add Assignment stages\"\r\n              style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n            >\r\n              <Link to={`/teamleader/addassingment/${row.q_id}`}>\r\n                <i class=\"fa fa-tasks\"></i>\r\n              </Link>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                width: \"60px\"\r\n              }}\r\n            >\r\n              {row.accepted_amount == row.paid_amount &&\r\n                !row.final_report && row.client_discussion == \"completed\" &&\r\n                !(\r\n                  row.delivery_report == \"completed\" &&\r\n                  row.draft_report == \"completed\" &&\r\n                  row.final_discussion == \"completed\"\r\n                ) ? (\r\n                <div title=\"upload Pdf\">\r\n                  <p\r\n                    style={{ cursor: \"pointer\", color: \"green\" }}\r\n                    onClick={() => uploadDraftReport(row.id)}\r\n                  >\r\n                    <i class=\"fa fa-upload\" style={{ fontSize: \"16px\" }}></i>\r\n                    draft\r\n                  </p>\r\n                </div>\r\n              ) : null}\r\n\r\n\r\n              {/* {row.final_report ? null : ( */}\r\n                <div title=\"upload Pdf\">\r\n                  <p\r\n                    style={{ cursor: \"pointer\", color: \"red\" }}\r\n                    onClick={() => uploadFinalReport(row)}\r\n                  >\r\n                    {row.client_discussion == \"completed\" &&\r\n                      row.delivery_report == \"completed\" &&\r\n                      row.draft_report == \"completed\" &&\r\n                      row.final_discussion == \"completed\" &&\r\n                      row.amount == row.paid_amount ? (\r\n                      <div>\r\n                        <i\r\n                          class=\"fa fa-upload\"\r\n                          style={{ fontSize: \"16px\" }}\r\n                        ></i>\r\n                        final\r\n                      </div>\r\n                    ) : null}\r\n                  </p>\r\n                </div>\r\n              {/* )} */}\r\n\r\n\r\n              {row.vstart < 11 &&\r\n                row.vend >= 0 &&\r\n                !(row.vstart == null && row.vend == null) ? (\r\n                <div style={{ cursor: \"pointer\" }} title=\"Video Chat\">\r\n                  <i\r\n                    class=\"fa fa-video-camera\"\r\n                    style={{ color: \"red\", fontSize: \"16px\" }}\r\n                    onClick={() => handleJoin(row.id)}\r\n                  ></i>\r\n                </div>\r\n              ) : null}\r\n\r\n\r\n              <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/teamleader/chatting/${row.q_id}`,\r\n                    obj: {\r\n                      message_type: \"3\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.q_id,\r\n                      routes: `/teamleader/assignment`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div>\r\n\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n\r\n  ];\r\n\r\n\r\n  //handleJoin\r\n  const handleJoin = (id) => {\r\n    console.log(\"id\", id);\r\n\r\n    Cookies.set(\"channel_2\", id);\r\n    Cookies.set(\"baseMode_2\", baseMode);\r\n    Cookies.set(\"transcode_2\", transcode);\r\n    Cookies.set(\"attendeeMode_2\", attendeeMode);\r\n    Cookies.set(\"videoProfile_2\", videoProfile);\r\n    history.push(\"/teamleader/meeting\");\r\n  };\r\n\r\n\r\n  // draft modal\r\n  const [draftModal, setDraftModal] = useState(false);\r\n  const uploadDraftReport = (id) => {\r\n    console.log(id);\r\n    setDraftModal(!draftModal);\r\n    setId(id);\r\n  };\r\n\r\n\r\n  // final modal\r\n  const [fianlModal, setFianlModal] = useState(false);\r\n  const uploadFinalReport = (id) => {\r\n    console.log(id);\r\n    setFianlModal(!fianlModal);\r\n    setFinalId(id);\r\n  };\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(\"data :\", data);\r\n    console.log(\"selectedData :\", selectedData);\r\n    axios\r\n      .get(\r\n        `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\r\n          userid\r\n        )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n        }&assignment_status=${status}&stages_status=${data.p_status\r\n        }&pcat_id=${selectedData}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setAssignment(res.data.result);\r\n            setRecords(res.data.result.length);\r\n\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n  const disabledHandler = (e) => {\r\n    setHide(e.target.value);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"form-inline\">\r\n              <div class=\"form-group mb-2\">\r\n                <Select\r\n                  style={{ width: 130 }}\r\n                  placeholder=\"Select Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleCategory}\r\n                  value={selectedData}\r\n                >\r\n                  <Option value=\"1\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                  </Option>\r\n                  <Option value=\"2\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                  </Option>\r\n                </Select>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: 250 }}\r\n                  placeholder=\"Select Sub Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleSubCategory}\r\n                  value={store2}\r\n                  allowClear\r\n                >\r\n                  {tax2.map((p, index) => (\r\n                    <Option value={p.id} key={index}>\r\n                      {p.details}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary mb-2 ml-3\"\r\n                  onClick={resetCategory}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">From</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateFrom\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">To</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateTo\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  defaultValue={item}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <select\r\n                  className=\"form-select form-control\"\r\n                  name=\"p_status\"\r\n                  ref={register}\r\n                  style={{ height: \"33px\" }}\r\n                  onChange={(e) => disabledHandler(e)}\r\n                >\r\n                  <option value=\"\">--select--</option>\r\n                  <option value=\"1\">Pending</option>\r\n                  <option value=\"2\">Complete</option>\r\n                  <option value=\"3\">Payment Decline</option>\r\n                </select>\r\n              </div>\r\n\r\n              {\r\n                hide == \"3\" ?\r\n                  \"\"\r\n                  :\r\n                  <div class=\"form-group mx-sm-1  mb-2\">\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      style={{ width: 210 }}\r\n                      placeholder=\"Select stages\"\r\n                      defaultValue={[]}\r\n                      onChange={assingmentStatus}\r\n                      value={status}\r\n                      allowClear\r\n                    >\r\n                      <Option value=\"Client_Discussion\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Client Discussion\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Draft_Report\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">Draft report</div>\r\n                      </Option>\r\n                      <Option value=\"Final_Discussion\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Final Discussion\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Delivery_of_report\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Delivery of report\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Completed\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">Completed</div>\r\n                      </Option>\r\n                    </Select>\r\n                  </div>\r\n              }\r\n\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">Total Records : {records}</label>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                Search\r\n              </button>\r\n\r\n              <Reset />\r\n            </div>\r\n          </form>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignment}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n\r\n          <DraftReportModal\r\n            draftModal={draftModal}\r\n            uploadDraftReport={uploadDraftReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={id}\r\n          />\r\n\r\n          <FinalReportUpload\r\n            fianlModal={fianlModal}\r\n            uploadFinalReport={uploadFinalReport}\r\n            getAssignmentList={getAssignmentList}\r\n            id={finalId}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AssignmentTab;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\AssignmentTab\\DraftReportTab.js",["1554","1555","1556","1557","1558","1559","1560","1561","1562","1563","1564","1565","1566","1567"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\n\r\n\r\n\r\nfunction AssignmentTab() {\r\n\r\n    const history = useHistory();\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n    const { handleSubmit, register, errors, reset } = useForm();\r\n    const { Option, OptGroup } = Select;\r\n    const [count, setCount] = useState(\"\");\r\n    const [assignment, setAssignment] = useState([]);\r\n    const [id, setId] = useState(\"\");\r\n    const [finalId, setFinalId] = useState(\"\");\r\n\r\n    const [records, setRecords] = useState([]);\r\n    const [selectedData, setSelectedData] = useState([]);\r\n    const [status, setStatus] = useState([]);\r\n    const [tax2, setTax2] = useState([]);\r\n    const [store2, setStore2] = useState([]);\r\n    const [hide, setHide] = useState();\r\n\r\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n    console.log(\"current_date :\", current_date);\r\n    const [item] = useState(current_date);\r\n\r\n\r\n    useEffect(() => {\r\n        getAssignmentList();\r\n    }, []);\r\n\r\n    const getAssignmentList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Draft_Report&stages_status=1`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setAssignment(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    //get category\r\n    useEffect(() => {\r\n        const getSubCategory = () => {\r\n            axios\r\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res.data.code === 1) {\r\n                        setTax2(res.data.result);\r\n                    }\r\n                });\r\n        };\r\n        getSubCategory();\r\n    }, [selectedData]);\r\n\r\n    //handleCategory\r\n    const handleCategory = (value) => {\r\n        console.log(`selected ${value}`);\r\n        setSelectedData(value);\r\n        setStore2([]);\r\n    };\r\n\r\n    //handleSubCategory\r\n    const handleSubCategory = (value) => {\r\n        console.log(`selected ${value}`);\r\n        setStore2(value);\r\n    };\r\n\r\n    //reset category\r\n    const resetCategory = () => {\r\n        console.log(\"resetCategory ..\");\r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //reset date\r\n    const resetData = () => {\r\n        console.log(\"resetData ..\");\r\n        reset();\r\n        setStatus([]);\r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //assingmentStatus\r\n    const assingmentStatus = (value) => {\r\n        console.log(`selected ${value}`);\r\n        setStatus(value);\r\n    };\r\n\r\n\r\n    //columns\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"date_of_query\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.date_of_query);\r\n                var oldDate = row.date_of_query;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.q_id}`,\r\n                                routes: \"assignment\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"status\",\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"200px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                                {row.client_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\r\n                                {row.draft_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                                {row.final_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Delivery of report :</span>\r\n                                {row.delivery_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\r\n                                {row.other_stage}\r\n                            </p>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Expected date of delivery\",\r\n            dataField: \"Exp_Delivery_Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.Exp_Delivery_Date);\r\n                var oldDate = row.Exp_Delivery_Date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Actual date of delivery\",\r\n            dataField: \"final_date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.final_date);\r\n                var oldDate = row.final_date;\r\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        }\r\n    ];\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(\"data :\", data);\r\n        console.log(\"selectedData :\", selectedData);\r\n        axios\r\n            .get(\r\n                `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\r\n                    userid\r\n                )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n                }&assignment_status=\"Draft_Report\"&stages_status=1\r\n               &pcat_id=${selectedData}`\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    if (res.data.result) {\r\n                        setAssignment(res.data.result);\r\n                        setRecords(res.data.result.length);\r\n\r\n                    }\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const Reset = () => {\r\n        return (\r\n            <>\r\n                <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\r\n                    onClick={() => resetData()}\r\n                >\r\n                    Reset\r\n                </button>\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"form-inline\">\r\n                            <div class=\"form-group mb-2\">\r\n                                <Select\r\n                                    style={{ width: 130 }}\r\n                                    placeholder=\"Select Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleCategory}\r\n                                    value={selectedData}\r\n                                >\r\n                                    <Option value=\"1\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                                    </Option>\r\n                                    <Option value=\"2\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                                    </Option>\r\n                                </Select>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <Select\r\n                                    mode=\"multiple\"\r\n                                    style={{ width: 250 }}\r\n                                    placeholder=\"Select Sub Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleSubCategory}\r\n                                    value={store2}\r\n                                    allowClear\r\n                                >\r\n                                    {tax2.map((p, index) => (\r\n                                        <Option value={p.id} key={index}>\r\n                                            {p.details}\r\n                                        </Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    class=\"btn btn-primary mb-2 ml-3\"\r\n                                    onClick={resetCategory}\r\n                                >\r\n                                    X\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">From</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateFrom\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">To</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateTo\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    defaultValue={item}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\r\n                            </div>\r\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                                Search\r\n                            </button>\r\n\r\n                            <Reset />\r\n                        </div>\r\n                    </form>\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={assignment}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AssignmentTab;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\AssignmentTab\\DeliveryFinalTab.js",["1568","1569","1570","1571","1572","1573","1574","1575","1576","1577","1578","1579","1580"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n} from \"reactstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\n\r\nfunction AssignmentTab() {\r\n\r\n    const history = useHistory();\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n    const { handleSubmit, register, errors, reset } = useForm();\r\n    const { Option, OptGroup } = Select;\r\n    const [count, setCount] = useState(\"\");\r\n    const [assignment, setAssignment] = useState([]);\r\n    const [id, setId] = useState(\"\");\r\n    const [finalId, setFinalId] = useState(\"\");\r\n\r\n    const [records, setRecords] = useState([]);\r\n    const [selectedData, setSelectedData] = useState([]);\r\n    const [status, setStatus] = useState([]);\r\n    const [tax2, setTax2] = useState([]);\r\n    const [store2, setStore2] = useState([]);\r\n    const [hide, setHide] = useState();\r\n\r\n    var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n    console.log(\"current_date :\", current_date);\r\n    const [item] = useState(current_date);\r\n\r\n\r\n    useEffect(() => {\r\n        getAssignmentList();\r\n    }, []);\r\n\r\n    const getAssignmentList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(userid)}&assignment_status=Delivery_of_report&stages_status=1`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setAssignment(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    //get category\r\n    useEffect(() => {\r\n        const getSubCategory = () => {\r\n            axios\r\n                .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res.data.code === 1) {\r\n                        setTax2(res.data.result);\r\n                    }\r\n                });\r\n        };\r\n        getSubCategory();\r\n    }, [selectedData]);\r\n\r\n    //handleCategory\r\n    const handleCategory = (value) => {\r\n        console.log(`selected ${value}`);\r\n        setSelectedData(value);\r\n        setStore2([]);\r\n    };\r\n\r\n    //handleSubCategory\r\n    const handleSubCategory = (value) => {\r\n        console.log(`selected ${value}`);\r\n        setStore2(value);\r\n    };\r\n\r\n    //reset category\r\n    const resetCategory = () => {\r\n        console.log(\"resetCategory ..\");\r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //reset date\r\n    const resetData = () => {\r\n        console.log(\"resetData ..\");\r\n        reset();\r\n        setStatus([]);\r\n        setSelectedData([]);\r\n        setStore2([]);\r\n        getAssignmentList();\r\n    };\r\n\r\n    //assingmentStatus\r\n    const assingmentStatus = (value) => {\r\n        console.log(`selected ${value}`);\r\n        setStatus(value);\r\n    };\r\n\r\n\r\n    //columns\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"date_of_query\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.date_of_query);\r\n                var oldDate = row.date_of_query;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.q_id}`,\r\n                                routes: \"assignment\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"status\",\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"200px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                                {row.client_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\r\n                                {row.draft_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                                {row.final_discussion}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Delivery of report :</span>\r\n                                {row.delivery_report}\r\n                            </p>\r\n                            <p>\r\n                                <span style={{ fontWeight: \"bold\" }}>Complete :</span>\r\n                                {row.other_stage}\r\n                            </p>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Expected date of delivery\",\r\n            dataField: \"Exp_Delivery_Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.Exp_Delivery_Date);\r\n                var oldDate = row.Exp_Delivery_Date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Actual date of delivery\",\r\n            dataField: \"final_date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.final_date);\r\n                var oldDate = row.final_date;\r\n                if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        }\r\n    ];\r\n\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(\"data :\", data);\r\n        console.log(\"selectedData :\", selectedData);\r\n        axios\r\n            .get(\r\n                `${baseUrl}/tl/getAssignments?tl_id=${JSON.parse(\r\n                    userid\r\n                )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n                }&assignment_status=${status}&stages_status=${data.p_status\r\n                }&pcat_id=${selectedData}`\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    if (res.data.result) {\r\n                        setAssignment(res.data.result);\r\n                        setRecords(res.data.result.length);\r\n\r\n                    }\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const Reset = () => {\r\n        return (\r\n            <>\r\n                <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mx-sm-1 mb-2\"\r\n                    onClick={() => resetData()}\r\n                >\r\n                    Reset\r\n                </button>\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div class=\"form-inline\">\r\n                            <div class=\"form-group mb-2\">\r\n                                <Select\r\n                                    style={{ width: 130 }}\r\n                                    placeholder=\"Select Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleCategory}\r\n                                    value={selectedData}\r\n                                >\r\n                                    <Option value=\"1\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                                    </Option>\r\n                                    <Option value=\"2\" label=\"Compilance\">\r\n                                        <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                                    </Option>\r\n                                </Select>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <Select\r\n                                    mode=\"multiple\"\r\n                                    style={{ width: 250 }}\r\n                                    placeholder=\"Select Sub Category\"\r\n                                    defaultValue={[]}\r\n                                    onChange={handleSubCategory}\r\n                                    value={store2}\r\n                                    allowClear\r\n                                >\r\n                                    {tax2.map((p, index) => (\r\n                                        <Option value={p.id} key={index}>\r\n                                            {p.details}\r\n                                        </Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    class=\"btn btn-primary mb-2 ml-3\"\r\n                                    onClick={resetCategory}\r\n                                >\r\n                                    X\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">From</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateFrom\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">To</label>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"p_dateTo\"\r\n                                    className=\"form-select form-control\"\r\n                                    ref={register}\r\n                                    defaultValue={item}\r\n                                    max={item}\r\n                                />\r\n                            </div>\r\n\r\n                                              \r\n                            <div class=\"form-group mx-sm-1  mb-2\">\r\n                                <label className=\"form-select form-control\">Total Records : {records}</label>\r\n                            </div>\r\n                            <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                                Search\r\n                            </button>\r\n\r\n                            <Reset />\r\n                        </div>\r\n                    </form>\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={assignment}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AssignmentTab;\r\n","E:\\Mazars_Pannel\\src\\components\\Header\\Header.js",[],"E:\\Mazars_Pannel\\src\\pages\\TP\\Complete\\Complete.js",["1581","1582","1583","1584","1585"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Tpfilter from \"../../../components/Search-Filter/tpfilter\";\r\n\r\nfunction Complete() {\r\n  const [completeData, setCompleteData] = useState([]);\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  useEffect(() => {\r\n    getComplete();\r\n  }, []);\r\n\r\n  const getComplete = () => {\r\n    axios\r\n      .get(`${baseUrl}/tp/GetCompleteQues?id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          //   CountIncomplete(res.data.result.length);\r\n          setCompleteData(res.data.result);\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"query_date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link to={`/taxprofessional/queries/${row.id}`}>{row.assign_no}</Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n      <CardHeader>\r\n          <Tpfilter\r\n            setData={setCompleteData}\r\n            getData={getComplete}\r\n            completeAssignment=\"completeAssignment\"\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={completeData}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Complete;\r\n","E:\\Mazars_Pannel\\src\\pages\\TP\\InComplete\\InComplete.js",["1586","1587","1588","1589","1590"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Tpfilter from \"../../../components/Search-Filter/tpfilter\";\r\n\r\nfunction InComplete() {\r\n  const [incompleteData, setInCompleteData] = useState([]);\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  useEffect(() => {\r\n    getIncomplete();\r\n  }, []);\r\n\r\n  const getIncomplete = () => {\r\n    axios\r\n      .get(`${baseUrl}/tp/GetIncompleteQues?id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          //   CountIncomplete(res.data.result.length);\r\n          setInCompleteData(res.data.result);\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"query_date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link to={`/taxprofessional/queries/${row.id}`}>\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <Tpfilter\r\n            setData={setInCompleteData}\r\n            getData={getIncomplete}\r\n            inCompleteQuery=\"inCompleteQuery\"\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={incompleteData}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InComplete;\r\n","E:\\Mazars_Pannel\\src\\components\\QueryDetails\\QueryDetails.js",["1591","1592","1593","1594","1595","1596","1597","1598","1599"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport BasicQuery from \"./BasicQuery\";\r\nimport ProposalDetails from \"./ProposalDetails\";\r\nimport AssignmentDetails from \"./AssignmentDetails\";\r\nimport AdditionalQuery from \"./AdditionalQuery\";\r\nimport AddAdditionalQuery from \"./AddAdditionalQuery\";\r\nimport DraftReports from \"./DraftReports\";\r\nimport CommonServices from \"../../common/common\";\r\nimport {\r\n  TabContent, TabPane, Nav, NavItem, NavLink, Card, Button,\r\n  CardTitle, CardText, Row, Col\r\n} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport Feedback from './Feedback'\r\n\r\n\r\nfunction QueryDetails({\r\n  p,\r\n  diaplaySpecific,\r\n  diaplayProposal,\r\n  diaplayHistory,\r\n  diaplayAssignment,\r\n  displayQuery,\r\n  assingNo,\r\n  getQuery,\r\n  customerQuery,\r\n  queryDocs,\r\n  purpose,\r\n  paymentDetails,\r\n  year,\r\n  feedback,\r\n  reports\r\n}) {\r\n  console.log(\"p\", p);\r\n\r\n  // const history = useHistory();\r\n\r\n  // const [addModal, setAddModal] = useState(false);\r\n  // const addHandler = () => {\r\n  //   console.log(\"addhandler\")\r\n  //   setAddModal(!addModal);\r\n  // }\r\n\r\n\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Nav tabs>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '1' })}\r\n              onClick={() => { toggle('1'); }}\r\n            >\r\n              Basic Query Information\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '2' })}\r\n              onClick={() => { toggle('2'); }}\r\n            >\r\n              Proposal\r\n            </NavLink>\r\n          </NavItem>\r\n\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '3' })}\r\n              onClick={() => { toggle('3'); }}\r\n            >\r\n              Assignment\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '4' })}\r\n              onClick={() => { toggle('4'); }}\r\n            >\r\n              Feedback\r\n            </NavLink>\r\n          </NavItem>\r\n\r\n          {/* <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: activeTab === '5' })}\r\n              onClick={() => { toggle('5'); }}\r\n            >\r\n              UPLOAD ADDITIONAL DOCUMENTS\r\n            </NavLink>\r\n          </NavItem> */}\r\n\r\n        </Nav>\r\n\r\n        <TabContent activeTab={activeTab}>\r\n          <TabPane tabId=\"1\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Card body>\r\n                  <BasicQuery\r\n                    p={p}\r\n                    diaplaySpecific={diaplaySpecific}\r\n                    purpose={purpose}\r\n                    queryDocs={queryDocs}\r\n                    year={year}\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n\r\n          <TabPane tabId=\"2\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Card body>\r\n                  <ProposalDetails\r\n                    diaplayProposal={diaplayProposal}\r\n                    diaplayHistory={diaplayHistory}\r\n                    paymentDetails={paymentDetails}\r\n                    p={p}\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n\r\n          <TabPane tabId=\"3\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Card body>\r\n                  <AssignmentDetails\r\n                    diaplayAssignment={diaplayAssignment}\r\n                    p={p}\r\n                    diaplayProposal={diaplayProposal}\r\n                    reports={reports}\r\n                    assingNo={assingNo}\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n\r\n\r\n          <TabPane tabId=\"4\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Card body>\r\n                  <Feedback\r\n                    feedback={feedback}\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n\r\n          {/* <TabPane tabId=\"5\">\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Card body>\r\n                  <div class=\"d-flex\">\r\n                    <div class=\"additional\">\r\n                      {customerQuery == \"customerQuery\" && (\r\n                        <button\r\n                          type=\"button\"\r\n                          class=\"btn btn-info\"\r\n                          onClick={addHandler}\r\n                        >\r\n                          Additional Document\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <AddAdditionalQuery\r\n                    addHandler={addHandler}\r\n                    addModal={addModal}\r\n                    assingNo={assingNo}\r\n                    getQuery={getQuery}\r\n                  />\r\n                  <AdditionalQuery\r\n                    displayQuery={displayQuery}\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </TabPane> */}\r\n\r\n        </TabContent>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QueryDetails;\r\n\r\n\r\n\r\n\r\n{\r\n  /* <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\r\n              <p class=\"m-0\" style={{ fontSize: \"15px\" }}>\r\n                Submitted on\r\n              </p>\r\n              <p class=\"m-0\" style={{ fontSize: \"15px\" }}>\r\n                : {CommonServices.changeFormateDate(p.created)}\r\n              </p>\r\n            </div>\r\n            <div class=\"d-flex\">\r\n              <div class=\"additional\">\r\n                {customerQuery == \"customerQuery\" && (\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-info\"\r\n                    onClick={addHandler}\r\n                  >\r\n                    Additional Query\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div> */\r\n}\r\n\r\n{/* <div class=\"card-body\">\r\n        <BasicQuery\r\n          p={p}\r\n          diaplaySpecific={diaplaySpecific}\r\n          purpose={purpose}\r\n          queryDocs={queryDocs}\r\n          year={year}\r\n        />\r\n        <ProposalDetails\r\n          diaplayProposal={diaplayProposal}\r\n          diaplayHistory={diaplayHistory}\r\n          paymentDetails={paymentDetails}\r\n          p={p}\r\n        />\r\n        <AssignmentDetails\r\n          diaplayAssignment={diaplayAssignment}\r\n          p={p}\r\n          diaplayProposal={diaplayProposal}\r\n        />\r\n\r\n        <AddAdditionalQuery\r\n          addHandler={addHandler}\r\n          addModal={addModal}\r\n          assingNo={assingNo}\r\n          getQuery={getQuery}\r\n        />\r\n\r\n        <DraftReports id={p.id} />\r\n        <div class=\"d-flex\">\r\n          <div class=\"additional\">\r\n            {customerQuery == \"customerQuery\" && (\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-info\"\r\n                onClick={addHandler}\r\n              >\r\n                Additional Query\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <AdditionalQuery displayQuery={displayQuery} />\r\n\r\n\r\n      </div> */}","E:\\Mazars_Pannel\\src\\components\\Footer\\Footer.js",[],"E:\\Mazars_Pannel\\src\\pages\\TL\\Proposal\\DeclinedProposal.js",["1600","1601","1602","1603","1604","1605","1606","1607"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\n\r\n\r\n\r\n\r\nfunction DeclinedProposal() {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n        console.log(key);\r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=3`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.query_date);\r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.id}`,\r\n                                routes: \"proposal\",\r\n                                index: 3,\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Customer Name\",\r\n            dataField: \"name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField:\"status\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        proposal=\"proposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DeclinedProposal;\r\n\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\Proposal\\AcceptedProposal.js",["1608","1609","1610","1611","1612","1613","1614","1615"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\n\r\n\r\n\r\nfunction AcceptedProposal() {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n        console.log(key);\r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=2`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.query_date);\r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        \r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.id}`,\r\n                                routes: \"proposal\",\r\n                                index: 2,\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Customer Name\",\r\n            dataField: \"name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"status\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        proposal=\"proposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AcceptedProposal;\r\n\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\Proposal\\InprogressProposal.js",["1616","1617","1618","1619","1620","1621","1622","1623","1624"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport ChatHistory from \"./ChatHistory\";\r\n\r\n\r\n\r\nfunction InprogressProposal() {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n        console.log(key);\r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}&status=1`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.query_date);\r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.id}`,\r\n                                routes: \"proposal\",\r\n                                index: 1,\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Customer Name\",\r\n            dataField: \"name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"status\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\",width: \"80px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div>\r\n                                {row.status_code == \"4\" ? (\r\n                                    <Link to={`/teamleader/edit-proposal/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: \"16px\",\r\n                                                cursor: \"pointer\",\r\n                                                color: \"green\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : row.status_code == \"2\" ? (\r\n                                    <Link to={`/teamleader/sendproposal/${row.id}`}>\r\n                                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : null}\r\n                            </div>\r\n                            {\r\n                                row.status == \"Customer Declined; Proposal\" ?\r\n                                    null\r\n                                    :\r\n                                    <div title=\"Send Message\">\r\n                                        <Link\r\n                                            to={{\r\n                                                pathname: `/teamleader/chatting/${row.id}`,\r\n                                                obj: {\r\n                                                    message_type: \"2\",\r\n                                                    query_No: row.assign_no,\r\n                                                    query_id: row.id,\r\n                                                    routes: `/teamleader/proposal`\r\n                                                }\r\n                                            }}\r\n                                        >\r\n                                            <i\r\n                                                class=\"fa fa-comments-o\"\r\n                                                style={{\r\n                                                    fontSize: 16,\r\n                                                    cursor: \"pointer\",\r\n                                                    marginLeft: \"8px\",\r\n                                                    color: \"blue\"\r\n                                                }}\r\n                                            ></i>\r\n                                        </Link>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        InprogressProposal=\"InprogressProposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n\r\n                    <ChatHistory\r\n                        chatHandler={chatHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        qno={id}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InprogressProposal;\r\n\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\Proposal\\AllProposal.js",["1625","1626","1627","1628","1629","1630","1631","1632","1633","1634","1635","1636","1637"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport ChatHistory from \"./ChatHistory\";\r\n// import PostAddIcon from '@material-ui/icons/PostAdd';\r\n\r\n\r\n\r\n\r\nfunction AllProposal() {\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n    const [records, setRecords] = useState([]);\r\n    const [proposal, setProposal] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [id, setId] = useState(null);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n        console.log(key);\r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.assign_no);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getProposalList();\r\n    }, []);\r\n\r\n    const getProposalList = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getProposalTl?id=${JSON.parse(userid)}`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setProposal(res.data.result);\r\n                    setCount(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.query_date);\r\n                var oldDate = row.query_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.id}`,\r\n                                routes: \"proposal\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Customer Name\",\r\n            dataField: \"name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {row.status}/\r\n                            {\r\n                                row.status == \"Inprogress\" ?\r\n                                    <p className=\"inprogress\">\r\n\r\n                                        {row.statusdescription}\r\n                                    </p>\r\n                                    :\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        <p className=\"declined\">\r\n\r\n                                            {row.statusdescription}\r\n                                        </p> :\r\n                                        row.status == \"Accepted; Proposal\" ?\r\n                                            <p className=\"completed\">\r\n                                                {row.statusdescription}\r\n                                            </p> :\r\n                                            null\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"80px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div>\r\n                                {row.status_code == \"4\" ? (\r\n                                    <Link to={`/teamleader/edit-proposal/${row.id}`}>\r\n                                        <i\r\n                                            className=\"fa fa-edit\"\r\n                                            style={{\r\n                                                fontSize: \"16px\",\r\n                                                cursor: \"pointer\",\r\n                                                color: \"green\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : row.status_code == \"2\" ? (\r\n                                    <Link to={`/teamleader/sendproposal/${row.id}`}>\r\n                                        <i\r\n                                            class=\"fa fa-mail-forward\"\r\n                                            style={{\r\n                                                fontSize: \"14px\",\r\n                                                cursor: \"pointer\",\r\n                                            }}\r\n                                        ></i>\r\n                                    </Link>\r\n                                ) : null}\r\n                            </div>\r\n                            {\r\n                                row.status == \"Customer Declined; Proposal\" ?\r\n                                    null\r\n                                    :\r\n                                    <div title=\"Send Message\">\r\n                                        <Link\r\n                                            to={{\r\n                                                pathname: `/teamleader/chatting/${row.id}`,\r\n                                                obj: {\r\n                                                    message_type: \"2\",\r\n                                                    query_No: row.assign_no,\r\n                                                    query_id: row.id,\r\n                                                    routes: `/teamleader/proposal`\r\n                                                }\r\n                                            }}\r\n                                        >\r\n                                            <i\r\n                                                class=\"fa fa-comments-o\"\r\n                                                style={{\r\n                                                    fontSize: 16,\r\n                                                    cursor: \"pointer\",\r\n                                                    marginLeft: \"8px\",\r\n                                                    color: \"blue\"\r\n                                                }}\r\n                                            ></i>\r\n                                        </Link>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setProposal}\r\n                        getData={getProposalList}\r\n                        AllProposal=\"AllProposal\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposal}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n\r\n                    <ChatHistory\r\n                        chatHandler={chatHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        qno={id}\r\n                    // getProposalData={getProposalList}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllProposal;\r\n\r\n\r\n\r\n\r\n{/* <div>\r\n                                {row.revised_text && (\r\n                                    <div style={{ cursor: \"pointer\" }} title=\"View History\">\r\n                                        <i\r\n                                            class=\"fa fa-comments-o\"\r\n                                            style={{ color: \"green\", fontSize: \"16px\", color: \"light-blue\", }}\r\n                                            onClick={() => chatHandler(row)}\r\n                                        ></i>\r\n                                    </div>\r\n                                )}\r\n                            </div> */}","E:\\Mazars_Pannel\\src\\pages\\TL\\Schedule\\Demo.js",["1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649","1650","1651"],"import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  Resources,\r\n  MonthView,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  EditRecurrenceMenu,\r\n  DragDropProvider,\r\n  WeekView,\r\n  DayView,\r\n  DateNavigator,\r\n  ViewSwitcher,\r\n  TodayButton,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport Swal from \"sweetalert2\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n// import {owners}  from \"./appoinments\";\r\n\r\nfunction Demo() {\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n  const history = useHistory();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [assignmentdata, setAssignmentData] = useState([]);\r\n  const [owner, setOwner] = useState([]);\r\n\r\n  const [baseMode, SetbaseMode] = useState(\"avc\");\r\n  const [transcode, SetTranscode] = useState(\"interop\");\r\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\r\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\r\n  var date = new Date();\r\n\r\n  function convert(str) {\r\n    var date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n    return [date.getFullYear(), mnth, day].join(\"-\");\r\n  }\r\n  const [currentDate, setCurrentDate] = useState(convert(date));\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getAssignmentNo();\r\n    getUsers();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/videoScheduler?tl_id=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n        console.log(\"res -\", res);\r\n        var a = res.data.result.items;\r\n        if (a) {\r\n          setData(a.map(mapAppointmentData));\r\n        }\r\n      });\r\n  };\r\n\r\n  const mapAppointmentData = (appointment) => ({\r\n    id: appointment.id,\r\n    startDate: appointment.start,\r\n    endDate: appointment.end,\r\n    title: appointment.title,\r\n    notes: appointment.summary,\r\n    question_id: appointment.question_id,\r\n    vstart: appointment.vstart,\r\n    vend: appointment.vend,\r\n    user: appointment.user.split(','),\r\n    owner: appointment.owner,\r\n  });\r\n\r\n  const getAssignmentNo = () => {\r\n    axios\r\n      .get(`${baseUrl}/admin/getAllQuery?uid=${JSON.parse(userId)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          var data = res.data.result;\r\n\r\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\r\n            text,\r\n            ...rest,\r\n          }));\r\n          console.log(\"dt--\", newArrayOfObj);\r\n          setAssignmentData(newArrayOfObj);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getUsers = () => {\r\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        var data = res.data.result;\r\n        const newOwners = data.map(({ name: text, ...rest }) => ({\r\n          text,\r\n          ...rest,\r\n        }));\r\n        console.log(\"dt--\", newOwners);\r\n        setOwner(newOwners);\r\n      }\r\n    });\r\n  };\r\n\r\n  const resources = [\r\n    {\r\n      fieldName: \"question_id\",\r\n      title: \"Query No\",\r\n      instances: assignmentdata,\r\n    },\r\n    {\r\n      fieldName: \"user\",\r\n      title: \"Users\",\r\n      instances: owner,\r\n      allowMultiple: true,\r\n    },\r\n  ];\r\n\r\n  const styles = (theme) => ({\r\n    button: {\r\n      color: theme.palette.background.default,\r\n      padding: 0,\r\n    },\r\n    text: {\r\n      paddingTop: theme.spacing(1),\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n  });\r\n\r\n  const AppointmentBase = ({\r\n    children,\r\n    data,\r\n    onClick,\r\n    classes,\r\n    onAppointmentMetaChange,\r\n    ...restProps\r\n  }) => (\r\n    <Appointments.Appointment {...restProps}>\r\n      <div style={{ display: \"flex\" }}>\r\n        {\r\n          // console.log(\"children\",children)\r\n          console.log(\"data\", data)\r\n\r\n        }\r\n        <div>{children}</div>\r\n        <div\r\n          onClick={() => handleJoin(data.question_id)}\r\n        ><i\r\n          class=\"fa fa-video-camera\"\r\n          style={{ fontSize: \"12px\", color: \"#fff\" }}\r\n        ></i>\r\n        </div>\r\n      </div>\r\n    </Appointments.Appointment>\r\n  );\r\n\r\n\r\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\r\n    AppointmentBase\r\n  );\r\n\r\n  const myAppointment = (props) => {\r\n    return (\r\n      <Appointment\r\n        {...props}\r\n      // onAppointmentMetaChange={onAppointmentMetaChange}\r\n      />\r\n    );\r\n  };\r\n\r\n  //handleJoin\r\n  const handleJoin = (id) => {\r\n    console.log(\"id\", id);\r\n\r\n    Cookies.set(\"channel_2\", id);\r\n    Cookies.set(\"baseMode_2\", baseMode);\r\n    Cookies.set(\"transcode_2\", transcode);\r\n    Cookies.set(\"attendeeMode_2\", attendeeMode);\r\n    Cookies.set(\"videoProfile_2\", videoProfile);\r\n    history.push(\"/teamleader/meeting\");\r\n  };\r\n\r\n  const changeFormat = (d) => {\r\n    console.log(\"d ---\", d);\r\n\r\n    if (typeof d === 'object') {\r\n      console.log(\"GMT\");\r\n      return (\r\n        d.getFullYear() +\r\n        \"-\" +\r\n        (d.getMonth() + 1) +\r\n        \"-\" +\r\n        d.getDate() +\r\n        \" \" +\r\n        d.toString().split(\" \")[4]\r\n      );\r\n    } else {\r\n      console.log(\"d\");\r\n      return d;\r\n    }\r\n  };\r\n\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n    if (added) {\r\n      console.log(\"added - \", added);\r\n\r\n      var startDate = added.startDate;\r\n      var endDate = added.endDate;\r\n\r\n      let formData = new FormData();\r\n      formData.append(\"customer_id\", JSON.parse(userId));\r\n      formData.append(\"question_id\", added.question_id);\r\n      formData.append(\"time\", changeFormat(startDate));\r\n      formData.append(\"endtime\", changeFormat(endDate));\r\n      formData.append(\"title\", added.title);\r\n      formData.append(\"notes\", added.notes);\r\n      formData.append(\"user\", added.user);\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/PostCallSchedule`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n          console.log(\"res post-\", response);\r\n          if (response.data.code === 1) {\r\n            var msg = \"Successfully added\"\r\n            Alerts.SuccessNormal(msg)\r\n          } else if (response.data.code === 0) {\r\n            var msg = response.data.result\r\n            Alerts.ErrorNormal(msg)\r\n          }\r\n\r\n          getData();\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"erroror - \", error);\r\n        });\r\n    }\r\n    if (changed) {\r\n      console.log(\"changed\", changed);\r\n\r\n      const data2 = data.map((appointment) =>\r\n        changed[appointment.id]\r\n          ? { ...appointment, ...changed[appointment.id] }\r\n          : appointment\r\n      );\r\n      console.log(\"data2 - \", data2);\r\n\r\n      let valuesArray = Object.entries(changed);\r\n      let id = valuesArray[0][0];\r\n      console.log(\"id -\", id);\r\n      let dataIttem;\r\n\r\n      for (var i = 0; i < data2.length; i++) {\r\n        if (data2[i].id === id) {\r\n          dataIttem = data2[i];\r\n        }\r\n      }\r\n      console.log(\"owner\", dataIttem.owner);\r\n\r\n      var a = dataIttem.startDate\r\n      var b = dataIttem.endDate\r\n\r\n\r\n      if (!dataIttem.owner) {\r\n        var variable = \"Error\"\r\n        Alerts.ErrorEdit(variable)\r\n        return false;\r\n      }\r\n      let formData = new FormData();\r\n      formData.append(\"customer_id\", JSON.parse(userId));\r\n      formData.append(\"question_id\", dataIttem.question_id);\r\n      formData.append(\"id\", dataIttem.id);\r\n      formData.append(\"time\", changeFormat(a));\r\n      formData.append(\"endtime\", changeFormat(b));\r\n      formData.append(\"title\", dataIttem.title);\r\n      formData.append(\"notes\", dataIttem.notes);\r\n      formData.append(\"user\", dataIttem.user);\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/PostCallSchedule`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n          console.log(\"res post-\", response);\r\n\r\n          if (response.data.code === 1) {\r\n            var msg = \"Successfully updated\"\r\n            Alerts.SuccessNormal(msg)\r\n          }\r\n          else if (response.data.code === 0) {\r\n            console.log(\"call 0 code\")\r\n            var msg = response.data.result\r\n            Alerts.ErrorNormal(msg)\r\n          }\r\n          getData();\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"erroror - \", error);\r\n        });\r\n    }\r\n\r\n    if (deleted !== undefined) {\r\n      console.log(\"deleted f\", deleted);\r\n\r\n      var value;\r\n      data.filter((data) => {\r\n        if (data.id == deleted) {\r\n          console.log(\"owner\", data.owner);\r\n          value = data.owner\r\n        }\r\n      });\r\n\r\n      // console.log(\"value\", value);\r\n      if (!value) {\r\n        var variable = \"Error\"\r\n        Alerts.ErrorDelete(variable)\r\n        return false;\r\n      }\r\n\r\n      Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"It will be permanently deleted !\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          axios.get(`${baseUrl}/tl/freeslot?id=${deleted}`).then((res) => {\r\n            console.log(\"res -\", res);\r\n            if (res.data.code === 1) {\r\n              Swal.fire(\"Deleted!\", \"Your Schedule has been deleted.\", \"success\");\r\n              getData();\r\n            } else {\r\n              Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Scheduler data={data} height={660}>\r\n        <ViewState\r\n          defaultCurrentDate={currentDate}\r\n          defaultCurrentViewName=\"Day\"\r\n        />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <EditRecurrenceMenu />\r\n\r\n        <DayView startDayHour={10} endDayHour={24} />\r\n        <WeekView startDayHour={10} endDayHour={19} />\r\n        <Appointments appointmentComponent={myAppointment} />\r\n\r\n        <Toolbar />\r\n        <DateNavigator />\r\n        <TodayButton />\r\n        <ViewSwitcher />\r\n\r\n        <AppointmentTooltip showOpenButton />\r\n        <AppointmentForm />\r\n\r\n        <Resources\r\n          data={resources}\r\n        // mainResourceName=\"question_id\"\r\n        />\r\n      </Scheduler>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Demo;\r\n\r\n\r\n\r\n// const styles = {\r\n//   toolbarRoot: {\r\n//     position: \"relative\",\r\n//   },\r\n//   progress: {\r\n//     position: \"absolute\",\r\n//     width: \"100%\",\r\n//     bottom: 0,\r\n//     left: 0,\r\n//   },\r\n// };\r\n\r\n// const ToolbarWithLoading = withStyles(styles, { name: \"Toolbar\" })(\r\n//   ({ children, classes, ...restProps }) => (\r\n//     <div className={classes.toolbarRoot}>\r\n//       <Toolbar.Root {...restProps}>{children}</Toolbar.Root>\r\n//       <LinearProgress className={classes.progress} />\r\n//     </div>\r\n//   )\r\n// );\r\n\r\n// const newArrayOfObj = data.map(\r\n//   ({ assign_no: text, q_id: id, id: d_id, ...rest }) => ({\r\n//     text,\r\n//     id,\r\n//     d_id,\r\n//     ...rest,\r\n//   })\r\n// );\r\n// console.log(\"dt--\", newArrayOfObj);","E:\\Mazars_Pannel\\src\\common\\common.js",["1652","1653"],"//change date format\r\n\r\nconst changeFormateDate = (oldDate) => {\r\n  console.log(\"date\", oldDate);\r\n  if (oldDate == null) {\r\n    return null;\r\n  }\r\n  return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n};\r\n\r\n\r\n\r\n\r\n//remove time with date\r\nconst removeTime = (oldDate) => {\r\n  console.log(\"RemoveTime - \", oldDate);\r\n\r\n  if (oldDate == null) {\r\n    return null;\r\n  }\r\n  return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n};\r\n\r\n\r\n\r\n\r\n//removeDATE with TIME\r\nconst removeDate = (oldDate) => {\r\n  console.log(\"RemoveTime - \", oldDate);\r\n\r\n  if (oldDate == null) {\r\n    return null;\r\n  } else {\r\n    var split = oldDate.split(\" \");\r\n    var a = split[0];\r\n    var b = split[1];\r\n    return b;\r\n  }\r\n};\r\n\r\n\r\n//capitalizeFirstLetter\r\nfunction capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\n\r\nexport default {\r\n  changeFormateDate,\r\n  removeTime,\r\n  removeDate,\r\n  capitalizeFirstLetter\r\n};\r\n\r\n// var updatedate = oldDate.split(\" \")[0];\r\n// var updatedate = oldDate.slice(0, 10);\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\meeting\\index.jsx",[],"E:\\Mazars_Pannel\\src\\components\\Records\\Records.js",[],"E:\\Mazars_Pannel\\src\\pages\\TL\\AssignmentTab\\FinalReportUpload.js",["1654","1655","1656","1657","1658"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nfunction DraftReport({ fianlModal, uploadFinalReport, id, getAssignmentList }) {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset } = useForm();\r\n\r\n\r\n  console.log(\"id-\", id)\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n\r\n    var uploadImg = value.p_final;\r\n    if (uploadImg) {\r\n      for (var i = 0; i < uploadImg.length; i++) {\r\n        let file = uploadImg[i];\r\n        formData.append(\"final_report[]\", file);\r\n      }\r\n    }\r\n\r\n\r\n    formData.append(\"id\", id.id);\r\n    formData.append(\"q_id\", id.q_id);\r\n    axios\r\n      .post(`${baseUrl}/tl/UploadReport`, formData, {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n\r\n        var message = response.data.message\r\n        if (message.invalid) {\r\n            Swal.fire({\r\n              title: 'Error !',\r\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n            })\r\n          } else if (message.faill && message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n              icon: 'success',\r\n            })\r\n          } else if (message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p>${message.success}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n          else if (message.faill) {\r\n            Swal.fire({\r\n              title: 'Error !',\r\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n              icon: 'error',\r\n            })\r\n          }\r\n\r\n\r\n        getAssignmentList();\r\n        uploadFinalReport();\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={fianlModal} toggle={uploadFinalReport} size=\"md\">\r\n        <ModalHeader toggle={uploadFinalReport}>Final Report</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <label>Upload Multiple Report</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"p_final\"\r\n                ref={register}\r\n                className=\"form-control-file manage_file\"\r\n                multiple\r\n              />\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Upload\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DraftReport;\r\n\r\n // formData.append(\"final_report\", value.p_final[0]);","E:\\Mazars_Pannel\\src\\pages\\TL\\AssignmentTab\\DraftReportUpload.js",["1659","1660","1661","1662","1663"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\n// import Alerts from \"../../../common/Alerts\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\n\r\n\r\nfunction DraftReport({ draftModal, uploadDraftReport, id, getAssignmentList }) {\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset } = useForm();\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    var uploadImg = value.p_draft;\r\n    console.log(\"uploadImg\", uploadImg);\r\n\r\n    if (uploadImg) {\r\n      for (var i = 0; i < uploadImg.length; i++) {\r\n        let file = uploadImg[i];\r\n        formData.append(\"draft_report[]\", file);\r\n      }\r\n    }\r\n\r\n    formData.append(\"id\", id);\r\n    axios.post(`${baseUrl}/tl/UploadReport`, formData, {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    }).then(response => {\r\n      console.log(response)\r\n\r\n      var message = response.data.message\r\n      if (message.invalid) {\r\n        Swal.fire({\r\n          title: 'Error !',\r\n          html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n        })\r\n      } else if (message.faill && message.success) {\r\n        Swal.fire({\r\n          title: 'Success',\r\n          html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n          icon: 'success',\r\n        })\r\n      } else if (message.success) {\r\n        Swal.fire({\r\n          title: 'Success',\r\n          html: `<p>${message.success}</p>`,\r\n          icon: 'success',\r\n        })\r\n      }\r\n      else if (message.faill) {\r\n        Swal.fire({\r\n          title: 'Error !',\r\n          html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n          icon: 'error',\r\n        })\r\n      }\r\n      getAssignmentList();\r\n      uploadDraftReport();\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={draftModal} toggle={uploadDraftReport} size=\"md\">\r\n        <ModalHeader toggle={uploadDraftReport}>Draft Report</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <label>Upload Multiple Report</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"p_draft\"\r\n                ref={register}\r\n                className=\"form-control-file manage_file\"\r\n                multiple\r\n              />\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Upload\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DraftReport;\r\n\r\n\r\n\r\n\r\n // let formData = new FormData();\r\n      // formData.append(\"draft_report\", value.p_draft[0]);\r\n      // formData.append(\"id\", id);\r\n\r\n      // axios({\r\n      //   method: \"POST\",\r\n      //   headers: {\r\n      //     'content-type': 'multipart/form-data'\r\n      //   },\r\n      //   url: `${baseUrl}/tl/UploadReport`,\r\n      //   data: formData,\r\n      // })\r\n      //   .then(function (response) {\r\n      //     console.log(\"res-\", response);  \r\n      //     uploadDraftReport();            \r\n      //   })\r\n      //   .catch((error) => {\r\n      //     console.log(\"erroror - \", error);\r\n      //  });\r\n\r\n\r\n// axios.post(`${baseUrl}/tl/UploadReport`, formData, {\r\n//   headers: {\r\n//     'content-type': 'multipart/form-data'\r\n//   }\r\n// }).then(response => {\r\n//   console.log(response.data)\r\n// });\r\n\r\n\r\n// formData.append('draft_report',{\r\n//   uri: value.p_draft[0].uri,\r\n//   name: value.p_draft[0].name,\r\n//   type: value.p_draft[0].type}\r\n// );\r\n\r\n\r\n\r\n// axios({\r\n//   method: \"post\",\r\n//   url: \"myurl\",\r\n//   data: bodyFormData,\r\n//   headers: { \"Content-Type\": \"multipart/form-data\" },\r\n// })\r\n//   .then(function (response) {\r\n\r\n//     console.log(response);\r\n//   })\r\n//   .catch(function (response) {\r\n\r\n//     console.log(response);\r\n//   });\r\n\r\n    // formData.append(\"draft_report[]\", value.p_draft[0]);","E:\\Mazars_Pannel\\src\\components\\Admin-Header\\Admin-Header.js",["1664","1665"],"import React from \"react\";\r\nimport \"../../assets/css/style.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport NavWrapper from \"./NavWrapper\";\r\n\r\nfunction AdminHeader({ custUserId, adminUserId, TLuserId, TPuserId }) {\r\n  let history = useHistory();\r\n  // const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  const custLogout = () => {\r\n    localStorage.removeItem(\"userid\");\r\n    localStorage.removeItem(\"name\");\r\n    localStorage.removeItem(\"uid\");\r\n    localStorage.removeItem(\"category\");\r\n    history.push(\"/customer/signin\");\r\n  };\r\n\r\n  const adminLogout = () => {\r\n    localStorage.removeItem(\"adminkey\");\r\n    localStorage.removeItem(\"count_PFA\");\r\n    history.push(\"/admin/login\");\r\n  };\r\n\r\n  const tlLogout = () => {\r\n    localStorage.removeItem(\"tlkey\");\r\n    history.push(\"/teamleader/login\");\r\n  };\r\n\r\n  const tpLogout = () => {\r\n    localStorage.removeItem(\"tpkey\");\r\n    history.push(\"/taxprofessional/login\");\r\n  };\r\n\r\n  const nm = window.localStorage.getItem(\"name\");\r\n  console.log(name);\r\n  var name = JSON.parse(nm);\r\n  // const nm = name.split(\"\")[1].toUpperCase();\r\n  // var a = res[1].toUpperCase()\r\n  // console.log(nm)\r\n\r\n  return (\r\n    <div>\r\n      <nav\r\n        class=\"header-navbar navbar-expand-md navbar navbar-with-menu navbar-without-dd-arrow fixed-top navbar-semi-light\"\r\n        sty\r\n      >\r\n        {custUserId && (\r\n          <NavWrapper color=\"#5E96AE\" logout={custLogout} \r\n          name=\"customer\"\r\n           />\r\n        )}\r\n\r\n        {adminUserId && (\r\n          <NavWrapper color=\"#262d47\" logout={adminLogout}\r\n           name=\"admin\"\r\n            />\r\n        )}\r\n\r\n        {TLuserId && <NavWrapper color=\"#BC85A3\" logout={tlLogout} \r\n        name=\"teamleader\" \r\n        />}\r\n\r\n        {TPuserId && <NavWrapper color=\"#9799BA\" logout={tpLogout} \r\n        name=\"taxprofessional\" \r\n        />}\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminHeader;\r\n\r\n// {adminUserId && (\r\n//   <ul class=\"nav navbar-nav float-right\">\r\n//     <li class=\"dropdown dropdown-user nav-item\">\r\n//       <a\r\n//         class=\"dropdown-toggle nav-link dropdown-user-link\"\r\n//         href=\"#\"\r\n//         data-toggle=\"dropdown\"\r\n//         aria-expanded=\"false\"\r\n//       >\r\n//         <span class=\"pr-2\">Admin</span>\r\n//         <span class=\"avatar avatar-online\">\r\n//           <img\r\n//             src=\"https://cdn1.vectorstock.com/i/1000x1000/40/30/user-glyph-icon-web-and-mobile-admin-sign-vector-18444030.jpg\"\r\n//             alt=\"avatar\"\r\n//           />\r\n//           <i style={{ paddingLeft: \"6px\" }}></i>\r\n//         </span>\r\n//       </a>\r\n\r\n//       <div class=\"dropdown-menu dropdown-menu-right\">\r\n//         <div class=\"arrow_box_right\">\r\n//           <p\r\n//             class=\"dropdown-item\"\r\n//             onClick={custLogout}\r\n//             style={{ cursor: \"pointer\" }}\r\n//           >\r\n//             <i class=\"fa fa-sign-out\"></i>\r\n//             Logout\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </li>\r\n//   </ul>\r\n// )}\r\n","E:\\Mazars_Pannel\\src\\components\\Admin-Footer\\Admin-Footer.js",[],"E:\\Mazars_Pannel\\src\\components\\Admin-Sidebar\\Admin-Sidebar.js",["1666","1667"],"import { NavLink } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport { Badge } from \"reactstrap\";\r\n\r\nfunction Sidebar({ adminDashboard, custDashboard, TLDashboard, TPDashboard }) {\r\n  const [toggleState, setToggleState] = useState(false);\r\n\r\n  const toggleTab = (index) => {\r\n    console.log(index);\r\n    setToggleState(index);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        class=\"main-menu menu-fixed menu-light menu-accordion  menu-shadow \"\r\n        data-scroll-to-active=\"true\"\r\n        data-img=\"https://themeselection.com/demo/ chameleon-free-bootstrap-admin-template/theme-assets/images/backgrounds/02.jpg\"\r\n      >\r\n        <div class=\"navbar-header\">\r\n          <ul class=\"nav navbar-nav flex-row\">\r\n            <li class=\"nav-item mr-auto\">\r\n              <a class=\"navbar-brand\" href=\"questionnaire.html\">\r\n                <img\r\n                  class=\"brand-logo\"\r\n                  alt=\"Chameleon admin logo\"\r\n                  src=\"https://themeselection.com/demo/chameleon-free-bootstrap-admin-template/theme-assets/images/logo/logo.png\"\r\n                />\r\n                <h3 class=\"brand-text\">Mazars</h3>\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item d-md-none\">\r\n              <a class=\"nav-link close-navbar\">\r\n                <i class=\"fa fa-times\"></i>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div class=\"main-menu-content\">\r\n          {custDashboard && (\r\n            <ul\r\n              class=\"navigation navigation-main\"\r\n              id=\"main-menu-navigation\"\r\n              data-menu=\"menu-navigation\"\r\n            >\r\n              <li class=\"nav-item active\">\r\n                <NavLink to={\"/customer/dashboard\"}>\r\n                  <i class=\"fa fa-home\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Dashboard\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class={toggleState && \"\"} onClick={() => toggleTab(\"active\")}>\r\n                <NavLink to={\"/customer/queries\"}>\r\n                  <i class=\"fa fa-clone\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Queries\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/customer/proposal\"}>\r\n                  <i class=\"fa fa-envelope\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Proposal\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/customer/paymentstatus\"}>\r\n                  <i class=\"fa fa-file-text\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Payment Status\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/customer/assignment\"}>\r\n                  <i class=\"fa fa-file\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Assignments\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/customer/schedule\"}>\r\n                  <i class=\"fa fa-rss-square\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Schedule\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/customer/message\"}>\r\n                  <i class=\"fa fa-envelope\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Message\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/customer/feedback-data\"}>\r\n                  <i class=\"fa fa-rss-square\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Feedback\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n            </ul>\r\n          )}\r\n\r\n          {adminDashboard && (\r\n            <ul\r\n              class=\"navigation navigation-main\"\r\n              id=\"main-menu-navigation\"\r\n              data-menu=\"menu-navigation\"\r\n            >\r\n              <li class=\"active nav-item\">\r\n                <NavLink to={\"/admin/dashboard\"}>\r\n                  <i class=\"fa fa-home\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Dashboard\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/queriestab\"}>\r\n                  <i class=\"fa fa-clone\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Queries\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/proposal\"}>\r\n                  <i class=\"fa fa-envelope\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Proposals\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/paymentstatus\"}>\r\n                  <i class=\"fa fa-file-text\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Payment Status\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/assignment\"}>\r\n                  <i class=\"fa fa-file\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Assignments\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/schedule\"}>\r\n                  <i class=\"fa fa-rss-square\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Schedule\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/message\"}>\r\n                  <i class=\"fa fa-envelope\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Message\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/teamleaders\"}>\r\n                  <i class=\"fa fa-users\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Team Leaders\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/taxprofessionals\"}>\r\n                  <i class=\"fa fa-users\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Tax Professionals\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/admin/feedback\"}>\r\n                  <i class=\"fa fa-file-text\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Feedback\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          )}\r\n\r\n          {TLDashboard && (\r\n            <ul\r\n              class=\"navigation navigation-main\"\r\n              id=\"main-menu-navigation\"\r\n              data-menu=\"menu-navigation\"\r\n            >\r\n              <li class=\"active nav-item\">\r\n                <NavLink to={\"/teamleader/dashboard\"}>\r\n                  <i class=\"fa fa-home\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Dashboard\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/teamleader/queriestab\"}>\r\n                  <i class=\"fa fa-clone\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Queries\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/teamleader/proposal\"}>\r\n                  <i class=\"fa fa-envelope\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Proposal\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/teamleader/paymentstatus\"}>\r\n                  <i class=\"fa fa-file-text\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Payment Status\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/teamleader/assignment\"}>\r\n                  <i class=\"fa fa-file\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Assignments\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/teamleader/schedule\"}>\r\n                  <i class=\"fa fa-rss-square\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    schedule\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/teamleader/message\"}>\r\n                  <i class=\"fa fa-envelope\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Message\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/teamleader/addteamprof\"}>\r\n                  <i class=\"fa fa-users\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    View T.P\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/teamleader/feedback\"}>\r\n                  <i class=\"fa fa-file-text\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Feedback\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              {/* <li class=\"nav-item\">\r\n                <NavLink to={\"/teamleader/queriestab2\"}>\r\n                  <i class=\"fa fa-clone\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Queries test\r\n                  </span>\r\n                </NavLink>\r\n              </li> */}\r\n            </ul>\r\n          )}\r\n\r\n          {TPDashboard && (\r\n            <ul\r\n              class=\"navigation navigation-main\"\r\n              id=\"main-menu-navigation\"\r\n              data-menu=\"menu-navigation\"\r\n            >\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/dashboard\"}>\r\n                  <i class=\"fa fa-clone\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Dashboard\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/queriestab\"}>\r\n                  <i class=\"fa fa-clone\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Queries\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <NavLink to={\"/taxprofessional/proposal\"}>\r\n                  <i class=\"fa fa-envelope\"></i>\r\n                  <span class=\"menu-title\" data-i18n=\"\">\r\n                    Proposal\r\n                  </span>\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n        <div class=\"navigation-background\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","E:\\Mazars_Pannel\\src\\components\\Search-Filter\\CustomerFilter.js",["1668","1669","1670","1671","1672","1673","1674","1675","1676","1677","1678","1679","1680","1681","1682","1683","1684","1685","1686","1687","1688"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Select } from \"antd\";\r\n\r\nfunction CustomerFilter(props) {\r\n  const { Option } = Select;\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n\r\n  const { records,\r\n    setRecords, setData, getData, id,\r\n    query,\r\n    InprogressAllocation,\r\n    InprogressQueryProposal,\r\n    DeclinedQuery,\r\n\r\n    proposal,\r\n    inprogressProposal,\r\n    acceptedProposal,\r\n    declinedProposal,\r\n    paymentStatus,\r\n    assignment } = props;\r\n\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  console.log(\"current_date :\", current_date);\r\n  const [item] = useState(current_date);\r\n\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n    console.log(`sub-cat ${value}`);\r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n    console.log(\"resetCategory ..\");\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setTax2([]);\r\n    getData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n    console.log(\"resetData ..\");\r\n    reset();\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getData();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(\"data :\", data);\r\n    console.log(\"store2 :\", store2);\r\n\r\n    if (query == \"query\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (InprogressAllocation == \"InprogressAllocation\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (InprogressQueryProposal == \"InprogressQueryProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/incompleteAssignments?uid=${JSON.parse(id)}&status=2&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n\r\n    if (DeclinedQuery == \"DeclinedQuery\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/declinedQueries?uid=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&pcat_id=${selectedData}&status=${data.p_status}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n\r\n    if (proposal == \"proposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (inprogressProposal == \"inprogressProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (acceptedProposal == \"acceptedProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=2&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (declinedProposal == \"declinedProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/getProposals?uid=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=3pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n\r\n    if (assignment == \"assignment\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/customers/completeAssignments?user=${JSON.parse(\r\n            id\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (paymentStatus == \"paymentStatus\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(id)}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 d-flex\">\r\n          <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div class=\"form-inline\">\r\n                <div class=\"form-group mb-2\">\r\n                  <Select\r\n                    style={{ width: 130 }}\r\n                    placeholder=\"Select Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleCategory}\r\n                    value={selectedData}\r\n                  >\r\n                    <Option value=\"1\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                    </Option>\r\n                    <Option value=\"2\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                    </Option>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <Select\r\n                    mode=\"multiple\"\r\n                    style={{ width: 250 }}\r\n                    placeholder=\"Select Sub Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleSubCategory}\r\n                    value={store2}\r\n                    allowClear\r\n                  >\r\n                    {tax2.map((p, index) => (\r\n                      <Option value={p.id} key={index}>\r\n                        {p.details}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mb-2 ml-3\"\r\n                    onClick={resetCategory}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">From</label>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateFrom\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">To</label>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateTo\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    defaultValue={item}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  {query == \"query\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress Queries</option>\r\n                      <option value=\"2\">Completed Queries</option>\r\n                      <option value=\"3\">Declined Queries</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {InprogressAllocation == \"InprogressAllocation\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Allocation</option>\r\n                      <option value=\"5\">Inprogress; Proposals</option>\r\n                      <option value=\"6\">Inprogress; Assignments</option>\r\n                    </select>\r\n                  )}\r\n\r\n\r\n                  {DeclinedQuery == \"DeclinedQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Admin Declined; Queries</option>\r\n                      <option value=\"2\">Customer Declined; Queries</option>\r\n                      <option value=\"3\">Customer Declined; Proposals</option>\r\n                      <option value=\"4\">Customer Declined; Payment</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {proposal == \"proposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress Proposals</option>\r\n                      <option value=\"2\">Accepted Proposals</option>\r\n                      <option value=\"3\">Declined Proposals</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {inprogressProposal == \"inprogressProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Preparation</option>\r\n                      <option value=\"5\"> Inprogress; Acceptance</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {paymentStatus == \"paymentStatus\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Unpaid</option>\r\n                      <option value=\"2\">Paid</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {assignment == \"assignment\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress</option>\r\n                      <option value=\"2\">Completed</option>\r\n                      <option value=\"3\">Payment Declined</option>\r\n                    </select>\r\n                  )}\r\n\r\n                </div>\r\n\r\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                  Search\r\n                </button>\r\n                <Reset />\r\n\r\n                {/* <div class=\"form-group mx-sm-2 mb-2\">\r\n                  <label className=\"form-select form-control\"\r\n                  >Total Records : {records}</label>\r\n                </div> */}\r\n\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CustomerFilter;\r\n\r\n\r\n","E:\\Mazars_Pannel\\src\\components\\Search-Filter\\tlFilter.js",["1689","1690","1691","1692","1693","1694","1695","1696","1697","1698","1699","1700","1701","1702","1703","1704"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Select } from \"antd\";\r\n\r\nfunction TeamFilter(props) {\r\n  const { Option } = Select;\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n\r\n  const {\r\n    records,\r\n    setRecords,\r\n    setData,\r\n    getData,\r\n    AllQuery,\r\n    pendingForAcceptence,\r\n    InprogressQuery,\r\n    DeclinedQuery,\r\n\r\n    completeAssignment,\r\n    AllProposal,\r\n    InprogressProposal,\r\n    paymentStatus,\r\n    assignment,\r\n  } = props;\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n  const [status1, setStatus1] = useState(1);\r\n\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  console.log(\"current_date :\", current_date);\r\n  const [item] = useState(current_date);\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n    console.log(\"resetCategory ..\");\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setTax2([])\r\n    getData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n    console.log(\"resetData ..\");\r\n    reset();\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setStatus1(1)\r\n    getData();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(\"data :\", data);\r\n    console.log(\"store2 :\", store2);\r\n\r\n    if (AllQuery == \"AllQuery\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n\r\n    if (pendingForAcceptence == \"pendingForAcceptence\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/pendingQues?id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (InprogressQuery == \"InprogressQuery\") {\r\n\r\n      console.log(\"status1\", status1)\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=${status1}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (DeclinedQuery == \"DeclinedQuery\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/declinedQueries?id=${JSON.parse(userid)}&status=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (completeAssignment == \"completeAssignment\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getCompleteQues?id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (AllProposal == \"AllProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getProposalTl?id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (InprogressProposal == \"InprogressProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getProposalTl?id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n\r\n    if (paymentStatus == \"paymentStatus\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 d-flex\">\r\n          <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div class=\"form-inline\">\r\n                <div class=\"form-group mb-2\">\r\n                  <Select\r\n                    style={{ width: 130 }}\r\n                    placeholder=\"Select Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleCategory}\r\n                    value={selectedData}\r\n                  >\r\n                    <Option value=\"1\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                    </Option>\r\n                    <Option value=\"2\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                    </Option>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <Select\r\n                    mode=\"multiple\"\r\n                    style={{ width: 250 }}\r\n                    placeholder=\"Select Sub Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleSubCategory}\r\n                    value={store2}\r\n                    allowClear\r\n                  >\r\n                    {tax2.map((p, index) => (\r\n                      <Option value={p.id} key={index}>\r\n                        {p.details}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mb-2 ml-3\"\r\n                    onClick={resetCategory}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">From</label>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateFrom\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">To</label>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateTo\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    defaultValue={item}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n\r\n                  {AllQuery == \"AllQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress; Queries</option>\r\n                      <option value=\"2\">Completed; Queries</option>\r\n                      <option value=\"3\">Declined; Queries</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {InprogressQuery == \"InprogressQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                      onChange={(e) => setStatus1(e.target.value)}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Allocation</option>\r\n                      <option value=\"5\">Inprogress; Proposals</option>\r\n                      <option value=\"6\">Inprogress; Assignments</option>\r\n                    </select>\r\n                  )}\r\n\r\n\r\n                  {DeclinedQuery == \"DeclinedQuery\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"3\">Customer Declined; Proposals</option>\r\n                      <option value=\"4\">Customer Declined; Payment</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {AllProposal == \"AllProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress; Proposals</option>\r\n                      <option value=\"2\">Accepted; Proposals</option>\r\n                      <option value=\"3\">Customer Declined; Proposals</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {InprogressProposal == \"InprogressProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Preparation</option>\r\n                      <option value=\"5\">Inprogress; Acceptance</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {paymentStatus == \"paymentStatus\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Unpaid</option>\r\n                      <option value=\"2\">Paid</option>\r\n                    </select>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                  Search\r\n                </button>\r\n                <Reset />\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\"\r\n                  >Total Records : {records}</label>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TeamFilter;\r\n","E:\\Mazars_Pannel\\src\\components\\QueryDetails\\AddAdditionalQuery.js",["1705","1706","1707"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Alerts from \"../../common/Alerts\";\r\n\r\nfunction AddAdditionalQuery({ addHandler, addModal, assingNo, getQuery }) {\r\n\r\n  console.log(\"assingNo :\", assingNo);\r\n\r\n  const alert = useAlert();\r\n  const { handleSubmit, register, reset } = useForm();\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", assingNo);\r\n    formData.append(\"upload\", value.p_upload[0]);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/PostAdditionalQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n\r\n          var variable = \"Document Uploaded Successfully\"\r\n          Alerts.SuccessNormal(variable)\r\n          reset();\r\n          getQuery();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={addModal} toggle={addHandler} size=\"md\">\r\n        <ModalHeader toggle={addHandler}>\r\n          UPLOAD DOCUMENTS\r\n          </ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Upload Your Document</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"p_upload\"\r\n                ref={register}\r\n                className=\"form-control-file\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n              <button\r\n                type=\"submit\"\r\n                onClick={addHandler}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddAdditionalQuery;\r\n","E:\\Mazars_Pannel\\src\\components\\QueryDetails\\ProposalDetails.js",["1708","1709","1710","1711","1712","1713","1714","1715","1716","1717","1718"],"import React from \"react\";\r\nimport CommonServices from \"../../common/common\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\n\r\n\r\n\r\nfunction ProposalDetails({\r\n  diaplayProposal,\r\n  diaplayHistory,\r\n  paymentDetails,\r\n  p,\r\n}) {\r\n\r\n\r\n  const {\r\n    amount,\r\n    accepted_amount,\r\n    payment_received,\r\n    cust_accept_date,\r\n    proposal_date,\r\n    description,\r\n\r\n    amount_type,\r\n    amount_fixed,\r\n    amount_hourly,\r\n\r\n    payment_terms,\r\n    no_of_installment,\r\n    installment_amount,\r\n    due_date,\r\n  } = diaplayProposal;\r\n\r\n  const { tlname, date_of_allocation } = diaplayHistory;\r\n\r\n\r\n  console.log(\"installment_amount\", installment_amount.split(','));\r\n\r\n\r\n  const installAmount = (data) => {\r\n    var item = data.split(',')\r\n    console.log(\"item\", item);\r\n\r\n    const dataItem = item.map((p, i) =>\r\n    (\r\n      <>\r\n        <p>{CommonServices.removeTime(p)}</p>\r\n      </>\r\n    ))\r\n    return dataItem;\r\n  }\r\n\r\n\r\n  // console.log(\"payment_terms\", JSON.parse(payment_terms))\r\n  return (\r\n    <>\r\n      <div>\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"black\",\r\n            fontSize: \"18px\",\r\n          }}\r\n        >\r\n          Proposal and Payment Details\r\n        </p>\r\n\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\" style={{ width: \"400px\" }}>Titles</th>\r\n              <th scope=\"col\">Data</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">Date of Allocation</th>\r\n              <td>{CommonServices.changeFormateDate(date_of_allocation)}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Name of Team Leader</th>\r\n              <td>{tlname}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Name of Tax Professional(s)</th>\r\n              <td></td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Date of Proposal</th>\r\n              <td>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                  {CommonServices.removeTime(proposal_date)}\r\n                  {proposal_date && (\r\n                    <a\r\n                      class=\"btn btn-primary btn-sm\"\r\n                      href={`${baseUrl}/customers/dounloadpdf?id=${p.id}`}\r\n                      role=\"button\"\r\n                    >\r\n                      Download\r\n                    </a>\r\n                  )}\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Scope of Work</th>\r\n              <td>{description}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th scope=\"row\">Amount</th>\r\n              <td>\r\n                <tr>\r\n                  <th>Amount Type</th>\r\n                  <th>Price</th>\r\n                </tr>\r\n                <tr>\r\n                  <td>{CommonServices.capitalizeFirstLetter(amount_type)}</td>\r\n                  <td>\r\n                    {\r\n                      amount_type == \"fixed\" ?\r\n                        amount_fixed\r\n                        :\r\n                        amount_type == \"hourly\" ?\r\n                          amount_hourly\r\n                          :\r\n                          amount_type == \"mixed\" ?\r\n                            <div>\r\n                              <p>Fixed : {amount_fixed}</p>\r\n                              <p>Hourly : {amount_hourly}</p>\r\n                            </div>\r\n                            :\r\n                            \"\"\r\n                    }\r\n                  </td>\r\n                </tr>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th scope=\"row\">Payment Terms</th>\r\n              {\r\n                payment_terms == \"lumpsum\" ?\r\n                  <td>\r\n                    <tr>\r\n                      <th>Payment Type</th>\r\n                      <th>Due Dates</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>{CommonServices.capitalizeFirstLetter(payment_terms)}</td>\r\n                      <td>\r\n                        {CommonServices.removeTime(due_date)}\r\n                      </td>\r\n                    </tr>\r\n                  </td>\r\n                  :\r\n                  payment_terms == \"installment\" ?\r\n                    <td>\r\n                      <tr>\r\n                        <th>Payment Type</th>\r\n                        <th>No of Installments</th>\r\n                        <th>Installment Amount</th>\r\n                        <th>Due Dates</th>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>{payment_terms}</td>\r\n                        <td>{no_of_installment}</td>\r\n                        <td>{installAmount(installment_amount)}</td>\r\n                        <td>{installAmount(due_date)}</td>\r\n                      </tr>\r\n                    </td>\r\n                    :\r\n                    \"\"\r\n              }\r\n\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Proposed Amount</th>\r\n              <td>{amount}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Proposal Status</th>\r\n              <td>\r\n                {p.query_status == \"4\" && \"Inprogress\"}\r\n                {p.query_status == \"6\" && \"Declined\"}\r\n                {(p.query_status == \"5\" || p.query_status > 6) && \"Accepted\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Amount Accepted</th>\r\n              <td>{accepted_amount}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Date of Acceptance / Decline</th>\r\n              <td>{CommonServices.removeTime(cust_accept_date)}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Payment History</th>\r\n              <td>\r\n                <tr>\r\n                  <th>Date</th>\r\n                  <th>Amount</th>\r\n                </tr>\r\n                {paymentDetails.map((pay, i) => (\r\n                  <tr>\r\n                    <td>{CommonServices.removeTime(pay.payment_date)}</td>\r\n                    <td>{pay.paid_amount}</td>\r\n                  </tr>\r\n                ))}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Payment Received</th>\r\n              <td>{payment_received}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Payment Due</th>\r\n              <td>{accepted_amount - payment_received}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Payment Outstanding</th>\r\n              <td>{accepted_amount - payment_received}</td>\r\n            </tr>\r\n            {\r\n              p.paid_status == \"2\" &&\r\n              <tr>\r\n                <th scope=\"row\">Payment Decline Date</th>\r\n                <td>{CommonServices.removeTime(p.declined_date)}</td>\r\n              </tr>\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProposalDetails;\r\n","E:\\Mazars_Pannel\\src\\components\\QueryDetails\\AdditionalQuery.js",["1719","1720"],"import React from \"react\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\nfunction AdditionalQuery({ displayQuery }) {\r\n  return (\r\n    <>\r\n      <div>\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"black\",\r\n            fontSize: \"18px\",\r\n          }}\r\n        >\r\n          ADDITIONAL QUERIES\r\n        </p>\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              {/* <th scope=\"col\" style={{ width: \"33.3%\" }}>\r\n                Additional Queries\r\n              </th> */}\r\n              <th scope=\"col\">Date Submission</th>\r\n              <th scope=\"col\">Documents</th>\r\n            </tr>\r\n          </thead>\r\n          {displayQuery.map((p, i) => (\r\n            <tbody>\r\n              <tr key={i}>\r\n                {/* <td>{p.additional_queries}</td> */}\r\n                <td>{CommonServices.changeFormateDate(p.created)}</td>\r\n                <td>\r\n                  {p.upload_doc == \"\" ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <p style={{ display: \"flex\" }}>\r\n                      <a\r\n                        href={`http://65.0.220.156/mazarapi/assets/image/${p.assign_no}/${p.upload_doc}`}\r\n                        target=\"_blank\"\r\n                      >\r\n                        <i class=\"fa fa-photo\"></i>\r\n                      </a>\r\n                      <p style={{ marginLeft: \"15px\" }}>{p.upload_doc}</p>\r\n                    </p>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ))}\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdditionalQuery;\r\n","E:\\Mazars_Pannel\\src\\components\\Search-Filter\\tpfilter.js",["1721","1722","1723","1724","1725"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Select } from \"antd\";\r\n\r\n\r\nfunction TaxProfessionalFilter(props) {\r\n  const { Option } = Select;\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n\r\n  const {\r\n    setData,\r\n    getData,\r\n    inCompleteQuery,\r\n    completeAssignment,\r\n    proposal,\r\n  } = props;\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n    console.log(\"resetCategory ..\");\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    setTax2([])\r\n    getData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n    console.log(\"resetData ..\");\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    reset();\r\n    getData();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(\"data :\", data);\r\n    console.log(\"store2 :\", store2);\r\n\r\n    if (inCompleteQuery == \"inCompleteQuery\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tp/GetIncompleteQues?id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (completeAssignment == \"completeAssignment\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tp/GetCompleteQues?id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (proposal == \"proposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tp/GetIncompleteQues?id=${JSON.parse(\r\n            userid\r\n          )}&cat_id=${store2}&from=${data.p_dateFrom}&to=${\r\n            data.p_dateTo\r\n          }&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 d-flex\">\r\n          <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div class=\"form-inline\">\r\n                <div class=\"form-group mb-2\">\r\n                  <Select\r\n                    style={{ width: 130 }}\r\n                    placeholder=\"Select Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleCategory}\r\n                    value={selectedData}\r\n                  >\r\n                    <Option value=\"1\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                    </Option>\r\n                    <Option value=\"2\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                    </Option>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <Select\r\n                    mode=\"multiple\"\r\n                    style={{ width: 250 }}\r\n                    placeholder=\"Select Sub Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleSubCategory}\r\n                    value={store2}\r\n                    allowClear\r\n                  >\r\n                    {tax2.map((p, index) => (\r\n                      <Option value={p.id} key={index}>\r\n                        {p.details}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n\r\n                <div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mb-2 ml-3\"\r\n                    onClick={resetCategory}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">From</label>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateFrom\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">To</label>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateTo\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  {proposal == \"proposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Accepted</option>\r\n                      <option value=\"2\">Pending</option>\r\n                      <option value=\"3\">Cust Accepted</option>\r\n                      <option value=\"4\">Declined</option>\r\n                    </select>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                  Search\r\n                </button>\r\n                <Reset />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default TaxProfessionalFilter;\r\n","E:\\Mazars_Pannel\\src\\components\\QueryDetails\\DraftReports.js",["1726","1727"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\nfunction DraftReports({ id }) {\r\n\r\n    console.log(\"igg-\", id)\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAssignmentData();\r\n    }, []);\r\n\r\n    const getAssignmentData = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/tl/getDcumentDeail?id=6&type=2`\r\n            )\r\n            .then((res) => {\r\n                if (res) {\r\n                    console.log(\"mmmm-\", res)\r\n                    setAssignmentDisplay(res.data.result);\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <p\r\n                    style={{\r\n                        textAlign: \"center\",\r\n                        color: \"black\",\r\n                        fontSize: \"18px\",\r\n                    }}\r\n                >\r\n                    Draft Reports\r\n                </p>\r\n                <table class=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\" style={{ width: \"400px\" }}>Titles</th>\r\n                            <th scope=\"col\">Data</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th scope=\"row\">Draft Reports</th>\r\n                            <td>\r\n                                <tr>\r\n                                    <th>Date</th>\r\n                                    <th>Name</th>\r\n                                </tr>\r\n                                {assignmentDisplay.map((p, i) => (\r\n                                    <tr>\r\n                                        <td>{CommonServices.removeTime(p.date)}</td>\r\n                                        <td>\r\n                                            <a\r\n                                                href={`http://65.0.220.156/mazarapi/assets/upload/report/${p.name}`}\r\n                                                target=\"_blank\"\r\n                                            >\r\n                                                {p.name}\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DraftReports;\r\n","E:\\Mazars_Pannel\\src\\components\\QueryDetails\\Feedback.js",["1728"],"import React, { useState } from \"react\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\n\r\nfunction Feedback({ feedback }) {\r\n    console.log(\"feedback\", feedback);\r\n\r\n    return (\r\n        <div>\r\n            <p\r\n                style={{\r\n                    textAlign: \"center\",\r\n                    color: \"black\",\r\n                    fontSize: \"18px\",\r\n                }}\r\n            >\r\n                Feedback\r\n            </p>\r\n            <table class=\"table table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{ width: \"80px\" }}>S.No</th>\r\n                        <th style={{ width: \"200px\" }}>Date</th>\r\n                        <th>Feedback</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        feedback.map((p, i) => (\r\n                            <tr>\r\n                                <td>{i + 1}</td>\r\n                                <td style={{ display: \"flex\" }}>\r\n                                    <p>{CommonServices.removeTime(p.created)}</p>\r\n                                    <p style={{ marginLeft: \"15px\" }}>{CommonServices.removeDate(p.created)}</p>\r\n                                </td>\r\n                                <td>{p.feedback}</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Feedback;","E:\\Mazars_Pannel\\src\\views\\AssignmentTab\\ViewAllReport.js",["1729","1730","1731","1732","1733","1734","1735","1736","1737","1738","1739","1740","1741","1742","1743","1744","1745","1746","1747","1748"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, ReportUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"required discussion\"),\r\n});\r\n\r\n\r\nfunction ViewReport({\r\n  reportModal,\r\n  ViewReport,\r\n  report,\r\n  getPendingforAcceptance,\r\n}) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [data, setData] = useState([]);\r\n\r\n\r\n  console.log(\"ass-\", report)\r\n\r\n  useEffect(() => {\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", report);\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/getstagesinfo`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          setData(response.data.result)\r\n          // alert.success(\"Payment Done!\");\r\n          // getProposalData();\r\n          // paymentHandler();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n\r\n  }, [report]);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"md\" scrollable>\r\n        <ModalHeader toggle={ViewReport}>View All Reports</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Document</th>\r\n                <th scope=\"row\">Report Type</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\r\n                    <td>\r\n                      {p.document && (\r\n                        <p style={{ display: \"flex\" }}>\r\n                          <a\r\n                            href={`${ReportUrl}/${report}/${p.document}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\r\n                        </p>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewReport;\r\n","E:\\Mazars_Pannel\\src\\components\\QueryDetails\\AssignmentDetails.js",["1749","1750","1751","1752","1753","1754","1755","1756","1757","1758","1759","1760","1761","1762","1763","1764"],"import React from \"react\";\r\nimport CommonServices from \"../../common/common\";\r\nimport { ReportUrl } from \"../../config/config\";\r\n\r\nfunction AssignmentDetails({ p, diaplayAssignment, diaplayProposal, reports, assingNo }) {\r\n\r\n  const {\r\n    assignment_number,\r\n    assignment_date,\r\n    date_of_delivery,\r\n  } = diaplayAssignment;\r\n\r\n  const { cust_accept_date } = diaplayProposal;\r\n\r\n  const timeTaken = (a, b) => {\r\n    var date2 = CommonServices.removeTime(a);\r\n    var date1 = CommonServices.removeTime(b);\r\n\r\n    console.log(\"a\", date2);\r\n    console.log(\"b\", date1);\r\n\r\n    // var difference = Math.abs(date2 - date1);\r\n    // var days = difference / (1000 * 3600 * 24);\r\n    var difference = Math.round((date2 - date1) / (1000 * 60 * 60 * 24));\r\n    console.log(difference);\r\n    // var difference = date2.getTime() - date1.getTime();\r\n    // return difference;\r\n  };\r\n\r\n  console.log(\"reports\", reports)\r\n  return (\r\n    <>\r\n      <div>\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"black\",\r\n            fontSize: \"18px\",\r\n          }}\r\n        >\r\n          Assignment Details\r\n        </p>\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\" style={{ width: \"400px\" }}>Titles</th>\r\n              <th scope=\"col\">Data</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">Assignment Number</th>\r\n              <td>{assignment_number}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Assignment Date</th>\r\n              <td>{CommonServices.removeTime(assignment_date)}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Proposed Date of Completion</th>\r\n              <td>\r\n                {p.query_status >= 9 ? (\r\n                  <p>{CommonServices.removeTime(p.Exp_Delivery_Date)}</p>\r\n                ) : null}\r\n              </td>\r\n            </tr>\r\n            {/* {p.query_status >= 9 ? ( */}\r\n            <tr>\r\n              <th scope=\"row\">Assignment Status</th>\r\n              <td>\r\n                <tr>\r\n                  <th>Assignment Stage</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n                <tr>\r\n                  <td>Client Discussion</td>\r\n                  <td>{CommonServices.capitalizeFirstLetter(p.client_discussion)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Draft Reports</td>\r\n                  <td>{CommonServices.capitalizeFirstLetter(p.draft_report)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Final Discussion</td>\r\n                  <td>{CommonServices.capitalizeFirstLetter(p.final_discussion)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Delivery of Final Reports</td>\r\n                  <td>{CommonServices.capitalizeFirstLetter(p.delivery_report)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Awaiting Completion</td>\r\n                  {/* <td>{CommonServices.capitalizeFirstLetter(p.other_stage)}</td> */}\r\n                </tr>\r\n              </td>\r\n            </tr>\r\n            {/* ) : null} */}\r\n            <tr>\r\n              <th scope=\"row\">Time taken to complete the assignment</th>\r\n              <td>\r\n                {p.client_discussion == \"completed\" &&\r\n                  p.delivery_report == \"completed\" &&\r\n                  p.draft_report == \"completed\" &&\r\n                  p.final_discussion == \"completed\" &&\r\n                  p.other_stage == \"completed\"\r\n                  ? CommonServices.removeTime(p.final_date)\r\n                  : null}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th scope=\"row\">Reports</th>\r\n              <td>\r\n                {\r\n                  reports.map((p, i) => (\r\n                    <div>\r\n                      <tr>\r\n                        <td>{i + 1}</td>\r\n                        <td>\r\n                          <a\r\n                            href={`${ReportUrl}/${assingNo}/${p.document}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i> {p.document}\r\n                          </a>\r\n                        </td>\r\n                        <td style={{ marginLeft: \"15px\", color: \"green\" }}>\r\n                          {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}\r\n                        </td>\r\n                      </tr>\r\n                    </div>\r\n                  ))\r\n                }\r\n              </td>\r\n            </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AssignmentDetails;\r\n\r\n\r\n// {timeTaken(p.final_date,cust_accept_date)}\r\n\r\n\r\n// function parseDate(str) {\r\n//   var mdy = str.split('/');\r\n//   return new Date(mdy[2], mdy[0]-1, mdy[1]);\r\n// }\r\n\r\n// function datediff(first, second) {\r\n//   // Take the difference between the dates and divide by milliseconds per day.\r\n//   // Round to nearest whole number to deal with DST.\r\n//   return Math.round((second-first)/(1000*60*60*24));\r\n// }\r\n\r\n// alert(datediff(parseDate(first.value), parseDate(second.value)));\r\n\r\n{/* <p>\r\n                        <a\r\n                          href={`${ReportUrl}/${assingNo}/${p.document}`}\r\n                          target=\"_blank\"\r\n                        >\r\n                          <i class=\"fa fa-photo\"></i> {p.document}\r\n                        </a>\r\n\r\n                      </p>\r\n                      <p style={{ marginLeft: \"15px\", color: \"green\" }}>\r\n                        {p.stages_type == 2 && \"Draft report\" || p.stages_type == 3 && \"Final Report\"} \r\n                        </p> */}","E:\\Mazars_Pannel\\src\\views\\AssignmentTab\\PaymentModal.js",["1765","1766","1767","1768","1769","1770","1771","1772","1773","1774","1775","1776","1777","1778"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\n\r\n\r\nfunction PaymentModal({\r\n  addPaymentModal,\r\n  paymentHandler,\r\n  pay,\r\n  getProposalData,\r\n}) {\r\n  const { handleSubmit, register } = useForm();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n\r\n  const { id, amount, accepted_amount, paid_amount,\r\n    payment_terms, no_of_installment, installment_amount,\r\n    due_date, amount_type, amount_fixed, amount_hourly\r\n  } = pay;\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"status\", 8);\r\n    formData.append(\"amount\", value.p_amount);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/PaymentPartialAccept`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n\r\n          var variable = \"Payment Done Successfully \"\r\n          Alerts.SuccessNormal(variable)\r\n\r\n          getProposalData();\r\n          paymentHandler();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  const installAmount = (data) => {\r\n    var item = data.split(',')\r\n    console.log(\"item\", item);\r\n\r\n    const dataItem = item.map((p, i) =>\r\n    (\r\n      <>\r\n        <p>{CommonServices.removeTime(p)}</p>\r\n      </>\r\n    ))\r\n    return dataItem;\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\r\n        <ModalHeader toggle={paymentHandler}>Payment</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <tr>\r\n              <th>Accepted Amount</th>\r\n              <td>{accepted_amount}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Paid Amount</th>\r\n              <td>{paid_amount}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Payment Terms</th>\r\n              {\r\n                payment_terms == \"lumpsum\" ?\r\n                  <td>\r\n                    <tr>\r\n\r\n                      <th>Due Dates</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        {CommonServices.removeTime(due_date)}\r\n                      </td>\r\n                    </tr>\r\n                  </td>\r\n                  :\r\n                  payment_terms == \"installment\" ?\r\n                    <td>\r\n                      <tr>\r\n                        <th>Installment Amount</th>\r\n                        <th>Due Dates</th>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>{installAmount(installment_amount)}</td>\r\n                        <td>{installAmount(due_date)}</td>\r\n                      </tr>\r\n                    </td>\r\n                    :\r\n                    \"\"\r\n              }\r\n            </tr>\r\n\r\n          </table>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            {+accepted_amount == +paid_amount ? null : (\r\n              <div>\r\n                <div className=\"mb-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_amount\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    defaultValue={accepted_amount - paid_amount}\r\n                    placeholder=\"enter amount\"\r\n                  />\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Pay\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n\r\n{/* <tr>\r\n              <th>{amount_type}</th>\r\n              <td>\r\n                {\r\n                  amount_type == \"fixed\" ?\r\n                    amount\r\n                    :\r\n                    amount_type == \"hourly\" ?\r\n                      amount_hourly\r\n                      :\r\n                      amount_type == \"mixed\" ?\r\n                        <div>\r\n                          <p>Fixed : {amount}</p>\r\n                          <p>Hourly : {amount_hourly}</p>\r\n                        </div>\r\n                        :\r\n                        \"\"\r\n                }\r\n              </td>\r\n            </tr> */}","E:\\Mazars_Pannel\\src\\components\\QueryDetails\\BasicQuery.js",["1779","1780","1781","1782"],"import React, { useState, useEffect } from \"react\";\r\nimport CommonServices from \"../../common/common\";\r\nimport { ImageUrl } from \"../../config/config\";\r\n\r\n\r\n\r\nfunction BasicQuery({ p, diaplaySpecific, queryDocs, year, purpose }) {\r\n  // console.log(\"p\", p);\r\n  return (\r\n    <>\r\n      <div>\r\n        <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            color: \"black\",\r\n            fontSize: \"18px\",\r\n          }}\r\n        >\r\n          Basic Query Information\r\n        </p>\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\" style={{ width: \"400px\" }}>Titles</th>\r\n              <th scope=\"col\">Data</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\">Query No</th>\r\n              <td>{p.assign_no}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Query Date</th>\r\n              <td>{CommonServices.changeFormateDate(p.created)}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Customer ID</th>\r\n              <td>{p.user_id}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Category</th>\r\n              <td>{p.cat_name}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Sub- Category</th>\r\n              <td>{p.sub_cat_name}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Name of the Case</th>\r\n              <td>{p.case_name}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Assessment Year(s)</th>\r\n              <td>\r\n                {year.map((p, i) => (\r\n                  <p key={i}>{p.value}</p>\r\n                ))}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Fact of the Case</th>\r\n              <td>{p.fact_case}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Uploaded Documents</th>\r\n              <td>\r\n                {queryDocs.map((p, i) => (\r\n                  <p style={{ display: \"flex\" }}>\r\n                    <a\r\n                      href={`${ImageUrl}/${p.assign_no}/${p.name}`}\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i class=\"fa fa-photo\"></i>\r\n                    </a>\r\n                    <p style={{ marginLeft: \"15px\" }}>{p.name}</p>\r\n                  </p>\r\n                ))}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Specific questions</th>\r\n              <td>\r\n                {diaplaySpecific.map((p, i) => (\r\n                  <div>{i + 1}. {p.text}</div>\r\n                ))}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Purpose for which Opinion is sought</th>\r\n              <td colspan=\"1\">\r\n                {purpose.map((p, i) => (\r\n                  <p key={i}>{p.value}</p>\r\n                ))}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Format in which Opinion is required</th>\r\n              <td colspan=\"1\">\r\n                <p>{p.softcopy_word === \"1\" && \"Softcopy - Word/ Pdf\"}</p>\r\n                <p>\r\n                  {p.softcopy_digitally_assigned === \"1\" &&\r\n                    \"SoftCopy- Digitally Signed\"}\r\n                </p>\r\n\r\n                <p>\r\n                  {p.printout_physically_assigned === \"1\" &&\r\n                    \"Printout- Physically Signed\"}\r\n                </p>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Timelines within which Opinion is Required</th>\r\n              <td colspan=\"1\">{p.Timelines}</td>\r\n            </tr>\r\n            {\r\n              p.query_status == \"-1\" ?\r\n                <tr>\r\n                  <th scope=\"row\">Reasons for Admin Decline Query</th>\r\n                  <td colspan=\"1\">\r\n                    {\r\n                      p.notes\r\n                    }\r\n                  </td>\r\n                </tr>\r\n                : null\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BasicQuery;\r\n","E:\\Mazars_Pannel\\src\\views\\AssignmentTab\\RejectModal.js",["1783","1784","1785","1786","1787"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Alerts from \"../../common/Alerts\";\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"required discussion\"),\r\n});\r\n\r\nfunction RejectedModal({\r\n  rejectModal,\r\n  rejectHandler,\r\n  rejectedItem,\r\n  getPendingforAcceptance,\r\n}) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const alert = useAlert();\r\n\r\n  console.log(\"rejectedItem :\", rejectedItem);\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", rejectedItem.assign_id);\r\n    formData.append(\"query_no\", rejectedItem.assign_no);\r\n    formData.append(\"message\", value.p_chat);\r\n    formData.append(\"type\", 2);\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/draftAccept`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"response-\", response);\r\n        if (response.data.code === 1) {\r\n          \r\n          var variable = \"Submitted Successfully \"\r\n          Alerts.SuccessNormal(variable)\r\n\r\n          getPendingforAcceptance();\r\n          rejectHandler();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={rejectModal} toggle={rejectHandler} size=\"sm\">\r\n        <ModalHeader toggle={rejectHandler}>Discussion Message</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"4\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"enter text here\"\r\n              ></textarea>\r\n\r\n              {errors.p_chat && (\r\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\r\n              )}\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RejectedModal;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\Proposal\\ChatHistory.js",["1788","1789"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nfunction ChatHistory({ chatHandler, addPaymentModal, qno }) {\r\n  const [notification, setNotification] = useState([]);\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n\r\n  useEffect(() => {\r\n    getNotification();\r\n  }, [qno]);\r\n\r\n  const getNotification = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/getNotification?id=${JSON.parse(\r\n          userId\r\n        )}&type=2&q_no=${qno}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setNotification(res.data.result);\r\n        }\r\n      });\r\n  };\r\n\r\n  console.log(\"notification\", notification);\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={chatHandler} size=\"md\">\r\n        <ModalHeader toggle={chatHandler}>Discussion history</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Message</th>\r\n                <th scope=\"row\">Date</th>\r\n              </tr>\r\n            </thead>\r\n            {notification.length > 0\r\n              ? notification.map((p, i) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>{p.message}</td>\r\n                      <td>{p.setdate}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatHistory;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\Message\\PaymentModal.js",["1790","1791","1792","1793"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nfunction PaymentModal({\r\n  addPaymentModal,\r\n  paymentHandler,\r\n  data,\r\n  // getProposalData,\r\n}) {\r\n  const { handleSubmit, register, reset } = useForm();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", id);\r\n    formData.append(\"message_type\",\"information\");\r\n    formData.append(\"message\", value.p_message);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          reset();\r\n          alert.success(\" message successfully send!\");\r\n          paymentHandler()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\r\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\r\n        <ModalBody>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <textarea\r\n                    class=\"form-control\"\r\n                    placeholder=\"Message text here\"\r\n                    rows=\"5\"\r\n                    ref={register}\r\n                    name=\"p_message\"\r\n                  ></textarea>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\EditProposal\\Payment.js",["1794"],"import React from \"react\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\n\r\nexport default class YourComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            values: [],\r\n            dates: [],\r\n            error: \"\"\r\n        };\r\n    }\r\n\r\n    handleChange1(i, e) {\r\n        if (isNaN(e.target.value)) {\r\n            this.setState({ error: \"Please insert only digit\" })\r\n        }\r\n        else {\r\n            this.setState({ error: \"\" })\r\n        }\r\n        this.setState({\r\n            values: { ...this.state.values, [i]: e.target.value }\r\n        },\r\n            () => {\r\n                this.props.paymentAmount(this.state.values)\r\n            })\r\n    }\r\n\r\n\r\n    handleChange2(i, e) {\r\n        this.setState({\r\n            dates: { ...this.state.dates, [i]: e.target.value }\r\n        },\r\n            () => {\r\n                this.props.paymentDate(this.state.dates)\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var amount = this.props.installment_amount\r\n        var date = this.props.due_date\r\n\r\n        const installment_amount = amount.split(',');\r\n        const due_date = date.split(',');\r\n\r\n        // console.log(due_date)\r\n\r\n        var fieldsArray = [];\r\n\r\n        for (var i = 0; i < this.props.installment; i++) {\r\n            fieldsArray.push(\r\n                <div className=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <label>Amount</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name={this.state.values[i]}\r\n                            onChange={this.handleChange1.bind(this, i)}\r\n                            defaultValue={installment_amount[i]}\r\n                        />\r\n                        <p style={{ \"display\": \"block\", \"color\": \"red\" }}>{this.state.error}</p>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"col-md-6\">\r\n                        <label>Due Dates</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            name={this.state.dates[i]}\r\n                            onChange={this.handleChange2.bind(this, i)}\r\n                            defaultValue={due_date[i]}\r\n                        />\r\n                    </div>\r\n                </div >\r\n\r\n            );\r\n        }\r\n\r\n\r\n        console.log(\"values - \", this.state.values);\r\n\r\n        return (\r\n            <div className=\"inputs\">\r\n                {fieldsArray}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\n\r\n\r\n// export default class YourComponent extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             values: [],\r\n//             dates: [],\r\n//         };\r\n//     }\r\n\r\n//     handleChange1(i, e) {\r\n//         this.setState({\r\n//             values: { ...this.state.values, [i]: e.target.value }\r\n//         },\r\n//             () => {\r\n//                 this.props.paymentAmount(this.state.values)\r\n//             })\r\n//     }\r\n\r\n\r\n//     handleChange2(i, e) {\r\n//         this.setState({\r\n//             dates: { ...this.state.dates, [i]: e.target.value }\r\n//         },\r\n//             () => {\r\n//                 this.props.paymentDate(this.state.dates)\r\n//             })\r\n//     }\r\n\r\n\r\n//     render() {\r\n\r\n//         var amount = this.props.installment_amount\r\n//         var date = this.props.due_date\r\n\r\n//         const installment_amount = amount.split(',');\r\n//         const due_date = date.split(',');\r\n\r\n//         // console.log(due_date)\r\n\r\n//         var fieldsArray = [];\r\n\r\n//         for (var i = 0; i < this.props.installment; i++) {\r\n//             fieldsArray.push(\r\n//                 <div className=\"row\">\r\n//                     <div class=\"col-md-6\">\r\n//                         <label>Amount</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             className=\"form-control\"\r\n//                             name={this.state.values[i]}\r\n//                             onChange={this.handleChange1.bind(this, i)}\r\n//                             defaultValue={installment_amount[i]}\r\n//                         />\r\n//                     </div>\r\n//                     <div class=\"col-md-6\">\r\n//                         <label>Due Dates</label>\r\n//                         <input\r\n//                             type=\"date\"\r\n//                             className=\"form-control\"\r\n//                             name={this.state.dates[i]}\r\n//                             onChange={this.handleChange2.bind(this, i)}\r\n//                             defaultValue={due_date[i]}\r\n//                         />\r\n//                     </div>\r\n//                 </div >\r\n\r\n//             );\r\n//         }\r\n\r\n//         console.log(\"values - \", this.state.values);\r\n\r\n//         return (\r\n//             <div className=\"inputs\">\r\n//                 {fieldsArray}\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\QueriesTab\\AllQuery.js",["1795","1796","1797","1798","1799","1800","1801","1802","1803"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\n\r\nfunction AllQuery() {\r\n\r\n    const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n    const [incompleteData, setInCompleteData] = useState([]);\r\n    const [records, setRecords] = useState([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getInCompleteAssingment();\r\n    }, []);\r\n\r\n    const getInCompleteAssingment = () => {\r\n        axios\r\n            .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setInCompleteData(res.data.result);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/teamleader/queries/${row.id}`,\r\n                                index: 1,\r\n                                routes: \"queriestab\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Customer Name\",\r\n            dataField: \"name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"\tExp. Delivery Date\",\r\n            dataField: \"Exp_Delivery_Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.Exp_Delivery_Date);\r\n                var oldDate = row.Exp_Delivery_Date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {row.status}/\r\n                            {\r\n                                row.status == \"Inprogress Query\" ?\r\n                                    <p className=\"inprogress\">\r\n\r\n                                        {row.statusdescription}\r\n                                    </p>\r\n                                    :\r\n                                    row.status == \"Declined Query\" ?\r\n                                        <p className=\"declined\">\r\n\r\n                                            {row.statusdescription}\r\n                                        </p> :\r\n                                        row.status == \"Completed Query\" ?\r\n                                            <p className=\"completed\">\r\n\r\n                                                {row.statusdescription}\r\n                                            </p> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div\r\n                            style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-evenly\",\r\n                                color: \"green\",\r\n                            }}\r\n                        >\r\n                            <Link to={`/teamleader/queryassing/${row.id}`}>\r\n                                {row.tp_status == \"1\" ? (\r\n                                    <div title=\"Assigned\">\r\n                                        <i class=\"fa fa-share\" style={{ color: \"green\" }}></i>\r\n                                    </div>\r\n                                ) :\r\n                                    row.status_code < \"4\" ?\r\n                                        (\r\n                                            <div title=\"Assign to\">\r\n                                                <i class=\"fa fa-share\"></i>\r\n                                            </div>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                }\r\n                            </Link>\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <TeamFilter\r\n                        setData={setInCompleteData}\r\n                        getData={getInCompleteAssingment}\r\n                        AllQuery=\"AllQuery\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={incompleteData}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllQuery;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\SendProposal\\ProposalComponent.js",["1804","1805","1806","1807","1808","1809","1810","1811","1812","1813","1814","1815","1816","1817","1818","1819","1820","1821","1822","1823","1824"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Payment from \"./Payment\";\r\nimport Select from \"react-select\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  misc_1: yup.string().required(\"required misc_1\"),\r\n  misc_2: yup.string().required(\"required proposal description\"),\r\n  p_payable: yup.string().required(\"required payable\"),\r\n});\r\n\r\n\r\nfunction ProposalComponent(props) {\r\n  const { id } = props;\r\n  console.log(id);\r\n\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { handleSubmit, register, reset } = useForm();\r\n\r\n\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [custId, setCustId] = useState(\"\");\r\n  const [custname, setCustName] = useState();\r\n  const [assignId, setAssignID] = useState(\"\");\r\n  const [assingNo, setAssingNo] = useState(\"\");\r\n  const [store, setStore] = useState(null);\r\n  const [diserror, setdiserror] = useState(\"\")\r\n  const [payment, setPayment] = useState([]);\r\n  const [installment, setInstallment] = useState([]);\r\n\r\n  const [amount, setAmount] = useState();\r\n  const [date, setDate] = useState();\r\n\r\n  const [error, setError] = useState('');\r\n\r\n\r\n  const [totalAmount, setTotalAmount] = useState(null);\r\n\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  console.log(\"current_date :\", current_date);\r\n  const [item] = useState(current_date);\r\n\r\n\r\n  useEffect(() => {\r\n    const getQuery = () => {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/pendingTlProposal?tl_id=${JSON.parse(\r\n            userid\r\n          )}&assign_id=${id}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result.length > 0) {\r\n              setAssingNo(res.data.result[0].assign_no);\r\n              setAssignID(res.data.result[0].id);\r\n            }\r\n          }\r\n        });\r\n    };\r\n    getQuery();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\r\n      console.log(\"res\", res);\r\n      setCustName(res.data.name);\r\n      setCustId(res.data.id);\r\n    };\r\n\r\n    getUser();\r\n  }, [id]);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(value);\r\n\r\n    var lumsum = value.p_inst_date\r\n    setDate(lumsum)\r\nconsole.log(lumsum)\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"assign_no\", assingNo);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"type\", \"tl\");\r\n    formData.append(\"id\", JSON.parse(userid));\r\n    formData.append(\"assign_id\", assignId);\r\n    formData.append(\"customer_id\", custId);\r\n    formData.append(\"description\", value.description);\r\n\r\n    formData.append(\"amount_type\", \"fixed\");\r\n    formData.append(\"amount\", value.p_fixed);\r\n    formData.append(\"installment_amount\", amount);\r\n\r\n    formData.append(\"payment_terms\", payment.value);\r\n    formData.append(\"no_of_installment\", installment.value);\r\n\r\n    payment.label == \"lumpsum\" ?\r\n      formData.append(\"due_date\", lumsum) :\r\n      formData.append(\"due_date\", date)\r\n\r\n\r\n    console.log(\"amount -\", amount)\r\n    // console.log(\"date -\", date)\r\n    console.log(\"payment -\", payment.value)\r\n\r\n\r\n    if (payment.value == \"installment\") {\r\n\r\n      let sum = amount.reduce(myFunction)\r\n      function myFunction(total, value) {\r\n        return Number(total) + Number(value);\r\n      }\r\n      console.log(\"sum -\", sum)\r\n      if (value.p_fixed != sum) {\r\n        Alerts.ErrorNormal(`installment amount should be eqaul to ${value.p_fixed}`)\r\n      }\r\n      else {\r\n        axios({\r\n          method: \"POST\",\r\n          url: `${baseUrl}/tl/uploadProposal`,\r\n          data: formData,\r\n        })\r\n          .then(function (response) {\r\n            console.log(\"res-\", response);\r\n            if (response.data.code === 1) {\r\n              reset();\r\n\r\n              var variable = \"Proposal Successfully Sent \"\r\n              Alerts.SuccessNormal(variable)\r\n\r\n              history.push(\"/teamleader/proposal\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"erroror - \", error);\r\n          });\r\n      }\r\n    }\r\n    else {\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/uploadProposal`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n          console.log(\"res-\", response);\r\n          if (response.data.code === 1) {\r\n            reset();\r\n\r\n            var variable = \"Proposal Successfully Sent \"\r\n            Alerts.SuccessNormal(variable)\r\n\r\n            history.push(\"/teamleader/proposal\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"erroror - \", error);\r\n        });\r\n    }\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const paymentAmount = (data) => {\r\n    console.log(\"paymentAmount\", data)\r\n\r\n    var array1 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      console.log(\"val\", value);\r\n      array1.push(value)\r\n    });\r\n    console.log(\"array1\", array1);\r\n\r\n    setAmount(array1);\r\n  };\r\n\r\n  const paymentDate = (data) => {\r\n    console.log(\"paymentDate\", data)\r\n\r\n    var array2 = []\r\n    Object.entries(data).map(([key, value]) => {\r\n      console.log(\"val\", value);\r\n      array2.push(value)\r\n    });\r\n    console.log(\"array2\", array2);\r\n    setDate(array2);\r\n  };\r\n\r\n\r\n  console.log(\"totalAmount\", totalAmount)\r\n\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"val-\", e.target.value);\r\n    if (isNaN(e.target.value)) {\r\n      Alerts.ErrorNormal(\"Please enter only digit\")\r\n    }\r\n    setTotalAmount(e.target.value);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"5\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"7\">\r\n              <div>\r\n                <h4>Prepare Proposal</h4>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <p style={{ color: \"red\" }}>{error}</p>\r\n            <div style={{ display: \"flex\" }}>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Query No.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_assingment\"\r\n                    className=\"form-control\"\r\n                    value={assingNo}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label>Fee</label>\r\n                  <select\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                    name=\"p_type\"\r\n                    onChange={(e) => setStore(e.target.value)}\r\n                  >\r\n                    <option value=\"fixed\">Fixed Price</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Fixed Price</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_fixed\"\r\n                    className=\"form-control\"\r\n                    ref={register}\r\n                    placeholder=\"Enter Fixed Price\"\r\n                    onChange={(e) => handleChange(e)}\r\n\r\n                  />\r\n                </div>\r\n                <p style={{\"color\" : \"red\"}}>{diserror}</p>\r\n                <div class=\"form-group\">\r\n                  <label>Scope of Work</label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    id=\"textarea\"\r\n                    rows=\"3\"\r\n                    name=\"description\"\r\n                    ref={register}\r\n                    placeholder=\"Enter Proposal Description\"\r\n                  ></textarea>\r\n                </div>\r\n\r\n              </div>\r\n\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Customer Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_name\"\r\n                    className=\"form-control\"\r\n                    value={custname}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label>Payment Terms</label>\r\n                  <Select\r\n                    onChange={setPayment}\r\n                    options={payment_terms}\r\n                  />\r\n                </div>\r\n\r\n                {payment.label == \"lumpsum\" ? (\r\n                  <div class=\"form-group\">\r\n                    <label>Due Dates</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"p_inst_date\"\r\n                      className=\"form-control\"\r\n                      ref={register}\r\n                      placeholder=\"Enter Hourly basis\"\r\n                      min={item}\r\n                    />\r\n                  </div>\r\n                ) :\r\n                  payment.label == \"installment\" ? (\r\n                    <div class=\"form-group\">\r\n                      <label>No of Installments</label>\r\n                      <Select\r\n                        onChange={setInstallment}\r\n                        options={no_installments}\r\n                      />\r\n                      {/* <select\r\n                        className=\"form-control\"\r\n                        name=\"p_no_installments\"\r\n                        aria-label=\"Default select example\"\r\n                        ref={register}\r\n                        onChange={(e) => setInstallment(e.target.value)}\r\n                      >\r\n                        <option value=\"\">--select--</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                      </select> */}\r\n                    </div>\r\n                  )\r\n                    : \"\"\r\n                }\r\n\r\n                {\r\n                  payment.label == \"lumpsum\"\r\n                    ?\r\n                    \"\"\r\n                    :\r\n                    <Payment\r\n                      installment={installment.label}\r\n                      paymentAmount={paymentAmount}\r\n                      paymentDate={paymentDate}\r\n                      totalAmount={totalAmount}\r\n                    \r\n                      min={item}\r\n                      item={item}\r\n                    />\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-group col-md-6\">\r\n              <button type=\"submit\" class=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProposalComponent;\r\n\r\n\r\nconst payment_terms = [\r\n  {\r\n    value: \"lumpsum\",\r\n    label: \"lumpsum\",\r\n  },\r\n  {\r\n    value: \"installment\",\r\n    label: \"installment\",\r\n  },\r\n];\r\n\r\nconst no_installments = [\r\n  {\r\n    value: \"2\",\r\n    label: \"2\",\r\n  },\r\n  {\r\n    value: \"3\",\r\n    label: \"3\",\r\n  },\r\n  {\r\n    value: \"4\",\r\n    label: \"4\",\r\n  },\r\n];\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { useForm, useFieldArray } from \"react-hook-form\";\r\n// import axios from \"axios\";\r\n// import { baseUrl } from \"../../../config/config\";\r\n// import { useAlert } from \"react-alert\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import {\r\n//   Card,\r\n//   CardHeader,\r\n//   CardBody,\r\n//   CardTitle,\r\n//   Row,\r\n//   Col,\r\n//   Table,\r\n// } from \"reactstrap\";\r\n// import { yupResolver } from \"@hookform/resolvers/yup\";\r\n// import * as yup from \"yup\";\r\n// import classNames from \"classnames\";\r\n// import Payment from \"./Payment\";\r\n// import Select from \"react-select\";\r\n// import Alerts from \"../../../common/Alerts\";\r\n\r\n\r\n// const Schema = yup.object().shape({\r\n//   misc_1: yup.string().required(\"required misc_1\"),\r\n//   misc_2: yup.string().required(\"required proposal description\"),\r\n//   p_payable: yup.string().required(\"required payable\"),\r\n// });\r\n\r\n\r\n// function ProposalComponent(props) {\r\n//   const { id } = props;\r\n//   console.log(id);\r\n\r\n//   const alert = useAlert();\r\n//   const history = useHistory();\r\n\r\n//   const { handleSubmit, register, errors,reset} = useForm({\r\n//     resolver: yupResolver(Schema),\r\n//   });\r\n\r\n\r\n//   const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n//   const [custId, setCustId] = useState(\"\");\r\n//   const [custname, setCustName] = useState();\r\n//   const [assignId, setAssignID] = useState(\"\");\r\n//   const [assingNo, setAssingNo] = useState(\"\");\r\n//   const [store, setStore] = useState(null);\r\n\r\n//   const [payment, setPayment] = useState([]);\r\n//   const [installment, setInstallment] = useState([]);\r\n\r\n//   const [amount, setAmount] = useState();\r\n//   const [date, setDate] = useState();\r\n\r\n//   const [error, setError] = useState('');\r\n//   const [totalAmount, setTotalAmount] = useState(null);\r\n\r\n\r\n//   var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n//   console.log(\"current_date :\", current_date);\r\n//   const [item] = useState(current_date);\r\n\r\n\r\n//   useEffect(() => {\r\n//     const getQuery = () => {\r\n//       axios\r\n//         .get(\r\n//           `${baseUrl}/tl/pendingTlProposal?tl_id=${JSON.parse(\r\n//             userid\r\n//           )}&assign_id=${id}`\r\n//         )\r\n//         .then((res) => {\r\n//           console.log(res);\r\n//           if (res.data.code === 1) {\r\n//             if (res.data.result.length > 0) {\r\n//               setAssingNo(res.data.result[0].assign_no);\r\n//               setAssignID(res.data.result[0].id);\r\n//             }\r\n//           }\r\n//         });\r\n//     };\r\n//     getQuery();\r\n//   }, []);\r\n\r\n\r\n//   useEffect(() => {\r\n//     const getUser = async () => {\r\n//       const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\r\n//       console.log(\"res\", res);\r\n//       setCustName(res.data.name);\r\n//       setCustId(res.data.id);\r\n//     };\r\n\r\n//     getUser();\r\n//   }, [id]);\r\n\r\n\r\n//   const onSubmit = (value) => {\r\n//     console.log(\"data --\",value);\r\n\r\n//     var lumsum = value.p_inst_date\r\n//     setDate(lumsum)\r\n\r\n//     let formData = new FormData();\r\n\r\n//     formData.append(\"assign_no\", assingNo);\r\n//     formData.append(\"name\", value.p_name);\r\n//     formData.append(\"type\", \"tl\");\r\n//     formData.append(\"id\", JSON.parse(userid));\r\n//     formData.append(\"assign_id\", assignId);\r\n//     formData.append(\"customer_id\", custId);\r\n//     formData.append(\"description\", value.description);\r\n\r\n//     formData.append(\"amount_type\", \"fixed\");\r\n//     formData.append(\"amount\", value.p_fixed);\r\n//     formData.append(\"installment_amount\", amount);\r\n\r\n//     formData.append(\"payment_terms\", payment.value);\r\n//     formData.append(\"no_of_installment\", installment.value);\r\n\r\n//     payment.label == \"lumpsum\" ?\r\n//       formData.append(\"due_date\", lumsum) :\r\n//       formData.append(\"due_date\", date)\r\n\r\n\r\n//     console.log(\"amount -\", amount)\r\n//     console.log(\"payment -\", payment.value)\r\n\r\n\r\n//     if (payment.value == \"installment\") {\r\n//       let sum = amount.reduce(myFunction)\r\n//       function myFunction(total, value) {\r\n//         return Number(total) + Number(value);\r\n//       }\r\n\r\n//       console.log(\"sum -\", sum)\r\n//       if (value.p_fixed != sum) {\r\n//         console.log(`installment amount should be eqaul to ${value.p_fixed}`)\r\n//         setError(`installment amount should be eqaul to ${value.p_fixed}`)\r\n//       }\r\n\r\n//       else {\r\n//         axios({\r\n//           method: \"POST\",\r\n//           url: `${baseUrl}/tl/uploadProposal`,\r\n//           data: formData,\r\n//         })\r\n//           .then(function (response) {\r\n//             console.log(\"res-\", response);\r\n//             if (response.data.code === 1) {\r\n//               reset();\r\n\r\n//               var variable = \"Proposal Successfully Sent \"\r\n//               Alerts.SuccessNormal(variable)\r\n\r\n//               history.push(\"/teamleader/proposal\");\r\n//             }\r\n//           })\r\n//           .catch((error) => {\r\n//             console.log(\"erroror - \", error);\r\n//           });\r\n//       }\r\n//     }\r\n//   };\r\n\r\n\r\n\r\n//   const paymentAmount = (data) => {\r\n//     // console.log(\"paymentAmount\", data)\r\n\r\n//     var array1 = []\r\n//     Object.entries(data).map(([key, value]) => {\r\n//       console.log(\"val\", value);\r\n//       array1.push(value)\r\n//     });\r\n//     console.log(\"array1\", array1);\r\n\r\n//     setAmount(array1);\r\n//   };\r\n\r\n//   const paymentDate = (data) => {\r\n//     // console.log(\"paymentDate\", data)\r\n\r\n//     var array2 = []\r\n//     Object.entries(data).map(([key, value]) => {\r\n//       console.log(\"val\", value);\r\n//       array2.push(value)\r\n//     });\r\n//     console.log(\"array2\", array2);\r\n//     setDate(array2);\r\n//   };\r\n\r\n\r\n//   console.log(\"totalAmount\", totalAmount)\r\n\r\n\r\n//   const handleChange = (e) => {\r\n//     console.log(\"val-\", e.target.value);\r\n//     setTotalAmount(e.target.value);\r\n//   };\r\n\r\n\r\n//   return (\r\n//     <>\r\n//       <Card>\r\n//         <CardHeader>\r\n//           <Row>\r\n//             <Col md=\"5\">\r\n//               <button\r\n//                 class=\"btn btn-success ml-3\"\r\n//                 onClick={() => history.goBack()}\r\n//               >\r\n//                 <i class=\"fas fa-arrow-left mr-2\"></i>\r\n//                 Go Back\r\n//               </button>\r\n//             </Col>\r\n//             <Col md=\"7\">\r\n//               <div>\r\n//                 <h4>Prepare Proposal</h4>\r\n//               </div>\r\n//             </Col>\r\n//           </Row>\r\n//         </CardHeader>\r\n\r\n//         <CardBody>\r\n//           <form onSubmit={handleSubmit(onSubmit)}>\r\n//             <p style={{ color: \"red\" }}>{error}</p>\r\n\r\n//             <div style={{ display: \"flex\" }}>\r\n//               <div class=\"col-md-6\">\r\n\r\n//                 <div class=\"form-group\">\r\n//                   <label>Query No.</label>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     name=\"p_assingment\"\r\n//                     className=\"form-control\"\r\n//                     value={assingNo}\r\n//                     ref={register}\r\n//                   />\r\n//                 </div>\r\n\r\n//                 <div class=\"form-group\">\r\n//                   <label>Fee</label>\r\n//                   <select\r\n//                     class=\"form-control\"\r\n//                     ref={register}\r\n//                     name=\"p_type\"\r\n//                     onChange={(e) => setStore(e.target.value)}\r\n//                   >\r\n//                     <option value=\"fixed\">Fixed Price</option>\r\n//                   </select>\r\n//                 </div>\r\n\r\n//                 <div class=\"form-group\">\r\n//                   <label>Fixed Price</label>\r\n//                   <input\r\n//                     type=\"number\"\r\n//                     name=\"p_fixed\"\r\n//                     className=\"form-control\"\r\n//                     ref={register}\r\n//                     placeholder=\"Enter Fixed Price\"\r\n//                     onChange={(e) => handleChange(e)}\r\n//                   />\r\n//                 </div>\r\n\r\n//                 <div class=\"form-group\">\r\n//                   <label>Scope of Work</label>\r\n//                   <textarea\r\n//                     className=\"form-control\"\r\n//                     id=\"textarea\"\r\n//                     rows=\"3\"\r\n//                     name=\"description\"\r\n//                     ref={register}\r\n//                     placeholder=\"Enter Proposal Description\"\r\n//                   ></textarea>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <div class=\"col-md-6\">\r\n//                 <div class=\"form-group\">\r\n//                   <label>Customer Name</label>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     name=\"p_name\"\r\n//                     className=\"form-control\"\r\n//                     value={custname}\r\n//                     ref={register}\r\n//                   />\r\n//                 </div>\r\n\r\n//                 <div class=\"form-group\">\r\n//                   <label>Payment Terms</label>\r\n//                   <Select\r\n//                     onChange={setPayment}\r\n//                     options={payment_terms}\r\n//                   />\r\n//                 </div>\r\n\r\n//                 {payment.label == \"lumpsum\" ? (\r\n//                   <div class=\"form-group\">\r\n//                     <label>Due Dates</label>\r\n//                     <input\r\n//                       type=\"date\"\r\n//                       name=\"p_inst_date\"\r\n//                       className=\"form-control\"\r\n//                       ref={register}\r\n//                       placeholder=\"Enter Hourly basis\"\r\n//                       min={item}\r\n//                     />\r\n//                   </div>\r\n//                 ) :\r\n//                   payment.label == \"installment\" ? (\r\n//                     <div class=\"form-group\">\r\n//                       <label>No of Installments</label>\r\n//                       <Select\r\n//                         onChange={setInstallment}\r\n//                         options={no_installments}\r\n//                       />\r\n//                       {/* <select\r\n//                         className=\"form-control\"\r\n//                         name=\"p_no_installments\"\r\n//                         aria-label=\"Default select example\"\r\n//                         ref={register}\r\n//                         onChange={(e) => setInstallment(e.target.value)}\r\n//                       >\r\n//                         <option value=\"\">--select--</option>\r\n//                         <option value=\"2\">2</option>\r\n//                         <option value=\"3\">3</option>\r\n//                         <option value=\"4\">4</option>\r\n//                         <option value=\"5\">5</option>\r\n//                       </select> */}\r\n//                     </div>\r\n//                   )\r\n//                     : \"\"\r\n//                 }\r\n\r\n//                 {\r\n//                   payment.label == \"lumpsum\"\r\n//                     ?\r\n//                     \"\"\r\n//                     :\r\n//                     <Payment\r\n//                       installment={installment.label}\r\n//                       paymentAmount={paymentAmount}\r\n//                       paymentDate={paymentDate}\r\n//                       totalAmount={totalAmount}\r\n//                       min={item}\r\n//                       item={item}\r\n//                     />\r\n//                 }\r\n\r\n//               </div>\r\n//             </div>\r\n\r\n\r\n//             <div class=\"form-group col-md-6\">\r\n//               <button type=\"submit\" class=\"btn btn-primary\">\r\n//                 Submit\r\n//               </button>\r\n//             </div>\r\n\r\n//           </form>\r\n//         </CardBody>\r\n//       </Card>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default ProposalComponent;\r\n\r\n\r\n// const payment_terms = [\r\n//   {\r\n//     value: \"lumpsum\",\r\n//     label: \"lumpsum\",\r\n//   },\r\n//   {\r\n//     value: \"installment\",\r\n//     label: \"installment\",\r\n//   },\r\n// ];\r\n\r\n// const no_installments = [\r\n//   {\r\n//     value: \"2\",\r\n//     label: \"2\",\r\n//   },\r\n//   {\r\n//     value: \"3\",\r\n//     label: \"3\",\r\n//   },\r\n//   {\r\n//     value: \"4\",\r\n//     label: \"4\",\r\n//   },\r\n// ];\r\n\r\n\r\n{/* {store == \"hourly\" && (\r\n                  <div class=\"form-group\">\r\n                    <label>Hourly basis</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"p_hourly\"\r\n                      className=\"form-control\"\r\n                      ref={register}\r\n                      placeholder=\"Enter Hourly basis\"\r\n                    />\r\n                  </div>\r\n                )}\r\n                {store == \"mixed\" && (\r\n                  <div>\r\n                    <div class=\"form-group\">\r\n                      <label>Mixed</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"p_fixed\"\r\n                        className=\"form-control\"\r\n                        ref={register}\r\n                        placeholder=\"Enter Fixed Price\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"p_hourly\"\r\n                        className=\"form-control\"\r\n                        ref={register}\r\n                        placeholder=\"Enter Hourly basis\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )} */}\r\n\r\n\r\n// var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\r\n// var todaysDate = new Date();\r\n\r\n\r\n{\r\n  /* <select\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                    name=\"p_assingment\"\r\n                    onChange={(e) => getID(e.target.value)}\r\n                  >\r\n                    <option value=\"\">--select--</option>\r\n                    {incompleteData.map((p, index) => (\r\n                      <option key={index} value={p.id}>\r\n                        {p.assign_no}\r\n                      </option>\r\n                    ))}\r\n                  </select> */\r\n}\r\n\r\n// const getID = (key) => {\r\n//     setId(key);\r\n//     incompleteData.filter((data) => {\r\n//       if (data.id == key) {\r\n//         console.log(\"assingNo\", data.assign_no);\r\n//         setAssingNo(data.assign_no);\r\n//         setAssignID(data.id);\r\n//       }\r\n//     });\r\n//   };\r\n\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\EditTL\\Reset.js",["1825","1826"],"import React, { useState, useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select, Form, Input, Button } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { baseUrl } from \"../../../config/config\";\r\n\r\nfunction Reset() {\r\n  \r\n  const { Option } = Select;\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState(null);\r\n  const [value, setValue] = useState({});\r\n\r\n\r\n\r\n  const handleChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setStore2(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getTeamLeader = () => {\r\n      axios.get(`${baseUrl}/tl/getTeamLeader?id=243`).then((res) => {\r\n        console.log(res);\r\n        setValue(res.data.result[0]);    \r\n      });\r\n    };\r\n\r\n    getTeamLeader();\r\n  }, []);\r\n\r\n  console.log(\"value -\", value.name);\r\n  const data1 = value.name;\r\n  const data2 = value.email;\r\n  const data3 = value.phone;\r\n  const data4 = value.parent_id;\r\n  const data5 = value.cat_name;\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${store2}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n    };\r\n    getSubCategory();\r\n  }, [store2]);\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n\r\n    // let formData = new FormData();\r\n    // formData.append(\"email\", value.p_email);\r\n    // formData.append(\"name\", value.p_name);\r\n    // formData.append(\"phone\", value.p_phone);\r\n    // formData.append(\"pcat_id\", value.p_tax);\r\n    // formData.append(\"cat_id\", value.p_tax2);\r\n    // formData.append(\"id\", id);\r\n\r\n    // axios({\r\n    //   method: \"POST\",\r\n    //   url: `${baseUrl}/tl/updateTeamLeader`,\r\n    //   data: formData,\r\n    // })\r\n    //   .then(function (response) {\r\n    //     console.log(\"res-\", response);\r\n    //     if (response.data.code === 1) {\r\n    //       alert.success(\"TL updated  !\");\r\n    //       history.goBack();\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(\"erroror - \", error);\r\n    //   });\r\n  };\r\n\r\n  if (!(data1 && data2 && data3 && data4 && data5)) return <p>loading</p>;\r\n  else\r\n    return (\r\n      <>\r\n        <div class=\"container\">\r\n          <Form\r\n            name=\"basic\"\r\n            initialValues={{\r\n              username: `${data1}`,\r\n              email: `${data2}`,\r\n              phone: `${data3}`,\r\n              category: `${data4}`,\r\n              sub_category: `${data5}`,\r\n            }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item label=\"Username\" name=\"username\">\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\" label=\"email \">\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"category\" label=\"Category\">\r\n              <Select onChange={handleChange}>\r\n                <Option value=\"1\">Direct</Option>\r\n                <Option value=\"2\">InDirect</Option>\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"sub_category\" label=\"Sub-category\">\r\n              <Select>\r\n                <Option value=\"\">--Select Sub-Category--</Option>\r\n                {tax2.map((p, index) => (\r\n                  <Option key={index} value={p.id}>\r\n                    {p.details}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"phone\" label=\"phone\">\r\n              <Input/>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\r\n          </Form>\r\n\r\n          {/* <Form name=\"nest-messages\" onFinish={onFinish}>\r\n            <Form.Item name={[\"query\", \"name\"]} label=\" name\">\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name={[\"query\", \"email\"]} label=\"email \">\r\n              <Input defaultValue={data2} />\r\n            </Form.Item>\r\n\r\n            <Form.Item name={[\"query\", \"phone\"]} label=\"phone\">\r\n              <Input defaultValue={data3} />\r\n            </Form.Item>\r\n\r\n            <Form.Item name={[\"query\", \"pcat_1\"]} label=\"Category\">\r\n              <Select onChange={handleChange}>\r\n                <Option value=\"1\">Direct</Option>\r\n                <Option value=\"2\">InDirect</Option>\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item name={[\"query\", \"cat_1\"]} label=\"Sub-category\">\r\n              <Select defaultValue={data5}>\r\n                <Option value=\"\">--Select Sub-Category--</Option>\r\n                {tax2.map((p, index) => (\r\n                  <Option key={index} value={p.id}>\r\n                    {p.details}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form> */}\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Reset;\r\n\r\n// <Option value=\"3\">Assessment</Option>\r\n// <Option value=\"4\">others</Option>\r\n\r\n// import React from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\n// import Select from \"react-select\";\r\n// import { useForm, Controller } from \"react-hook-form\";\r\n// import { Checkbox, Input } from \"@material-ui/core\";\r\n// import { Input as AntdInput } from \"antd\";\r\n\r\n// import \"./styles.css\";\r\n\r\n// const App = () => {\r\n//   const { control, handleSubmit } = useForm();\r\n\r\n//   const onSubmit = data => {\r\n//     alert(JSON.stringify(data));\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n//       <label>Ice Cream Preference</label>\r\n//       <Controller\r\n//         name=\"iceCreamType\"\r\n//         as={Select}\r\n//         options={[\r\n//           { value: \"chocolate\", label: \"Chocolate\" },\r\n//           { value: \"strawberry\", label: \"Strawberry\" },\r\n//           { value: \"vanilla\", label: \"Vanilla\" }\r\n//         ]}\r\n//         control={control}\r\n//         defaultValue={[{ value: \"vanilla\", label: \"Vanilla\" }]}\r\n//       />\r\n\r\n//       <input type=\"submit\" />\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// const rootElement = document.getElementById(\"root\");\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>,\r\n//   rootElement\r\n// );\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\DeclinedQuery\\DeclinedQuery.js",["1827","1828","1829","1830","1831","1832"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\n\r\nfunction DeclinedQuery({ CountIncomplete }) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [incompleteData, setInCompleteData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getInCompleteAssingment();\r\n  }, []);\r\n\r\n  const getInCompleteAssingment = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/declinedQueries?id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setInCompleteData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            {/* <Link to={`/teamleader/queries/${row.id}`}>{row.assign_no}</Link> */}\r\n            <Link\r\n              to={{\r\n                pathname: `/teamleader/queries/${row.id}`,\r\n                index: 1,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.Exp_Delivery_Date);\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status} /\r\n              {\r\n                row.status == \"Declined Query\" ?\r\n                  <p className=\"declined\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TeamFilter\r\n            setData={setInCompleteData}\r\n            getData={getInCompleteAssingment}\r\n            DeclinedQuery=\"DeclinedQuery\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={incompleteData}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DeclinedQuery;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\InCompleteData\\InCompleteData.js",["1833","1834","1835","1836","1837","1838","1839","1840"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\n\r\nfunction InCompleteData({ CountIncomplete }) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [incompleteData, setInCompleteData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getInCompleteAssingment();\r\n  }, []);\r\n\r\n  const getInCompleteAssingment = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=1`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setInCompleteData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/teamleader/queries/${row.id}`,\r\n                index: 1,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.Exp_Delivery_Date);\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}{row.statusdescription && \"/\"}\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Declined Query\" ?\r\n                    <p className=\"declined\">\r\n\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Completed Query\" ?\r\n                      <p className=\"completed\">\r\n\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TeamFilter\r\n            setData={setInCompleteData}\r\n            getData={getInCompleteAssingment}\r\n            InprogressQuery=\"InprogressQuery\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={incompleteData}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InCompleteData;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\CompleteData\\CompleteData.js",["1841","1842","1843","1844","1845","1846","1847","1848"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\n\r\n\r\n\r\nfunction CompletedQuery() {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [incompleteData, setInCompleteData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getInCompleteAssingment();\r\n  }, []);\r\n\r\n  const getInCompleteAssingment = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/getIncompleteQues?id=${JSON.parse(userid)}&status=2`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setInCompleteData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/teamleader/queries/${row.id}`,\r\n                index: 1,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.Exp_Delivery_Date);\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}{row.statusdescription && \"/\"}\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Declined Query\" ?\r\n                    <p className=\"declined\">\r\n\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Completed Query\" ?\r\n                      <p className=\"completed\">\r\n\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TeamFilter\r\n            setData={setInCompleteData}\r\n            getData={getInCompleteAssingment}\r\n            inCompleteQuery=\"inCompleteQuery\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={incompleteData}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CompletedQuery;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\PendingForAcceptence\\PendingForAcceptence.js",["1849","1850","1851"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TeamFilter from \"../../../components/Search-Filter/tlFilter\";\r\nimport RejectedModal from \"./RejectedModal\";\r\n\r\n\r\nfunction PendingForAcceptence({ CountPendingForAcceptence, updateTab }) {\r\n  const alert = useAlert();\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [pendingData, setPendingData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [pay, setPay] = useState({\r\n    id: \"\",\r\n    allocation_id: \"\",\r\n  });\r\n\r\n  const [addPaymentModal, setPaymentModal] = useState(false);\r\n  const rejectHandler = (key) => {\r\n    console.log(\"key\", key);\r\n    setPaymentModal(!addPaymentModal);\r\n    setPay({\r\n      id: key.id,\r\n      allocation_id: key.allocation_id,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPendingforAcceptance();\r\n  }, []);\r\n\r\n  const getPendingforAcceptance = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/pendingQues?id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setPendingData(res.data.result);\r\n          setRecords(res.data.result.length);\r\n          // CountPendingForAcceptence(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"query_created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.query_created);\r\n        var oldDate = row.query_created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/teamleader/queries/${row.id}`,\r\n                index: 0,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"\tExp. Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.Exp_Delivery_Date);\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Accept / Reject\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-evenly\",\r\n                color: \"#6967ce\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              id=\"div1\"\r\n            >\r\n              <div\r\n                id=\"accept\"\r\n                title=\"Accept Assignment\"\r\n                onClick={() => acceptHandler(row)}\r\n              >\r\n                <i\r\n                  class=\"fa fa-check\"\r\n                  style={{ color: \"green\", fontSize: \"16px\" }}\r\n                ></i>\r\n              </div>\r\n              <div\r\n                id=\"reject\"\r\n                title=\"Reject Assignment\"\r\n                // onClick={() => rejectHandler(row)}\r\n                onClick={() => rejectHandler(row)}\r\n              >\r\n                <i\r\n                  class=\"fa fa-times\"\r\n                  style={{ color: \"red\", fontSize: \"16px\" }}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const acceptHandler = (key) => {\r\n    console.log(\"acceptHandler\", key);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"set\", 1);\r\n    formData.append(\"tlid\", JSON.parse(userid));\r\n    formData.append(\"assignment_id\", key.id);\r\n    formData.append(\"allocation_id\", key.allocation_id);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"response-\", response);\r\n        if (response.data.code === 1) {\r\n          alert.success(\"Query accepted !\");\r\n          getPendingforAcceptance();\r\n          updateTab(1);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <TeamFilter\r\n            setData={setPendingData}\r\n            getData={getPendingforAcceptance}\r\n            pendingForAcceptence=\"pendingForAcceptence\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={pendingData}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n          <RejectedModal\r\n            rejectHandler={rejectHandler}\r\n            addPaymentModal={addPaymentModal}\r\n            pay={pay}\r\n            getPendingforAcceptance={getPendingforAcceptance}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PendingForAcceptence;\r\n\r\n{\r\n  /* <button onClick={() => update(1)}>go to 1st tab</button> */\r\n}\r\n// http://13.232.121.233/mazarapi/v1/tl/AcceptRejectQuery\r\n\r\n// axios.post(`${baseUrl}/tl/AcceptRejectQuery`, formData)\r\n// .then(res => {\r\n//   console.log(res);\r\n//   if (res.data.code === 1) {\r\n//     alert.success(\"Query rejected!\");\r\n//     getPendingforAcceptance();\r\n//   }\r\n// });\r\n\r\n// set: 1\r\n// tlid: 128\r\n// assignment_id: 11\r\n// allocation_id: 36\r\n","E:\\Mazars_Pannel\\src\\components\\AllQueriesData\\AllQueriesData.js",["1852","1853","1854","1855","1856","1857","1858","1859"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\n\r\n\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../components/Records/Records\";\r\n\r\n\r\nfunction AllQueriesData() {\r\n\r\n  const [allQueriesData, setAllQueriesData] = useState([])\r\n  const [records, setRecords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllQueriesData();\r\n  }, []);\r\n\r\n  const getAllQueriesData = () => {\r\n    axios.get(`${baseUrl}/admin/getAllQueries`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setAllQueriesData(res.data.result);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n      formatter: (cellContent, row, rowIndex, index) => {\r\n        console.log(\"rowIndex : \", index);\r\n        return <div>{rowIndex + 1}</div>;\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.id}`,\r\n                index: 0,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}/\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Declined Query\" ?\r\n                    <p className=\"declined\">\r\n\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Completed Query\" ?\r\n                      <p className=\"completed\">\r\n\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"65px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div title=\"Send Message\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/admin/chatting/${row.id}`,\r\n                  obj: {\r\n                    message_type: \"4\",\r\n                    query_No: row.assign_no,\r\n                    query_id: row.id,\r\n                    routes: `/admin/queriestab`\r\n                  }\r\n                }}\r\n              >\r\n                <i\r\n                  class=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    marginLeft: \"8px\",\r\n                    color: \"blue\"\r\n                  }}\r\n                ></i>\r\n              </Link>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setAllQueriesData}\r\n            getData={getAllQueriesData}\r\n            allQueries=\"allQueries\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={allQueriesData}\r\n            columns={columns}\r\n            rowIndex\r\n            wrapperClasses=\"table-responsive\"\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AllQueriesData;\r\n\r\n\r\n\r\n{/* <div class=\"row\">\r\n            <div className=\"col-9\">\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <div class=\"form-group\">\r\n                <label className=\"form-select form-control\"\r\n                >Total Records : 12</label>\r\n              </div>\r\n            </div>\r\n          </div> */}","E:\\Mazars_Pannel\\src\\components\\DeclinedQueries\\DeclinedQueries.js",["1860","1861","1862","1863","1864","1865","1866","1867","1868","1869"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../Search-Filter/AdminFilter\";\r\nimport Records from \"../../components/Records/Records\";\r\n\r\nfunction DeclinedQueries({ CountPendingForPayment }) {\r\n\r\n  const [pendingData, setPendingData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPendingForPayment();\r\n  }, []);\r\n\r\n  const getPendingForPayment = () => {\r\n    axios.get(`${baseUrl}/admin/declinedQueries`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setPendingData(res.data.result);\r\n        setRecords(res.data.result.length);\r\n\r\n        // CountPendingForPayment(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n      formatter: (cellContent, row, rowIndex, index) => {\r\n        console.log(\"rowIndex : \", index);\r\n        return <div>{rowIndex + 1}</div>;\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.id}`,\r\n                index: 0,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status} /\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Declined Query\" ?\r\n                  <p className=\"declined\">\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Completed Query\" ?\r\n                    <p className=\"completed\">\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setPendingData}\r\n            getData={getPendingForPayment}\r\n            declinedQueries=\"declinedQueries\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n        <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={pendingData}\r\n            columns={columns}\r\n            rowIndex\r\n            wrapperClasses=\"table-responsive\"\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DeclinedQueries;\r\n","E:\\Mazars_Pannel\\src\\components\\PendingForProposals\\PendingForProposals.js",["1870","1871","1872","1873","1874","1875","1876","1877","1878","1879","1880","1881","1882","1883"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../components/Records/Records\";\r\n\r\n\r\nfunction PendingForProposals({ CountPendingProposal }) {\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n\r\n  const [nonpendingData, setNonPendingData] = useState([]);\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [history, setHistory] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = (key) => {\r\n    console.log(\"key\", key);\r\n    setModal(!modal);\r\n\r\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/vnd.github.cloak-preview\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        setHistory(response.result);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPendingForProposals();\r\n  }, []);\r\n\r\n  const getPendingForProposals = () => {\r\n    axios.get(`${baseUrl}/admin/pendingProposal`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setNonPendingData(res.data.result);\r\n        setRecords(res.data.result.length);\r\n        // CountPendingProposal(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.created);\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link\r\n              // to={`/admin/queries/${row.id}`}\r\n              to={{\r\n                pathname: `/admin/queries/${row.id}`,\r\n                index: 2,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >{row.assign_no}</Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}/\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"tname\",\r\n      text: \"TL name\",\r\n      sort: true,\r\n    },\r\n    {\r\n      text: \"History\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-info btn-sm\"\r\n              onClick={() => toggle(row.id)}\r\n            >\r\n              History\r\n            </button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  //change date format\r\n  function ChangeFormateDate(oldDate) {\r\n    console.log(\"date\", oldDate);\r\n    if (oldDate == null) {\r\n      return null;\r\n    }\r\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setNonPendingData}\r\n            getData={getPendingForProposals}\r\n            pendingForProposal=\"pendingForProposal\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={nonpendingData}\r\n            columns={columns}\r\n            wrapperClasses=\"table-responsive\"\r\n          />\r\n          <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>History</ModalHeader>\r\n            <ModalBody>\r\n              <table class=\"table table-bordered\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"row\">S.No</th>\r\n                    <th scope=\"row\">Name</th>\r\n                    <th scope=\"row\">Query No</th>\r\n                    <th scope=\"row\">Status</th>\r\n                    <th scope=\"row\">Date of Allocation</th>\r\n                  </tr>\r\n                </thead>\r\n\r\n                {history.length > 0\r\n                  ? history.map((p, i) => (\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>{i + 1}</td>\r\n                        <td>{p.name}</td>\r\n                        <td>{p.assign_no}</td>\r\n                        <td>{p.status}</td>\r\n                        <td>{ChangeFormateDate(p.date_of_allocation)}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  ))\r\n                  : null}\r\n              </table>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"secondary\" onClick={toggle}>\r\n                Cancel\r\n              </Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PendingForProposals;\r\n{\r\n  /* <td class=\"text-center\">\r\n                      <p style={{ color: \"green\" }}>\r\n                        Query accepted by {p.tname}\r\n                      </p>\r\n                    </td> */\r\n}\r\n","E:\\Mazars_Pannel\\src\\agora.config.js",[],"E:\\Mazars_Pannel\\src\\pages\\Admin\\Schedule\\Demo.js",["1884","1885","1886","1887","1888","1889","1890","1891","1892","1893","1894","1895","1896","1897","1898"],"import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  Resources,\r\n  MonthView,\r\n  Appointments,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  EditRecurrenceMenu,\r\n  DragDropProvider,\r\n  WeekView,\r\n  DayView,\r\n  DateNavigator,\r\n  ViewSwitcher,\r\n  TodayButton,\r\n  Toolbar,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport Swal from \"sweetalert2\";\r\nimport Alerts from \"../../../common/Alerts\";\r\nimport { values } from \"lodash\";\r\n\r\n\r\n\r\n\r\n\r\nfunction Demo() {\r\n  const userId = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const history = useHistory();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [assignmentdata, setAssignmentData] = useState([]);\r\n  const [owner, setOwner] = useState([]);\r\n  const [read, setRead] = useState(false);\r\n\r\n  const [baseMode, SetbaseMode] = useState(\"avc\");\r\n  const [transcode, SetTranscode] = useState(\"interop\");\r\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\r\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\r\n  var date = new Date();\r\n\r\n  function convert(str) {\r\n    var date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n    return [date.getFullYear(), mnth, day].join(\"-\");\r\n  }\r\n\r\n  const [currentDate, setCurrentDate] = useState(convert(date));\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getAssignmentNo();\r\n    getUsers();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(`${baseUrl}/tl/videoScheduler?tl_id=1`)\r\n      .then((res) => {\r\n        console.log(\"res n -\", res);\r\n        var a = res.data.result.items;\r\n        if (a) {\r\n          setData(a.map(mapAppointmentData));\r\n        }\r\n      });\r\n  };\r\n\r\n  const mapAppointmentData = (appointment) => ({\r\n    id: appointment.id,\r\n    startDate: appointment.start,\r\n    endDate: appointment.end,\r\n    title: appointment.title,\r\n    notes: appointment.summary,\r\n    question_id: appointment.question_id,\r\n    vstart: appointment.vstart,\r\n    vend: appointment.vend,\r\n    user: appointment.user.split(','),\r\n    owner: appointment.owner,\r\n  });\r\n\r\n  const getAssignmentNo = () => {\r\n    axios\r\n      .get(`${baseUrl}/admin/getAllQuery`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          var data = res.data.result;\r\n          const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\r\n            text,\r\n            ...rest,\r\n          }));\r\n          console.log(\"dt--\", newArrayOfObj);\r\n          setAssignmentData(newArrayOfObj);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getUsers = () => {\r\n    axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        var data = res.data.result;\r\n        const newOwners = data.map(({ name: text, ...rest }) => ({\r\n          text,\r\n          ...rest,\r\n        }));\r\n        console.log(\"dt--\", newOwners);\r\n        setOwner(newOwners);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  const resources = [\r\n    {\r\n      fieldName: \"question_id\",\r\n      title: \"Query No\",\r\n      instances: assignmentdata,\r\n    },\r\n    {\r\n      fieldName: \"user\",\r\n      title: \"Users\",\r\n      instances: owner,\r\n      allowMultiple: true,\r\n    },\r\n  ];\r\n\r\n  const styles = (theme) => ({\r\n    button: {\r\n      color: theme.palette.background.default,\r\n      padding: 0,\r\n    },\r\n    text: {\r\n      paddingTop: theme.spacing(1),\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n  });\r\n\r\n\r\n  const AppointmentBase = ({\r\n    children,\r\n    data,\r\n    onClick,\r\n    classes,\r\n    onAppointmentMetaChange,\r\n    ...restProps\r\n  }) => (\r\n    <Appointments.Appointment {...restProps}>\r\n      <div style={{ display: \"flex\" }}>\r\n\r\n        {/* {B(data.owner)} */}\r\n\r\n        <div>{children}</div>\r\n        <div\r\n          onClick={() => handleJoin(data.question_id)}\r\n        ><i\r\n          class=\"fa fa-video-camera\"\r\n          style={{ fontSize: \"12px\", color: \"#fff\" }}\r\n        ></i>\r\n        </div>\r\n      </div>\r\n    </Appointments.Appointment>\r\n  );\r\n\r\n\r\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\r\n    AppointmentBase\r\n  );\r\n\r\n\r\n  const myAppointment = (props) => {\r\n\r\n    // console.log(\"props\", props.data.owner)\r\n\r\n    return (\r\n      <div>\r\n        <Appointment\r\n          {...props}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  //handleJoin\r\n  const handleJoin = (id) => {\r\n    console.log(\"id\", id);\r\n\r\n    Cookies.set(\"channel_3\", id);\r\n    Cookies.set(\"baseMode_3\", baseMode);\r\n    Cookies.set(\"transcode_3\", transcode);\r\n    Cookies.set(\"attendeeMode_3\", attendeeMode);\r\n    Cookies.set(\"videoProfile_3\", videoProfile);\r\n    history.push(\"/admin/meeting\");\r\n  };\r\n\r\n\r\n  const changeFormat = (d) => {\r\n    console.log(\"d ---\", d);\r\n\r\n    if (typeof d === 'object') {\r\n      console.log(\"GMT\");\r\n      return (\r\n        d.getFullYear() +\r\n        \"-\" +\r\n        (d.getMonth() + 1) +\r\n        \"-\" +\r\n        d.getDate() +\r\n        \" \" +\r\n        d.toString().split(\" \")[4]\r\n      );\r\n    } else {\r\n      console.log(\"d\");\r\n      return d;\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n\r\n    // var dt = document.getElementsByClassName(\"jss149\")\r\n\r\n    // return false;\r\n\r\n    if (added) {\r\n      console.log(\"added - \", added);\r\n\r\n      var startDate = added.startDate;\r\n      var endDate = added.endDate;\r\n\r\n      let formData = new FormData();\r\n      formData.append(\"customer_id\", JSON.parse(userId));\r\n      formData.append(\"question_id\", added.question_id);\r\n      formData.append(\"time\", changeFormat(startDate));\r\n      formData.append(\"endtime\", changeFormat(endDate));\r\n      formData.append(\"title\", added.title);\r\n      formData.append(\"notes\", added.notes);\r\n      formData.append(\"user\", added.user);\r\n      formData.append(\"set_by\", \"admin\");\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/aminPostCallSchedule`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n          console.log(\"res post-\", response);\r\n\r\n          if (response.data.code === 1) {\r\n            var msg = \"Successfully added\"\r\n            Alerts.SuccessNormal(msg)\r\n          } else if (response.data.code === 0) {\r\n            var msg = response.data.result\r\n            Alerts.ErrorNormal(msg)\r\n          }\r\n          getData();\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"erroror - \", error);\r\n        });\r\n    }\r\n\r\n    if (changed) {\r\n\r\n      // console.log(\"changed\", changed)\r\n      const data2 = data.map((appointment) =>\r\n        changed[appointment.id]\r\n          ? { ...appointment, ...changed[appointment.id] }\r\n          : appointment\r\n      );\r\n      // console.log(\"data2 - \", data2);\r\n\r\n      let valuesArray = Object.entries(changed);\r\n      let id = valuesArray[0][0];\r\n      console.log(\"id -\", id);\r\n      let dataIttem;\r\n\r\n      for (var i = 0; i < data2.length; i++) {\r\n        if (data2[i].id === id) {\r\n          dataIttem = data2[i];\r\n        }\r\n      }\r\n\r\n      var a = dataIttem.startDate\r\n      var b = dataIttem.endDate\r\n\r\n      // console.log(\"dataIttem\", dataIttem);\r\n\r\n      if (!dataIttem.owner) {\r\n        var variable = \"Error\"\r\n        Alerts.ErrorEdit(variable)\r\n        return false;\r\n      }\r\n\r\n      let formData = new FormData();\r\n      formData.append(\"customer_id\", JSON.parse(userId));\r\n      formData.append(\"question_id\", dataIttem.question_id);\r\n      formData.append(\"id\", dataIttem.id);\r\n      formData.append(\"time\", changeFormat(a));\r\n      formData.append(\"endtime\", changeFormat(b));\r\n      formData.append(\"title\", dataIttem.title);\r\n      formData.append(\"notes\", dataIttem.notes);\r\n      formData.append(\"set_by\", \"admin\");\r\n      formData.append(\"user\", dataIttem.user);\r\n\r\n      axios({\r\n        method: \"POST\",\r\n        url: `${baseUrl}/tl/aminPostCallSchedule`,\r\n        data: formData,\r\n      })\r\n        .then(function (response) {\r\n          console.log(\"res post-\", response);\r\n          if (response.data.code === 1) {\r\n            var msg = \"Successfully updated\"\r\n            Alerts.SuccessNormal(msg)\r\n          }\r\n          else if (response.data.code === 0) {\r\n            var msg = response.data.result\r\n            Alerts.ErrorNormal(msg)\r\n          }\r\n          getData();\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"erroror - \", error);\r\n        });\r\n    }\r\n\r\n    if (deleted !== undefined) {\r\n\r\n      var value;\r\n      data.filter((data) => {\r\n        if (data.id == deleted) {\r\n          console.log(\"owner\", data.owner);\r\n          value = data.owner\r\n        }\r\n      });\r\n\r\n      console.log(\"value\", value);\r\n      if (!value) {\r\n        var variable = \"Error\"\r\n        Alerts.ErrorDelete(variable)\r\n        return false;\r\n      }\r\n\r\n      Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"It will be permanently deleted !\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          axios.get(`${baseUrl}/tl/freeslot?id=${deleted}`).then((res) => {\r\n            console.log(\"res -\", res);\r\n            if (res.data.code === 1) {\r\n              Swal.fire(\"Deleted!\", \"Your Schedule has been deleted.\", \"success\");\r\n              getData();\r\n            } else {\r\n              Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // console.log(\"tread\", read)\r\n\r\n  return (\r\n    <Paper>\r\n      <Scheduler data={data} height={660}>\r\n        <ViewState\r\n          defaultCurrentDate={currentDate}\r\n          defaultCurrentViewName=\"Day\"\r\n        />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <EditRecurrenceMenu />\r\n\r\n        <DayView startDayHour={10} endDayHour={24} />\r\n        <WeekView startDayHour={10} endDayHour={19} />\r\n\r\n        <Appointments appointmentComponent={myAppointment} />\r\n        <Toolbar />\r\n        <DateNavigator />\r\n        <TodayButton />\r\n        <ViewSwitcher />\r\n\r\n        <AppointmentTooltip showOpenButton />\r\n        <AppointmentForm\r\n        />\r\n        <Resources\r\n          data={resources}\r\n        />\r\n      </Scheduler>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Demo;\r\n\r\n\r\n\r\n// function Demo() {\r\n//   const userId = window.localStorage.getItem(\"adminkey\");\r\n\r\n//   const history = useHistory();\r\n//   const [data, setData] = useState([]);\r\n//   const [assignmentdata, setAssignmentData] = useState([]);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [owner, setOwner] = useState([]);\r\n\r\n\r\n\r\n//   var date = new Date();\r\n\r\n//   function convert(str) {\r\n//     var date = new Date(str),\r\n//       mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n//       day = (\"0\" + date.getDate()).slice(-2);\r\n//     return [date.getFullYear(), mnth, day].join(\"-\");\r\n//   }\r\n//   const [currentDate, setCurrentDate] = useState(convert(date));\r\n\r\n//   useEffect(() => {\r\n//     getData();\r\n//     getAssignmentNo();\r\n//     getUsers();\r\n//   }, []);\r\n\r\n//   const getData = () => {\r\n//     axios\r\n//       .get(\r\n//         `${baseUrl}/tl/videoScheduler?tl_id=1`\r\n//       )\r\n//       .then((res) => {\r\n//         console.log(\"res -\", res);\r\n//         console.log(\"result -\", res.data.result.items);\r\n//         var a = res.data.result.items;\r\n//         if (a) {\r\n//           setData(a.map(mapAppointmentData));\r\n//           setLoading(false);\r\n//         }\r\n//       });\r\n//   };\r\n\r\n//   const mapAppointmentData = (appointment) => ({\r\n//     id: appointment.id,\r\n//     startDate: appointment.start,\r\n//     endDate: appointment.end,\r\n//     title: appointment.title,\r\n//     notes: appointment.summary,\r\n//     question_id: appointment.question_id,\r\n//     user: appointment.user.split(','),\r\n//   });\r\n\r\n\r\n//   const getAssignmentNo = () => {\r\n//     axios\r\n//       .get(`${baseUrl}/admin/getAllQuery`)\r\n//       .then((res) => {\r\n//         console.log(res);\r\n//         if (res.data.code === 1) {\r\n//           var data = res.data.result;\r\n//           const newArrayOfObj = data.map(({ assign_no: text, ...rest }) => ({\r\n//             text,\r\n//             ...rest,\r\n//           }));\r\n//           console.log(\"dt-que-\", newArrayOfObj);\r\n//           setAssignmentData(newArrayOfObj);\r\n//         }\r\n//       });\r\n//   };\r\n\r\n//   const getUsers = () => {\r\n//     axios.get(`${baseUrl}/tl/allAttendees?uid=${JSON.parse(userId)}`).then((res) => {\r\n//       console.log(res);\r\n//       if (res.data.code === 1) {\r\n//         var data = res.data.result;\r\n//         const newOwners = data.map(({ name: text, ...rest }) => ({\r\n//           text,\r\n//           ...rest,\r\n//         }));\r\n//         console.log(\"dt user--\", newOwners);\r\n//         setOwner(newOwners);\r\n//       }\r\n//     });\r\n//   };\r\n\r\n\r\n//   const resources = [\r\n//     {\r\n//       fieldName: \"question_id\",\r\n//       title: \"Query No\",\r\n//       instances: assignmentdata,\r\n//     },\r\n//     {\r\n//       fieldName: \"user\",\r\n//       title: \"Users\",\r\n//       instances: owner,\r\n//       allowMultiple: true,\r\n//     },\r\n//   ];\r\n\r\n\r\n\r\n//   const changeFormat = (d) => {\r\n//     console.log(d);\r\n//     return (\r\n//       d.getFullYear() +\r\n//       \"-\" +\r\n//       (d.getMonth() + 1) +\r\n//       \"-\" +\r\n//       d.getDate() +\r\n//       \" \" +\r\n//       d.toString().split(\" \")[4]\r\n//     );\r\n//   };\r\n\r\n//   const commitChanges = ({ added, changed, deleted }) => {\r\n//     if (added) {\r\n//       console.log(\"added - \", added);\r\n\r\n//       var startDate = added.startDate;\r\n//       var endDate = added.endDate;\r\n\r\n//       let formData = new FormData();\r\n//       formData.append(\"customer_id\", JSON.parse(userId));\r\n//       formData.append(\"time\", changeFormat(startDate));\r\n//       formData.append(\"endtime\", changeFormat(endDate));\r\n//       formData.append(\"title\", added.title);\r\n//       formData.append(\"notes\", added.notes);\r\n//       formData.append(\"question_id\", added.question_id);\r\n//       formData.append(\"user\", added.user);\r\n//       formData.append(\"set_by\", \"admin\");\r\n\r\n//       axios({\r\n//         method: \"POST\",\r\n//         url: `${baseUrl}/tl/PostCallSchedule`,\r\n//         data: formData,\r\n//       })\r\n//         .then(function (response) {\r\n//           console.log(\"res post-\", response);\r\n//           getData();\r\n//         })\r\n//         .catch((error) => {\r\n//           console.log(\"erroror - \", error);\r\n//         });\r\n//     }\r\n\r\n//     if (changed) {\r\n//       console.log(\"changed\", changed);\r\n\r\n//       const data2 = data.map((appointment) =>\r\n//         changed[appointment.id]\r\n//           ? { ...appointment, ...changed[appointment.id] }\r\n//           : appointment\r\n//       );\r\n//       console.log(\"data2 - \", data2);\r\n\r\n//       let valuesArray = Object.entries(changed);\r\n//       let id = valuesArray[0][0];\r\n//       console.log(\"id -\", id);\r\n//       let dataIttem;\r\n\r\n//       for (var i = 0; i < data2.length; i++) {\r\n//         if (data2[i].id === id) {\r\n//           dataIttem = data2[i];\r\n//         }\r\n//       }\r\n//       console.log(\"dataIttem\", dataIttem);\r\n\r\n//       let formData = new FormData();\r\n//       formData.append(\"customer_id\", JSON.parse(userId));\r\n//       formData.append(\"question_id\", dataIttem.question_id);\r\n//       formData.append(\"id\", dataIttem.id);\r\n//       formData.append(\"time\", dataIttem.startDate);\r\n//       formData.append(\"endtime\", dataIttem.endDate);\r\n//       formData.append(\"title\", dataIttem.title);\r\n//       formData.append(\"notes\", dataIttem.notes);\r\n\r\n//       axios({\r\n//         method: \"POST\",\r\n//         url: `${baseUrl}/customers/PostCallSchedule`,\r\n//         data: formData,\r\n//       })\r\n//         .then(function (response) {\r\n//           console.log(\"res post-\", response);\r\n//           getData();\r\n//         })\r\n//         .catch((error) => {\r\n//           console.log(\"erroror - \", error);\r\n//         });\r\n//     }\r\n\r\n//     if (deleted !== undefined) {\r\n//       console.log(\"deleted f\", deleted);\r\n//       axios.get(`${baseUrl}/customers/freeslot?id=${deleted}`).then((res) => {\r\n//         console.log(\"res -\", res);\r\n//         getData();\r\n//         setLoading(false);\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   const styles = (theme) => ({\r\n//     button: {\r\n//       color: theme.palette.background.default,\r\n//       padding: 0,\r\n//     },\r\n//     text: {\r\n//       paddingTop: theme.spacing(1),\r\n//       overflow: \"hidden\",\r\n//       textOverflow: \"ellipsis\",\r\n//       whiteSpace: \"nowrap\",\r\n//     },\r\n//   });\r\n\r\n//   const AppointmentBase = ({\r\n//     children,\r\n//     data,\r\n//     onClick,\r\n//     classes,\r\n//     onAppointmentMetaChange,\r\n//     ...restProps\r\n//   }) => (\r\n//     <Appointments.Appointment {...restProps}>\r\n//       <div style={{ display: \"flex\" }}>\r\n//         {\r\n//           console.log(\"data\", data)\r\n\r\n//         }\r\n//         <div>{children}</div>\r\n//         <div\r\n//         // onClick={() => handleJoin(data.id)}\r\n//         >\r\n//           <i\r\n//             class=\"fa fa-video-camera\"\r\n//             style={{ fontSize: \"12px\", color: \"#fff\" }}\r\n//           ></i>\r\n//         </div>\r\n//       </div>\r\n//     </Appointments.Appointment>\r\n//   );\r\n\r\n//   const Appointment = withStyles(styles, { name: \"Appointment\" })(\r\n//     AppointmentBase\r\n//   );\r\n\r\n//   const myAppointment = (props) => {\r\n//     return (\r\n//       <Appointment\r\n//         {...props}\r\n//       />\r\n//     );\r\n//   };\r\n\r\n\r\n//   return (\r\n//     <Paper>\r\n//       <Scheduler data={data} height={660}>\r\n//         <ViewState\r\n//           defaultCurrentDate={currentDate}\r\n//           defaultCurrentViewName=\"Week\"\r\n//         />\r\n//         <EditingState onCommitChanges={commitChanges} />\r\n//         <EditRecurrenceMenu />\r\n\r\n//         <DayView startDayHour={10} endDayHour={24} />\r\n//         <WeekView startDayHour={10} endDayHour={19} />\r\n\r\n//         <Appointments appointmentComponent={myAppointment} />\r\n\r\n//         <Toolbar />\r\n//         <DateNavigator />\r\n//         <TodayButton />\r\n//         <ViewSwitcher />\r\n\r\n//         <AppointmentTooltip showOpenButton />\r\n//         <AppointmentForm />\r\n\r\n//         <Resources \r\n//         data={resources} \r\n//         // mainResourceName=\"question_id\"\r\n//          />\r\n//       </Scheduler>\r\n//     </Paper>\r\n//   );\r\n// }\r\n\r\n// export default Demo;\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\AssignmentTab\\FinalReport.js",["1899","1900","1901","1902","1903","1904","1905","1906","1907","1908","1909","1910","1911"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../../components/Records/Records\";\r\n\r\n\r\nfunction FinalReport() {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n  const [assignmentCount, setCountAssignment] = useState(\"\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [status, setStatus] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  console.log(\"current_date :\", current_date);\r\n  const [item] = useState(current_date);\r\n\r\n  useEffect(() => {\r\n    getAssignmentData();\r\n  }, []);\r\n\r\n  const getAssignmentData = () => {\r\n    axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setAssignmentDisplay(res.data.result);\r\n        setCountAssignment(res.data.result.length);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  //get category\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n    console.log(\"resetCategory ..\");\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n    console.log(\"resetData ..\");\r\n    reset();\r\n    setStatus([]);\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //assingmentStatus\r\n  const assingmentStatus = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setStatus(value);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"date_of_query\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.date_of_query);\r\n        var oldDate = row.date_of_query;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            {/* <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link> */}\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                routes: \"assignment\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"200px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                {row.client_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\r\n                {row.draft_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                {row.final_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                {row.delivery_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\r\n                {row.other_stage}\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Exp_Delivery_Date\",\r\n      text: \"Expected date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.Exp_Delivery_Date);\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"final_date\",\r\n      text: \"Actual date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.final_date);\r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    // {\r\n    //   text: \"Deliverable\",\r\n    //   dataField: \"\",\r\n    //   sort: true,\r\n    //   headerStyle: () => {\r\n    //     return { fontSize: \"12px\" };\r\n    //   },\r\n    //   formatter: function (cell, row) {\r\n    //     return (\r\n    //       <>\r\n    //         {!row.final_report == \"\" ? (\r\n    //           <div>\r\n    //             <a\r\n    //               href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.final_report}`}\r\n    //               target=\"_blank\"\r\n    //             >\r\n    //               <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\r\n    //               final\r\n    //             </a>\r\n    //           </div>\r\n    //         ) : row.assignement_draft_report ? (\r\n    //           <div>\r\n    //             <a\r\n    //               href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.assignement_draft_report}`}\r\n    //               target=\"_blank\"\r\n    //             >\r\n    //               <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\r\n    //               draft\r\n    //             </a>\r\n    //           </div>\r\n    //         ) : null}\r\n    //       </>\r\n    //     );\r\n    //   },\r\n    // },\r\n    {\r\n      text: \"TL name\",\r\n      dataField: \"tl_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n  ];\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(\"data :\", data);\r\n    console.log(\"selectedData :\", selectedData);\r\n    axios\r\n      .get(\r\n        `${baseUrl}/tl/getAssignments?assignment_status=Delivery_of_report&stages_status=1&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setAssignmentDisplay(res.data.result);\r\n            setRecords(res.data.result.length);\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"form-inline\">\r\n              <div class=\"form-group mb-2\">\r\n                <Select\r\n                  style={{ width: 130 }}\r\n                  placeholder=\"Select Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleCategory}\r\n                  value={selectedData}\r\n                >\r\n                  <Option value=\"1\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                  </Option>\r\n                  <Option value=\"2\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                  </Option>\r\n                </Select>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: 250 }}\r\n                  placeholder=\"Select Sub Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleSubCategory}\r\n                  value={store2}\r\n                  allowClear\r\n                >\r\n                  {tax2.map((p, index) => (\r\n                    <Option value={p.id} key={index}>\r\n                      {p.details}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary mb-2 ml-3\"\r\n                  onClick={resetCategory}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">From</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateFrom\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">To</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateTo\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  defaultValue={item}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                Search\r\n              </button>\r\n\r\n              <Reset />\r\n            </div>\r\n          </form>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignmentDisplay}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FinalReport;\r\n\r\n","E:\\Mazars_Pannel\\src\\components\\PendingForAllocation\\PendingForAllocation.js",["1912","1913","1914","1915","1916","1917","1918","1919","1920","1921","1922","1923","1924","1925","1926"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport History from \"./History\";\r\nimport Swal from \"sweetalert2\";\r\nimport Records from \"../../components/Records/Records\";\r\n\r\n\r\nfunction PendingAllocation({ CountPendingForAllocation }) {\r\n\r\n  const [pendingData, setPendingData] = useState([]);\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [history, setHistory] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = (key) => {\r\n    console.log(\"key\", key);\r\n    setModal(!modal);\r\n\r\n    fetch(`${baseUrl}/customers/getQueryHistory?q_id=${key}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/vnd.github.cloak-preview\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        setHistory(response.result);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getPendingForAllocation();\r\n  }, []);\r\n\r\n  const getPendingForAllocation = () => {\r\n    axios.get(`${baseUrl}/admin/pendingAllocation`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        // CountPendingForAllocation(res.data.result.length);\r\n        setPendingData(res.data.result);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.created);\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.id}`,\r\n                index: 1,\r\n                routes: \"queriestab\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n\r\n              {row.status} /\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {row.is_assigned === \"1\" ? (\r\n              <p style={{ color: \"green\", fontSize: \"10px\" }}>\r\n                Allocated to {row.tname} on\r\n                <p>{row.allocation_time}</p>\r\n              </p>\r\n            ) : (\r\n              <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                <div title=\"Assign to\">\r\n                  <Link\r\n                    to={`/admin/queryassing/${row.id}`}\r\n                  >\r\n                    <i class=\"fa fa-share\"></i>\r\n                  </Link>\r\n\r\n                </div>\r\n                <div title=\"Decline Query\">\r\n                  <Link\r\n                    to={`/admin/query_rejection/${row.id}`}\r\n                  >\r\n                    <i\r\n                      className=\"fa fa-trash\"\r\n                    ></i>\r\n                  </Link>\r\n                </div>\r\n\r\n                <div title=\"Send Message\">\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/admin/chatting/${row.id}`,\r\n                      obj: {\r\n                        message_type: \"4\",\r\n                        query_No: row.assign_no,\r\n                        query_id: row.id,\r\n                        routes: `/admin/queriestab`\r\n                      }\r\n                    }}\r\n                  >\r\n                    <i\r\n                      class=\"fa fa-comments-o\"\r\n                      style={{\r\n                        fontSize: 16,\r\n                        cursor: \"pointer\",\r\n                        marginLeft: \"8px\",\r\n                        color: \"blue\"\r\n                      }}\r\n                    ></i>\r\n                  </Link>\r\n                </div>\r\n\r\n              </div>\r\n\r\n\r\n\r\n            )}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"History\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-info btn-sm\"\r\n              onClick={() => toggle(row.id)}\r\n            >\r\n              History\r\n            </button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setPendingData}\r\n            getData={getPendingForAllocation}\r\n            pendingAlloation=\"pendingAlloation\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={pendingData}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n          <History history={history} toggle={toggle} modal={modal} />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PendingAllocation;\r\n  // axios\r\n    //   .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\r\n    //   .then(function (response) {\r\n    //     console.log(\"delete-\", response);\r\n    // if (response.data.code === 1) {\r\n    //   Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n    //   getTeamLeader();\r\n    // } else {\r\n    //   Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n    // }\r\n\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(\"erroror - \", error);\r\n    //   });\r\n\r\n\r\n/* <td style={{ textAlign: \"center\" }}>\r\n                      {p.is_assigned === \"1\" && (\r\n                        <p style={{ color: \"green\" }}>\r\n                          <i class=\"fa fa-circle\"\r\n                          style={{fontSize:\"10px\" ,marginRight:\"4px\"}}>\r\n                            </i>\r\n                            {p.allocation_time}\r\n                          </p>\r\n                      )}\r\n\r\n                      {p.reject === \"3\" && (\r\n                        <p style={{ color: \"red\" }}>\r\n                          Query Rejected By {p.tname}\r\n                        </p>\r\n                      )}\r\n                    </td> */\r\n\r\n//   <Modal isOpen={addModal} toggle={addHandler} size=\"md\">\r\n//   <ModalHeader toggle={addHandler}>Show history</ModalHeader>\r\n//   <ModalBody>\r\n// <table class=\"table table-bordered\">\r\n//   <thead>\r\n//     <tr>\r\n//       <th scope=\"col\">Titles</th>\r\n//       <th scope=\"col\">Data</th>\r\n//     </tr>\r\n//   </thead>\r\n\r\n//   {history.length > 0\r\n//     ? history.map((p, i) => (\r\n//         <tbody>\r\n//           <tr>\r\n//             <th scope=\"row\">Name</th>\r\n//             <td>{p.name}</td>\r\n//           </tr>\r\n\r\n//           <tr>\r\n//             <th scope=\"row\">Date of Allocation</th>\r\n//             <td>{ChangeFormateDate(p.date_of_allocation)}</td>\r\n//           </tr>\r\n//           <tr>\r\n//             <th scope=\"row\">Query No</th>\r\n//             <td>{p.assign_no}</td>\r\n//           </tr>\r\n//           <tr>\r\n//             <th scope=\"row\">Status</th>\r\n//             <td>{p.status}</td>\r\n//           </tr>\r\n//         </tbody>\r\n//       ))\r\n//     : null}\r\n// </table>\r\n//   </ModalBody>\r\n// </Modal>\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\AssignmentTab\\DraftReport.js",["1927","1928","1929","1930","1931","1932","1933","1934","1935","1936","1937","1938","1939"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../../components/Records/Records\";\r\n\r\n\r\nfunction DraftReport() {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n  const [assignmentCount, setCountAssignment] = useState(\"\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [status, setStatus] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  console.log(\"current_date :\", current_date);\r\n  const [item] = useState(current_date);\r\n\r\n  useEffect(() => {\r\n    getAssignmentData();\r\n  }, []);\r\n\r\n  const getAssignmentData = () => {\r\n    axios.get(`${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setAssignmentDisplay(res.data.result);\r\n        setCountAssignment(res.data.result.length);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  //get category\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n    console.log(\"resetCategory ..\");\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n    console.log(\"resetData ..\");\r\n    reset();\r\n    setStatus([]);\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //assingmentStatus\r\n  const assingmentStatus = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setStatus(value);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"date_of_query\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.date_of_query);\r\n        var oldDate = row.date_of_query;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            {/* <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link> */}\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                routes: \"assignment\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"200px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                {row.client_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\r\n                {row.draft_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                {row.final_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                {row.delivery_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\r\n                {row.other_stage}\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Exp_Delivery_Date\",\r\n      text: \"Expected date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.Exp_Delivery_Date);\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"final_date\",\r\n      text: \"Actual date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.final_date);\r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    // {\r\n    //   text: \"Deliverable\",\r\n    //   dataField: \"\",\r\n    //   sort: true,\r\n    //   headerStyle: () => {\r\n    //     return { fontSize: \"12px\" };\r\n    //   },\r\n    //   formatter: function (cell, row) {\r\n    //     return (\r\n    //       <>\r\n    //         {!row.final_report == \"\" ? (\r\n    //           <div>\r\n    //             <a\r\n    //               href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.final_report}`}\r\n    //               target=\"_blank\"\r\n    //             >\r\n    //               <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\r\n    //               final\r\n    //             </a>\r\n    //           </div>\r\n    //         ) : row.assignement_draft_report ? (\r\n    //           <div>\r\n    //             <a\r\n    //               href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.assignement_draft_report}`}\r\n    //               target=\"_blank\"\r\n    //             >\r\n    //               <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\r\n    //               draft\r\n    //             </a>\r\n    //           </div>\r\n    //         ) : null}\r\n    //       </>\r\n    //     );\r\n    //   },\r\n    // },\r\n    {\r\n      text: \"TL name\",\r\n      dataField: \"tl_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n  ];\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(\"data :\", data);\r\n    console.log(\"selectedData :\", selectedData);\r\n    axios\r\n      .get(\r\n        `${baseUrl}/tl/getAssignments?assignment_status=Draft_Report&stages_status=1&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setAssignmentDisplay(res.data.result);\r\n            setRecords(res.data.result.length);\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"form-inline\">\r\n              <div class=\"form-group mb-2\">\r\n                <Select\r\n                  style={{ width: 130 }}\r\n                  placeholder=\"Select Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleCategory}\r\n                  value={selectedData}\r\n                >\r\n                  <Option value=\"1\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                  </Option>\r\n                  <Option value=\"2\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                  </Option>\r\n                </Select>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: 250 }}\r\n                  placeholder=\"Select Sub Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleSubCategory}\r\n                  value={store2}\r\n                  allowClear\r\n                >\r\n                  {tax2.map((p, index) => (\r\n                    <Option value={p.id} key={index}>\r\n                      {p.details}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary mb-2 ml-3\"\r\n                  onClick={resetCategory}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">From</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateFrom\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">To</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateTo\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  defaultValue={item}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n\r\n\r\n\r\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                Search\r\n              </button>\r\n\r\n              <Reset />\r\n            </div>\r\n          </form>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignmentDisplay}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DraftReport;\r\n\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\AssignmentTab\\AllAssignment.js",["1940","1941","1942","1943","1944","1945","1946","1947","1948","1949","1950","1951","1952","1953","1954","1955","1956","1957"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../../components/Records/Records\";\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\n\r\n\r\nfunction AssignmentComponent() {\r\n  const userid = window.localStorage.getItem(\"adminkey\");\r\n\r\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n  const { Option, OptGroup } = Select;\r\n  const [assignmentCount, setCountAssignment] = useState(\"\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [status, setStatus] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n  const [hide, setHide] = useState();\r\n  const [report, setReport] = useState();\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  console.log(\"current_date :\", current_date);\r\n  const [item] = useState(current_date);\r\n\r\n\r\n  const [reportModal, setReportModal] = useState(false);\r\n  const ViewReport = (key) => {\r\n    console.log(\"key - \", key);\r\n    setReportModal(!reportModal);\r\n    setReport(key);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getAssignmentData();\r\n  }, []);\r\n\r\n  const getAssignmentData = () => {\r\n    axios.get(`${baseUrl}/tl/getAssignments`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setAssignmentDisplay(res.data.result);\r\n        setCountAssignment(res.data.result.length);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n  //get category\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n    console.log(\"resetCategory ..\");\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n    console.log(\"resetData ..\");\r\n    reset();\r\n    setStatus([]);\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getAssignmentData();\r\n  };\r\n\r\n  //assingmentStatus\r\n  const assingmentStatus = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setStatus(value);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"date_of_query\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.date_of_query);\r\n        var oldDate = row.date_of_query;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            {/* <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link> */}\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                routes: \"assignment\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"200px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.paid_status == \"2\" &&\r\n                <p>\r\n                  <span style={{ color: \"red\" }}>Payment Declined</span>\r\n                </p>\r\n              }\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Client Discussion :</span>\r\n                {row.client_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Draft Report :</span>\r\n                {row.draft_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Final Discussion :</span>\r\n                {row.final_discussion}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Delivery of Final Report :</span>\r\n                {row.delivery_report}\r\n              </p>\r\n              <p>\r\n                <span style={{ fontWeight: \"bold\" }}>Awaiting Completion :</span>\r\n                {row.other_stage}\r\n              </p>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Exp_Delivery_Date\",\r\n      text: \"Expected date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.Exp_Delivery_Date);\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"final_date\",\r\n      text: \"Actual date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.final_date);\r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00 00:00:00\") {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Deliverable\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {\r\n              row.paid_status == \"2\" ? null :\r\n                <div>\r\n                  {row.assignement_draft_report || row.final_report ?\r\n                    <div title=\"View All Report\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => ViewReport(row.assign_no)}\r\n                    >\r\n                      <DescriptionOutlinedIcon color=\"secondary\" />\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n                </div>\r\n            }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"TL name\",\r\n      dataField: \"tl_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"75px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n\r\n            {\r\n              row.paid_status == \"2\" ? null :\r\n                <div title=\"Send Message\">\r\n                  <Link\r\n                    to={{\r\n                      pathname: `/admin/chatting/${row.q_id}`,\r\n                      obj: {\r\n                        message_type: \"3\",\r\n                        query_No: row.assign_no,\r\n                        query_id: row.q_id,\r\n                        routes: `/admin/assignment`\r\n                      }\r\n                    }}\r\n                  >\r\n                    <i\r\n                      class=\"fa fa-comments-o\"\r\n                      style={{\r\n                        fontSize: 16,\r\n                        cursor: \"pointer\",\r\n                        marginLeft: \"8px\",\r\n                        color: \"blue\"\r\n                      }}\r\n                    ></i>\r\n                  </Link>\r\n                </div>\r\n            }\r\n\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(\"data :\", data);\r\n    console.log(\"selectedData :\", selectedData);\r\n    axios\r\n      .get(\r\n        `${baseUrl}/tl/getAssignments?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&assignment_status=${status}&stages_status=${data.p_status}&pcat_id=${selectedData}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          if (res.data.result) {\r\n            setAssignmentDisplay(res.data.result);\r\n            setRecords(res.data.result.length);\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const disabledHandler = (e) => {\r\n    setHide(e.target.value);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"form-inline\">\r\n              <div class=\"form-group mb-2\">\r\n                <Select\r\n                  style={{ width: 130 }}\r\n                  placeholder=\"Select Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleCategory}\r\n                  value={selectedData}\r\n                >\r\n                  <Option value=\"1\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                  </Option>\r\n                  <Option value=\"2\" label=\"Compilance\">\r\n                    <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                  </Option>\r\n                </Select>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  style={{ width: 250 }}\r\n                  placeholder=\"Select Sub Category\"\r\n                  defaultValue={[]}\r\n                  onChange={handleSubCategory}\r\n                  value={store2}\r\n                  allowClear\r\n                >\r\n                  {tax2.map((p, index) => (\r\n                    <Option value={p.id} key={index}>\r\n                      {p.details}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary mb-2 ml-3\"\r\n                  onClick={resetCategory}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">From</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateFrom\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <label className=\"form-select form-control\">To</label>\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"p_dateTo\"\r\n                  className=\"form-select form-control\"\r\n                  ref={register}\r\n                  defaultValue={item}\r\n                  max={item}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"form-group mx-sm-1  mb-2\">\r\n                <select\r\n                  className=\"form-select form-control\"\r\n                  name=\"p_status\"\r\n                  ref={register}\r\n                  style={{ height: \"33px\" }}\r\n                  onChange={(e) => disabledHandler(e)}\r\n                >\r\n                  <option value=\"\">--select--</option>\r\n                  <option value=\"1\">Inprogress</option>\r\n                  <option value=\"2\">Completed</option>\r\n                  <option value=\"3\">Payment Declined</option>\r\n                </select>\r\n              </div>\r\n\r\n              {\r\n                hide == \"3\" ?\r\n                  \"\"\r\n                  :\r\n                  <div class=\"form-group mx-sm-1  mb-2\">\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      style={{ width: 210 }}\r\n                      placeholder=\"Select stages\"\r\n                      defaultValue={[]}\r\n                      onChange={assingmentStatus}\r\n                      value={status}\r\n                      allowClear\r\n                    >\r\n                      <Option value=\"Client_Discussion\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Client Discussion\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Draft_Report\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Draft reports\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Final_Discussion\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Final Discussion\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Delivery_of_report\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">\r\n                          Delivery of Final Reports\r\n                        </div>\r\n                      </Option>\r\n                      <Option value=\"Completed\" label=\"Compilance\">\r\n                        <div className=\"demo-option-label-item\">Awaiting Completion</div>\r\n                      </Option>\r\n                    </Select>\r\n                  </div>\r\n\r\n              }\r\n\r\n              <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                Search\r\n              </button>\r\n\r\n              <Reset />\r\n            </div>\r\n          </form>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignmentDisplay}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n\r\n          <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            getPendingforAcceptance={getAssignmentData}\r\n          />\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssignmentComponent;\r\n\r\n{\r\n  /*            \r\n            <p style={{ fontSize: \"10px\" }}>{row.draft_report}</p>\r\n            <p style={{ fontSize: \"10px\" }}>{row.final_discussion}</p>\r\n            <p style={{ fontSize: \"10px\" }}>{row.draft_report}</p>\r\n            <p style={{ fontSize: \"10px\" }}>{row.other_stage}</p> */\r\n}\r\n{\r\n  /* <div>\r\n                      <p>\r\n                        <span style={{ fontWeight: \"bold\" }}>\r\n                          Client Discussion :\r\n                        </span>\r\n                        {p.client_discussion}\r\n                      </p>\r\n                      <p>\r\n                        <span style={{ fontWeight: \"bold\" }}>Draft report :</span>\r\n                        {p.draft_report}\r\n                      </p>\r\n                      <p>\r\n                        <span style={{ fontWeight: \"bold\" }}>\r\n                          Final Discussion :\r\n                        </span>\r\n                        {p.final_discussion}\r\n                      </p>\r\n                      <p>\r\n                        <span style={{ fontWeight: \"bold\" }}>\r\n                          Delivery of report :\r\n                        </span> \r\n                        {p.delivery_report}\r\n                      </p>\r\n                    </div> */\r\n}\r\n\r\n/* <div className=\"mb-3\">\r\n                      <select\r\n                        className=\"form-select form-control\"\r\n                        name=\"p_purpose\"\r\n                      >\r\n                        <option >status</option>\r\n                        <option >Client Discussion : {p.client_discussion}</option>\r\n                        <option >Draft report : {p.draft_report}</option>\r\n                        <option >Final Discussion : {p.final_discussion}</option>\r\n                        <option >Delivery of report : {p.delivery_report}</option>\r\n                      </select>\r\n                    </div> */\r\n//  {/* <AdminFilter\r\n//             setData={setAssignmentDisplay}\r\n//             getData={getAssignmentData}\r\n//             assignment=\"assignment\"\r\n//           />\r\n{/* <div>\r\n                {!row.final_report == \"\" ? (\r\n                  <div title=\"Final Report\">\r\n                    <a\r\n                      href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.final_report}`}\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\r\n                    </a>\r\n                  </div>\r\n                ) : row.assignement_draft_report ? (\r\n                  <div title=\"Draft Report\">\r\n                    <a\r\n                      href={`http://65.0.220.156/mazarapi/assets/upload/report/${row.assign_no}/${row.assignement_draft_report}`}\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i class=\"fa fa-file-text\" style={{ fontSize: \"16px\" }}></i>{\" \"}\r\n                    </a>\r\n                  </div>\r\n                ) : null}\r\n              </div> */}","E:\\Mazars_Pannel\\src\\config\\services\\TaxProffesional.js",["1958"],"import http from \"../http/http-common\";\r\n\r\nconst getAll = () => {\r\n  return http.get(\"/tp/getTaxProfessional\");\r\n};\r\n\r\nconst get = (id) => {\r\n  return http.get(`/tp/getTaxProfessional?id=${id}`);\r\n};\r\n\r\nconst create = (data) => {\r\n  return http.post(\"/tutorials\", data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  return http.delete(`/tl/deleteTeamLeader?id=${id}`);\r\n};\r\n\r\nconst editTL = (id) => {\r\n  return http.get(`/tl/getTeamLeader?id=212`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  get,\r\n  create,\r\n  remove,\r\n  editTL\r\n};\r\n","E:\\Mazars_Pannel\\src\\config\\services\\QueryDetails.js",["1959"],"import http from \"../http/http-common\";\r\n\r\nconst getAll = () => {\r\n  return http.get(\"/customers/getFeedback\");\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n};\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\AgoraVideoCall\\index.jsx",["1960","1961","1962","1963","1964","1965","1966","1967"],"import React from \"react\";\r\nimport { merge } from \"lodash\";\r\nimport AgoraRTC from \"agora-rtc-sdk\";\r\n\r\nimport \"./canvas.css\";\r\nimport \"../../../assets/fonts/css/icons.css\";\r\n\r\nconst tile_canvas = {\r\n  \"1\": [\"span 12/span 24\"],\r\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\r\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\r\n  \"4\": [\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12/7/13\",\r\n  ],\r\n  \"5\": [\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"6\": [\r\n    \"span 3/span 4/13/7\",\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 3/span 4/13/23\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"7\": [\r\n    \"span 3/span 4/13/5\",\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 3/span 4/13/25\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n};\r\n\r\n/**\r\n * @prop appId uid\r\n * @prop transcode attendeeMode videoProfile channel baseMode\r\n */\r\n\r\n\r\nclass AgoraCanvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.client = {};\r\n    this.localStream = {};\r\n    this.shareClient = {};\r\n    this.shareStream = {};\r\n    this.state = {\r\n      displayMode: \"pip\",\r\n      streamList: [],\r\n      readyState: false,\r\n      stateSharing: false,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    let $ = this.props;\r\n    // init AgoraRTC local client\r\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\r\n    this.client.init($.appId, () => {\r\n      console.log(\"AgoraRTC client initialized\");\r\n      this.subscribeStreamEvents();\r\n\r\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\r\n        this.state.uid = uid;\r\n        console.log(\"User \" + uid + \" join channel successfully\");\r\n        console.log(\"At \" + new Date().toLocaleTimeString());\r\n        // create local stream\r\n        // It is not recommended to setState in function addStream\r\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\r\n        this.localStream.init(\r\n          () => {\r\n            if ($.attendeeMode !== \"audience\") {\r\n              this.addStream(this.localStream, true);\r\n              this.client.publish(this.localStream, (err) => {\r\n                console.log(\"Publish local stream error: \" + err);\r\n              });\r\n            }\r\n            this.setState({ readyState: true });\r\n          },\r\n          (err) => {\r\n            console.log(\"getUserMedia failed\", err);\r\n            this.setState({ readyState: true });\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // add listener to control btn group\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    let btnGroup = document.querySelector(\".ag-btn-group\");\r\n    canvas.addEventListener(\"mousemove\", () => {\r\n      if (global._toolbarToggle) {\r\n        clearTimeout(global._toolbarToggle);\r\n      }\r\n      btnGroup.classList.add(\"active\");\r\n      global._toolbarToggle = setTimeout(function () {\r\n        btnGroup.classList.remove(\"active\");\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  // componentWillUnmount () {\r\n  //     // remove listener\r\n  //     let canvas = document.querySelector('#ag-canvas')\r\n  //     canvas.removeEventListener('mousemove')\r\n  // }\r\n\r\n  componentDidUpdate() {\r\n    // rerendering\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    // pip mode (can only use when less than 4 people in channel)\r\n    if (this.state.displayMode === \"pip\") {\r\n      let no = this.state.streamList.length;\r\n      if (no > 4) {\r\n        this.setState({ displayMode: \"tile\" });\r\n        return;\r\n      }\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        if (index === no - 1) {\r\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n        } else {\r\n          dom.setAttribute(\r\n            \"style\",\r\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\r\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\r\n          );\r\n        }\r\n\r\n        item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // tile mode\r\n    else if (this.state.displayMode === \"tile\") {\r\n      let no = this.state.streamList.length;\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\r\n        item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // screen share mode (tbd)\r\n    else if (this.state.displayMode === \"share\") {\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.client && this.client.unpublish(this.localStream);\r\n    this.localStream && this.localStream.close();\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n    }\r\n    this.client &&\r\n      this.client.leave(\r\n        () => {\r\n          console.log(\"Client succeed to leave.\");\r\n        },\r\n        () => {\r\n          console.log(\"Client failed to leave.\");\r\n        }\r\n      );\r\n  }\r\n\r\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: true,\r\n      screen: false,\r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n\r\n  subscribeStreamEvents = () => {\r\n    let rt = this;\r\n    rt.client.on(\"stream-added\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"New stream added: \" + stream.getId());\r\n      console.log(\"At \" + new Date().toLocaleTimeString());\r\n      console.log(\"Subscribe \", stream);\r\n      rt.client.subscribe(stream, function (err) {\r\n        console.log(\"Subscribe stream failed\", err);\r\n      });\r\n    });\r\n\r\n    rt.client.on(\"peer-leave\", function (evt) {\r\n      console.log(\"Peer has left: \" + evt.uid);\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(evt);\r\n      rt.removeStream(evt.uid);\r\n    });\r\n\r\n    rt.client.on(\"stream-subscribed\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"Got stream-subscribed event\");\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(\"Subscribe remote stream successfully: \" + stream.getId());\r\n      console.log(evt);\r\n      rt.addStream(stream);\r\n    });\r\n\r\n    rt.client.on(\"stream-removed\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"Stream removed: \" + stream.getId());\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(evt);\r\n      rt.removeStream(stream.getId());\r\n    });\r\n  };\r\n\r\n  removeStream = (uid) => {\r\n    this.state.streamList.map((item, index) => {\r\n      if (item.getId() === uid) {\r\n        item.close();\r\n        let element = document.querySelector(\"#ag-item-\" + uid);\r\n        if (element) {\r\n          element.parentNode.removeChild(element);\r\n        }\r\n        let tempList = [...this.state.streamList];\r\n        tempList.splice(index, 1);\r\n        this.setState({\r\n          streamList: tempList,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  addStream = (stream, push = false) => {\r\n    let repeatition = this.state.streamList.some((item) => {\r\n      return item.getId() === stream.getId();\r\n    });\r\n    if (repeatition) {\r\n      return;\r\n    }\r\n    if (push) {\r\n      this.setState({\r\n        streamList: this.state.streamList.concat([stream]),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        streamList: [stream].concat(this.state.streamList),\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCamera = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isVideoOn()\r\n      ? this.localStream.disableVideo()\r\n      : this.localStream.enableVideo();\r\n  };\r\n\r\n  handleMic = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isAudioOn()\r\n      ? this.localStream.disableAudio()\r\n      : this.localStream.enableAudio();\r\n  };\r\n\r\n  switchDisplay = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    if (this.state.displayMode === \"pip\") {\r\n      this.setState({ displayMode: \"tile\" });\r\n    } else if (this.state.displayMode === \"tile\") {\r\n      this.setState({ displayMode: \"pip\" });\r\n    } else if (this.state.displayMode === \"share\") {\r\n      // do nothing or alert, tbd\r\n    } else {\r\n      console.error(\"Display Mode can only be tile/pip/share\");\r\n    }\r\n  };\r\n\r\n  hideRemote = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    let list;\r\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\r\n    list = Array.from(\r\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n    );\r\n    list.map((item) => {\r\n      if (item.style.display !== \"none\") {\r\n        item.style.display = \"none\";\r\n      } else {\r\n        item.style.display = \"block\";\r\n      }\r\n    });\r\n  };\r\n\r\n  handleExit = (e) => {\r\n    if (e.currentTarget.classList.contains(\"disabled\")) {\r\n      return;\r\n    }\r\n    try {\r\n      this.client && this.client.unpublish(this.localStream);\r\n      this.localStream && this.localStream.close();\r\n      if (this.state.stateSharing) {\r\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n        this.shareStream && this.shareStream.close();\r\n      }\r\n      this.client &&\r\n        this.client.leave(\r\n          () => {\r\n            console.log(\"Client succeed to leave.\");\r\n          },\r\n          () => {\r\n            console.log(\"Client failed to leave.\");\r\n          }\r\n        );\r\n    } finally {\r\n      this.setState({ readyState: false });\r\n      this.client = null;\r\n      this.localStream = null;\r\n      // redirect to index\r\n      window.location.hash = \"/teamleader/schedule\";\r\n    }\r\n  };\r\n\r\n  sharingScreen = (e) => {\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n      this.state.stateSharing = false;\r\n    } else {\r\n      this.state.stateSharing = true;\r\n      let $ = this.props;\r\n      // init AgoraRTC local client\r\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\r\n\r\n      this.shareClient.init($.appId, () => {\r\n        console.log(\"AgoraRTC client initialized\");\r\n\r\n        this.subscribeStreamEvents();\r\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\r\n          this.state.uid = uid;\r\n          console.log(\"User \" + uid + \" join channel successfully\");\r\n          console.log(\"At \" + new Date().toLocaleTimeString());\r\n          // create local stream\r\n          // It is not recommended to setState in function addStream\r\n          \r\n          this.shareStream = this.streamInitSharing(\r\n            uid,\r\n            $.attendeeMode,\r\n            $.videoProfile\r\n          );\r\n          this.shareStream.init(\r\n            () => {\r\n              if ($.attendeeMode !== \"audience\") {\r\n                this.addStream(this.shareStream, true);\r\n                this.shareClient.publish(this.shareStream, (err) => {\r\n                  console.log(\"Publish local stream error: \" + err);\r\n                });\r\n              }\r\n              this.setState({ readyState: true });\r\n            },\r\n            (err) => {\r\n              console.log(\"getUserMedia failed\", err);\r\n              this.setState({ readyState: true });\r\n            }\r\n          );\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: false,\r\n      screen: true,\r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n  render() {\r\n\r\n    const style = {\r\n      display: \"grid\",\r\n      gridGap: \"50px 26px\",\r\n      alignItems: \"center\",\r\n      justifyItems: \"center\",\r\n      gridTemplateRows: \"repeat(12, auto)\",\r\n      gridTemplateColumns: \"repeat(24, auto)\",\r\n    };\r\n    \r\n    const videoControlBtn =\r\n      this.props.attendeeMode === \"video\" ? (\r\n        <span\r\n          onClick={this.handleCamera}\r\n          className=\"ag-btn videoControlBtn\"\r\n          title=\"Enable/Disable Video\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-camera\"></i>\r\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n\r\n    const audioControlBtn =\r\n      this.props.attendeeMode !== \"audience\" ? (\r\n        <span\r\n          onClick={this.handleMic}\r\n          className=\"ag-btn audioControlBtn\"\r\n          title=\"Enable/Disable Audio\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-mic\"></i>\r\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n\r\n    const switchDisplayBtn = (\r\n      <span\r\n        onClick={this.switchDisplay}\r\n        className={\r\n          this.state.streamList.length > 4\r\n            ? \"ag-btn displayModeBtn disabled\"\r\n            : \"ag-btn displayModeBtn\"\r\n        }\r\n        title=\"Switch Display Mode\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\r\n      </span>\r\n    );\r\n\r\n\r\n    const hideRemoteBtn = (\r\n      <span\r\n        className={\r\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\r\n            ? \"ag-btn disableRemoteBtn disabled\"\r\n            : \"ag-btn disableRemoteBtn\"\r\n        }\r\n        onClick={this.hideRemote}\r\n        title=\"Hide Remote Stream\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\r\n      </span>\r\n    );\r\n\r\n    const exitBtn = (\r\n      <span\r\n        onClick={this.handleExit}\r\n        className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Exit\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-leave\"></i>\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <div id=\"ag-canvas\" style={style}>\r\n        <div className=\"ag-btn-group\">\r\n          {exitBtn}\r\n          {videoControlBtn}\r\n          {audioControlBtn}\r\n          {\r\n            <span\r\n              onClick={this.sharingScreen}\r\n              className=\"ag-btn shareScreenBtn\"\r\n              title=\"Share/unShare Screen\"\r\n            >\r\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\r\n            </span>\r\n          }\r\n          {switchDisplayBtn}\r\n          {hideRemoteBtn}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgoraCanvas;\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\meeting\\index.jsx",[],"E:\\Mazars_Pannel\\src\\pages\\TL\\SendProposal\\Payment.js",["1968","1969","1970"],"import React from \"react\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Alerts from \"../../../common/Alerts\";\r\n\r\nexport default class Payment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            values: [],\r\n            dates: [],\r\n            error : \"\"\r\n            // items: []\r\n        };\r\n    }\r\n\r\n    handleChange1(i, e) {\r\n        console.log(\"props\", this.props.totalAmount)\r\n        \r\n        if(isNaN(e.target.value)) {\r\n            Alerts.ErrorNormal(\"Please enter only digit\")\r\n        }\r\n        var totalAmount = this.props.totalAmount\r\n\r\n        this.setState({\r\n            values: { ...this.state.values, [i]: e.target.value }\r\n        },\r\n            () => {\r\n                this.props.paymentAmount(this.state.values)\r\n            })\r\n\r\n\r\n        // this.props.paymentAmount(this.state.values)\r\n        \r\n    }\r\n\r\n    handleChange2(i, e) {\r\n        this.setState({\r\n            dates: { ...this.state.dates, [i]: e.target.value }\r\n        },\r\n            () => {\r\n                this.props.paymentDate(this.state.dates)\r\n            })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        var fieldsArray = [];\r\n\r\n        for (var i = 1; i <= this.props.installment; i++) {\r\n            fieldsArray.push(\r\n                <div className=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <label>Amount</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name={this.state.values[i]}\r\n                            onChange={this.handleChange1.bind(this, i)}\r\n                        />\r\n                        <p style={{\"color\" : \"red\"}}>{this.state.error}</p>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <label>Due Dates</label>\r\n                        <input\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            name={this.state.dates[i]}\r\n                            onChange={this.handleChange2.bind(this, i)}\r\n                            min={this.props.item}\r\n                        />\r\n                    </div>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        console.log(\"values state\", this.state.values);\r\n        console.log(\"dates state\", this.state.dates);\r\n\r\n        // console.log(\" items\", [...]);\r\n\r\n\r\n        return (\r\n            <div className=\"inputs\">\r\n                {fieldsArray}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n// import React from \"react\";\r\n\r\n\r\n// export default class Payment extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             values: [],\r\n//             dates: [],          \r\n//         };\r\n//     }\r\n\r\n//     handleChange1(i, e) {\r\n//         console.log(\"props\", this.props.totalAmount)\r\n\r\n    \r\n\r\n//         this.setState({\r\n//             values: { ...this.state.values, [i]: e.target.value }\r\n//         },\r\n//             () => {\r\n//                 this.props.paymentAmount(this.state.values)\r\n//             })\r\n//     }\r\n\r\n//     handleChange2(i, e) {\r\n//         this.setState({\r\n//             dates: { ...this.state.dates, [i]: e.target.value }\r\n//         },\r\n//             () => {\r\n//                 this.props.paymentDate(this.state.dates)\r\n//             })\r\n//     }\r\n\r\n\r\n//     render() {\r\n//         var fieldsArray = [];\r\n\r\n//         for (var i = 1; i <= this.props.installment; i++) {\r\n//             fieldsArray.push(\r\n//                 <div className=\"row\">\r\n//                     <div class=\"col-md-6\">\r\n//                         <label>Amount</label>\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             className=\"form-control\"\r\n//                             name={this.state.values[i]}\r\n//                             onChange={this.handleChange1.bind(this, i)}\r\n//                         />\r\n//                     </div>\r\n//                     <div class=\"col-md-6\">\r\n//                         <label>Due Dates</label>\r\n//                         <input\r\n//                             type=\"date\"\r\n//                             className=\"form-control\"\r\n//                             name={this.state.dates[i]}\r\n//                             onChange={this.handleChange2.bind(this, i)}\r\n//                             min={this.props.item}\r\n//                         />\r\n//                     </div>\r\n//                 </div >\r\n//             );\r\n//         }\r\n\r\n//         console.log(\"values state\", this.state.values);\r\n//         console.log(\"dates state\", this.state.dates);\r\n\r\n//         return (\r\n//             <div className=\"inputs\">\r\n//                 {fieldsArray}\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n // var fieldsArray = [];\r\n  // for (var i = 0; i < installment; i++) {\r\n  //   fieldsArray.push(\r\n  //     <div className=\"row\">\r\n  //       <div class=\"col-md-6\">\r\n  //         <label>Amount</label>\r\n  //         <input\r\n  //           type='text'\r\n  //           className=\"form-control\"\r\n  //           name={amount[i]}\r\n  //           onChange={(e) => handleChange1(e, i)}\r\n  //         />\r\n  //       </div>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n\r\n//   const handleChange1 = (e, i) => {\r\n//     console.log(\"val-\", e.target.value);\r\n//     console.log(\"i-\", i);\r\n\r\n//     const { name, value } = e.target\r\n\r\n//     let values = [...amount];\r\n//     values[i] = value\r\n//     setAmount({ values });\r\n//   };\r\n","E:\\Mazars_Pannel\\src\\components\\Search-Filter\\AdminFilter.js",["1971","1972","1973","1974","1975","1976","1977","1978","1979","1980","1981","1982","1983","1984","1985","1986","1987","1988","1989","1990"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Select } from \"antd\";\r\n\r\nfunction AdminFilter(props) {\r\n  const { Option } = Select;\r\n  const { handleSubmit, register, errors, reset } = useForm();\r\n\r\n  const {\r\n    records,\r\n    setRecords,\r\n    setData,\r\n    getData,\r\n    acceptedProposal,\r\n    pendingAcceptedProposal,\r\n    declinedProposal,\r\n    declinedQueries,\r\n    pendingForProposal,\r\n    pendingAlloation,\r\n    allQueries,\r\n    assignment,\r\n    paymentStatus,\r\n    allProposal\r\n  } = props;\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n  const [store2, setStore2] = useState([]);\r\n\r\n  var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n  console.log(\"current_date :\", current_date);\r\n  const [item] = useState(current_date);\r\n\r\n\r\n  //get category\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios\r\n        .get(`${baseUrl}/customers/getCategory?pid=${selectedData}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setTax2(res.data.result);\r\n          }\r\n        });\r\n    };\r\n    getSubCategory();\r\n  }, [selectedData]);\r\n\r\n  //handleCategory\r\n  const handleCategory = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setSelectedData(value);\r\n    setStore2([]);\r\n  };\r\n\r\n  //handleSubCategory\r\n  const handleSubCategory = (value) => {\r\n    console.log(`selected ${value}`);\r\n    setStore2(value);\r\n  };\r\n\r\n  //reset category\r\n  const resetCategory = () => {\r\n    console.log(\"resetCategory ..\");\r\n    setSelectedData([]);\r\n    setTax2([])\r\n    setStore2([]);\r\n    getData();\r\n  };\r\n\r\n  //reset date\r\n  const resetData = () => {\r\n    console.log(\"resetData ..\");\r\n    reset();\r\n    setSelectedData([]);\r\n    setStore2([]);\r\n    getData();\r\n  };\r\n\r\n\r\n  const onSubmit = (data) => {\r\n\r\n    console.log(\"data\", data)\r\n    // console.log(\"End data :\", data.p_dateTo);\r\n\r\n    // var dateto = data.p_dateTo\r\n\r\n    // var end_date;\r\n    // if (dateto == \"\") {\r\n\r\n    //   console.log(\"call\")\r\n\r\n    // var current_date = new Date().getFullYear() + '-' + (\"0\" + (new Date().getMonth() + 1)).slice(-2) + '-' + (\"0\" + new Date().getDate()).slice(-2)\r\n    // console.log(\"current_date :\", current_date);\r\n    //   end_date = current_date\r\n\r\n    //   // if (current_date) {\r\n    //   //   setItem(current_date)\r\n    //   // }\r\n\r\n    // } else {\r\n    //   end_date = dateto\r\n    //   // setItem(dateto)\r\n\r\n    // }\r\n\r\n    console.log(\"item\", item)\r\n    console.log(\"data\", data)\r\n\r\n\r\n\r\n    if (acceptedProposal == \"acceptedProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/getProposals?status1=2&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (pendingAcceptedProposal == \"pendingAcceptedProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/getProposals?status1=${data.p_status}&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (declinedProposal == \"declinedProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/getProposals?&status=6&cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (declinedQueries == \"declinedQueries\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/declinedQueries?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (pendingForProposal == \"pendingForProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/pendingProposal?category=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (allQueries == \"allQueries\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/getAllQueries?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (pendingAlloation == \"pendingAlloation\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/pendingAllocation?category=${store2}&date1=${data.p_dateFrom}&date2=${data.p_dateTo}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (paymentStatus == \"paymentStatus\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/getUploadedProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (allProposal == \"allProposal\") {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/admin/getProposals?cat_id=${store2}&from=${data.p_dateFrom}&to=${data.p_dateTo}&status1=${data.p_status}&pcat_id=${selectedData}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result) {\r\n              setData(res.data.result);\r\n              setRecords(res.data.result.length);\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  const Reset = () => {\r\n    return (\r\n      <>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"btn btn-primary mx-sm-1 mb-2\"\r\n          onClick={() => resetData()}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 d-flex\">\r\n          <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div class=\"form-inline\">\r\n                <div class=\"form-group mb-2\">\r\n                  <Select\r\n                    style={{ width: 130 }}\r\n                    placeholder=\"Select Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleCategory}\r\n                    value={selectedData}\r\n                  >\r\n                    <Option value=\"1\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Direct Tax</div>\r\n                    </Option>\r\n                    <Option value=\"2\" label=\"Compilance\">\r\n                      <div className=\"demo-option-label-item\">Indirect Tax</div>\r\n                    </Option>\r\n                  </Select>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <Select\r\n                    mode=\"multiple\"\r\n                    style={{ width: 250 }}\r\n                    placeholder=\"Select Sub Category\"\r\n                    defaultValue={[]}\r\n                    onChange={handleSubCategory}\r\n                    value={store2}\r\n                    allowClear\r\n                  >\r\n                    {tax2.map((p, index) => (\r\n                      <Option value={p.id} key={index}>\r\n                        {p.details}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-primary mb-2 ml-3\"\r\n                    onClick={resetCategory}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">From</label>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateFrom\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <label className=\"form-select form-control\">To</label>\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_dateTo\"\r\n                    className=\"form-select form-control\"\r\n                    ref={register}\r\n                    defaultValue={item}\r\n                    max={item}\r\n                  />\r\n                </div>\r\n\r\n                <div class=\"form-group mx-sm-1  mb-2\">\r\n                  {allQueries == \"allQueries\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress Queries</option>\r\n                      <option value=\"2\">Completed Queries</option>\r\n                      <option value=\"3\">Declined Queries</option>\r\n\r\n                    </select>\r\n                  )}\r\n\r\n                  {pendingAcceptedProposal == \"pendingAcceptedProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"4\">Inprogress; Preparation</option>\r\n                      <option value=\"5\"> Inprogress; Acceptance</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {pendingForProposal == \"pendingForProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress; Preparation</option>\r\n                      <option value=\"2\"> Inprogress; Acceptance</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {allProposal == \"allProposal\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Inprogress Proposals</option>\r\n                      <option value=\"2\">Accepted Proposals</option>\r\n                      <option value=\"3\">Customer Declined Proposals</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {declinedQueries == \"declinedQueries\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Admin Declined; Queries</option>\r\n                      <option value=\"2\">Customer Declined; Queries</option>\r\n                      <option value=\"3\">Customer Declined; Proposals</option>\r\n                      <option value=\"4\">Customer Declined; Payment</option>\r\n                    </select>\r\n                  )}\r\n\r\n                  {paymentStatus == \"paymentStatus\" && (\r\n                    <select\r\n                      className=\"form-select form-control\"\r\n                      name=\"p_status\"\r\n                      ref={register}\r\n                      style={{ height: \"33px\" }}\r\n                    >\r\n                      <option value=\"\">--select--</option>\r\n                      <option value=\"1\">Unpaid</option>\r\n                      <option value=\"2\">Paid</option>\r\n                    </select>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" class=\"btn btn-primary mx-sm-1 mb-2\">\r\n                  Search\r\n                </button>\r\n                <Reset />\r\n\r\n                {/* <div class=\"form-group mb-2\">\r\n                  <label className=\"form-select form-control\"\r\n                  >Total Records : {records}</label>\r\n                </div> */}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminFilter;\r\n","E:\\Mazars_Pannel\\src\\components\\PendingForAllocation\\History.js",["1991","1992","1993","1994","1995","1996","1997"],"import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nfunction History({ history,toggle,modal }) {\r\n  //change date format\r\n  function ChangeFormateDate(oldDate) {\r\n    // console.log(\"date\", oldDate);\r\n    if (oldDate == null) {\r\n      return null;\r\n    }\r\n    return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n  }\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Name</th>\r\n                <th scope=\"row\">Query No</th>\r\n                <th scope=\"row\">Status</th>\r\n                <th scope=\"row\">Date of Allocation</th>\r\n                <th scope=\"row\">Notes</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {history.length > 0\r\n              ? history.map((p, i) => (\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>{i + 1}</td>\r\n                      <td>{p.name}</td>\r\n                      <td>{p.assign_no}</td>\r\n                      <td>{p.status}</td>\r\n                      <td>{ChangeFormateDate(p.date_of_allocation)}</td>\r\n                      <td>{p.notes}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\AssignmentTab\\ViewAllReport.js",["1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, ReportUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport CommonServices from \"../../../common/common\";\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"required discussion\"),\r\n});\r\n\r\n\r\nfunction ViewReport({\r\n  reportModal,\r\n  ViewReport,\r\n  report,\r\n  getPendingforAcceptance,\r\n}) {\r\n  const userId = window.localStorage.getItem(\"adminkey\");\r\n  const [data, setData] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"assign_no\", report);\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"stages_type\", 2);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/getstagesinfo`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          setData(response.data.result)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n\r\n  }, [report]);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={reportModal} toggle={ViewReport} size=\"md\" scrollable>\r\n        <ModalHeader toggle={ViewReport}>View All Reports</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"row\">S.No</th>\r\n                <th scope=\"row\">Date</th>\r\n                <th scope=\"row\">Document</th>\r\n                <th scope=\"row\">Report Type</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {data.length > 0\r\n              ? data.map((p, i) => (\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{i + 1}</td>\r\n                    <td>{CommonServices.removeTime(p.created_date)}</td>\r\n                    <td>\r\n                      {p.document && (\r\n                        <p style={{ display: \"flex\" }}>\r\n                          <a\r\n                            href={`${ReportUrl}/${report}/${p.document}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i class=\"fa fa-photo\"></i>\r\n                          </a>\r\n                          <p style={{ marginLeft: \"15px\" }}>{p.document}</p>\r\n                        </p>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {p.stages_type == 2 && \"Draft Report\" || p.stages_type == 3 && \"Final Report\"}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              ))\r\n              : null}\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewReport;\r\n","E:\\Mazars_Pannel\\src\\config\\http\\http-common.js",[],"E:\\Mazars_Pannel\\src\\pages\\Admin\\AgoraVideoCall\\index.jsx",["2012","2013","2014","2015","2016","2017","2018","2019"],"import React from \"react\";\r\nimport { merge } from \"lodash\";\r\nimport AgoraRTC from \"agora-rtc-sdk\";\r\n\r\nimport \"./canvas.css\";\r\nimport \"../../../assets/fonts/css/icons.css\";\r\n\r\nconst tile_canvas = {\r\n  \"1\": [\"span 12/span 24\"],\r\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\r\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\r\n  \"4\": [\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12/7/13\",\r\n  ],\r\n  \"5\": [\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"6\": [\r\n    \"span 3/span 4/13/7\",\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 3/span 4/13/23\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"7\": [\r\n    \"span 3/span 4/13/5\",\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 3/span 4/13/25\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n};\r\n\r\n/**\r\n * @prop appId uid\r\n * @prop transcode attendeeMode videoProfile channel baseMode\r\n */\r\n\r\n\r\nclass AgoraCanvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.client = {};\r\n    this.localStream = {};\r\n    this.shareClient = {};\r\n    this.shareStream = {};\r\n    this.state = {\r\n      displayMode: \"pip\",\r\n      streamList: [],\r\n      readyState: false,\r\n      stateSharing: false,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    let $ = this.props;\r\n    // init AgoraRTC local client\r\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\r\n    this.client.init($.appId, () => {\r\n      console.log(\"AgoraRTC client initialized\");\r\n      this.subscribeStreamEvents();\r\n\r\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\r\n        this.state.uid = uid;\r\n        console.log(\"User \" + uid + \" join channel successfully\");\r\n        console.log(\"At \" + new Date().toLocaleTimeString());\r\n        // create local stream\r\n        // It is not recommended to setState in function addStream\r\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\r\n        this.localStream.init(\r\n          () => {\r\n            if ($.attendeeMode !== \"audience\") {\r\n              this.addStream(this.localStream, true);\r\n              this.client.publish(this.localStream, (err) => {\r\n                console.log(\"Publish local stream error: \" + err);\r\n              });\r\n            }\r\n            this.setState({ readyState: true });\r\n          },\r\n          (err) => {\r\n            console.log(\"getUserMedia failed\", err);\r\n            this.setState({ readyState: true });\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // add listener to control btn group\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    let btnGroup = document.querySelector(\".ag-btn-group\");\r\n    canvas.addEventListener(\"mousemove\", () => {\r\n      if (global._toolbarToggle) {\r\n        clearTimeout(global._toolbarToggle);\r\n      }\r\n      btnGroup.classList.add(\"active\");\r\n      global._toolbarToggle = setTimeout(function () {\r\n        btnGroup.classList.remove(\"active\");\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  // componentWillUnmount () {\r\n  //     // remove listener\r\n  //     let canvas = document.querySelector('#ag-canvas')\r\n  //     canvas.removeEventListener('mousemove')\r\n  // }\r\n\r\n  componentDidUpdate() {\r\n    // rerendering\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    // pip mode (can only use when less than 4 people in channel)\r\n    if (this.state.displayMode === \"pip\") {\r\n      let no = this.state.streamList.length;\r\n      if (no > 4) {\r\n        this.setState({ displayMode: \"tile\" });\r\n        return;\r\n      }\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        if (index === no - 1) {\r\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n        } else {\r\n          dom.setAttribute(\r\n            \"style\",\r\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\r\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\r\n          );\r\n        }\r\n\r\n        item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // tile mode\r\n    else if (this.state.displayMode === \"tile\") {\r\n      let no = this.state.streamList.length;\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\r\n        item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // screen share mode (tbd)\r\n    else if (this.state.displayMode === \"share\") {\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.client && this.client.unpublish(this.localStream);\r\n    this.localStream && this.localStream.close();\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n    }\r\n    this.client &&\r\n      this.client.leave(\r\n        () => {\r\n          console.log(\"Client succeed to leave.\");\r\n        },\r\n        () => {\r\n          console.log(\"Client failed to leave.\");\r\n        }\r\n      );\r\n  }\r\n\r\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: true,\r\n      screen: false,\r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n\r\n  subscribeStreamEvents = () => {\r\n    let rt = this;\r\n    rt.client.on(\"stream-added\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"New stream added: \" + stream.getId());\r\n      console.log(\"At \" + new Date().toLocaleTimeString());\r\n      console.log(\"Subscribe \", stream);\r\n      rt.client.subscribe(stream, function (err) {\r\n        console.log(\"Subscribe stream failed\", err);\r\n      });\r\n    });\r\n\r\n    rt.client.on(\"peer-leave\", function (evt) {\r\n      console.log(\"Peer has left: \" + evt.uid);\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(evt);\r\n      rt.removeStream(evt.uid);\r\n    });\r\n\r\n    rt.client.on(\"stream-subscribed\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"Got stream-subscribed event\");\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(\"Subscribe remote stream successfully: \" + stream.getId());\r\n      console.log(evt);\r\n      rt.addStream(stream);\r\n    });\r\n\r\n    rt.client.on(\"stream-removed\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"Stream removed: \" + stream.getId());\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(evt);\r\n      rt.removeStream(stream.getId());\r\n    });\r\n  };\r\n\r\n  removeStream = (uid) => {\r\n    this.state.streamList.map((item, index) => {\r\n      if (item.getId() === uid) {\r\n        item.close();\r\n        let element = document.querySelector(\"#ag-item-\" + uid);\r\n        if (element) {\r\n          element.parentNode.removeChild(element);\r\n        }\r\n        let tempList = [...this.state.streamList];\r\n        tempList.splice(index, 1);\r\n        this.setState({\r\n          streamList: tempList,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  addStream = (stream, push = false) => {\r\n    let repeatition = this.state.streamList.some((item) => {\r\n      return item.getId() === stream.getId();\r\n    });\r\n    if (repeatition) {\r\n      return;\r\n    }\r\n    if (push) {\r\n      this.setState({\r\n        streamList: this.state.streamList.concat([stream]),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        streamList: [stream].concat(this.state.streamList),\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCamera = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isVideoOn()\r\n      ? this.localStream.disableVideo()\r\n      : this.localStream.enableVideo();\r\n  };\r\n\r\n  handleMic = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isAudioOn()\r\n      ? this.localStream.disableAudio()\r\n      : this.localStream.enableAudio();\r\n  };\r\n\r\n  switchDisplay = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    if (this.state.displayMode === \"pip\") {\r\n      this.setState({ displayMode: \"tile\" });\r\n    } else if (this.state.displayMode === \"tile\") {\r\n      this.setState({ displayMode: \"pip\" });\r\n    } else if (this.state.displayMode === \"share\") {\r\n      // do nothing or alert, tbd\r\n    } else {\r\n      console.error(\"Display Mode can only be tile/pip/share\");\r\n    }\r\n  };\r\n\r\n  hideRemote = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    let list;\r\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\r\n    list = Array.from(\r\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n    );\r\n    list.map((item) => {\r\n      if (item.style.display !== \"none\") {\r\n        item.style.display = \"none\";\r\n      } else {\r\n        item.style.display = \"block\";\r\n      }\r\n    });\r\n  };\r\n\r\n  handleExit = (e) => {\r\n    if (e.currentTarget.classList.contains(\"disabled\")) {\r\n      return;\r\n    }\r\n    try {\r\n      this.client && this.client.unpublish(this.localStream);\r\n      this.localStream && this.localStream.close();\r\n      if (this.state.stateSharing) {\r\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n        this.shareStream && this.shareStream.close();\r\n      }\r\n      this.client &&\r\n        this.client.leave(\r\n          () => {\r\n            console.log(\"Client succeed to leave.\");\r\n          },\r\n          () => {\r\n            console.log(\"Client failed to leave.\");\r\n          }\r\n        );\r\n    } finally {\r\n      this.setState({ readyState: false });\r\n      this.client = null;\r\n      this.localStream = null;\r\n      // redirect to index\r\n      window.location.hash = \"/admin/schedule\";\r\n    }\r\n  };\r\n\r\n  sharingScreen = (e) => {\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n      this.state.stateSharing = false;\r\n    } else {\r\n      this.state.stateSharing = true;\r\n      let $ = this.props;\r\n      // init AgoraRTC local client\r\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\r\n\r\n      this.shareClient.init($.appId, () => {\r\n        console.log(\"AgoraRTC client initialized\");\r\n\r\n        this.subscribeStreamEvents();\r\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\r\n          this.state.uid = uid;\r\n          console.log(\"User \" + uid + \" join channel successfully\");\r\n          console.log(\"At \" + new Date().toLocaleTimeString());\r\n          // create local stream\r\n          // It is not recommended to setState in function addStream\r\n          \r\n          this.shareStream = this.streamInitSharing(\r\n            uid,\r\n            $.attendeeMode,\r\n            $.videoProfile\r\n          );\r\n          this.shareStream.init(\r\n            () => {\r\n              if ($.attendeeMode !== \"audience\") {\r\n                this.addStream(this.shareStream, true);\r\n                this.shareClient.publish(this.shareStream, (err) => {\r\n                  console.log(\"Publish local stream error: \" + err);\r\n                });\r\n              }\r\n              this.setState({ readyState: true });\r\n            },\r\n            (err) => {\r\n              console.log(\"getUserMedia failed\", err);\r\n              this.setState({ readyState: true });\r\n            }\r\n          );\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: false,\r\n      screen: true,\r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n  render() {\r\n\r\n    const style = {\r\n      display: \"grid\",\r\n      gridGap: \"50px 26px\",\r\n      alignItems: \"center\",\r\n      justifyItems: \"center\",\r\n      gridTemplateRows: \"repeat(12, auto)\",\r\n      gridTemplateColumns: \"repeat(24, auto)\",\r\n    };\r\n    \r\n    const videoControlBtn =\r\n      this.props.attendeeMode === \"video\" ? (\r\n        <span\r\n          onClick={this.handleCamera}\r\n          className=\"ag-btn videoControlBtn\"\r\n          title=\"Enable/Disable Video\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-camera\"></i>\r\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n\r\n    const audioControlBtn =\r\n      this.props.attendeeMode !== \"audience\" ? (\r\n        <span\r\n          onClick={this.handleMic}\r\n          className=\"ag-btn audioControlBtn\"\r\n          title=\"Enable/Disable Audio\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-mic\"></i>\r\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n\r\n    const switchDisplayBtn = (\r\n      <span\r\n        onClick={this.switchDisplay}\r\n        className={\r\n          this.state.streamList.length > 4\r\n            ? \"ag-btn displayModeBtn disabled\"\r\n            : \"ag-btn displayModeBtn\"\r\n        }\r\n        title=\"Switch Display Mode\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\r\n      </span>\r\n    );\r\n\r\n\r\n    const hideRemoteBtn = (\r\n      <span\r\n        className={\r\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\r\n            ? \"ag-btn disableRemoteBtn disabled\"\r\n            : \"ag-btn disableRemoteBtn\"\r\n        }\r\n        onClick={this.hideRemote}\r\n        title=\"Hide Remote Stream\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\r\n      </span>\r\n    );\r\n\r\n    const exitBtn = (\r\n      <span\r\n        onClick={this.handleExit}\r\n        className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Exit\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-leave\"></i>\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <div id=\"ag-canvas\" style={style}>\r\n        <div className=\"ag-btn-group\">\r\n          {exitBtn}\r\n          {videoControlBtn}\r\n          {audioControlBtn}\r\n          {\r\n            <span\r\n              onClick={this.sharingScreen}\r\n              className=\"ag-btn shareScreenBtn\"\r\n              title=\"Share/unShare Screen\"\r\n            >\r\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\r\n            </span>\r\n          }\r\n          {switchDisplayBtn}\r\n          {hideRemoteBtn}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgoraCanvas;\r\n","E:\\Mazars_Pannel\\src\\pages\\TL\\PendingForAcceptence\\RejectedModal.js",["2020","2021","2022","2023"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"required discussion\"),\r\n});\r\n\r\nfunction RejectedModal({\r\n  addPaymentModal,\r\n  rejectHandler,\r\n  pay,\r\n  getPendingforAcceptance,\r\n}) {\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const alert = useAlert();\r\n  const { id, allocation_id } = pay;\r\n\r\n  // console.log(\"pay :\", pay);\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"set\", 0);\r\n    formData.append(\"tlid\", JSON.parse(userid));\r\n    formData.append(\"assignment_id\", id);\r\n    formData.append(\"allocation_id\", allocation_id);\r\n    formData.append(\"reject_reason\", value.p_chat);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/AcceptRejectQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          alert.success(\"Query rejected !\");\r\n          getPendingforAcceptance();\r\n          rejectHandler();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"sm\">\r\n        <ModalHeader toggle={rejectHandler}>Rejected Reason</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"4\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"enter text\"\r\n              ></textarea>\r\n\r\n              {errors.p_chat && (\r\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\r\n              )}\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RejectedModal;\r\n","E:\\Mazars_Pannel\\src\\components\\Admin-Header\\NavWrapper.js",["2024","2025","2026","2027","2028","2029","2030","2031","2032","2033","2034","2035","2036"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport CustomerNotification from \"./CustomerNotification\";\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport './index.css'\r\nimport CommonServices from \"../../common/common\";\r\n\r\nfunction NavWrapper(props) {\r\n  const { color, logout, name } = props;\r\n\r\n  const history = useHistory();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const adminkey = window.localStorage.getItem(\"adminkey\");\r\n  const tlkey = window.localStorage.getItem(\"tlkey\");\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div class=\"navbar-wrapper\">\r\n        <div class=\"navbar-container\" style={{ background: color }}>\r\n          <div class=\"collapse navbar-collapse show\" id=\"navbar-mobile\">\r\n            <ul class=\"nav navbar-nav mr-auto float-left\">\r\n              <li class=\"nav-item d-block d-md-none\">\r\n                <a\r\n                  class=\"nav-link nav-menu-main menu-toggle hidden-xs is-active\"\r\n                  href=\"#\"\r\n                >\r\n                  <i class=\"fa fa-bars\"></i>\r\n                </a>\r\n              </li>\r\n\r\n              <li class=\"nav-item dropdown navbar-search\">\r\n                <ul class=\"dropdown-menu\">\r\n                  <li class=\"arrow_box\">\r\n                    <form>\r\n                      <div class=\"input-group search-box\">\r\n                        <div class=\"position-relative has-icon-right full-width\">\r\n                          <input\r\n                            class=\"form-control\"\r\n                            id=\"search\"\r\n                            type=\"text\"\r\n                            placeholder=\"Search here...\"\r\n                          />\r\n                          <div class=\"form-control-position navbar-search-close\">\r\n                            <i class=\"fa fa-times\"> </i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n\r\n              <li>\r\n                <h4 class=\"brand-text text-white\">{CommonServices.capitalizeFirstLetter(name)}</h4>\r\n              </li>\r\n            </ul>\r\n\r\n            <ul class=\"nav navbar-nav float-right\">\r\n\r\n              {name == \"customer\" && (\r\n                <CustomerNotification tokenKey={userId} name={name} />\r\n              )}\r\n\r\n              {name == \"admin\" && (\r\n                <CustomerNotification tokenKey={adminkey} name={name} />\r\n              )}\r\n\r\n              {name == \"teamleader\" && (\r\n                <CustomerNotification tokenKey={tlkey} name={name} />\r\n              )}\r\n\r\n\r\n              <li class=\"dropdown dropdown-user nav-item\">\r\n                <a\r\n                  class=\"dropdown-toggle nav-link dropdown-user-link\"\r\n                  href=\"#\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  <span class=\"avatar avatar-online\">\r\n                    <img\r\n                      src=\"https://cdn1.vectorstock.com/i/1000x1000/40/30/user-glyph-icon-web-and-mobile-admin-sign-vector-18444030.jpg\"\r\n                      alt=\"avatar\"\r\n                    />\r\n                    <i style={{ paddingLeft: \"6px\" }}></i>\r\n                  </span>\r\n                </a>\r\n\r\n                <div class=\"dropdown-menu dropdown-menu-right\">\r\n                  <div class=\"arrow_box_right\">\r\n\r\n                    {name == \"customer\" && (\r\n                      <div class=\"dropdown-item\"\r\n                        style={{ cursor: \"pointer\" }}>\r\n                        <VpnKeyIcon />\r\n                        <Link to=\"/customer/change-password\">\r\n                          <span style={{ marginLeft: \"3px\" }}>Change Password</span>\r\n                        </Link>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div\r\n                      class=\"dropdown-item\"\r\n                      onClick={logout}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      <LockOpenIcon />\r\n                      <span style={{ marginLeft: \"10px\" }}>Logout</span>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavWrapper;\r\n\r\n{/* <i class=\"fa fa-sign-out\"></i> */ }\r\n{/* <i class=\"fa fa-sign-out\"></i> */ }\r\n       // <li class=\"dropdown dropdown-notification nav-item\">\r\n                //   {countNotification ? (\r\n                //     <div>\r\n                //       <a\r\n                //         class=\"nav-link nav-link-label\"\r\n                //         href=\"#\"\r\n                //         data-toggle=\"dropdown\"\r\n                //       >                   \r\n                //         <a href=\"#\" class=\"notification\">\r\n                //           <span>Inbox</span>\r\n                //           <span class=\"badge\">{countNotification}</span>\r\n                //         </a>\r\n                //       </a>\r\n\r\n                //       <div\r\n                //         class=\"dropdown-menu dropdown-menu-right\"\r\n                //         style={{ height: \"300px\", overflowY: \"scroll\" }}\r\n                //       >\r\n                //         <div class=\"arrow_box_right\">\r\n                //           {notification.map((p, i) => (\r\n                //             <div\r\n                //               class=\"dropdown-item\"\r\n                //               style={{ padding: \"0\", fontSize: \"12px\" }}\r\n                //             >\r\n                //               <Link to={`/customer/view-notification/${p.id}`}>\r\n                //                 <p\r\n                //                   class=\"dropdown-item\"\r\n                //                   style={{ cursor: \"pointer\" }}\r\n                //                   onClick={() => readNotification(p.id)}\r\n                //                 >\r\n                //                   {p.message}\r\n                //                 </p>\r\n                //               </Link>\r\n                //             </div>\r\n                //           ))}\r\n                //         </div>\r\n                //       </div>\r\n                //     </div>\r\n                //   ) : null}\r\n                // </li>\r\n\r\n\r\n  // const [notification, setNotification] = useState([]);\r\n  // const [countNotification, setCountNotification] = useState(\"\");\r\n\r\n  // const [notificationAdmin, setNotificationAdmin] = useState([]);\r\n  // const [countNotificationAdmin, setCountNotificationAdmin] = useState(\"\");\r\n\r\n  // const [notificationTl, setNotificationTl] = useState([]);\r\n  // const [countNotificationTl, setCountNotificationTl] = useState(\"\");\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   getNotificationCust();\r\n  // }, [userId]);\r\n\r\n\r\n  // const getNotificationCust = () => {\r\n  //   axios\r\n  //     .get(`${baseUrl}/customers/getNotification?id=${JSON.parse(userId)}&type_list=uread`)\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       if (res.data.code === 1) {\r\n  //         setNotification(res.data.result);\r\n  //         setCountNotification(res.data.result.length);\r\n  //       }\r\n  //     });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getNotificationTl();\r\n  // }, [tlkey]);\r\n\r\n  // const getNotificationTl = () => {\r\n  //   axios\r\n  //     .get(`${baseUrl}/customers/getNotification?id=${JSON.parse(tlkey)}&type_list=uread`)\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       if (res.data.code === 1) {\r\n  //         setNotificationAdmin(res.data.result);\r\n  //         setCountNotificationTl(res.data.result.length);\r\n  //       }\r\n  //     });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getNotificationAdmin();\r\n  // }, [adminkey]);\r\n\r\n  // const getNotificationAdmin = () => {\r\n  //   axios\r\n  //     .get(`${baseUrl}/customers/getNotification?id=${JSON.parse(adminkey)}&type_list=uread`)\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //       if (res.data.code === 1) {\r\n  //         setNotificationTl(res.data.result);\r\n  //         setCountNotificationAdmin(res.data.result.length);\r\n  //       }\r\n  //     });\r\n  // };\r\n\r\n\r\n\r\n  // // readnotification\r\n  // const readNotification = (id) => {\r\n  //   axios\r\n  //     .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\r\n  //     .then(function (response) {\r\n  //       console.log(\"delete-\", response);\r\n  //       if (response.data.code === 1) {\r\n  //         console.log(response.data.result);\r\n  //         // history.push(\"/customer/proposal\");\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(\"erroror - \", error);\r\n  //     });\r\n  // };\r\n\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\DeclinedProposal\\DeclinedPropoal.js",["2037","2038","2039","2040","2041","2042"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../../components/Records/Records\";\r\n\r\nfunction DeclinedProposal({ declinedProposal }) {\r\n  const [proposalDisplay, setProposalDisplay] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDeclinedProposal();\r\n  }, []);\r\n\r\n  const getDeclinedProposal = () => {\r\n    axios.get(`${baseUrl}/admin/getProposals?&status=6`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setProposalDisplay(res.data.result);\r\n        setRecords(res.data.result.length);\r\n        // declinedProposal(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n \r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.created);\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                index: 2,\r\n                routes: \"proposal\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Proposal\",\r\n      dataField: \"DateofProposal\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.DateofProposal);\r\n        var oldDate = row.DateofProposal;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Declined of Proposal\",\r\n      dataField: \"cust_accept_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.cust_accept_date);\r\n        var oldDate = row.cust_accept_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"ProposedAmount\",\r\n      text: \"Proposed Amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"accepted_amount\",\r\n      text: \"Accepted Amount \",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#21a3ce\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Amount Paid\",\r\n      dataField: \"paid_amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#064606\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#064606\" };\r\n      },\r\n    },\r\n\r\n    {\r\n      text: \"Amount Outstanding\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"darkred\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"darkred\" };\r\n      },\r\n      formatter: function amountOutstading(cell, row) {\r\n        var a = row.accepted_amount;\r\n        var p = row.paid_amount;\r\n        return a - p;\r\n      }\r\n    },\r\n    {\r\n      text: \"Date of Payment\",\r\n      dataField: \"cust_paid_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.cust_paid_date);\r\n        var oldDate = row.cust_paid_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Completion\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"tl_name\",\r\n      text: \"TL name\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n      <CardHeader>\r\n      <AdminFilter\r\n            setData={setProposalDisplay}\r\n            getData={getDeclinedProposal}\r\n            declinedProposal=\"declinedProposal\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n  \r\n        </CardHeader>\r\n        <CardBody>\r\n        <Records records={records} />\r\n        <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={proposalDisplay}\r\n            columns={columns}\r\n            classes=\"table-responsive\"\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DeclinedProposal;\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\AcceptedProposal\\AcceptedProposal.js",["2043","2044","2045","2046","2047","2048"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../../components/Records/Records\";\r\n\r\n\r\nfunction AcceptedProposal({ acceptedProposal }) {\r\n  const [proposalDisplay, setProposalDisplay] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAcceptedProposal();\r\n  }, []);\r\n  const getAcceptedProposal = () => {\r\n    axios.get(`${baseUrl}/admin/getProposals?status1=2`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setProposalDisplay(res.data.result);\r\n        setRecords(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.created);\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link to={`/admin/queries/${row.q_id}`}>{row.assign_no}</Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Proposal\",\r\n      dataField: \"DateofProposal\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.DateofProposal);\r\n        var oldDate = row.DateofProposal;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of acceptance of Proposal\",\r\n      dataField: \"cust_accept_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.cust_accept_date);\r\n        var oldDate = row.cust_accept_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"ProposedAmount\",\r\n      text: \"Proposed Amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"accepted_amount\",\r\n      text: \"Accepted Amount \",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#21a3ce\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Amount Paid\",\r\n      dataField: \"paid_amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#064606\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#064606\" };\r\n      },\r\n    },\r\n\r\n    {\r\n      text: \"Amount Outstanding\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"darkred\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"darkred\" };\r\n      },\r\n      formatter: function amountOutstading(cell, row) {\r\n        var a = row.accepted_amount;\r\n        var p = row.paid_amount;\r\n        return a - p;\r\n      }\r\n    },\r\n    {\r\n      text: \"Date of Payment\",\r\n      dataField: \"cust_paid_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.cust_paid_date);\r\n        var oldDate = row.cust_paid_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Completion\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"tl_name\",\r\n      text: \"TL name\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setProposalDisplay}\r\n            getData={getAcceptedProposal}\r\n            acceptedProposal=\"acceptedProposal\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={proposalDisplay}\r\n            columns={columns}\r\n            classes=\"table-responsive\"\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AcceptedProposal;\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\AllProposalComponent\\AllProposalComponent.js",["2049","2050","2051","2052","2053","2054","2055","2056"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\n\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Records from \"../../../components/Records/Records\";\r\n\r\n\r\nfunction AllProposalComponent({ allProposal }) {\r\n  const [proposalDisplay, setProposalDisplay] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProposalData();\r\n  }, []);\r\n\r\n  const getProposalData = () => {\r\n    axios.get(`${baseUrl}/admin/getProposals`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setProposalDisplay(res.data.result);\r\n        setRecords(res.data.result.length);\r\n\r\n        // allProposal(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.created);\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                index: 0,\r\n                routes: \"proposal\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Proposal\",\r\n      dataField: \"DateofProposal\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.DateofProposal);\r\n        var oldDate = row.DateofProposal;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of acceptance / decline of Proposal\",\r\n      dataField: \"cust_accept_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.cust_accept_date);\r\n        var oldDate = row.cust_accept_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}/\r\n              {\r\n                row.status == \"Inprogress\" ?\r\n                  <p className=\"inprogress\">\r\n\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Customer Declined; Proposal\" ?\r\n                    <p className=\"declined\">\r\n\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Accepted; Proposal\" ?\r\n                      <p className=\"completed\">\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"ProposedAmount\",\r\n      text: \"Proposed Amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"accepted_amount\",\r\n      text: \"Accepted Amount \",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#21a3ce\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Amount Paid\",\r\n      dataField: \"paid_amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#064606\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#064606\" };\r\n      },\r\n    },\r\n\r\n    {\r\n      text: \"Amount Outstanding\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"darkred\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"darkred\" };\r\n      },\r\n      formatter: function amountOutstading(cell, row) {\r\n        var a = row.accepted_amount;\r\n        var p = row.paid_amount;\r\n        return a - p;\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Payment\",\r\n      dataField: \"cust_paid_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.cust_paid_date);\r\n        var oldDate = row.cust_paid_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Completion\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"tl_name\",\r\n      text: \"TL name\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", width: \"65px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div title=\"Send Message\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/admin/chatting/${row.q_id}`,\r\n                  obj: {\r\n                    message_type: \"2\",\r\n                    query_No: row.assign_no,\r\n                    query_id: row.q_id,\r\n                    routes: `/admin/proposal`\r\n                  }\r\n                }}\r\n              >\r\n                <i\r\n                  class=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    marginLeft: \"8px\",\r\n                    color: \"blue\"\r\n                  }}\r\n                ></i>\r\n              </Link>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n\r\n          <AdminFilter\r\n            setData={setProposalDisplay}\r\n            getData={getProposalData}\r\n            allProposal=\"allProposal\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={proposalDisplay}\r\n            columns={columns}\r\n            classes=\"table-responsive\"\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AllProposalComponent;\r\n\r\n// headerStyle: () => {\r\n//   return { width: \"100px\", textAlign: \"center\" };\r\n// },\r\n\r\n// events: {\r\n//   onClick: (e, column, columnIndex, row, rowIndex) => {\r\n//     console.log(\"cellContent\", row);\r\n//     console.log(\"cellContent\", row.q_id);\r\n//     return (\r\n//       <div>\r\n//         <Link to={`/admin/queries/${row.q_id}`}>{row.q_id}</Link>\r\n//       </div>\r\n//     );\r\n//   },\r\n// },\r\n\r\n// const defaultSorted = [\r\n//   {\r\n//     dataField: \"assign_no\",\r\n//     order: \"desc\",\r\n//   },\r\n// ];\r\n\r\n// const rowEvents = {\r\n//   onClick: (e, row, rowIndex) => {\r\n//     console.log(`clicked on row with index: ${rowIndex}`);\r\n//     console.log(`clicked on row with index: ${e}`);\r\n//     console.log(`clicked on row with index: ${row}`);\r\n//   },\r\n// };\r\n\r\n","E:\\Mazars_Pannel\\src\\components\\PendingForAcceptence\\PendingForAcceptence.js",["2057","2058","2059","2060","2061","2062","2063"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../components/Search-Filter/AdminFilter\";\r\nimport Records from \"../../components/Records/Records\";\r\n\r\n\r\nfunction PendingForAcceptence({ pendingProposal }) {\r\n  const [proposalDisplay, setProposalDisplay] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    getPendingAcceptedProposal();\r\n  }, []);\r\n\r\n  const getPendingAcceptedProposal = () => {\r\n    axios.get(`${baseUrl}/admin/getProposals?status1=1`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setProposalDisplay(res.data.result);\r\n        setRecords(res.data.result.length);\r\n        // pendingProposal(res.data.result.length);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.created);\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/admin/queries/${row.q_id}`,\r\n                index: 1,\r\n                routes: \"proposal\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Proposal\",\r\n      dataField: \"DateofProposal\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.DateofProposal);\r\n        var oldDate = row.DateofProposal;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of acceptance of Proposal\",\r\n      dataField: \"cust_accept_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.cust_accept_date);\r\n        var oldDate = row.cust_accept_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}/\r\n              {\r\n                row.status == \"Inprogress\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"ProposedAmount\",\r\n      text: \"Proposed Amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"accepted_amount\",\r\n      text: \"Accepted Amount \",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#21a3ce\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Amount Paid\",\r\n      dataField: \"paid_amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#064606\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#064606\" };\r\n      },\r\n    },\r\n\r\n    {\r\n      text: \"Amount Outstanding\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"darkred\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"darkred\" };\r\n      },\r\n      formatter: function amountOutstading(cell, row) {\r\n        var a = row.accepted_amount;\r\n        var p = row.paid_amount;\r\n        return a - p;\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Payment\",\r\n      dataField: \"cust_paid_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.cust_paid_date);\r\n        var oldDate = row.cust_paid_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Completion\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"tl_name\",\r\n      text: \"TL name\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", width: \"65px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            <div title=\"Send Message\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/admin/chatting/${row.q_id}`,\r\n                  obj: {\r\n                    message_type: \"2\",\r\n                    query_No: row.assign_no,\r\n                    query_id: row.q_id,\r\n                    routes: `/admin/proposal`\r\n                  }\r\n                }}\r\n              >\r\n                <i\r\n                  class=\"fa fa-comments-o\"\r\n                  style={{\r\n                    fontSize: 16,\r\n                    cursor: \"pointer\",\r\n                    marginLeft: \"8px\",\r\n                    color: \"blue\"\r\n                  }}\r\n                ></i>\r\n              </Link>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <AdminFilter\r\n            setData={setProposalDisplay}\r\n            getData={getPendingAcceptedProposal}\r\n            pendingAcceptedProposal=\"pendingAcceptedProposal\"\r\n            setRecords={setRecords}\r\n            records={records}\r\n          />\r\n\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={proposalDisplay}\r\n            columns={columns}\r\n            classes=\"table-responsive\"\r\n          />\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PendingForAcceptence;\r\n","E:\\Mazars_Pannel\\src\\views\\Message\\PaymentModal.js",["2064","2065","2066","2067"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nfunction PaymentModal({\r\n  addPaymentModal,\r\n  paymentHandler,\r\n  data,\r\n  // getProposalData,\r\n}) {\r\n  const { handleSubmit, register, reset } = useForm();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_id\", id);\r\n    formData.append(\"message_type\",\"information\");\r\n    formData.append(\"message\", value.p_message);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/messageSent`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          reset();\r\n          alert.success(\" message successfully send!\");\r\n          paymentHandler()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\r\n        <ModalHeader toggle={paymentHandler}>Message</ModalHeader>\r\n        <ModalBody>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <textarea\r\n                    class=\"form-control\"\r\n                    placeholder=\"Message text here\"\r\n                    rows=\"5\"\r\n                    ref={register}\r\n                    name=\"p_message\"\r\n                  ></textarea>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n","E:\\Mazars_Pannel\\src\\views\\Schedule\\demo.js",["2068","2069","2070","2071","2072","2073","2074","2075","2076","2077","2078"],"import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  ViewState,\r\n  EditingState,\r\n  IntegratedEditing,\r\n} from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  WeekView,\r\n  DayView,\r\n  Appointments,\r\n  Toolbar,\r\n  DateNavigator,\r\n  ViewSwitcher,\r\n  AppointmentForm,\r\n  AppointmentTooltip,\r\n  TodayButton,\r\n  Resources,\r\n  EditRecurrenceMenu,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport * as Cookies from \"js-cookie\";\r\n\r\nfunction Demo() {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  const [assignmentdata, setAssignmentData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n \r\n\r\n  const [baseMode, SetbaseMode] = useState(\"avc\");\r\n  const [transcode, SetTranscode] = useState(\"interop\");\r\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\r\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\r\n\r\n  var date = new Date();\r\n\r\n  function convert(str) {\r\n    var date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n    return [date.getFullYear(), mnth, day].join(\"-\");\r\n  }\r\n  const [currentDate] = useState(convert(date));\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/videoScheduler?customer_id=${JSON.parse(userId)}`\r\n      )\r\n      .then((res) => {\r\n        console.log(\"res -\", res);\r\n        console.log(\"result -\", res.data.result.items);\r\n        var a = res.data.result.items;\r\n        if (a) {\r\n          setData(a.map(mapAppointmentData));\r\n          setLoading(false);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const mapAppointmentData = (appointment) => ({\r\n    id: appointment.id,\r\n    startDate: appointment.start,\r\n    endDate: appointment.end,\r\n    title: appointment.title,\r\n    notes: appointment.summary,\r\n    question_id: appointment.question_id,\r\n    assign_no: appointment.assign_no,\r\n  });\r\n\r\n\r\n  // const resources = [\r\n  //   {\r\n  //     fieldName: \"question_id\",\r\n  //     title: \"Query No\",\r\n  //     instances: assignmentdata,\r\n  //   },\r\n  // ];\r\n\r\n\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n    // if (added) {\r\n    //   console.log(\"added - \", added);\r\n    //   var startDate = added.startDate;\r\n    //   var endDate = added.endDate;\r\n\r\n    //   let formData = new FormData();\r\n    //   formData.append(\"customer_id\", JSON.parse(userId));\r\n    //   formData.append(\"question_id\", added.question_id);\r\n    //   formData.append(\"time\", changeFormat(startDate));\r\n    //   formData.append(\"endtime\", changeFormat(endDate));\r\n    //   formData.append(\"title\", added.title);\r\n    //   formData.append(\"notes\", added.notes);\r\n    //   axios({\r\n    //     method: \"POST\",\r\n    //     url: `${baseUrl}/customers/PostCallSchedule`,\r\n    //     data: formData,\r\n    //   })\r\n    //     .then(function (response) {\r\n    //       console.log(\"res post-\", response);\r\n    //       getData();\r\n    //       setLoading(false);\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       console.log(\"erroror - \", error);\r\n    //     });\r\n    // }\r\n    // if (changed) {\r\n    //   console.log(\"changed\", changed);\r\n\r\n    //   const data2 = data.map((appointment) =>\r\n    //     changed[appointment.id]\r\n    //       ? { ...appointment, ...changed[appointment.id] }\r\n    //       : appointment\r\n    //   );\r\n    //   console.log(\"data2 - \", data2);\r\n\r\n    //   let valuesArray = Object.entries(changed);\r\n    //   let id = valuesArray[0][0];\r\n    //   console.log(\"id -\", id);\r\n    //   let dataIttem;\r\n\r\n    //   for (var i = 0; i < data2.length; i++) {\r\n    //     if (data2[i].id === id) {\r\n    //       dataIttem = data2[i];\r\n    //     }\r\n    //   }\r\n    //   console.log(\"dataIttem\", dataIttem);\r\n\r\n    //   let formData = new FormData();\r\n    //   formData.append(\"customer_id\", JSON.parse(userId));\r\n    //   formData.append(\"question_id\", dataIttem.question_id);\r\n    //   formData.append(\"id\", dataIttem.id);\r\n    //   formData.append(\"time\", dataIttem.startDate);\r\n    //   formData.append(\"endtime\", dataIttem.endDate);\r\n    //   formData.append(\"title\", dataIttem.title);\r\n    //   formData.append(\"notes\", dataIttem.notes);\r\n\r\n    //   axios({\r\n    //     method: \"POST\",\r\n    //     url: `${baseUrl}/customers/PostCallSchedule`,\r\n    //     data: formData,\r\n    //   })\r\n    //     .then(function (response) {\r\n    //       console.log(\"res post-\", response);\r\n    //       getData();\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       console.log(\"erroror - \", error);\r\n    //     });\r\n    // }\r\n\r\n    // if (deleted !== undefined) {\r\n    //   console.log(\"deleted f\", deleted);\r\n    //   axios.get(`${baseUrl}/customers/freeslot?id=${deleted}`).then((res) => {\r\n    //     console.log(\"res -\", res);\r\n    //     getData();\r\n    //     setLoading(false);\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  const styles = (theme) => ({\r\n    button: {\r\n      color: theme.palette.background.default,\r\n      padding: 0,\r\n    },\r\n    text: {\r\n      paddingTop: theme.spacing(1),\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n  });\r\n\r\n  const AppointmentBase = ({\r\n    children,\r\n    data,\r\n    onClick,\r\n    classes,\r\n    onAppointmentMetaChange,\r\n    ...restProps\r\n  }) => (\r\n    <Appointments.Appointment {...restProps}>\r\n      <div style={{ display: \"flex\" }}>\r\n        {\r\n          console.log(\"data\", data)\r\n        }\r\n        <div>{children}</div>\r\n        <div\r\n          onClick={() => handleJoin(data.question_id)}\r\n        >\r\n          <i\r\n            class=\"fa fa-video-camera\"\r\n            style={{ fontSize: \"12px\", color: \"#fff\" }}\r\n          ></i>\r\n        </div>\r\n      </div>\r\n    </Appointments.Appointment>\r\n  );\r\n\r\n\r\n  const Appointment = withStyles(styles, { name: \"Appointment\" })(\r\n    AppointmentBase\r\n  );\r\n\r\n\r\n\r\n  const myAppointment = (props) => {\r\n    return (\r\n      <Appointment\r\n        {...props}\r\n      />\r\n    );\r\n  };\r\n\r\n  //handleJoin\r\n  const handleJoin = (id) => {\r\n    console.log(\"id\", id);\r\n    Cookies.set(\"channel\", id);\r\n    Cookies.set(\"baseMode\", baseMode);\r\n    Cookies.set(\"transcode\", transcode);\r\n    Cookies.set(\"attendeeMode\", attendeeMode);\r\n    Cookies.set(\"videoProfile\", videoProfile);\r\n    history.push(\"/customer/meeting\");\r\n  };\r\n\r\n  const Label = (props) => {\r\n    if (props.text === \"Details\") {\r\n      return null;\r\n    }\r\n    return <AppointmentForm.Label {...props} />;\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Scheduler data={data} height={660}>\r\n        <ViewState\r\n          defaultCurrentDate={currentDate}\r\n          defaultCurrentViewName=\"Week\"\r\n        />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <EditRecurrenceMenu />\r\n\r\n        <DayView startDayHour={10} endDayHour={24} />\r\n        <WeekView startDayHour={10} endDayHour={19} />\r\n\r\n        <Appointments appointmentComponent={myAppointment} />\r\n\r\n        <Toolbar />\r\n        <DateNavigator />\r\n        <TodayButton />\r\n        <ViewSwitcher />\r\n\r\n        <AppointmentTooltip showOpenButton />\r\n        <AppointmentForm\r\n          readOnly\r\n        />\r\n\r\n        {/* <AppointmentForm.Label text=\"Customer Phone\" type=\"title\" /> */}\r\n\r\n        {/* <Resources \r\n        data={resources}\r\n         mainResourceName=\"question_id\" /> */}\r\n\r\n      </Scheduler>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Demo;\r\n\r\n\r\n\r\n\r\n// function TitleComponent({ title }) {\r\n//   return (\r\n//     <div>\r\n//       <Link to={`/customer/queries`}>queries - {title}</Link>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n  /* <Link to={`/customer/meeting`}>\r\n            <p style={{ fontSize: \"12px\",color:\"#fff\" }}>link</p>\r\n          </Link> */\r\n\r\n","E:\\Mazars_Pannel\\src\\views\\EditQuery\\DeleteQuery.js",["2079","2080","2081"],"import React, { useState, useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction DeleteQuery({ id }) {\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const history = useHistory();\r\n\r\n  //   console.log(\"id\", id);\r\n\r\n  //check\r\n  const del = (id) => {\r\n    console.log(\"del\", id);\r\n\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"It will permanently deleted !\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteCliente(id);\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteCliente = (id) => {\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", id);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/deleteQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n          history.push(\"/customer/queries\");\r\n        } else {\r\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" class=\"btn btn-primary\" onClick={() => del(id)}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteQuery;\r\n\r\n{\r\n  /* <i\r\n        className=\"fa fa-trash\"\r\n        style={{\r\n          fontSize: 16,\r\n          cursor: \"pointer\",\r\n        }}\r\n        \r\n      ></i> */\r\n}\r\n","E:\\Mazars_Pannel\\src\\views\\ProposalTab\\AllProposal.js",["2082","2083","2084","2085","2086","2087","2088","2089","2090","2091","2092","2093","2094","2095","2096"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ChatComponent from \"./ChatComponent\";\r\nimport \"./index.css\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport Records from \"../../components/Records/Records\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\n\r\n\r\nfunction ProposalTab() {\r\n    const alert = useAlert();\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [proposalDisplay, setProposalDisplay] = useState([]);\r\n    const [proposalCount, setCountProposal] = useState(\"\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [reject, setRejected] = useState(true);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n        console.log(key);\r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.q_id);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getProposalData();\r\n    }, []);\r\n\r\n    const getProposalData = () => {\r\n        axios\r\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setProposalDisplay(res.data.result);\r\n                    setCountProposal(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                console.log(\"dt\", row.created);\r\n                var oldDate = row.created;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link to={`/customer/my-assingment/${row.q_id}`}>\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.DateofProposal);\r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance / decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_accept_date);\r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                row.status == \"Inprogress\" ?\r\n                                    <div>\r\n                                        {row.status}/\r\n                                        <p className=\"inprogress\">\r\n                                            {row.statusdescription}\r\n                                        </p>\r\n                                    </div>\r\n                                    :\r\n                                    row.status == \"Declined; Proposal\" ?\r\n                                        <div>\r\n                                            {row.status}\r\n                                            <p className=\"declined\">\r\n                                                {row.statusdescription}\r\n                                            </p>\r\n                                        </div> :\r\n                                        row.status == \"Accepted; Proposal\" ?\r\n                                            <div>\r\n                                                {row.status}\r\n                                                <p className=\".completed{\">\r\n                                                    {row.statusdescription}\r\n                                                </p>\r\n                                            </div> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Proposed Amout\",\r\n            dataField: \"ProposedAmount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Accepted Amount\",\r\n            dataField: \"accepted_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#064606\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Outstanding\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"darkred\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n            formatter: function amountOutstading(cell, row) {\r\n                var a = row.accepted_amount;\r\n                var p = row.paid_amount;\r\n                return a - p;\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_paid_date);\r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Completion\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n\r\n                        {row.statuscode === \"6\" ? null : (\r\n                            <div>\r\n                                {row.negotiated_amount === \"0\" &&\r\n                                    row.accepted_amount === \"0\" ? (\r\n                                    <div style={{ display: \"flex\", width: \"80px\", justifyContent: \"space-evenly\" }}>\r\n                                        <div style={{ cursor: \"pointer\" }} title=\"Proposal Accepted\">\r\n                                            <Link to={`/customer/proposal_view/${row.q_id}`}>\r\n                                                <i\r\n                                                    class=\"fa fa-check\"\r\n                                                    style={{\r\n                                                        color: \"blue\",\r\n                                                        fontSize: \"16px\",\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n\r\n                                        <div style={{ cursor: \"pointer\" }} title=\"Rejected\">\r\n                                            <i\r\n                                                class=\"fa fa-times\"\r\n                                                style={{ color: \"red\", fontSize: \"16px\" }}\r\n                                                onClick={() => rejected(row.q_id)}\r\n                                            ></i>\r\n                                        </div>\r\n\r\n\r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/customer/chatting/${row.q_id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.q_id,\r\n                                                        routes: `/customer/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                        )}\r\n\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n\r\n\r\n\r\n    //rejected\r\n    const rejected = (id) => {\r\n        console.log(\"del\", id);\r\n        Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"It will permanently rejected !\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes\",\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                deleteCliente(id);\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    // delete data\r\n    const deleteCliente = (key) => {\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"id\", key);\r\n        formData.append(\"status\", 6);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/customers/ProposalAccept`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n                console.log(\"res-\", response);\r\n                if (response.data.code === 1) {\r\n                    setRejected(false);\r\n                    Swal.fire(\"Rejected!\", \"Proposal rejected successfully.\", \"success\");\r\n                    getProposalData();\r\n                } else {\r\n                    Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n                }\r\n\r\n                // if (response.data.code === 1) {\r\n                // setRejected(false);\r\n                // getProposalData();\r\n                //     var variable = \"Proposal rejected successfully.\"\r\n                //     Alerts.SuccessNormal(variable)\r\n                // }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"erroror - \", error);\r\n            });\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CustomerFilter\r\n                        setData={setProposalDisplay}\r\n                        getData={getProposalData}\r\n                        id={userId}\r\n                        proposal=\"proposal\"\r\n                        records={records}\r\n                        setRecords={setRecords}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposalDisplay}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    <ChatComponent\r\n                        chatHandler={chatHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        id={id}\r\n                        getProposalData={getProposalData}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProposalTab;\r\n\r\n\r\n\r\n// axios\r\n//   .get(`${baseUrl}/tl/deleteTeamLeader?id=${id}`)\r\n//   .then(function (response) {\r\n//     console.log(\"delete-\", response);\r\n// if (response.data.code === 1) {\r\n//   Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n//   getTeamLeader();\r\n// } else {\r\n//   Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n// }\r\n\r\n//   })\r\n//   .catch((error) => {\r\n//     console.log(\"erroror - \", error);\r\n//   });\r\n\r\n\r\n\r\n\r\n\r\n// <div title=\"Send Feedback\" style={{ cursor: \"pointer\" }}>\r\n// <Link to={`/customer/feedback/${row.assign_no}`}>\r\n//     <FeedbackIcon />\r\n// </Link>\r\n// </div>\r\n\r\n\r\n{/* <div style={{ cursor: \"pointer\" }} title=\"Discussion\">\r\n                                            <i\r\n                                                class=\"fa fa-comments-o\"\r\n                                                style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                                onClick={() => chatHandler(row)}\r\n                                            ></i>\r\n                                        </div> */}\r\n\r\n                                           // rejected proposal\r\n    // const rejected = (key) => {\r\n    //     console.log(\"rej\", key);\r\n\r\n    //     let formData = new FormData();\r\n    //     formData.append(\"id\", key);\r\n    //     formData.append(\"status\", 6);\r\n\r\n    //     axios({\r\n    //         method: \"POST\",\r\n    //         url: `${baseUrl}/customers/ProposalAccept`,\r\n    //         data: formData,\r\n    //     })\r\n    //         .then(function (response) {\r\n    //             console.log(\"res-\", response);\r\n    //             if (response.data.code === 1) {\r\n    //                 setRejected(false);\r\n    //                 getProposalData();\r\n    //                 var variable = \"Proposal rejected successfully.\"\r\n    //                 Alerts.SuccessNormal(variable)\r\n    //             }\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.log(\"erroror - \", error);\r\n    //         });\r\n    // };\r\n","E:\\Mazars_Pannel\\src\\views\\ProposalTab\\DeclinedProposal.js",["2097","2098","2099","2100","2101","2102","2103","2104","2105","2106","2107","2108","2109"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ChatComponent from \"./ChatComponent\";\r\nimport \"./index.css\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport Records from \"../../components/Records/Records\";\r\n\r\n\r\nfunction DeclinedProposal() {\r\n    const alert = useAlert();\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [proposalDisplay, setProposalDisplay] = useState([]);\r\n    const [proposalCount, setCountProposal] = useState(\"\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [reject, setRejected] = useState(true);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n        console.log(key);\r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.q_id);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getProposalData();\r\n    }, []);\r\n\r\n    const getProposalData = () => {\r\n        axios\r\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=3`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setProposalDisplay(res.data.result);\r\n                    setCountProposal(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                console.log(\"dt\", row.created);\r\n                var oldDate = row.created;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",      \r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link to={`/customer/my-assingment/${row.q_id}`}>\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.DateofProposal);\r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Decline of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_accept_date);\r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                row.status == \"Inprogress\" ?\r\n                                    <div>\r\n                                        {row.status}/\r\n                                        <p className=\"inprogress\">\r\n                                            {row.statusdescription}\r\n                                        </p>\r\n                                    </div>\r\n                                    :\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        <div>\r\n                                            {row.status}\r\n                                            <p className=\"declined\">\r\n                                                {row.statusdescription}\r\n                                            </p>\r\n                                        </div> :\r\n                                        row.status == \"Accepted; Proposal\" ?\r\n                                            <div>\r\n                                                {row.status}\r\n                                                <p className=\"completed\">\r\n                                                    {row.statusdescription}\r\n                                                </p>\r\n                                            </div> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Proposed Amout\",\r\n            dataField: \"ProposedAmount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Accepted Amount\",\r\n            dataField: \"accepted_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#064606\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Outstanding\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"darkred\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n            formatter: function amountOutstading(cell, row) {\r\n                var a = row.accepted_amount;\r\n                var p = row.paid_amount;\r\n                return a - p;\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_paid_date);\r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Completion\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CustomerFilter\r\n                        setData={setProposalDisplay}\r\n                        getData={getProposalData}\r\n                        id={userId}\r\n                        declinedProposal=\"declinedProposal\"\r\n                        records={records}\r\n                        setRecords={setRecords}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                <Records records={records} />\r\n\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposalDisplay}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    <ChatComponent\r\n                        chatHandler={chatHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        id={id}\r\n                        getProposalData={getProposalData}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeclinedProposal;\r\n","E:\\Mazars_Pannel\\src\\views\\ProposalTab\\AcceptedProposal.js",["2110","2111","2112","2113","2114","2115","2116","2117","2118","2119","2120","2121","2122"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ChatComponent from \"./ChatComponent\";\r\nimport \"./index.css\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport Records from \"../../components/Records/Records\";\r\n\r\n\r\nfunction AcceptedProposal() {\r\n    const alert = useAlert();\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [proposalDisplay, setProposalDisplay] = useState([]);\r\n    const [proposalCount, setCountProposal] = useState(\"\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [reject, setRejected] = useState(true);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n        console.log(key);\r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.q_id);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getProposalData();\r\n    }, []);\r\n\r\n    const getProposalData = () => {\r\n        axios\r\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=2`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setProposalDisplay(res.data.result);\r\n                    setCountProposal(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                console.log(\"dt\", row.created);\r\n                var oldDate = row.created;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link to={`/customer/my-assingment/${row.q_id}`}>\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.DateofProposal);\r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_accept_date);\r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                row.status == \"Inprogress\" ?\r\n                                    <div>\r\n                                        {row.status}/\r\n                                        <p className=\"inprogress\">\r\n                                            {row.statusdescription}\r\n                                        </p>\r\n                                    </div>\r\n                                    :\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        <div>\r\n                                            {row.status}\r\n                                            <p className=\"declined\">\r\n                                                {row.statusdescription}\r\n                                            </p>\r\n                                        </div> :\r\n                                        row.status == \"Accepted; Proposal\" ?\r\n                                            <div>\r\n                                                {row.status}\r\n                                                <p className=\"completed\">\r\n                                                    {row.statusdescription}\r\n                                                </p>\r\n                                            </div> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Proposed Amout\",\r\n            dataField: \"ProposedAmount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Accepted Amount\",\r\n            dataField: \"accepted_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#064606\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Outstanding\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"darkred\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n            formatter: function amountOutstading(cell, row) {\r\n                var a = row.accepted_amount;\r\n                var p = row.paid_amount;\r\n                return a - p;\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_paid_date);\r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Completion\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CustomerFilter\r\n                        setData={setProposalDisplay}\r\n                        getData={getProposalData}\r\n                        id={userId}\r\n                        acceptedProposal=\"acceptedProposal\"\r\n                        records={records}\r\n                        setRecords={setRecords}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposalDisplay}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    <ChatComponent\r\n                        chatHandler={chatHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        id={id}\r\n                        getProposalData={getProposalData}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AcceptedProposal;\r\n","E:\\Mazars_Pannel\\src\\views\\ProposalTab\\InprogressProposal.js",["2123","2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ChatComponent from \"./ChatComponent\";\r\nimport \"./index.css\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport Records from \"../../components/Records/Records\";\r\nimport Alerts from \"../../common/Alerts\";\r\n\r\n\r\n\r\n\r\nfunction InprogressProposal() {\r\n    const alert = useAlert();\r\n\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [proposalDisplay, setProposalDisplay] = useState([]);\r\n    const [proposalCount, setCountProposal] = useState(\"\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [reject, setRejected] = useState(true);\r\n\r\n    const [addPaymentModal, setPaymentModal] = useState(false);\r\n    const chatHandler = (key) => {\r\n        console.log(key);\r\n        setPaymentModal(!addPaymentModal);\r\n        setId(key.q_id);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getProposalData();\r\n    }, []);\r\n\r\n    const getProposalData = () => {\r\n        axios\r\n            .get(`${baseUrl}/customers/getProposals?uid=${JSON.parse(userId)}&status=1`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setProposalDisplay(res.data.result);\r\n                    setCountProposal(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    // rejected proposal\r\n    const rejected = (key) => {\r\n        console.log(\"rej\", key);\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"id\", key);\r\n        formData.append(\"status\", 6);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/customers/ProposalAccept`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n                console.log(\"res-\", response);\r\n                if (response.data.code === 1) {\r\n                    setRejected(false);\r\n                    getProposalData();\r\n                    var variable = \"Proposal rejected successfully.\"\r\n                    Alerts.SuccessNormal(variable)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"erroror - \", error);\r\n            });\r\n    };\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                console.log(\"dt\", row.created);\r\n                var oldDate = row.created;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link to={`/customer/my-assingment/${row.q_id}`}>\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Proposal\",\r\n            dataField: \"DateofProposal\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.DateofProposal);\r\n                var oldDate = row.DateofProposal;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_accept_date);\r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {\r\n                                row.status == \"Inprogress\" ?\r\n                                    <div>\r\n                                        {row.status}/\r\n                                        <p className=\"inprogress\">\r\n                                            {row.statusdescription}\r\n                                        </p>\r\n                                    </div>\r\n                                    :\r\n                                    row.status == \"Customer Declined; Proposal\" ?\r\n                                        <div>\r\n                                            {row.status}\r\n                                            <p className=\"declined\">\r\n                                                {row.statusdescription}\r\n                                            </p>\r\n                                        </div> :\r\n                                        row.status == \"Accepted; Proposal\" ?\r\n                                            <div>\r\n                                                {row.status}\r\n                                                <p className=\"completed\">\r\n                                                    {row.statusdescription}\r\n                                                </p>\r\n                                            </div> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Proposed Amout\",\r\n            dataField: \"ProposedAmount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Accepted Amount\",\r\n            dataField: \"accepted_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#064606\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Outstanding\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"darkred\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n            formatter: function amountOutstading(cell, row) {\r\n                var a = row.accepted_amount;\r\n                var p = row.paid_amount;\r\n                return a - p;\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_paid_date);\r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Completion\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            dataField: \"\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n\r\n                        {row.statuscode === \"6\" ? null : (\r\n                            <div>\r\n                                {row.negotiated_amount === \"0\" &&\r\n                                    row.accepted_amount === \"0\" ? (\r\n                                    <div style={{ display: \"flex\", width: \"80px\", justifyContent: \"space-evenly\" }}>\r\n                                        <div style={{ cursor: \"pointer\" }} title=\"Proposal Accepted\">\r\n                                            <Link to={`/customer/proposal_view/${row.q_id}`}>\r\n                                                <i\r\n                                                    class=\"fa fa-check\"\r\n                                                    style={{\r\n                                                        color: \"blue\",\r\n                                                        fontSize: \"16px\",\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n\r\n                                        <div style={{ cursor: \"pointer\" }} title=\"Rejected\">\r\n                                            <i\r\n                                                class=\"fa fa-times\"\r\n                                                style={{ color: \"red\", fontSize: \"16px\" }}\r\n                                                onClick={() => rejected(row.q_id)}\r\n                                            ></i>\r\n                                        </div>\r\n\r\n                                        <div title=\"Send Message\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/customer/chatting/${row.q_id}`,\r\n                                                    obj: {\r\n                                                        message_type: \"2\",\r\n                                                        query_No: row.assign_no,\r\n                                                        query_id: row.q_id,\r\n                                                        routes: `/customer/proposal`\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                <i\r\n                                                    class=\"fa fa-comments-o\"\r\n                                                    style={{\r\n                                                        fontSize: 16,\r\n                                                        cursor: \"pointer\",\r\n                                                        marginLeft: \"8px\",\r\n                                                        color: \"blue\"\r\n                                                    }}\r\n                                                ></i>\r\n                                            </Link>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CustomerFilter\r\n                        setData={setProposalDisplay}\r\n                        getData={getProposalData}\r\n                        id={userId}\r\n                        inprogressProposal=\"inprogressProposal\"\r\n                        records={records}\r\n                        setRecords={setRecords}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={proposalDisplay}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n                    <ChatComponent\r\n                        chatHandler={chatHandler}\r\n                        addPaymentModal={addPaymentModal}\r\n                        id={id}\r\n                        getProposalData={getProposalData}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InprogressProposal;\r\n","E:\\Mazars_Pannel\\src\\components\\InputRoom\\index.js",["2138","2139","2140","2141","2142"],"import React from \"react\";\r\nimport * as Cookies from \"js-cookie\";\r\n\r\nimport \"../../assets/fonts/css/icons.css\";\r\n// import Validator from \"../../utils/Validator\";\r\n// import { RESOLUTION_ARR } from \"../../utils/Settings\";\r\nimport \"./index.css\";\r\n\r\nclass Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      channel: \"\",\r\n      baseMode: \"avc\",\r\n      transcode: \"interop\",\r\n      attendeeMode: \"video\",\r\n      videoProfile: \"480p_4\",\r\n    };\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"keypress\", (e) => {\r\n  //     e.keyCode === 13 && this.handleJoin();\r\n  //   });\r\n  // }\r\n\r\n  //pass id\r\n  // handleChannel = (val, state) => {\r\n  //   this.setState({\r\n  //     channel: val,\r\n  //   });\r\n  // };\r\n\r\n  // handleJoin = () => {\r\n  //   console.log(this.state);\r\n  //   Cookies.set(\"channel\", this.state.channel); //input channel name\r\n  //   Cookies.set(\"baseMode\", this.state.baseMode);\r\n  //   Cookies.set(\"transcode\", this.state.transcode);\r\n  //   Cookies.set(\"attendeeMode\", this.state.attendeeMode); // select video call\r\n  //   Cookies.set(\"videoProfile\", this.state.videoProfile);\r\n  //   window.location.hash = \"customer/meeting\";\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper index\">\r\n        <div className=\"ag-header\"></div>\r\n        <div className=\"ag-main\">\r\n          <section className=\"login-wrapper\">\r\n            <div className=\"login-header\"></div>\r\n\r\n            {/* <div className=\"login-body\">\r\n              <div className=\"columns\">\r\n                <div className=\"column is-12\">\r\n                  <InputChannel\r\n                    onChange={this.handleChannel}\r\n                    placeholder=\"Input a room name here\"\r\n                  ></InputChannel>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"columns\">\r\n                <div className=\"column\">\r\n                  <div id=\"attendeeMode\" className=\"control\">\r\n                    <label className=\"radio\">\r\n                      <input\r\n                        onChange={(e) =>\r\n                          this.setState({ attendeeMode: e.target.value })\r\n                        }\r\n                        value=\"video\"\r\n                        type=\"radio\"\r\n                        name=\"attendee\"\r\n                        defaultChecked\r\n                      />\r\n                      <span className=\"radio-btn\"></span>\r\n                      <span className=\"radio-msg\">\r\n                        Video Call : join with video call\r\n                      </span>\r\n                    </label>\r\n                    <br />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div> */}\r\n\r\n            <div className=\"login-footer\">\r\n              <a\r\n                // onClick={this.handleJoin}\r\n                className=\"ag-rounded button is-info\"\r\n              >\r\n                Join\r\n              </a>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n\r\n// class InputChannel extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       state: \"\",\r\n//     };\r\n//   }\r\n\r\n//   handleChange = (e) => {\r\n//     this.props.onChange(e.target.value);\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"channel-wrapper control has-icons-left\">\r\n//         <input\r\n//           onInput={this.handleChange}\r\n//           id=\"channel\"\r\n//           className={\"ag-rounded input \" + this.state.state}\r\n//           type=\"text\"\r\n//           placeholder={this.props.placeholder}\r\n//         />\r\n\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n{\r\n  /* <span className=\"validate-icon\">{validateIcon}</span> */\r\n}\r\n// let validateIcon = \"\";\r\n// switch (this.state.state) {\r\n//   default:\r\n//   case \"\":\r\n//     validateIcon = \"\";\r\n//     break;\r\n//   case \"is-success\":\r\n//     validateIcon = <i className=\"ag-icon ag-icon-valid\"></i>;\r\n//     break;\r\n//   case \"is-danger\":\r\n//     validateIcon = <i className=\"ag-icon ag-icon-invalid\"></i>;\r\n//     break;\r\n// }\r\n{\r\n  /* <label className=\"radio\">\r\n                      <input\r\n                        onChange={(e) =>\r\n                          this.setState({ attendeeMode: e.target.value })\r\n                        }\r\n                        value=\"audio-only\"\r\n                        type=\"radio\"\r\n                        name=\"attendee\"\r\n                      />\r\n                      <span className=\"radio-btn\"></span>\r\n                      <span className=\"radio-img audio\"></span>\r\n                      <span className=\"radio-msg\">\r\n                        Audio-only : join with audio call\r\n                      </span>\r\n                    </label>\r\n                    <br />\r\n                    <label className=\"radio\">\r\n                      <input\r\n                        onChange={(e) =>\r\n                          this.setState({ attendeeMode: e.target.value })\r\n                        }\r\n                        value=\"audience\"\r\n                        type=\"radio\"\r\n                        name=\"attendee\"\r\n                      />\r\n                      <span className=\"radio-btn\"></span>\r\n                      <span className=\"radio-img audience\"></span>\r\n                      <span className=\"radio-msg\">\r\n                        Audience : join as an audience\r\n                      </span>\r\n                    </label> */\r\n}\r\n{\r\n  /* <div className=\"columns\">\r\n                <div className=\"column is-7\">\r\n                  <BaseOptions\r\n                    onChange={(val) => this.setState({ baseMode: val })}\r\n                  ></BaseOptions>\r\n                </div>\r\n                <div className=\"column is-5\">\r\n                  <AdvancedOptions\r\n                    onRadioChange={(val) => this.setState({ transcode: val })}\r\n                    onSelectChange={(val) =>\r\n                      this.setState({ videoProfile: val })\r\n                    }\r\n                  ></AdvancedOptions>\r\n                </div>\r\n              </div> */\r\n}\r\n// class BaseOptions extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this._options = [\r\n//       {\r\n//         label: \"Agora Video Call\",\r\n//         value: \"avc\",\r\n//         content: \"One to one and group calls\",\r\n//       },\r\n//       {\r\n//         label: \"Agora Live\",\r\n//         value: \"al\",\r\n//         content:\r\n//           \"Enabling real-time interactions between the host and the audience\",\r\n//       },\r\n//     ];\r\n//     this.state = {\r\n//       active: false,\r\n//       message: \"Agora Video Call\",\r\n//     };\r\n//   }\r\n\r\n//   handleSelect = (item) => {\r\n//     let msg = item.label;\r\n//     let val = item.value;\r\n//     this.setState({\r\n//       message: msg,\r\n//       active: false,\r\n//     });\r\n//     this.props.onChange(val);\r\n//   };\r\n\r\n//   render() {\r\n//     const options = this._options.map((item, index) => {\r\n//       return (\r\n//         <div\r\n//           className=\"dropdown-item\"\r\n//           key={index}\r\n//           onClick={(e) => this.handleSelect(item, e)}\r\n//         >\r\n//           <p>{item.label}</p>\r\n//           <hr />\r\n//           <p>{item.content}</p>\r\n//         </div>\r\n//       );\r\n//     });\r\n\r\n//     return (\r\n//       <div className={this.state.active ? \"dropdown is-active\" : \"dropdown\"}>\r\n//         <div\r\n//           className=\"dropdown-trigger\"\r\n//           onClick={() => this.setState({ active: !this.state.active })}\r\n//         >\r\n//           <a\r\n//             id=\"baseMode\"\r\n//             className=\"ag-rounded button\"\r\n//             aria-haspopup=\"true\"\r\n//             aria-controls=\"baseModeOptions\"\r\n//           >\r\n//             <span id=\"baseOptionLabel\">{this.state.message}</span>\r\n//             <span className=\"icon is-small\">\r\n//               <i className=\"ag-icon ag-icon-arrow-down\" aria-hidden=\"true\"></i>\r\n//             </span>\r\n//           </a>\r\n//         </div>\r\n//         <div className=\"dropdown-menu\" id=\"baseModeOptions\" role=\"menu\">\r\n//           <div className=\"dropdown-content\">{options}</div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// class AdvancedOptions extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       active: false,\r\n//     };\r\n//   }\r\n\r\n//   handleRadio = (e) => {\r\n//     this.props.onRadioChange(e.target.value);\r\n//   };\r\n\r\n//   handleSelect = (e) => {\r\n//     this.props.onSelectChange(e.target.value);\r\n//   };\r\n\r\n//   render() {\r\n//     const options = Object.entries(RESOLUTION_ARR).map((item, index) => {\r\n//       return (\r\n//         <option key={index} value={item[0].split(\",\")[0]}>\r\n//           {item[1][0]}x {item[1][1]}, {item[1][2]}fps, {item[1][3]}kbps\r\n//         </option>\r\n//       );\r\n//     });\r\n//     return (\r\n//       <div className={this.state.active ? \"dropdown is-active\" : \"dropdown\"}>\r\n//         <div\r\n//           className=\"dropdown-trigger\"\r\n//           onClick={() => this.setState({ active: !this.state.active })}\r\n//         >\r\n//           <a\r\n//             id=\"advancedProfile\"\r\n//             className=\"ag-rounded button\"\r\n//             aria-haspopup=\"true\"\r\n//             aria-controls=\"advancedOptions\"\r\n//           >\r\n//             <span>Advanced</span>\r\n//           </a>\r\n//         </div>\r\n//         <div className=\"dropdown-menu\" id=\"advancedOptions\" role=\"menu\">\r\n//           <div className=\"dropdown-content\">\r\n//             <div className=\"dropdown-item\">\r\n//               <div className=\"control\">\r\n//                 <label className=\"radio\">\r\n//                   <input\r\n//                     value=\"\"\r\n//                     type=\"radio\"\r\n//                     name=\"transcode\"\r\n//                     onChange={this.handleRadio}\r\n//                   />\r\n//                   <span>VP8-only</span>\r\n//                 </label>\r\n//                 <label className=\"radio\">\r\n//                   <input\r\n//                     value=\"interop\"\r\n//                     type=\"radio\"\r\n//                     defaultChecked\r\n//                     onChange={this.handleRadio}\r\n//                     name=\"transcode\"\r\n//                   />\r\n//                   <span>VP8 &amp; H264</span>\r\n//                 </label>\r\n//                 <label className=\"radio\">\r\n//                   <input\r\n//                     value=\"h264_interop\"\r\n//                     type=\"radio\"\r\n//                     onChange={this.handleRadio}\r\n//                     name=\"transcode\"\r\n//                   />\r\n//                   <span>H264-only</span>\r\n//                 </label>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"dropdown-item\">\r\n//               <div className=\"select is-rounded\">\r\n//                 <select\r\n//                   onChange={this.handleSelect}\r\n//                   defaultValue=\"480p_4\"\r\n//                   id=\"videoProfile\"\r\n//                   className=\"ag-rounded is-clipped\"\r\n//                 >\r\n//                   {options}\r\n//                 </select>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","E:\\Mazars_Pannel\\src\\views\\QueriesTab\\InprogressProposal.js",["2143","2144","2145","2146","2147","2148","2149","2150","2151","2152"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Records from \"../../components/Records/Records\";\r\n\r\n\r\n\r\nfunction InprogressProposal() {\r\n  const alert = useAlert();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [query, setQuery] = useState([]);\r\n  const [queriesCount, setCountQueries] = useState(null);\r\n  const [records, setRecords] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    getQueriesData();\r\n  }, []);\r\n\r\n\r\n  const getQueriesData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=2`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setQuery(res.data.result);\r\n          setCountQueries(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.created);\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link to={`/customer/my-assingment/${row.q_id}`}>\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}/\r\n              {\r\n                row.status == \"Inprogress\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Expected Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.Exp_Delivery_Date);\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <CustomerFilter\r\n            setData={setQuery}\r\n            getData={getQueriesData}\r\n            id={userId}\r\n            InprogressQueryProposal=\"InprogressQueryProposal\"\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={query}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InprogressProposal;\r\n","E:\\Mazars_Pannel\\src\\views\\QueriesTab\\InprogressAllocation.js",["2153","2154","2155","2156","2157","2158","2159","2160","2161","2162","2163","2164","2165","2166"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport AdditionalQueryModal from \"./AdditionalQueryModal\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nfunction InprogressAllocation() {\r\n\r\n  const alert = useAlert();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [query, setQuery] = useState([]);\r\n  const [queriesCount, setCountQueries] = useState(null);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [assignNo, setAssignNo] = useState('');\r\n  const [additionalQuery, setAdditionalQuery] = useState(false);\r\n  const additionalHandler = (key) => {\r\n    setAdditionalQuery(!additionalQuery);\r\n    setAssignNo(key)\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getQueriesData();\r\n  }, []);\r\n\r\n  const getQueriesData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}&status=1`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setQuery(res.data.result);\r\n          setCountQueries(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.created);\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            {/* <Link to={`/customer/my-assingment/${row.id}`}>\r\n              {row.assign_no}\r\n            </Link> */}\r\n            <Link\r\n              to={{\r\n                pathname: `/customer/my-assingment/${row.id}`,\r\n                index: 1,\r\n                routes: \"queries\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <div>\r\n                    {row.status}/\r\n                    <p className=\"inprogress\">\r\n                      {row.status_message}\r\n                    </p>\r\n                  </div>\r\n                  :\r\n                  row.status == \"Inprogress; Allocation\" ?\r\n                    <p>\r\n                      {row.status}\r\n                    </p>\r\n                    :\r\n                    row.status == \"Inprogress; Proposals\" ?\r\n                      <p>\r\n                        {row.status}\r\n                      </p>\r\n                      :\r\n                      row.status == \"Inprogress; Assignments\" ?\r\n                        <p>\r\n                          {row.status}\r\n                        </p>\r\n                        :\r\n                        null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Expected Delivery Date\",\r\n      dataField: \"exp_delivery_date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.exp_delivery_date);\r\n        var oldDate = row.exp_delivery_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", textAlign: \"center\", width: \"130px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {\r\n              row.status == \"Declined Query\" ?\r\n                null\r\n                :\r\n                <div style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-around\"\r\n                }}>\r\n\r\n                  <div>\r\n                    {\r\n                      row.status_code < 2 ?\r\n                        <div style={{ display: \"flex\" }}>\r\n                          <div title=\"Update Query\">\r\n                            <Link to={`/customer/edit-query/${row.id}`}>\r\n                              <i\r\n                                className=\"fa fa-edit\"\r\n                                style={{\r\n                                  fontSize: 16,\r\n                                  cursor: \"pointer\",\r\n                                  marginLeft: \"8px\",\r\n                                }}\r\n                              ></i>\r\n                            </Link>\r\n                          </div>\r\n\r\n                          <div title=\"Delete Query\">\r\n                            {\r\n                              row.status_code < 1 ?\r\n                                <i\r\n                                  className=\"fa fa-trash\"\r\n                                  style={{\r\n                                    fontSize: 16,\r\n                                    cursor: \"pointer\",\r\n                                    marginLeft: \"8px\",\r\n                                  }}\r\n                                  onClick={() => del(row.id)}\r\n                                ></i>\r\n                                : null\r\n                            }\r\n\r\n                          </div>\r\n                        </div>\r\n                        :\r\n                        <div style={{ display: \"flex\" }}>\r\n\r\n                          <div title=\"Send Message\">\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/customer/chatting/${row.id}`,\r\n                                obj: {\r\n                                  message_type: \"4\",\r\n                                  query_No: row.assign_no,\r\n                                  query_id: row.id,\r\n                                  routes: `/customer/queries`\r\n                                }\r\n                              }}\r\n                            >\r\n                              <i\r\n                                class=\"fa fa-comments-o\"\r\n                                style={{\r\n                                  fontSize: 16,\r\n                                  cursor: \"pointer\",\r\n\r\n                                  color: \"blue\"\r\n                                }}\r\n                              ></i>\r\n                            </Link>\r\n                          </div>\r\n\r\n                          <div title=\"Send Feedback\"\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              marginLeft: \"5px\",\r\n                            }}>\r\n                            <Link\r\n                              to={{\r\n                                pathname: `/customer/feedback/${row.assign_no}`,\r\n                                obj: {\r\n                                  routes: `/customer/queries`\r\n                                }\r\n                              }}\r\n                            >\r\n                              <FeedbackIcon />\r\n                            </Link>\r\n                          </div>\r\n                          <div title=\"Upload Additional Documents\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            onClick={() => additionalHandler(row.assign_no)}\r\n                          >\r\n                            <PublishIcon color=\"secondary\" />\r\n                          </div>\r\n                        </div>\r\n                    }\r\n                  </div>\r\n                </div>\r\n            }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n\r\n  //check\r\n  const del = (id) => {\r\n    console.log(\"del\", id);\r\n\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"Do you want to decline query ?\",\r\n      type: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, decline it!\",\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteCliente(id);\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteCliente = (id) => {\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", id);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/deleteQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          Swal.fire(\"\", \"Query declined successfully.\", \"success\");\r\n          getQueriesData();\r\n        } else {\r\n          Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <CustomerFilter\r\n            setData={setQuery}\r\n            getData={getQueriesData}\r\n            id={userId}\r\n            InprogressAllocation=\"InprogressAllocation\"\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={query}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n\r\n          <AdditionalQueryModal\r\n            additionalHandler={additionalHandler}\r\n            additionalQuery={additionalQuery}\r\n            assignNo={assignNo}\r\n            getQueriesData={getQueriesData}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InprogressAllocation;\r\n","E:\\Mazars_Pannel\\src\\views\\QueriesTab\\DeclinedQueries.js",["2167","2168","2169","2170","2171","2172","2173","2174","2175","2176","2177","2178"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Records from \"../../components/Records/Records\";\r\n\r\n\r\n\r\nfunction DeclinedQueries() {\r\n  const alert = useAlert();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [query, setQuery] = useState([]);\r\n  const [queriesCount, setCountQueries] = useState(null);\r\n  const [records, setRecords] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    getQueriesData();\r\n  }, []);\r\n\r\n  const getQueriesData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/declinedQueries?uid=${JSON.parse(userId)}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setQuery(res.data.result);\r\n          setCountQueries(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date\",\r\n      dataField: \"created\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.created);\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link to={`/customer/my-assingment/${row.id}`}>\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        return (\r\n          <>\r\n            <div>\r\n              {row.status}/\r\n              {\r\n                row.status == \"Inprogress Query\" ?\r\n                  <p className=\"inprogress\">\r\n                    {row.statusdescription}\r\n                  </p>\r\n                  :\r\n                  row.status == \"Declined Query\" ?\r\n                    <p className=\"declined\">\r\n\r\n                      {row.statusdescription}\r\n                    </p> :\r\n                    row.status == \"Completed Query\" ?\r\n                      <p className=\"completed\">\r\n\r\n                        {row.statusdescription}\r\n                      </p> :\r\n                      null\r\n              }\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Expected Delivery Date\",\r\n      dataField: \"Exp_Delivery_Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.Exp_Delivery_Date);\r\n        var oldDate = row.Exp_Delivery_Date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader>\r\n          <CustomerFilter\r\n            setData={setQuery}\r\n            getData={getQueriesData}\r\n            id={userId}\r\n            DeclinedQuery=\"DeclinedQuery\"\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={query}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeclinedQueries;\r\n","E:\\Mazars_Pannel\\src\\views\\QueriesTab\\AllQueriesData.js",["2179","2180","2181","2182","2183","2184","2185","2186","2187","2188"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Swal from \"sweetalert2\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport AdditionalQueryModal from \"./AdditionalQueryModal\";\r\n\r\n\r\n\r\nfunction AllQueriesData() {\r\n    const alert = useAlert();\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [query, setQuery] = useState([]);\r\n    const [queriesCount, setCountQueries] = useState(null);\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [assignNo, setAssignNo] = useState('');\r\n    const [additionalQuery, setAdditionalQuery] = useState(false);\r\n    const additionalHandler = (key) => {\r\n        setAdditionalQuery(!additionalQuery);\r\n        setAssignNo(key)\r\n    };\r\n\r\n    useEffect(() => {\r\n        getQueriesData();\r\n    }, []);\r\n\r\n    const getQueriesData = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/incompleteAssignments?user=${JSON.parse(userId)}`\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setQuery(res.data.result);\r\n                    setCountQueries(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            text: \"S.No\",\r\n            dataField: \"\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date\",\r\n            dataField: \"created\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.created);\r\n                var oldDate = row.created;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Query No\",\r\n            dataField: \"assign_no\",           \r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/customer/my-assingment/${row.id}`,\r\n                                index: 0,\r\n                                routes: \"queries\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Category\",\r\n            dataField: \"parent_id\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Sub Category\",\r\n            dataField: \"cat_name\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                return (\r\n                    <>\r\n                        <div>\r\n                            {row.status}/\r\n                            {\r\n                                row.status == \"Inprogress Query\" ?\r\n                                    <p className=\"inprogress\">\r\n                                        {row.status_message}\r\n                                    </p>\r\n                                    :\r\n                                    row.status == \"Declined Query\" ?\r\n                                        <p className=\"declined\">\r\n\r\n                                            {row.status_message}\r\n                                        </p> :\r\n                                        row.status == \"Completed Query\" ?\r\n                                            <p className=\"completed\">\r\n\r\n                                                {row.status_message}\r\n                                            </p> :\r\n                                            null\r\n                            }\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            text: \"Expected Delivery Date\",\r\n            dataField: \"exp_delivery_date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.exp_delivery_date);\r\n                var oldDate = row.exp_delivery_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", textAlign: \"center\", width: \"130px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        {\r\n                            row.status == \"Declined Query\" ?\r\n                                null\r\n                                :\r\n                                <div style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-around\"\r\n                                }}>\r\n\r\n                                    <div>\r\n                                        {\r\n                                            row.status_code < 2 ?\r\n                                                <div style={{ display: \"flex\" }}>\r\n                                                    <div title=\"Update Query\">\r\n                                                        <Link to={`/customer/edit-query/${row.id}`}>\r\n                                                            <i\r\n                                                                className=\"fa fa-edit\"\r\n                                                                style={{\r\n                                                                    fontSize: 16,\r\n                                                                    cursor: \"pointer\",\r\n                                                                    marginLeft: \"8px\",\r\n                                                                }}\r\n                                                            ></i>\r\n                                                        </Link>\r\n                                                    </div>\r\n\r\n                                                    <div title=\"Delete Query\">\r\n                                                        {\r\n                                                            row.status_code < 1 ?\r\n                                                                <i\r\n                                                                    className=\"fa fa-trash\"\r\n                                                                    style={{\r\n                                                                        fontSize: 16,\r\n                                                                        cursor: \"pointer\",\r\n                                                                        marginLeft: \"8px\",\r\n                                                                    }}\r\n                                                                    onClick={() => del(row.id)}\r\n                                                                ></i>\r\n                                                                : null\r\n                                                        }\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                :\r\n                                                <div style={{ display: \"flex\" }}>\r\n\r\n                                                    <div title=\"Send Message\">\r\n                                                        <Link\r\n                                                            to={{\r\n                                                                pathname: `/customer/chatting/${row.id}`,\r\n                                                                obj: {\r\n                                                                    message_type: \"4\",\r\n                                                                    query_No: row.assign_no,\r\n                                                                    query_id: row.id,\r\n                                                                    routes: `/customer/queries`\r\n                                                                }\r\n                                                            }}\r\n                                                        >\r\n                                                            <i\r\n                                                                class=\"fa fa-comments-o\"\r\n                                                                style={{\r\n                                                                    fontSize: 16,\r\n                                                                    cursor: \"pointer\",\r\n\r\n                                                                    color: \"blue\"\r\n                                                                }}\r\n                                                            ></i>\r\n                                                        </Link>\r\n                                                    </div>\r\n\r\n                                                    <div title=\"Send Feedback\"\r\n                                                        style={{\r\n                                                            cursor: \"pointer\",\r\n                                                            marginLeft: \"5px\",\r\n                                                        }}>\r\n                                                        <Link\r\n                                                            to={{\r\n                                                                pathname: `/customer/feedback/${row.assign_no}`,\r\n                                                                obj: {\r\n                                                                    routes: `/customer/queries`\r\n                                                                }\r\n                                                            }}\r\n                                                        >\r\n                                                            <FeedbackIcon />\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                    <div title=\"Upload Additional Documents\"\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        onClick={() => additionalHandler(row.assign_no)}\r\n                                                    >\r\n                                                        <PublishIcon color=\"secondary\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                        }\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    //check\r\n    const del = (id) => {\r\n        console.log(\"del\", id);\r\n\r\n        Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"Do you want to decline query ?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes, decline it!\",\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                deleteCliente(id);\r\n            }\r\n        });\r\n    };\r\n\r\n    const deleteCliente = (id) => {\r\n        let formData = new FormData();\r\n        formData.append(\"uid\", JSON.parse(userId));\r\n        formData.append(\"id\", id);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/customers/deleteQuery`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n                console.log(\"res-\", response);\r\n                if (response.data.code === 1) {\r\n                    Swal.fire(\"\", \"Query declined successfully.\", \"success\");\r\n                    getQueriesData();\r\n                } else {\r\n                    Swal.fire(\"Oops...\", \"Errorr \", \"error\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"erroror - \", error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <Row>\r\n                        <Col md=\"9\">\r\n                            {/* <CardTitle tag=\"h4\">Queries ({queriesCount})</CardTitle> */}\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                                <Link to=\"/customer/select-category\" class=\"btn btn-primary\">\r\n                                    Fresh Query\r\n                                </Link>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n                <CardHeader>\r\n                    <CustomerFilter\r\n                        setData={setQuery}\r\n                        getData={getQueriesData}\r\n                        id={userId}\r\n                        query=\"query\"\r\n                        records={records}\r\n                        setRecords={setRecords}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={query}\r\n                        columns={columns}\r\n                        rowIndex\r\n                    />\r\n\r\n\r\n\r\n                    <AdditionalQueryModal\r\n                        additionalHandler={additionalHandler}\r\n                        additionalQuery={additionalQuery}\r\n                        assignNo={assignNo}\r\n                        getQueriesData={getQueriesData}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllQueriesData;\r\n\r\n\r\n\r\n","E:\\Mazars_Pannel\\src\\views\\ProposalView\\TermsConditions.js",["2189","2190"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\n\r\n\r\nfunction PaymentModal({\r\n  addPaymentModal,\r\n  readTerms,\r\n}) {\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={readTerms} size=\"lg\" scrollable={true} >\r\n        <ModalHeader toggle={readTerms}>GENERAL TERMS AND CONDITIONS</ModalHeader>\r\n        <ModalBody>\r\n          <p>\r\n            These General Terms and Conditions form an integral part of the engagement letter issued to Name of the Customer (the “Client”) by Mazars\r\n            Advisory LLP (“we” or the “Firm”)\r\n          </p>\r\n\r\n          <h5>1. Applicability</h5>\r\n          <p>\r\n            • These General Terms and Conditions are applicable to any provision of services to the Client by the Firm in accordance with the Engagement Letter.\r\n          </p>\r\n          <p>• The Firm will perform the services in accordance with the applicable standards of professional conduct.</p>\r\n          <p>• The Firm shall provide the services to the Client as an independent entity and not as the Client’s employee, agent, partner or joint venture. Neither the Client nor the Firm has any right, power or authority to bind the other except as stated otherwise in the Engagement Letter.</p>\r\n\r\n          <h5>2. Scope of Work/Services</h5>\r\n          <p>It is understood and agreed that the Firm shall provide the services to the Client as set out in the Engagement Letter. Any variation/modification/amendments shall be in writing and duly executed by the authorised signatory of each Party.</p>\r\n\r\n          <h5>3. Fees and Expenses</h5>\r\n          <p>\r\n            The Firm fees are based on the degree of skill involved, the seniority of the staff engaged, the time necessarily spent on the engagement and the nature of the engagement.\r\n          </p>\r\n          <p>\r\n            The Firm’s fees are due for payment immediately on the submission of the relevant invoice.\r\n          </p>\r\n\r\n          <p>\r\n            Invoices upon which payment is not received within seven (7) days of the submission date shall accrue a late payment charge of 2% per month.\r\n          </p>\r\n\r\n          <p>The Firm will charge the Client separately for travel expenses, photocopying charges, courier and delivery charges and all other out-of-pocket expenses reasonably incurred in connection with the engagement. International facsimile and telephone calls may be separately charged in accordance with the Firm’s current charging policy.</p>\r\n\r\n          <p>The Firm’s fees are exclusive of taxes or similar charges and the Client shall be responsible for all taxes imposed on the services</p>\r\n\r\n\r\n          <p>The Firm may charge additional professional fees if events beyond the Firm’s control (including the Client’s acts or omissions) affect the Firm's ability to perform the services as originally planned or if the Client asks the Firm to perform additional tasks or services. If the Firm is required by applicable law, legal process or government action to produce information or personnel as witnesses with respect to the engagement, the Client shall reimburse the Firm for any professional time and expenses (including reasonable external legal costs) incurred.</p>\r\n\r\n          <h5>4. Term</h5>\r\n\r\n          <p>The agreement will come into effect at the moment the Client confirms the Engagement Letter (either orally or in writing or electronically) or at the moment when the work is commenced.</p>\r\n          <p>Unless terminated sooner in accordance with the terms of the Engagement Letter, the engagement shall terminate on the completion of the services.</p>\r\n          <p>The engagement may be terminated by either party at any time, with or without cause, by giving written notice to the other party of not less than thirty (30) days before the effective date of termination; provided that, in the event of a termination for cause, the party in breach shall have the right to cure the breach within the notice period. Upon termination of the engagement, the Client will compensate the Firm under the terms of the Engagement Letter for the services performed and expenses incurred for the period to the effective date of termination.</p>\r\n          <p>The Firm has the right, at its option, to suspend or terminate the provisions of services in the event that the Firm’s invoices are not paid within the contractually agreed period.</p>\r\n\r\n          <h5>5. Client’s Responsibility</h5>\r\n\r\n          <p>The Client shall promptly provide (or cause others to provide) to the Firm,  the information, resources and assistance (including access to records, systems, premises and people) that the Firm reasonably requires to perform the services and the Client has full authority to do so.</p>\r\n          <p>All information provided by the Client or on the Client’s behalf (“Client Information”) shall to the extent possible be accurate and complete and the Client shall be responsible for any infringement of copyright or other third-party rights.</p>\r\n          <p>The Firm may rely on the Client Information made available to the Firm and, unless the Firm expressly agrees otherwise, will have no responsibility to evaluate or verify it.</p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <h5> 6. Use of name</h5>\r\n\r\n\r\n          <p>In connection with any literature of an advertising or similar nature, the Firm’s name shall not be used or quoted without the prior written permission of the Firm.</p>\r\n          <p> The Firm may use the fact of its involvement with the Client in this engagement in its credentials, proposals and publicity material subject to applicable law and professional regulations. The Client agrees to such use and the Firm shall, on the Client’s specific request, share samples of such use.</p>\r\n\r\n\r\n\r\n\r\n\r\n          <h5> 7. Independence</h5>\r\n\r\n\r\n\r\n\r\n          <p> The Firm undertakes to comply with the relevant independence guidelines dictated by applicable national and international regulators at all times. In order to allow the Firm to comply with the relevant independence guidelines, the Client undertakes to inform the Firm timely, correctly and completely of the legal and control structure of the Client’s business or the group to which the Client belongs, all its financial and other interests and participations, as well as all its other alliances, financial or otherwise, in the broadest sense of the word.</p>\r\n\r\n\r\n\r\n\r\n          <h5>8. Limitation of Liability</h5>\r\n\r\n          <p>The Firm, its partners, directors, consultants, employees, agents, affiliates and other personnel are not liable for any damage that the Firm has received in connection with the engagement.</p>\r\n          <p> For the purposes of this engagement  \"damage\" shall mean the aggregate of all losses or damages and costs suffered or incurred, directly or indirectly, by the Client  under or in connection with the engagement or its subject matter (as the same may be amended or varied) and any report prepared pursuant to it, including as a result of breach of contract, breach of statutory duty, tort (including negligence), or other act or omission by the Firm but excluding any such losses, damages or costs arising from the fraud or dishonesty of the Firm or in respect of liabilities which cannot lawfully be limited or excluded.</p>\r\n          <p>It is agreed that, having regard to the Firm’s interest in limiting the personal liability and exposure to litigation of its personnel, the Client will not bring any claim in respect of any damage against any of the Firm’s personnel personally also.</p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <h5>9. Confidentiality</h5>\r\n\r\n          <p>The Firm shall not disclose any confidential information which it obtains as a result of acting for the Client to any third party other than its affiliates, directors, partners, officers, employees, personnel, agents, experts, consultants or advisors on a \"need to know\" basis and who are bound by appropriate confidentiality and non-disclosure obligations.</p>\r\n          <p>In the event that the Firm or its representatives are requested pursuant to, or required by, applicable law or regulation or by legal or administrative process  to disclose any Confidential Information, or where the Firm wishes to disclose its professional indemnity insurers or its advisers, the Firm agrees that it will, as far as is legally and practically possible, provide the Client with prompt notice of such request or requirement in order to enable the Client to seek an appropriate protective order or other remedy. In the event that such protective order or other remedy is not obtained, the Firm or its representatives, as the case may be, shall disclose only the portion of the Confidential Information which is legally or professionally required to be disclosed.</p>\r\n          <p>The Firm shall be permitted to retain copies of such Confidential Information as it is required to retain for legal or professional regulatory purposes.</p>\r\n          <p>Unless specifically governed by statute or regulation, the report and deliverables issued by the Firm in accordance with the Engagement Letter are strictly confidential and for use by the Client for the purpose specified in the Engagement Letter. The reports and other deliverables may not be used, reproduced or circulated for any other purpose, whether in whole or in part, without the Firm’s prior written consent, which consent shall only be given after full consideration of the circumstances at the time and on the understanding that the Firm owes no duty of care to any party other than the Client.</p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <h5>10. Electronic transmittals</h5>\r\n\r\n          <p>During the course of our engagement, the Firm or the Client may need to electronically transmit confidential information to each other and to other entities engaged by either party.  E-mail is a fast and convenient way to communicate.  However, email is not a secure means of communication and, thus, confidentiality could be compromised.  The Client agrees to the use of e-mail and other electronic methods to transmit and receive information, including confidential information, between the Firm and the Client and between the Firm and outside specialists or other entities engaged by either the Firm or the Client.</p>\r\n\r\n          <h5>11. Indemnification</h5>\r\n          <p>The Client shall indemnify and hold harmless the Firm against all claims by third parties (contractual or in tort), threatened claims, suits, taxes, penalties, liabilities, damages, costs and expenses, suffered, incurred, arising or expended (“Claims”), directly or indirectly by reason of Firm’s performance under this engagement or from having performed any services to the Client, except in the event of fraud, gross negligence, or wilful misconduct on the part of the Firm.</p>\r\n          <p> The indemnity obligations as set out above shall survive the termination or rescission for any reason of the contractual relationship between the Firm and the Client until the expiry of the relevant statute of limitation applicable to any claims.</p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <h5>12. Ownership of Books, Papers and Working Papers</h5>\r\n\r\n\r\n\r\n          <p>All documents in whatever form, paper, electronic or otherwise such as (for example, but without being an exhaustive list) working papers, letters (including without limitation e-mails), memoranda, file notes of meetings and telephone calls, draft computations and returns etc. and copies of other original documents which the Firm creates or which the Firm receives either as principal or in the Firm’s right or as agent for the Client belong to the Firm. For the avoidance of doubt, the Firm does not assert such ownership rights to documents such as, for example, title documents, original invoices and other original primary accounting records, tax deduction certificates etc. belonging to the Client, but the Firm may retain possession of them by exercising a lien, if the Firm’s fees remain outstanding after becoming due for payment.</p>\r\n\r\n\r\n          <h5>13. Intellectual Property Rights</h5>\r\n\r\n          <p> The Firm may use data, software, designs, utilities, tools, models, systems and other methodologies and know-how (“Materials”) that the Firm owns or right to use in performing the services. Notwithstanding the delivery of any reports, the Firm retains all intellectual property rights in the Materials (including any improvements or knowledge developed while performing the services), and in any working papers compiled in connection with the services (but not Client Information reflected in them).</p>\r\n\r\n          <h5>14. Anti-Corruption and Anti-Bribery</h5>\r\n\r\n          <p>The Firm and the Client shall each maintain in place throughout the term of this Engagement Letter its own policies and procedures, including, but not limited to, adequate procedures to ensure compliance with applicable Anti-Corruption and Anti-Bribery Laws, and will enforce them as appropriate.</p>\r\n\r\n\r\n\r\n\r\n\r\n          <h5>15. Money Laundering</h5>\r\n\r\n\r\n          <p>The Firm and the Client shall each comply with applicable Money Laundering Regulations</p>\r\n\r\n          <h5>16. Personal Data Collection</h5>\r\n\r\n          <p>All personal data collected in the Client identification and verification process will only be used for the Client due diligence purpose (if necessary), for advising the Client on the Instructed Matter and for sending the Client details of other services that the Firm may from time to time offer including sending legal updates, seminar invitations and other marketing material. If the Firm intends to use the Client’s personal data for any other unrelated purposes, the Firm shall seek the Client’s permission before doing so.</p>\r\n\r\n\r\n          <h5>17. Non-exclusivity</h5>\r\n\r\n\r\n          <p>The parties acknowledge that the Firm shall have the right to provide consulting or other professional services of any kind or nature whatsoever to any person or entity as the Firm in its sole discretion deems appropriate.</p>\r\n\r\n\r\n\r\n\r\n\r\n          <h5>18. Non-solicitation</h5>\r\n\r\n\r\n          <p> Each party undertakes during the effective term of this engagement and for a period of 1 (one) year thereafter, not to solicit, hire or employ directly or indirectly any partner, director, personnel or employee of the other party who has had any involvement in the engagement except with the prior written consent of the other party. If such consent is given a fee of 15% of the individual’s annual total compensation (cost to company) shall be payable to the other party.</p>\r\n\r\n\r\n\r\n          <h5>19. Complaints</h5>\r\n\r\n\r\n          <p></p>\r\n          <p>The Firm must be notified in writing of complaints relating to the work carried out and/or the invoiced amount within 30 days of the date of dispatch of the documents or information in respect of which the Client is filing a complaint, or within 30 days of the discovery of the shortcoming, if the Client proves that the shortcoming could not have reasonably been discovered previously. However this does not exempt the Client from its obligation to pay the Firm’s invoices.</p>\r\n          <p>If the Firm accepts the complaint then, it has the option of adjusting the fee charged, having the rejected work rectified or terminating the Contract (for remaining work).</p>\r\n\r\n\r\n\r\n\r\n          <h5>20. Force Majeure</h5>\r\n\r\n\r\n          <p> Neither the Client nor the Firm shall be liable for breach of any terms and conditions set out in the Engagement Letter (other than payment obligations) caused by circumstances beyond the reasonable control of the Client or the Firm.</p>\r\n\r\n\r\n          <h5>21. Notice</h5>\r\n          <p>Any notices, demands or consents required or permitted in accordance with the Engagement Letter and these General Terms and Conditions shall be in writing and signed by an authorised officer of the relevant party and shall be delivered either personally or sent by registered post or receipted courier addressed to the respective Party’s address as stated in the Engagement Letter.</p>\r\n\r\n\r\n          <h5>22. Variation</h5>\r\n\r\n          Variations to any of the provisions of the Engagement Letter and the General Terms and Conditions shall be void unless they are in writing and duly executed by the authorised representatives of each party.\r\n\r\n          <h5>23. Severability</h5>\r\n\r\n          <p>If any term of the Engagement Letter or General Terms and Conditions is held to be invalid or unenforceable by any judicial, applicable law, professional regulations or other competent authority but would be valid or enforceable if some parts of the term were modified or deleted, the term in question will apply with the minimum modification or deletion necessary to make it valid and enforceable, and the other provisions in the Engagement Letter and General Terms and Conditions will be unimpaired and remain in full force and effect.</p>\r\n          <p>If any term of the Engagement Letter or General Terms and Conditions is not relevant or applicable for the particular engagement such terms shall be modified or deleted as necessary to make it valid and the other provisions in the Engagement Letter or General Terms and Conditions will be unimpaired and remain in full force and effect.</p>\r\n\r\n\r\n          <h5>24. Contradictory Provisions</h5>\r\n          <p> If these General Terms and Conditions and the Engagement Letter contain conflicting provisions, the provisions contained in the Engagement Letter shall prevail.</p>\r\n\r\n\r\n          <h5> 25. Governing Law</h5>\r\n\r\n          <p>This Engagement Letter and General Terms and Conditions will be governed by and construed in accordance with the laws of India and be subject to the exclusive jurisdiction of the courts of New Delhi.</p>\r\n          <p>We acknowledge that the above is in accordance with our understanding of the arrangement.</p>\r\n\r\n\r\n\r\n\r\n\r\n        </ModalBody>\r\n\r\n\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={readTerms}>Cancel</Button>\r\n        </ModalFooter>\r\n\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n","E:\\Mazars_Pannel\\src\\components\\Admin-Header\\CustomerNotification.js",["2191","2192","2193","2194"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction CustomerNotification({ tokenKey, name }) {\r\n\r\n    // const userId = window.localStorage.getItem(\"userid\");\r\n\r\n    const [notification, setNotification] = useState([]);\r\n    const [countNotification, setCountNotification] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        getNotification();\r\n    }, [tokenKey]);\r\n\r\n    const getNotification = () => {\r\n        axios\r\n            .get(`${baseUrl}/customers/getNotification?id=${JSON.parse(tokenKey)}&type_list=uread`)\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setNotification(res.data.result);\r\n                    setCountNotification(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    // readnotification\r\n    const readNotification = (id) => {\r\n        axios\r\n            .get(`${baseUrl}/customers/markReadNotification?id=${id}`)\r\n            .then(function (response) {\r\n                console.log(\"delete-\", response);\r\n                if (response.data.code === 1) {\r\n                    console.log(response.data.result);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"erroror - \", error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <li class=\"dropdown dropdown-notification nav-item\">\r\n                    {countNotification ? (\r\n                        <div>\r\n                            <a\r\n                                class=\"nav-link nav-link-label\"\r\n                                href=\"#\"\r\n                                data-toggle=\"dropdown\"\r\n                            >\r\n                                <a href=\"#\" class=\"notification\">\r\n                                    <span>Inbox</span>\r\n                                    <span class=\"badge\">{countNotification}</span>\r\n                                </a>\r\n                            </a>\r\n\r\n                            <div\r\n                                class=\"dropdown-menu dropdown-menu-right\"\r\n                                style={{ height: \"300px\", overflowY: \"scroll\" }}\r\n                            >\r\n                                <div class=\"arrow_box_right\">\r\n                                    {notification.map((p, i) => (\r\n                                        <div\r\n                                            class=\"dropdown-item\"\r\n                                            style={{ padding: \"0\", fontSize: \"12px\" }}\r\n                                        >\r\n                                            <Link to={`/${name}/view-notification/${p.id}`}>\r\n                                                <p\r\n                                                    class=\"dropdown-item\"\r\n                                                    style={{ cursor: \"pointer\" }}\r\n                                                    onClick={() => readNotification(p.id)}\r\n                                                >\r\n                                                    {p.message}\r\n                                                </p>\r\n                                            </Link>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : null}\r\n                </li>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default CustomerNotification;\r\n\r\n\r\n\r\n// {\r\n//   /* <i class=\"ft-book\"></i> */\r\n// }\r\n\r\n","E:\\Mazars_Pannel\\src\\components\\CategorySelect\\CategorySelect.js",["2195"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../../assets/css/bootstrap.min.css\";\r\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport mazars from \"../../assets/images/mazars-logo.png\";\r\nimport \"./index.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\n\r\n\r\nconst Schema = yup.object().shape({\r\n  p_tax: yup.string().required(\"required\"),\r\n});\r\n\r\n\r\nfunction CategorySelect({ addfreshbtn, startbtn }) {\r\n  const { handleSubmit, register, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => {\r\n    if (store2) {\r\n      localStorage.setItem(\"category\", JSON.stringify(store2));\r\n    }\r\n    setModal(!modal);\r\n  };\r\n\r\n  const toggle2 = () => {\r\n    if (store2) {\r\n      localStorage.setItem(\"category\", JSON.stringify(store2));\r\n    }\r\n  };\r\n\r\n  const [tax, setTax] = useState([]);\r\n  const [tax2, setTax2] = useState([]);\r\n\r\n  const [store, setStore] = useState(\"\");\r\n  const [store2, setStore2] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getCategory = () => {\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=0`).then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setTax(res.data.result);\r\n        }\r\n      });\r\n    };\r\n\r\n    getCategory();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const getSubCategory = () => {\r\n      axios.get(`${baseUrl}/customers/getCategory?pid=${store}`).then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setTax2(res.data.result);\r\n        }\r\n      });\r\n    };\r\n    getSubCategory();\r\n  }, [store]);\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"15px\" }}\r\n      >\r\n        <div class=\"col-sm-3\" style={{ marginTop: \"38px\" }}>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"form-group\">\r\n              <label>Category</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"p_tax\"\r\n                ref={register}\r\n                onChange={(e) => setStore(e.target.value)}\r\n              >\r\n                <option value=\"\">--Select Category--</option>\r\n                {tax.map((p, index) => (\r\n                  <option key={index} value={p.id}>\r\n                    {p.details}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {errors.p_tax && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_tax.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label>Sub Category</label>\r\n              <select\r\n                className=\"form-select form-control\"\r\n                name=\"p_tax2\"\r\n                ref={register}\r\n                onChange={(e) => setStore2(e.target.value)}\r\n              >\r\n                <option value=\"\">--Select Sub-Category--</option>\r\n                {tax2.map((p, index) => (\r\n                  <option key={index} value={p.id}>\r\n                    {p.details}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {errors.p_tax2 && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_tax2.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              {startbtn && (\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary  btn-block\"\r\n                  onClick={toggle}\r\n                >\r\n                  Submit\r\n                </button>\r\n              )}\r\n\r\n              {addfreshbtn && (\r\n                <Link\r\n                  to=\"/customer/addfresh\"\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary  btn-block\"\r\n                  onClick={toggle2}\r\n                >\r\n                  Submit\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </form>\r\n\r\n          <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>\r\n              <img\r\n                src={mazars}\r\n                style={{ height: \"auto\", width: \"25%\" }}\r\n                alt=\"\"\r\n              />\r\n            </ModalHeader>\r\n\r\n            <ModalBody>\r\n              <div class=\"modal-body\">\r\n                <h4>Would you like to post a Query ?</h4>\r\n              </div>\r\n            </ModalBody>\r\n\r\n            <div class=\"modal-footer m-auto\">\r\n              <Link to=\"/customer/register-yourself\" class=\"btn btn-primary\">\r\n                Yes\r\n              </Link>\r\n              <Link to=\"/customer/signin\" class=\"btn btn-secondary\">\r\n                No\r\n              </Link>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CategorySelect;\r\n","E:\\Mazars_Pannel\\src\\Service\\PrivateRouteUser.js",[],"E:\\Mazars_Pannel\\src\\components\\meeting\\index.jsx",[],"E:\\Mazars_Pannel\\src\\pages\\TP\\NewPassword\\NewPassword.js",["2196","2197","2198","2199"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction NewPassword(props) {\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n  const { id } = useParams();\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    // formData.append(\"user_id\", value.p_name);\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"code\", value.p_code);\r\n    formData.append(\"password\", value.p_password);\r\n    formData.append(\"rpassword\", value.p_confirm_password);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/resetpassword`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          alert.success(\"reset password successfully!\");\r\n          reset();\r\n          props.history.push(\"/customer/signin\");\r\n        } else if (response.data.code === 0) {\r\n          console.log(response.data.result);\r\n          // alert.error(response.data.result);\r\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header mtp=\"mtp\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Reset Password</h2>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-group\">\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className={classNames(\"form-control\", {\r\n                    \"is-invalid\": errors.p_email,\r\n                  })}\r\n                  name=\"p_email\"\r\n                  placeholder=\"Enter Email\"\r\n                  defaultValue={id}\r\n                  ref={register({\r\n                    required: \"This field is required\",\r\n                    pattern: {\r\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                      message: \"Please enter valid email address\",\r\n                    },\r\n                  })}\r\n                />\r\n                {errors.p_email && (\r\n                  <div className=\"invalid-feedback\">\r\n                    {errors.p_email.message}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">OTP</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className={classNames(\"form-control\", {\r\n                    \"is-invalid\": errors.p_code,\r\n                  })}\r\n                  name=\"p_code\"\r\n                  placeholder=\"Enter otp\"\r\n                  ref={register({\r\n                    required: \"This field is required\",\r\n                  })}\r\n                />\r\n                {errors.p_code && (\r\n                  <div className=\"invalid-feedback\">\r\n                    {errors.p_code.message}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <label className=\"form-label\">New Password</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"password\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_password,\r\n                })}\r\n                placeholder=\"Enter Your Password\"\r\n                name=\"p_password\"\r\n                ref={register({\r\n                  required: \"This field is required\",\r\n                  pattern: {\r\n                    value:\r\n                      /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\r\n                    message:\r\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\r\n                  },\r\n                })}\r\n              />\r\n              {errors.p_password && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_password.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Confirm Password</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"password\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_confirm_password,\r\n                })}\r\n                placeholder=\"Confirm Password\"\r\n                name=\"p_confirm_password\"\r\n                ref={register({\r\n                  required: \"This field is required\",\r\n                  validate: (value) =>\r\n                    value === getValues(\"p_password\") ||\r\n                    \"password doesn 't match\",\r\n                })}\r\n              />\r\n              {errors.p_confirm_password && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_confirm_password.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewPassword;\r\n\r\n// const Schema = yup.object().shape({\r\n//   p_name: yup.string().required(\"required user id\"),\r\n//   p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n//   p_code: yup.string().required(\"required otp \"),\r\n//   // p_password: yup.string().required(\"required password\"),\r\n//   // p_confirm_password: yup.string().required(\"required confirm password\"),\r\n// });\r\n","E:\\Mazars_Pannel\\src\\pages\\TP\\ChangePassword\\ChangePassword.js",["2200","2201","2202","2203","2204","2205","2206","2207"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\n// import \"../../assets/css/style.css\";\r\n// import \"../../assets/css/media.css\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n// const Schema = yup.object().shape({\r\n//   p_name: yup.string().required(\"required user id\"),\r\n//   p_password: yup.string().required(\"required password\"),\r\n//   p_confirm_password: yup.string().required(\"required confirm password\"),\r\n// });\r\n\r\nfunction ChangePassword(props) {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const alert = useAlert();\r\n  // const { handleSubmit, register, reset, errors } = useForm({\r\n  //   resolver: yupResolver(Schema),\r\n  // });\r\n\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm();\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"id\", JSON.parse(userid));\r\n    formData.append(\"user_id\", value.p_email);\r\n    formData.append(\"password\", value.password);\r\n    formData.append(\"rpassword\", value.confirm_password);\r\n\r\n    // axios({\r\n    //   method: \"POST\",\r\n    //   url: `${baseUrl}/customers/passChange`,\r\n    //   data: formData,\r\n    // })\r\n    //   .then(function (response) {\r\n    //     console.log(\"res-\", response);\r\n    //     if (response.data.code === 1) {\r\n    //       alert.success(\"change password successfully!\");\r\n    //       reset();\r\n    //     } else if (response.data.code === 0) {\r\n    //       console.log(response.data.result);\r\n\r\n    //       Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\r\n    //       reset();\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(\"erroror - \", error);\r\n    //   });\r\n  };\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Change Password</h2>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-group\">\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Email </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className={classNames(\"form-control\", {\r\n                    \"is-invalid\": errors.p_email,\r\n                  })}\r\n                  name=\"p_email\"\r\n                  placeholder=\"Enter email id\"\r\n                  ref={register({\r\n                    required: \"This field is required\",\r\n                    pattern: {\r\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                      message: \"Please enter valid email address\",\r\n                    },\r\n                  })}\r\n                />\r\n                {errors.p_email && (\r\n                  <div className=\"invalid-feedback\">\r\n                    {errors.p_email.message}{\" \"}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <label className=\"form-label\">New Password</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"password\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_password,\r\n                })}\r\n                placeholder=\"Enter Your Password\"\r\n                name=\"p_password\"\r\n                ref={register({\r\n                  required: \"This field is required\",\r\n                  pattern: {\r\n                    value: /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/,\r\n                    message:\r\n                      \"UpperCase, LowerCase, Number/SpecialChar and min 8 Chars\",\r\n                  },\r\n                })}\r\n              />\r\n              {errors.p_password && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_password.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Confirm Password</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"password\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_confirm_password,\r\n                })}\r\n                placeholder=\"Confirm Password\"\r\n                name=\"p_confirm_password\"\r\n                ref={register({\r\n                  required: \"This field is required\",\r\n                  validate: (value) =>\r\n                    value === getValues(\"p_password\") ||\r\n                    \"password doesn 't match\",\r\n                })}\r\n              />\r\n              {errors.p_confirm_password && (\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.p_confirm_password.message}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n","E:\\Mazars_Pannel\\src\\pages\\TP\\SendProposal\\SendProposal.js",[],"E:\\Mazars_Pannel\\src\\pages\\TP\\EditProposal\\EditProposal.js",["2208","2209","2210","2211","2212","2213","2214","2215","2216","2217","2218"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\n\r\nfunction ProposalComponent() {\r\n  // const { id } = props;\r\n  // console.log(id);\r\n\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [custId, setCustId] = useState(\"\");\r\n  const [custname, setCustName] = useState();\r\n  const [assignId, setAssignID] = useState(\"\");\r\n  const [assingNo, setAssingNo] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [proposal, setProposal] = useState({\r\n    query: \"\",\r\n    name: \"\",\r\n    amount: \"\",\r\n    payable: \"\",\r\n    misc1: \"\",\r\n    misc2: \"\",\r\n    payable_through: \"\",\r\n  });\r\n  const { query, name, amount, misc1, misc2, payable_through } = proposal;\r\n\r\n  useEffect(() => {\r\n    getQuery();\r\n  }, []);\r\n\r\n  const getQuery = () => {\r\n    axios.get(`${baseUrl}/tl/getProposalDetail?id=${id}`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setProposal({\r\n          name: res.data.result.name,\r\n          query: res.data.result.assign_no,\r\n          amount: res.data.result.amount,\r\n          misc1: res.data.result.misc1,\r\n          misc2: res.data.result.misc2,\r\n          payable_through: res.data.result.payable_through,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\r\n      console.log(\"res\", res);\r\n      // setCustName(res.data.name);\r\n      setCustId(res.data.id);\r\n    };\r\n    getUser();\r\n  }, [id]);\r\n\r\n  console.log(assignId);\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(value);\r\n\r\n    // var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\r\n    var todaysDate = new Date();\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"assign_no\", value.p_assingment);\r\n    formData.append(\"name\", value.p_name);\r\n    // formData.append(\"type\", \"tl\");\r\n    formData.append(\"assign_id\", id);\r\n    formData.append(\"amount\", value.p_amount);\r\n    formData.append(\"payable_through\", value.p_payable);\r\n    formData.append(\"misc1\", value.misc_1);\r\n    formData.append(\"misc2\", value.misc_2);\r\n    // formData.append(\"payable_date\", todaysDate);\r\n    // formData.append(\"customer_id\", custId);\r\n    // formData.append(\"assign_id\", assignId);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/updateProposal`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          // reset();\r\n          getQuery();\r\n          alert.success(<Msg />);\r\n          history.push(\"/taxprofessional/proposal\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  //alert msg\r\n  const Msg = () => {\r\n    return (\r\n      <>\r\n        <p style={{ fontSize: \"10px\" }}>proposal updated</p>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"5\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"7\">\r\n              <div class=\"btn ml-3\">\r\n                <h4>Edit Proposal</h4>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Query No.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_assingment\"\r\n                    class=\"form-control\"\r\n                    value={query}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Customer Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_name\"\r\n                    class=\"form-control\"\r\n                    value={name}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Amount</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_amount\"\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                    defaultValue={amount}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Payable by Through</label>\r\n                  <select\r\n                    class=\"form-control\"\r\n                    name=\"p_payable\"\r\n                    aria-label=\"Default select example\"\r\n                    ref={register}\r\n                    defaultValue={payable_through}\r\n                  >\r\n                    <option value=\"\">--select--</option>\r\n                    {payable.map((p, index) => (\r\n                      <option key={index} value={p.pay}>\r\n                        {p.pay}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Misc 1</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"misc_1\"\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                    defaultValue={misc1}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Proposal Description</label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    id=\"textarea\"\r\n                    rows=\"3\"\r\n                    name=\"misc_2\"\r\n                    defaultValue={misc2}\r\n                    ref={register}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Payable by date</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_date\"\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div> */}\r\n\r\n            <br />\r\n            <div class=\"form-group\">\r\n              <button type=\"submit\" class=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ProposalComponent;\r\n\r\nconst payable = [\r\n  { pay: \"NEFT\" },\r\n  { pay: \"DEBIT CARD\" },\r\n  { pay: \"CREDIT CARD\" },\r\n  { pay: \"UPI\" },\r\n  { pay: \"WALLET\" },\r\n];\r\n","E:\\Mazars_Pannel\\src\\pages\\TP\\Proposal\\Proposal.js",["2219","2220","2221","2222"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport Tpfilter from \"../../../components/Search-Filter/tpfilter\";\r\n\r\nfunction Proposal() {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n\r\n  const [proposal, setProposal] = useState([]);\r\n  const [count, setCount] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getProposalList();\r\n  }, []);\r\n\r\n  const getProposalList = () => {\r\n    axios\r\n      .get(`${baseUrl}/tp/getProposalTp?id=${JSON.parse(userid)}`)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setProposal(res.data.result);\r\n          setCount(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      text: \"S.No\",\r\n      dataField: \"\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"query_date\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.query_date);\r\n        var oldDate = row.query_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Query No\",\r\n      dataField: \"assign_no\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link to={`/taxprofessional/queries/${row.id}`}>\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      text: \"Category\",\r\n      dataField: \"parent_id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Sub Category\",\r\n      dataField: \"cat_name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Customer Name\",\r\n      dataField: \"name\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"status\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      dataField: \"\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n            {row.status == \"Cust Accepted\" || row.status == \"Pending\" ? (\r\n              <Link to={`/taxprofessional/edit-proposal/${row.id}`}>\r\n                <i\r\n                  className=\"fa fa-edit\"\r\n                  style={{\r\n                    fontSize: 18,\r\n                    cursor: \"pointer\",\r\n                    marginLeft: \"8px\",\r\n                    color: \"green\",\r\n                  }}\r\n                ></i>\r\n              </Link>\r\n            ) : row.status == \"Accepted\" ? (\r\n              <Link to={`/taxprofessional/sendproposal/${row.id}`}>\r\n                <i\r\n                  class=\"fa fa-mail-forward\"\r\n                  style={{\r\n                    fontSize: 14,\r\n                    cursor: \"pointer\",\r\n                    marginLeft: \"8px\",\r\n                  }}\r\n                ></i>\r\n              </Link>\r\n            ) : null}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"9\">\r\n              <CardTitle tag=\"h4\">List of Proposals ({count})</CardTitle>\r\n            </Col>\r\n            <Col md=\"3\"></Col>\r\n          </Row>\r\n        </CardHeader>\r\n        <CardHeader>\r\n          <Tpfilter\r\n            setData={setProposal}\r\n            getData={getProposalList}\r\n            proposal=\"proposal\"\r\n          />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={proposal}\r\n            columns={columns}\r\n            rowIndex\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Proposal;\r\n","E:\\Mazars_Pannel\\src\\pages\\TP\\Dashboard\\Dashboard.js",["2223","2224","2225","2226","2227","2228"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\n// import \"../../../../node_modules/react-tabs/style/react-tabs.css\";\r\n\r\nimport Layout from \"../../../components/Layout/Layout\";\r\n\r\nfunction Dashboard() {\r\n  const userid = window.localStorage.getItem(\"tpkey\");\r\n  const [incomplete, setIncomplete] = useState(\"\");\r\n  const [complete, setcomplete] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getIncomplete = () => {\r\n      axios\r\n        .get(`${baseUrl}/tp/GetIncompleteQues?id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setIncomplete(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    const getComplete = () => {\r\n      axios\r\n        .get(`${baseUrl}/tp/GetCompleteQues?id=${JSON.parse(userid)}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            setcomplete(res.data.result.length);\r\n          }\r\n        });\r\n    };\r\n\r\n    getIncomplete();\r\n    getComplete();\r\n  }, []);\r\n\r\n  return (\r\n    <Layout TPDashboard=\"TPDashboard\" TPuserId={userid}>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\r\n          <div class=\"card pull-up ecom-card-1 bg-white\">\r\n            <div class=\"card-body height-150\">\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <div>\r\n                  <h5 class=\"text-muted info position-absolute p-1\">\r\n                    Inprogress\r\n                  </h5>\r\n                </div>\r\n                <div>\r\n                  <Link to={`/teamleader/queriestab`}>\r\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"flex-end\",\r\n                  marginTop: \"50px\",\r\n                }}\r\n              >\r\n                <h4>{incomplete}</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-xl-4 col-lg-6 col-md-12\">\r\n          <div class=\"card pull-up ecom-card-1 bg-white\">\r\n            <div class=\"card-body height-150\">\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <div>\r\n                  <h5 class=\"text-muted info position-absolute p-1\">\r\n                    Complete\r\n                  </h5>\r\n                </div>\r\n                <div>\r\n                  <Link to={`/teamleader/queriestab`}>\r\n                    <i class=\"fa fa-tasks info font-large-1 float-right p-1\"></i>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"flex-end\",\r\n                  marginTop: \"50px\",\r\n                }}\r\n              >\r\n                <h4>{complete}</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n{\r\n  /* <div>\r\n        <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)}>\r\n          <TabList\r\n            style={{\r\n              listStyleType: \"none\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n            }}\r\n          >\r\n            <Tab style={tabIndex == 0 ? myStyle2 : myStyle1}>\r\n              Pending for Acceptance\r\n            </Tab>\r\n            <Tab style={tabIndex == 1 ? myStyle2 : myStyle1}>Inprogress</Tab>\r\n            <Tab style={tabIndex == 2 ? myStyle2 : myStyle1}>Complete</Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <p> Pending for Acceptance</p>\r\n            <button onClick={() => setTabIndex(1)}>go to 1st tab</button>\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <p>Inprogress tab</p>\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <p>Complete tab</p>\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div> */\r\n}\r\n\r\n// const myStyle1 = {\r\n//   backgroundColor: \"grey\",\r\n//  padding: \"12px\",\r\n//   borderRadius: \"50px\",\r\n//   width: \"200px\",\r\n//   textAlign: \"center\",\r\n//   color: \"white\",\r\n//   cursor: \"pointer\",\r\n// };\r\n// const myStyle2 = {\r\n//  padding: \"12px\",\r\n//   borderRadius: \"50px\",\r\n//   width: \"200px\",\r\n//   textAlign: \"center\",\r\n//   backgroundColor: \"blue\",\r\n//   color: \"white\",\r\n//   cursor: \"pointer\",\r\n// };\r\n\r\n// const [tabIndex, setTabIndex] = useState(0);\r\n","E:\\Mazars_Pannel\\src\\pages\\TP\\ForgetPassword\\ForgetPassword.js",["2229","2230","2231","2232"],"import { useForm } from \"react-hook-form\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../../components/Header/Header\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n// import NewPassword from \"../NewPassword/NewPassword\";\r\nimport classNames from \"classnames\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Schema = yup.object().shape({\r\n  p_email: yup.string().email(\"invalid email\").required(\"required email\"),\r\n});\r\n\r\n\r\n\r\nfunction ForgetPassword(props) {\r\n  const alert = useAlert();\r\n\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"email\", value.p_email);\r\n    formData.append(\"type\", \"tp\");\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/forgototp`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          alert.success(\"otp send your email !\");\r\n          props.history.push(`/taxprofessional/new-password/${value.p_email}`)\r\n        } else if (response.data.code === 0) {\r\n          console.log(response.data.result);\r\n          Swal.fire(\"Oops...\", \"Errorr : \" + response.data.result, \"error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  const valueHandler = () => {\r\n    var item = props.location.email\r\n    if (item == \"null\") {\r\n      console.log(\"item : \", item)\r\n      // return '';\r\n    } else {\r\n      return item\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header mtp=\"mtp\" />\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <div className=\"heading\">\r\n            <h2>Forgot Password</h2>\r\n          </div>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_email,\r\n                })}\r\n                name=\"p_email\"\r\n                ref={register}\r\n                placeholder=\"Enter Email\"\r\n                defaultValue={valueHandler()}\r\n              />\r\n              {errors.p_email && (\r\n                <div className=\"invalid-feedback\">{errors.p_email.message}</div>\r\n              )}\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgetPassword;\r\n","E:\\Mazars_Pannel\\src\\views\\QueriesTab\\AdditionalQueryModal.js",["2233","2234","2235","2236","2237","2238","2239"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport CommonServices from \"../../common/common\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nfunction AdditionalQueryModal({\r\n  additionalQuery,\r\n  additionalHandler,\r\n  assignNo,\r\n  getQueriesData,\r\n}) {\r\n  const { handleSubmit, register } = useForm();\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    var uploadImg = value.p_upload;\r\n    if (uploadImg) {\r\n      for (var i = 0; i < uploadImg.length; i++) {\r\n        let file = uploadImg[i];\r\n        formData.append(\"upload[]\", file);\r\n      }\r\n    }\r\n\r\n    formData.append(\"assign_no\", assignNo);\r\n    // formData.append(\"upload\", value.p_upload[0]);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/PostAdditionalQuery`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n\r\n          // var variable = \"Document Uploaded Successfully\"\r\n          // Alerts.SuccessNormal(variable)\r\n\r\n          var message = response.data.message\r\n          if (message.invalid) {\r\n            Swal.fire({\r\n              title: 'Error !',\r\n              html: `<p class=\"text-danger\">${message.invalid}</p>`,\r\n            })\r\n          } else if (message.faill && message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p class=\"text-danger\">${message.faill}</p> <br/> <p>${message.success}</p> `,\r\n              icon: 'success',\r\n            })\r\n          } else if (message.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              html: `<p>${message.success}</p>`,\r\n              icon: 'success',\r\n            })\r\n          }\r\n          else if (message.faill) {\r\n            Swal.fire({\r\n              title: 'Error !',\r\n              html: `<p class=\"text-danger\">${message.faill}</p>`,\r\n              icon: 'error',\r\n            })\r\n          }\r\n\r\n          additionalHandler();\r\n          getQueriesData();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={additionalQuery} toggle={additionalHandler} size=\"md\">\r\n        <ModalHeader toggle={additionalHandler}>UPLOAD DOCUMENTS</ModalHeader>\r\n        <ModalBody>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Upload Your Document</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"p_upload\"\r\n                ref={register}\r\n                className=\"form-control-file\"\r\n                multiple\r\n              />\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdditionalQueryModal;\r\n","E:\\Mazars_Pannel\\src\\pages\\TP\\SendProposal\\ProposalComponent.js",["2240","2241","2242","2243","2244"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\n\r\nfunction ProposalComponent(props) {\r\n  const { id } = props;\r\n  console.log(id);\r\n\r\n  const alert = useAlert();\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const userid = window.localStorage.getItem(\"tlkey\");\r\n\r\n  const [custId, setCustId] = useState(\"\");\r\n  const [custname, setCustName] = useState();\r\n  const [assignId, setAssignID] = useState(\"\");\r\n  const [assingNo, setAssingNo] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getQuery = () => {\r\n      axios\r\n        .get(\r\n          `${baseUrl}/tl/pendingTlProposal?tl_id=${JSON.parse(\r\n            userid\r\n          )}&assign_id=${id}`\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data.code === 1) {\r\n            if (res.data.result.length > 0) {\r\n              setAssingNo(res.data.result[0].assign_no);\r\n              setAssignID(res.data.result[0].id);\r\n            }\r\n          }\r\n        });\r\n    };\r\n    getQuery();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      const res = await axios.get(`${baseUrl}/customers/allname?id=${id}`);\r\n      console.log(\"res\", res);\r\n      setCustName(res.data.name);\r\n      setCustId(res.data.id);\r\n    };\r\n\r\n    getUser();\r\n  }, [id]);\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(value);\r\n\r\n    // var date = value.p_date.replace(/(\\d\\d)\\/(\\d\\d)\\/(\\d{4})/, \"$3-$1-$2\");\r\n    var todaysDate = new Date();\r\n\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"assign_no\", assingNo);\r\n    formData.append(\"name\", value.p_name);\r\n    formData.append(\"type\", \"tl\");\r\n    formData.append(\"id\", JSON.parse(userid));\r\n    formData.append(\"amount\", value.p_amount);\r\n    formData.append(\"payable\", value.p_payable);\r\n    formData.append(\"misc1\", value.misc_1);\r\n    formData.append(\"misc2\", value.misc_2);\r\n    formData.append(\"payable_date\", todaysDate);\r\n    formData.append(\"customer_id\", custId);\r\n    formData.append(\"assign_id\", assignId);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/uploadProposal`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          reset();\r\n          alert.success(<Msg />);\r\n          history.push(\"/taxprofessional/proposal\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  //alert msg\r\n  const Msg = () => {\r\n    return (\r\n      <>\r\n        <p style={{ fontSize: \"10px\" }}>proposal successfully sent</p>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md=\"5\">\r\n              <button\r\n                class=\"btn btn-success ml-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                <i class=\"fas fa-arrow-left mr-2\"></i>\r\n                Go Back\r\n              </button>\r\n            </Col>\r\n            <Col md=\"7\">\r\n              <div class=\"btn ml-3\">\r\n                <h4>Prepare Proposal</h4>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Query No.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_assingment\"\r\n                    class=\"form-control\"\r\n                    value={assingNo}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Customer Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_name\"\r\n                    class=\"form-control\"\r\n                    value={custname}\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Amount</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_amount\"\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Payable by Through</label>\r\n                  <select\r\n                    class=\"form-control\"\r\n                    name=\"p_payable\"\r\n                    aria-label=\"Default select example\"\r\n                    ref={register}\r\n                  >\r\n                    <option value=\"\">--select--</option>\r\n                    {payable.map((p, index) => (\r\n                      <option key={index} value={p.pay}>\r\n                        {p.pay}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Misc 1</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"misc_1\"\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Proposal Description</label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    id=\"textarea\"\r\n                    rows=\"3\"\r\n                    name=\"misc_2\"\r\n                    ref={register}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label>Payable by date</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"p_date\"\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div> */}\r\n\r\n            <br />\r\n            <div class=\"form-group\">\r\n              <button type=\"submit\" class=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProposalComponent;\r\n\r\nconst payable = [\r\n  { pay: \"NEFT\" },\r\n  { pay: \"DEBIT CARD\" },\r\n  { pay: \"CREDIT CARD\" },\r\n  { pay: \"UPI\" },\r\n  { pay: \"WALLET\" },\r\n];\r\n\r\n{\r\n  /* <div class=\"col-md-8\">\r\n        <div>\r\n          <h3>Send Proposal</h3>\r\n          <br />\r\n\r\n          \r\n        \r\n        </div>\r\n      </div> */\r\n}\r\n\r\n// const handleImage = (e) =>{\r\n//   let files = e.target.files\r\n//    console.log(files)\r\n\r\n//   let reader = new FileReader();\r\n//   reader.readAsDataURL(files[0])\r\n\r\n//  reader.onload = (e) => {\r\n//  console.log(\"img\", e.target.result)\r\n// }\r\n\r\n/* <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label>Proposal File</label>\r\n                <input type=\"file\" name=\"p_image\" ref={register} />\r\n              </div>\r\n            </div> */\r\n\r\n// const Schema = yup.object().shape({\r\n//     p_assingment: yup.string().required(\"required assingment\"),\r\n//     p_name: yup.string().required(\"required name\"),\r\n//     p_document: yup.string().required(\"required file\"),\r\n//   });\r\n\r\n// {\r\n//   Object.entries(res.data.result).map(([key, value]) => {\r\n//     console.log(\"val\", value.name);\r\n//     setCustName(value.name);\r\n//   });\r\n// }\r\n\r\n{\r\n  /* <select\r\n                    class=\"form-control\"\r\n                    ref={register}\r\n                    name=\"p_assingment\"\r\n                    onChange={(e) => getID(e.target.value)}\r\n                  >\r\n                    <option value=\"\">--select--</option>\r\n                    {incompleteData.map((p, index) => (\r\n                      <option key={index} value={p.id}>\r\n                        {p.assign_no}\r\n                      </option>\r\n                    ))}\r\n                  </select> */\r\n}\r\n\r\n// const getID = (key) => {\r\n//     setId(key);\r\n//     incompleteData.filter((data) => {\r\n//       if (data.id == key) {\r\n//         console.log(\"assingNo\", data.assign_no);\r\n//         setAssingNo(data.assign_no);\r\n//         setAssignID(data.id);\r\n//       }\r\n//     });\r\n//   };\r\n","E:\\Mazars_Pannel\\src\\components\\AgoraVideoCall\\index.jsx",["2245","2246","2247","2248","2249","2250","2251","2252"],"import React from \"react\";\r\nimport { merge } from \"lodash\";\r\nimport AgoraRTC from \"agora-rtc-sdk\";\r\n\r\nimport \"./canvas.css\";\r\nimport \"../../assets/fonts/css/icons.css\";\r\n\r\nconst tile_canvas = {\r\n  \"1\": [\"span 12/span 24\"],\r\n  \"2\": [\"span 12/span 12/13/25\", \"span 12/span 12/13/13\"],\r\n  \"3\": [\"span 6/span 12\", \"span 6/span 12\", \"span 6/span 12/7/19\"],\r\n  \"4\": [\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12\",\r\n    \"span 6/span 12/7/13\",\r\n  ],\r\n  \"5\": [\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"6\": [\r\n    \"span 3/span 4/13/7\",\r\n    \"span 3/span 4/13/11\",\r\n    \"span 3/span 4/13/15\",\r\n    \"span 3/span 4/13/19\",\r\n    \"span 3/span 4/13/23\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n  \"7\": [\r\n    \"span 3/span 4/13/5\",\r\n    \"span 3/span 4/13/9\",\r\n    \"span 3/span 4/13/13\",\r\n    \"span 3/span 4/13/17\",\r\n    \"span 3/span 4/13/21\",\r\n    \"span 3/span 4/13/25\",\r\n    \"span 9/span 16/10/21\",\r\n  ],\r\n};\r\n\r\n/**\r\n * @prop appId uid\r\n * @prop transcode attendeeMode videoProfile channel baseMode\r\n */\r\n\r\n\r\nclass AgoraCanvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.client = {};\r\n    this.localStream = {};\r\n    this.shareClient = {};\r\n    this.shareStream = {};\r\n    this.state = {\r\n      displayMode: \"pip\",\r\n      streamList: [],\r\n      readyState: false,\r\n      stateSharing: false,\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    let $ = this.props;\r\n    // init AgoraRTC local client\r\n    this.client = AgoraRTC.createClient({ mode: $.transcode });\r\n    this.client.init($.appId, () => {\r\n      console.log(\"AgoraRTC client initialized\");\r\n      this.subscribeStreamEvents();\r\n\r\n      this.client.join($.appId, $.channel, $.uid, (uid) => {\r\n        this.state.uid = uid;\r\n        console.log(\"User \" + uid + \" join channel successfully\");\r\n        console.log(\"At \" + new Date().toLocaleTimeString());\r\n        // create local stream\r\n        // It is not recommended to setState in function addStream\r\n        this.localStream = this.streamInit(uid, $.attendeeMode, $.videoProfile);\r\n        this.localStream.init(\r\n          () => {\r\n            if ($.attendeeMode !== \"audience\") {\r\n              this.addStream(this.localStream, true);\r\n              this.client.publish(this.localStream, (err) => {\r\n                console.log(\"Publish local stream error: \" + err);\r\n              });\r\n            }\r\n            this.setState({ readyState: true });\r\n          },\r\n          (err) => {\r\n            console.log(\"getUserMedia failed\", err);\r\n            this.setState({ readyState: true });\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // add listener to control btn group\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    let btnGroup = document.querySelector(\".ag-btn-group\");\r\n    canvas.addEventListener(\"mousemove\", () => {\r\n      if (global._toolbarToggle) {\r\n        clearTimeout(global._toolbarToggle);\r\n      }\r\n      btnGroup.classList.add(\"active\");\r\n      global._toolbarToggle = setTimeout(function () {\r\n        btnGroup.classList.remove(\"active\");\r\n      }, 2000);\r\n    });\r\n  }\r\n\r\n  // componentWillUnmount () {\r\n  //     // remove listener\r\n  //     let canvas = document.querySelector('#ag-canvas')\r\n  //     canvas.removeEventListener('mousemove')\r\n  // }\r\n\r\n  componentDidUpdate() {\r\n    // rerendering\r\n    let canvas = document.querySelector(\"#ag-canvas\");\r\n    // pip mode (can only use when less than 4 people in channel)\r\n    if (this.state.displayMode === \"pip\") {\r\n      let no = this.state.streamList.length;\r\n      if (no > 4) {\r\n        this.setState({ displayMode: \"tile\" });\r\n        return;\r\n      }\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        if (index === no - 1) {\r\n          dom.setAttribute(\"style\", `grid-area: span 12/span 24/13/25`);\r\n        } else {\r\n          dom.setAttribute(\r\n            \"style\",\r\n            `grid-area: span 3/span 4/${4 + 3 * index}/25;\r\n                    z-index:1;width:calc(100% - 20px);height:calc(100% - 20px)`\r\n          );\r\n        }\r\n\r\n        item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // tile mode\r\n    else if (this.state.displayMode === \"tile\") {\r\n      let no = this.state.streamList.length;\r\n      this.state.streamList.map((item, index) => {\r\n        let id = item.getId();\r\n        let dom = document.querySelector(\"#ag-item-\" + id);\r\n        if (!dom) {\r\n          dom = document.createElement(\"section\");\r\n          dom.setAttribute(\"id\", \"ag-item-\" + id);\r\n          dom.setAttribute(\"class\", \"ag-item\");\r\n          canvas.appendChild(dom);\r\n          item.play(\"ag-item-\" + id);\r\n        }\r\n        dom.setAttribute(\"style\", `grid-area: ${tile_canvas[no][index]}`);\r\n        item.player.resize && item.player.resize();\r\n      });\r\n    }\r\n    // screen share mode (tbd)\r\n    else if (this.state.displayMode === \"share\") {\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.client && this.client.unpublish(this.localStream);\r\n    // this.localStream && this.localStream.close();\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n    }\r\n    this.client &&\r\n      this.client.leave(\r\n        () => {\r\n          console.log(\"Client succeed to leave.\");\r\n        },\r\n        () => {\r\n          console.log(\"Client failed to leave.\");\r\n        }\r\n      );\r\n  }\r\n\r\n  streamInit = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: true,\r\n      screen: false,\r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n\r\n  subscribeStreamEvents = () => {\r\n    let rt = this;\r\n    rt.client.on(\"stream-added\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"New stream added: \" + stream.getId());\r\n      console.log(\"At \" + new Date().toLocaleTimeString());\r\n      console.log(\"Subscribe \", stream);\r\n      rt.client.subscribe(stream, function (err) {\r\n        console.log(\"Subscribe stream failed\", err);\r\n      });\r\n    });\r\n\r\n    rt.client.on(\"peer-leave\", function (evt) {\r\n      console.log(\"Peer has left: \" + evt.uid);\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(evt);\r\n      rt.removeStream(evt.uid);\r\n    });\r\n\r\n    rt.client.on(\"stream-subscribed\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"Got stream-subscribed event\");\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(\"Subscribe remote stream successfully: \" + stream.getId());\r\n      console.log(evt);\r\n      rt.addStream(stream);\r\n    });\r\n\r\n    rt.client.on(\"stream-removed\", function (evt) {\r\n      let stream = evt.stream;\r\n      console.log(\"Stream removed: \" + stream.getId());\r\n      console.log(new Date().toLocaleTimeString());\r\n      console.log(evt);\r\n      rt.removeStream(stream.getId());\r\n    });\r\n  };\r\n\r\n  removeStream = (uid) => {\r\n    this.state.streamList.map((item, index) => {\r\n      if (item.getId() === uid) {\r\n        item.close();\r\n        let element = document.querySelector(\"#ag-item-\" + uid);\r\n        if (element) {\r\n          element.parentNode.removeChild(element);\r\n        }\r\n        let tempList = [...this.state.streamList];\r\n        tempList.splice(index, 1);\r\n        this.setState({\r\n          streamList: tempList,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  addStream = (stream, push = false) => {\r\n    let repeatition = this.state.streamList.some((item) => {\r\n      return item.getId() === stream.getId();\r\n    });\r\n    if (repeatition) {\r\n      return;\r\n    }\r\n    if (push) {\r\n      this.setState({\r\n        streamList: this.state.streamList.concat([stream]),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        streamList: [stream].concat(this.state.streamList),\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCamera = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isVideoOn()\r\n      ? this.localStream.disableVideo()\r\n      : this.localStream.enableVideo();\r\n  };\r\n\r\n  handleMic = (e) => {\r\n    e.currentTarget.classList.toggle(\"off\");\r\n    this.localStream.isAudioOn()\r\n      ? this.localStream.disableAudio()\r\n      : this.localStream.enableAudio();\r\n  };\r\n\r\n  switchDisplay = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    if (this.state.displayMode === \"pip\") {\r\n      this.setState({ displayMode: \"tile\" });\r\n    } else if (this.state.displayMode === \"tile\") {\r\n      this.setState({ displayMode: \"pip\" });\r\n    } else if (this.state.displayMode === \"share\") {\r\n      // do nothing or alert, tbd\r\n    } else {\r\n      console.error(\"Display Mode can only be tile/pip/share\");\r\n    }\r\n  };\r\n\r\n  hideRemote = (e) => {\r\n    if (\r\n      e.currentTarget.classList.contains(\"disabled\") ||\r\n      this.state.streamList.length <= 1\r\n    ) {\r\n      return;\r\n    }\r\n    let list;\r\n    let id = this.state.streamList[this.state.streamList.length - 1].getId();\r\n    list = Array.from(\r\n      document.querySelectorAll(`.ag-item:not(#ag-item-${id})`)\r\n    );\r\n    list.map((item) => {\r\n      if (item.style.display !== \"none\") {\r\n        item.style.display = \"none\";\r\n      } else {\r\n        item.style.display = \"block\";\r\n      }\r\n    });\r\n  };\r\n\r\n  handleExit = (e) => {\r\n    if (e.currentTarget.classList.contains(\"disabled\")) {\r\n      return;\r\n    }\r\n    try {\r\n      this.client && this.client.unpublish(this.localStream);\r\n      this.localStream && this.localStream.close();\r\n      if (this.state.stateSharing) {\r\n        this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n        this.shareStream && this.shareStream.close();\r\n      }\r\n      this.client &&\r\n        this.client.leave(\r\n          () => {\r\n            console.log(\"Client succeed to leave.\");\r\n          },\r\n          () => {\r\n            console.log(\"Client failed to leave.\");\r\n          }\r\n        );\r\n    } finally {\r\n      this.setState({ readyState: false });\r\n      this.client = null;\r\n      this.localStream = null;\r\n      // redirect to index\r\n      window.location.hash = \"/customer/assignment\";\r\n    }\r\n  };\r\n\r\n  sharingScreen = (e) => {\r\n    if (this.state.stateSharing) {\r\n      this.shareClient && this.shareClient.unpublish(this.shareStream);\r\n      this.shareStream && this.shareStream.close();\r\n      this.state.stateSharing = false;\r\n    } else {\r\n      this.state.stateSharing = true;\r\n      let $ = this.props;\r\n      // init AgoraRTC local client\r\n      this.shareClient = AgoraRTC.createClient({ mode: $.transcode });\r\n\r\n      this.shareClient.init($.appId, () => {\r\n        console.log(\"AgoraRTC client initialized\");\r\n\r\n        this.subscribeStreamEvents();\r\n        this.shareClient.join($.appId, $.channel, $.uid, (uid) => {\r\n          this.state.uid = uid;\r\n          console.log(\"User \" + uid + \" join channel successfully\");\r\n          console.log(\"At \" + new Date().toLocaleTimeString());\r\n          // create local stream\r\n          // It is not recommended to setState in function addStream\r\n          \r\n          this.shareStream = this.streamInitSharing(\r\n            uid,\r\n            $.attendeeMode,\r\n            $.videoProfile\r\n          );\r\n          this.shareStream.init(\r\n            () => {\r\n              if ($.attendeeMode !== \"audience\") {\r\n                this.addStream(this.shareStream, true);\r\n                this.shareClient.publish(this.shareStream, (err) => {\r\n                  console.log(\"Publish local stream error: \" + err);\r\n                });\r\n              }\r\n              this.setState({ readyState: true });\r\n            },\r\n            (err) => {\r\n              console.log(\"getUserMedia failed\", err);\r\n              this.setState({ readyState: true });\r\n            }\r\n          );\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  streamInitSharing = (uid, attendeeMode, videoProfile, config) => {\r\n    let defaultConfig = {\r\n      streamID: uid,\r\n      audio: true,\r\n      video: false,\r\n      screen: true,\r\n    };\r\n\r\n    switch (attendeeMode) {\r\n      case \"audio-only\":\r\n        defaultConfig.video = false;\r\n        break;\r\n      case \"audience\":\r\n        defaultConfig.video = false;\r\n        defaultConfig.audio = false;\r\n        break;\r\n      default:\r\n      case \"video\":\r\n        break;\r\n    }\r\n\r\n    let stream = AgoraRTC.createStream(merge(defaultConfig, config));\r\n    stream.setVideoProfile(videoProfile);\r\n    return stream;\r\n  };\r\n\r\n  render() {\r\n\r\n    const style = {\r\n      display: \"grid\",\r\n      gridGap: \"50px 26px\",\r\n      alignItems: \"center\",\r\n      justifyItems: \"center\",\r\n      gridTemplateRows: \"repeat(12, auto)\",\r\n      gridTemplateColumns: \"repeat(24, auto)\",\r\n    };\r\n    \r\n    const videoControlBtn =\r\n      this.props.attendeeMode === \"video\" ? (\r\n        <span\r\n          onClick={this.handleCamera}\r\n          className=\"ag-btn videoControlBtn\"\r\n          title=\"Enable/Disable Video\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-camera\"></i>\r\n          <i className=\"ag-icon ag-icon-camera-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n\r\n    const audioControlBtn =\r\n      this.props.attendeeMode !== \"audience\" ? (\r\n        <span\r\n          onClick={this.handleMic}\r\n          className=\"ag-btn audioControlBtn\"\r\n          title=\"Enable/Disable Audio\"\r\n        >\r\n          <i className=\"ag-icon ag-icon-mic\"></i>\r\n          <i className=\"ag-icon ag-icon-mic-off\"></i>\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      );\r\n\r\n\r\n    const switchDisplayBtn = (\r\n      <span\r\n        onClick={this.switchDisplay}\r\n        className={\r\n          this.state.streamList.length > 4\r\n            ? \"ag-btn displayModeBtn disabled\"\r\n            : \"ag-btn displayModeBtn\"\r\n        }\r\n        title=\"Switch Display Mode\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-switch-display\"></i>\r\n      </span>\r\n    );\r\n\r\n\r\n    const hideRemoteBtn = (\r\n      <span\r\n        className={\r\n          this.state.streamList.length > 4 || this.state.displayMode !== \"pip\"\r\n            ? \"ag-btn disableRemoteBtn disabled\"\r\n            : \"ag-btn disableRemoteBtn\"\r\n        }\r\n        onClick={this.hideRemote}\r\n        title=\"Hide Remote Stream\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-remove-pip\"></i>\r\n      </span>\r\n    );\r\n\r\n    const exitBtn = (\r\n      <span\r\n        onClick={this.handleExit}\r\n        className={\r\n          this.state.readyState ? \"ag-btn exitBtn\" : \"ag-btn exitBtn disabled\"\r\n        }\r\n        title=\"Exit\"\r\n      >\r\n        <i className=\"ag-icon ag-icon-leave\"></i>\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <div id=\"ag-canvas\" style={style}>\r\n        <div className=\"ag-btn-group\">\r\n          {exitBtn}\r\n          {videoControlBtn}\r\n          {audioControlBtn}\r\n          {\r\n            <span\r\n              onClick={this.sharingScreen}\r\n              className=\"ag-btn shareScreenBtn\"\r\n              title=\"Share/unShare Screen\"\r\n            >\r\n              <i className=\"ag-icon ag-icon-screen-share\"></i>\r\n            </span>\r\n          }\r\n          {switchDisplayBtn}\r\n          {hideRemoteBtn}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AgoraCanvas;\r\n","E:\\Mazars_Pannel\\src\\views\\AssignmentTab\\AllAssignment.js",["2253","2254","2255","2256","2257","2258","2259","2260","2261","2262","2263","2264","2265","2266","2267","2268","2269","2270","2271","2272","2273"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, ReportUrl } from \"../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport { useAlert } from \"react-alert\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport Alerts from \"../../common/Alerts\";\r\n\r\n\r\n\r\nfunction AllAssignment() {\r\n  const history = useHistory();\r\n  const alert = useAlert();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n  const [assignmentCount, setAssignmentQueries] = useState(\"\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [baseMode, SetbaseMode] = useState(\"avc\");\r\n  const [transcode, SetTranscode] = useState(\"interop\");\r\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\r\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\r\n\r\n  const [rejectedItem, setRejectedItem] = useState({});\r\n  const [report, setReport] = useState();\r\n  const [dataItem, setDataItem] = useState({});\r\n\r\n\r\n\r\n  const [rejectModal, setRejectModal] = useState(false);\r\n  const rejectHandler = (key) => {\r\n    setRejectModal(!rejectModal);\r\n    setRejectedItem(key);\r\n  };\r\n\r\n\r\n\r\n  const [reportModal, setReportModal] = useState(false);\r\n  const ViewReport = (key) => {\r\n    console.log(\"key - \", key);\r\n    setReportModal(!reportModal);\r\n    setReport(key.assign_no);\r\n    setDataItem(key)\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getAssignmentData();\r\n  }, []);\r\n\r\n\r\n  const getAssignmentData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setAssignmentDisplay(res.data.result);\r\n          setAssignmentQueries(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.created);\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link to={`/customer/my-assingment/${row.id}`}>\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Exp_Delivery_Date\",\r\n      text: \"Expected date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.created);\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"final_date\",\r\n      text: \"Actual date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.final_date);\r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00\") {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Deliverable\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        // console.log(row.final_report);\r\n        return (\r\n          <>\r\n\r\n            {\r\n              row.status == \"Payment decliend\" ? null :\r\n                <div>\r\n                  {row.assignment_draft_report || row.final_report ?\r\n                    <div title=\"View All Report\"\r\n                      style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n                      onClick={() => ViewReport(row)}\r\n                    >\r\n                      <DescriptionOutlinedIcon color=\"secondary\" />\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n                </div>\r\n            }\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Team Leader name and contact number, email\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: priceFormatter,\r\n    }\r\n  ];\r\n\r\n\r\n\r\n  //tl,phone,email\r\n  function priceFormatter(cell, row) {\r\n    console.log(\"row\", row);\r\n    if (row) {\r\n      return (\r\n        <>\r\n          <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\r\n          <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\r\n          <p style={{ fontSize: \"10px\" }}>{row.email}</p>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  //handleJoin\r\n  const handleJoin = (id) => {\r\n    console.log(\"id\", id);\r\n    Cookies.set(\"channel\", id);\r\n    Cookies.set(\"baseMode\", baseMode);\r\n    Cookies.set(\"transcode\", transcode);\r\n    Cookies.set(\"attendeeMode\", attendeeMode);\r\n    Cookies.set(\"videoProfile\", videoProfile);\r\n    history.push(\"/customer/meeting\");\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <CustomerFilter\r\n            setData={setAssignmentDisplay}\r\n            getData={getAssignmentData}\r\n            id={userId}\r\n            assignment=\"assignment\"\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignmentDisplay}\r\n            columns={columns}\r\n          />\r\n\r\n          <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            getPendingforAcceptance={getAssignmentData}\r\n            dataItem={dataItem}\r\n          />\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AllAssignment;\r\n\r\n\r\n\r\n// const [pay, setPay] = useState({\r\n//   pay: \"\",\r\n//   amount: \"\",\r\n//   accepted_amount: \"\",\r\n//   paid_amount: \"\",\r\n\r\n//   amount_type: \"\",\r\n//   amount_fixed: \"\",\r\n//   amount_hourly: \"\",\r\n\r\n//   payment_terms: \"\",\r\n//   no_of_installment: \"\",\r\n//   installment_amount: \"\",\r\n//   due_date: \"\",\r\n// });\r\n\r\n// const [addPaymentModal, setPaymentModal] = useState(false);\r\n// const paymentHandler = (key) => {\r\n//   setPaymentModal(!addPaymentModal);\r\n//   setPay({\r\n//     amount: key.accepted_amount,\r\n//     id: key.id,\r\n//     accepted_amount: key.accepted_amount,\r\n//     paid_amount: key.paid_amount,\r\n\r\n//     amount_type: key.amount_type,\r\n//     amount_fixed: key.amount_fixed,\r\n//     amount_hourly: key.amount_hourly,\r\n\r\n\r\n//     payment_terms: key.payment_terms,\r\n//     no_of_installment: key.no_of_installment,\r\n//     installment_amount: key.installment_amount,\r\n//     due_date: key.due_date,\r\n\r\n//   });\r\n// };\r\n// function schedultTime(cell, row) {\r\n//   // console.log(\"schedultTime\", row);\r\n//   console.log(\"schedultTime\", row.schedule_time);\r\n//   // console.log(\"setSeconds\", setSeconds(row.schedule_time));\r\n\r\n//   var d = row.schedule_time;\r\n//   var date = new Date(d); // some mock date\r\n//   var milliseconds = date.getTime();\r\n//   console.log(\"milliseconds - \", milliseconds);\r\n\r\n//   var date2 = new Date(); // current time\r\n//   var milliseconds2 = date2.getTime();\r\n//   console.log(\"current - \", milliseconds2);\r\n\r\n//   var diff = milliseconds - milliseconds2;\r\n//   console.log(\"diff - \", diff);\r\n//   var total = diff - 900000;\r\n//   console.log(\"total - \", total);\r\n\r\n//   if (total > 0 && 900000 > total) {\r\n//     return (\r\n//       <>\r\n//         <div style={{ cursor: \"pointer\" }} title=\"Video Chat\">\r\n//           <i\r\n//             class=\"fa fa-video-camera\"\r\n//             style={{ color: \"red\", fontSize: \"16px\" }}\r\n//             onClick={() => handleJoin(row.id)}\r\n//           ></i>\r\n//         </div>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n{/* {row.assignment_draft_report && !row.final_report ? (\r\n                    row.draft_report == \"completed\" ?\r\n                      null :\r\n                      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n\r\n                        <div style={{ cursor: \"pointer\" }} title=\"Accepted\">\r\n                          <i\r\n                            class=\"fa fa-check\"\r\n                            style={{\r\n                              color: \"green\",\r\n                              fontSize: \"16px\",\r\n                            }}\r\n                            onClick={() => acceptHandler(row)}\r\n                          ></i>\r\n                        </div>\r\n\r\n                        <div title=\"Send Message\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/customer/chatting/${row.id}`,\r\n                              obj: {\r\n                                message_type: \"3\",\r\n                                query_No: row.assign_no,\r\n                                query_id: row.id,\r\n                                routes: `/customer/assignment`\r\n                              }\r\n                            }}\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                fontSize: 16,\r\n                                cursor: \"pointer\",\r\n                                marginLeft: \"8px\",\r\n                                color: \"green\"\r\n                              }}\r\n                            ></i>\r\n                          </Link>\r\n                        </div>\r\n                      </div>\r\n\r\n) : null} */}","E:\\Mazars_Pannel\\src\\views\\AssignmentTab\\CompletedAssignment.js",["2274","2275","2276","2277","2278","2279","2280","2281","2282","2283","2284","2285","2286","2287","2288","2289","2290","2291"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl,ReportUrl } from \"../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport { useAlert } from \"react-alert\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport PaymentModal from \"./PaymentModal\";\r\nimport RejectedModal from \"./RejectModal\";\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport Alerts from \"../../common/Alerts\";\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\n\r\n\r\n\r\nfunction CompleteAssignment() {\r\n  const history = useHistory();\r\n  const alert = useAlert();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n  const [assignmentCount, setAssignmentQueries] = useState(\"\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [report, setReport] = useState();\r\n\r\n  \r\n\r\n  const [reportModal, setReportModal] = useState(false);\r\n  const ViewReport = (key) => {\r\n    console.log(\"key - \", key);\r\n    setReportModal(!reportModal);\r\n    setReport(key);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getAssignmentData();\r\n  }, []);\r\n\r\n\r\n  const getAssignmentData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=2`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setAssignmentDisplay(res.data.result);\r\n          setAssignmentQueries(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.created);\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link to={`/customer/my-assingment/${row.id}`}>\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Exp_Delivery_Date\",\r\n      text: \"Expected date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.created);\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"final_date\",\r\n      text: \"Actual date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.final_date);\r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00\") {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Deliverable\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        // console.log(row.final_report);\r\n        return (\r\n          <>\r\n\r\n            {\r\n              row.status == \"Payment decliend\" ? null :\r\n                <div>\r\n                  {row.assignment_draft_report || row.final_report ?\r\n                    <div title=\"View All Report\"\r\n                      style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n                      onClick={() => ViewReport(row.assign_no)}\r\n                    >\r\n                      <DescriptionOutlinedIcon color=\"secondary\" />\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n\r\n                  {row.assignment_draft_report && !row.final_report ? (\r\n                    row.draft_report == \"completed\" ?\r\n                      null :\r\n                      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n\r\n                        <div style={{ cursor: \"pointer\" }} title=\"Accepted\">\r\n                          <i\r\n                            class=\"fa fa-check\"\r\n                            style={{\r\n                              color: \"green\",\r\n                              fontSize: \"16px\",\r\n                            }}\r\n                            onClick={() => acceptHandler(row)}\r\n                          ></i>\r\n                        </div>\r\n\r\n                        <div title=\"Send Message\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/customer/chatting/${row.id}`,\r\n                              obj: {\r\n                                message_type: \"3\",\r\n                                query_No: row.assign_no,\r\n                                query_id: row.id,\r\n                                routes: `/customer/assignment`\r\n                              }\r\n                            }}\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                fontSize: 16,\r\n                                cursor: \"pointer\",\r\n                                marginLeft: \"8px\",\r\n                                color: \"green\"\r\n                              }}\r\n                            ></i>\r\n                          </Link>\r\n                        </div>\r\n                      </div>\r\n\r\n                  ) : null}\r\n\r\n                </div>\r\n            }\r\n\r\n\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Team Leader name and contact number, email\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: priceFormatter,\r\n    },\r\n \r\n  ];\r\n\r\n  //accept handler\r\n  const acceptHandler = (key) => {\r\n    console.log(\"acceptHandler\", key);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", key.id);\r\n    formData.append(\"query_no\", key.assign_no);\r\n    formData.append(\"type\", 1);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/draftAccept`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"response-\", response);\r\n        if (response.data.code === 1) {\r\n\r\n          var variable = \"Draft accepted successfully \"\r\n          Alerts.SuccessNormal(variable)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n  //tl,phone,email\r\n  function priceFormatter(cell, row) {\r\n    console.log(\"row\", row);\r\n    if (row) {\r\n      return (\r\n        <>\r\n          <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\r\n          <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\r\n          <p style={{ fontSize: \"10px\" }}>{row.email}</p>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <CustomerFilter\r\n            setData={setAssignmentDisplay}\r\n            getData={getAssignmentData}\r\n            id={userId}\r\n            assignment=\"assignment\"\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignmentDisplay}\r\n            columns={columns}\r\n          />\r\n         \r\n          <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            getPendingforAcceptance={getAssignmentData}\r\n          />\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CompleteAssignment;","E:\\Mazars_Pannel\\src\\views\\AssignmentTab\\CustomerDeclinedPayment.js",["2292","2293","2294","2295","2296","2297","2298","2299","2300","2301","2302","2303","2304","2305","2306","2307","2308","2309"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl, ReportUrl } from \"../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Table,\r\n} from \"reactstrap\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport { useAlert } from \"react-alert\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport PaymentModal from \"./PaymentModal\";\r\nimport RejectedModal from \"./RejectModal\";\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport Alerts from \"../../common/Alerts\";\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\n\r\n\r\n\r\nfunction CustomerDeclinedPayment() {\r\n    const history = useHistory();\r\n    const alert = useAlert();\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n    const [assignmentCount, setAssignmentQueries] = useState(\"\");\r\n    const [records, setRecords] = useState([]);\r\n    const [report, setReport] = useState();\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n    const [reportModal, setReportModal] = useState(false);\r\n    const ViewReport = (key) => {\r\n        console.log(\"key - \", key);\r\n        setReportModal(!reportModal);\r\n        setReport(key);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getAssignmentData();\r\n    }, []);\r\n\r\n\r\n    const getAssignmentData = () => {\r\n        axios\r\n            .get(\r\n                `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=3`\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.data.code === 1) {\r\n                    setAssignmentDisplay(res.data.result);\r\n                    setAssignmentQueries(res.data.result.length);\r\n                    setRecords(res.data.result.length);\r\n                }\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\", width: \"50px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"created\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.created);\r\n                var oldDate = row.created;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link to={`/customer/my-assingment/${row.id}`}>\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"status\",\r\n            text: \"Status\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"Exp_Delivery_Date\",\r\n            text: \"Expected date of delivery\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.created);\r\n                var oldDate = row.created;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"final_date\",\r\n            text: \"Actual date of delivery\",\r\n            sort: true,\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.final_date);\r\n                var oldDate = row.final_date;\r\n                if (oldDate == null || oldDate == \"0000-00-00\") {\r\n                    return null;\r\n                }\r\n                return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Deliverable\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                // console.log(row.final_report);\r\n                return (\r\n                    <>\r\n\r\n                        {\r\n                            row.status == \"Payment decliend\" ? null :\r\n                                <div>\r\n                                    {row.assignment_draft_report || row.final_report ?\r\n                                        <div title=\"View All Report\"\r\n                                            style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n                                            onClick={() => ViewReport(row.assign_no)}\r\n                                        >\r\n                                            <DescriptionOutlinedIcon color=\"secondary\" />\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                    }\r\n\r\n                                    {row.assignment_draft_report && !row.final_report ? (\r\n                                        row.draft_report == \"completed\" ?\r\n                                            null :\r\n                                            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n\r\n                                                <div style={{ cursor: \"pointer\" }} title=\"Accepted\">\r\n                                                    <i\r\n                                                        class=\"fa fa-check\"\r\n                                                        style={{\r\n                                                            color: \"green\",\r\n                                                            fontSize: \"16px\",\r\n                                                        }}\r\n                                                        onClick={() => acceptHandler(row)}\r\n                                                    ></i>\r\n                                                </div>\r\n\r\n                                                <div title=\"Send Message\">\r\n                                                    <Link\r\n                                                        to={{\r\n                                                            pathname: `/customer/chatting/${row.id}`,\r\n                                                            obj: {\r\n                                                                message_type: \"3\",\r\n                                                                query_No: row.assign_no,\r\n                                                                query_id: row.id,\r\n                                                                routes: `/customer/assignment`\r\n                                                            }\r\n                                                        }}\r\n                                                    >\r\n                                                        <i\r\n                                                            class=\"fa fa-comments-o\"\r\n                                                            style={{\r\n                                                                fontSize: 16,\r\n                                                                cursor: \"pointer\",\r\n                                                                marginLeft: \"8px\",\r\n                                                                color: \"green\"\r\n                                                            }}\r\n                                                        ></i>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                    ) : null}\r\n\r\n                                </div>\r\n                        }\r\n\r\n\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"\",\r\n            text: \"Team Leader name and contact number, email\",\r\n            headerStyle: () => {\r\n                return { fontSize: \"12px\" };\r\n            },\r\n            formatter: priceFormatter,\r\n        },\r\n    ];\r\n\r\n    //accept handler\r\n    const acceptHandler = (key) => {\r\n        console.log(\"acceptHandler\", key);\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"uid\", JSON.parse(userId));\r\n        formData.append(\"id\", key.id);\r\n        formData.append(\"query_no\", key.assign_no);\r\n        formData.append(\"type\", 1);\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/customers/draftAccept`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n                console.log(\"response-\", response);\r\n                if (response.data.code === 1) {\r\n\r\n                    var variable = \"Draft accepted successfully \"\r\n                    Alerts.SuccessNormal(variable)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"erroror - \", error);\r\n            });\r\n    };\r\n\r\n\r\n    //tl,phone,email\r\n    function priceFormatter(cell, row) {\r\n        console.log(\"row\", row);\r\n        if (row) {\r\n            return (\r\n                <>\r\n                    <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\r\n                    <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\r\n                    <p style={{ fontSize: \"10px\" }}>{row.email}</p>\r\n                </>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CustomerFilter\r\n                        setData={setAssignmentDisplay}\r\n                        getData={getAssignmentData}\r\n                        id={userId}\r\n                        assignment=\"assignment\"\r\n                        records={records}\r\n                        setRecords={setRecords}\r\n                    />\r\n                </CardHeader>\r\n\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={assignmentDisplay}\r\n                        columns={columns}\r\n                    />\r\n                   \r\n\r\n                    <ViewAllReportModal\r\n                        ViewReport={ViewReport}\r\n                        reportModal={reportModal}\r\n                        report={report}\r\n                        getPendingforAcceptance={getAssignmentData}\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CustomerDeclinedPayment;","E:\\Mazars_Pannel\\src\\views\\AssignmentTab\\InprogressAssignment.js",["2310","2311","2312","2313","2314","2315","2316","2317","2318","2319","2320","2321","2322","2323","2324","2325","2326","2327","2328","2329","2330","2331","2332","2333"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { baseUrl,ReportUrl } from \"../../config/config\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport * as Cookies from \"js-cookie\";\r\nimport { useAlert } from \"react-alert\";\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport PaymentModal from \"./PaymentModal\";\r\nimport RejectedModal from \"./RejectModal\";\r\nimport ViewAllReportModal from \"./ViewAllReport\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport Alerts from \"../../common/Alerts\";\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\n\r\n\r\n\r\nfunction InprogressAssignment() {\r\n  const history = useHistory();\r\n  const alert = useAlert();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  const [assignmentDisplay, setAssignmentDisplay] = useState([]);\r\n  const [assignmentCount, setAssignmentQueries] = useState(\"\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [baseMode, SetbaseMode] = useState(\"avc\");\r\n  const [transcode, SetTranscode] = useState(\"interop\");\r\n  const [attendeeMode, SetAttendeeMode] = useState(\"video\");\r\n  const [videoProfile, SetVideoProfile] = useState(\"480p_4\");\r\n\r\n  const [rejectedItem, setRejectedItem] = useState({});\r\n  const [report, setReport] = useState();\r\n\r\n  const [pay, setPay] = useState({\r\n    pay: \"\",\r\n    amount: \"\",\r\n    accepted_amount: \"\",\r\n    paid_amount: \"\",\r\n\r\n    amount_type: \"\",\r\n    amount_fixed: \"\",\r\n    amount_hourly: \"\",\r\n\r\n    payment_terms: \"\",\r\n    no_of_installment: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n  });\r\n\r\n  const [addPaymentModal, setPaymentModal] = useState(false);\r\n  const paymentHandler = (key) => {\r\n    setPaymentModal(!addPaymentModal);\r\n    setPay({\r\n      amount: key.accepted_amount,\r\n      id: key.id,\r\n      accepted_amount: key.accepted_amount,\r\n      paid_amount: key.paid_amount,\r\n\r\n      amount_type: key.amount_type,\r\n      amount_fixed: key.amount_fixed,\r\n      amount_hourly: key.amount_hourly,\r\n\r\n\r\n      payment_terms: key.payment_terms,\r\n      no_of_installment: key.no_of_installment,\r\n      installment_amount: key.installment_amount,\r\n      due_date: key.due_date,\r\n\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const [rejectModal, setRejectModal] = useState(false);\r\n  const rejectHandler = (key) => {\r\n    setRejectModal(!rejectModal);\r\n    setRejectedItem(key);\r\n  };\r\n\r\n\r\n\r\n  const [reportModal, setReportModal] = useState(false);\r\n  const ViewReport = (key) => {\r\n    console.log(\"key - \", key);\r\n    setReportModal(!reportModal);\r\n    setReport(key);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getAssignmentData();\r\n  }, []);\r\n\r\n\r\n  const getAssignmentData = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}/customers/completeAssignments?user=${JSON.parse(userId)}&status=1`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.code === 1) {\r\n          setAssignmentDisplay(res.data.result);\r\n          setAssignmentQueries(res.data.result.length);\r\n          setRecords(res.data.result.length);\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\", width: \"50px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"created\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.created);\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link to={`/customer/my-assingment/${row.id}`}>\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"Exp_Delivery_Date\",\r\n      text: \"Expected date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.created);\r\n        var oldDate = row.created;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"final_date\",\r\n      text: \"Actual date of delivery\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.final_date);\r\n        var oldDate = row.final_date;\r\n        if (oldDate == null || oldDate == \"0000-00-00\") {\r\n          return null;\r\n        }\r\n        return oldDate.toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Deliverable\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        // console.log(row.final_report);\r\n        return (\r\n          <>\r\n\r\n            {\r\n              row.status == \"Payment decliend\" ? null :\r\n                <div>\r\n                  {row.assignment_draft_report || row.final_report ?\r\n                    <div title=\"View All Report\"\r\n                      style={{ cursor: \"pointer\", textAlign: \"center\" }}\r\n                      onClick={() => ViewReport(row.assign_no)}\r\n                    >\r\n                      <DescriptionOutlinedIcon color=\"secondary\" />\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n\r\n                  {row.assignment_draft_report && !row.final_report ? (\r\n                    row.draft_report == \"completed\" ?\r\n                      null :\r\n                      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n\r\n                        <div style={{ cursor: \"pointer\" }} title=\"Accepted\">\r\n                          <i\r\n                            class=\"fa fa-check\"\r\n                            style={{\r\n                              color: \"green\",\r\n                              fontSize: \"16px\",\r\n                            }}\r\n                            onClick={() => acceptHandler(row)}\r\n                          ></i>\r\n                        </div>\r\n\r\n                        <div title=\"Send Message\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/customer/chatting/${row.id}`,\r\n                              obj: {\r\n                                message_type: \"3\",\r\n                                query_No: row.assign_no,\r\n                                query_id: row.id,\r\n                                routes: `/customer/assignment`\r\n                              }\r\n                            }}\r\n                          >\r\n                            <i\r\n                              class=\"fa fa-comments-o\"\r\n                              style={{\r\n                                fontSize: 16,\r\n                                cursor: \"pointer\",\r\n                                marginLeft: \"8px\",\r\n                                color: \"green\"\r\n                              }}\r\n                            ></i>\r\n                          </Link>\r\n                        </div>\r\n                      </div>\r\n\r\n                  ) : null}\r\n\r\n                </div>\r\n            }\r\n\r\n\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"\",\r\n      text: \"Team Leader name and contact number, email\",\r\n      headerStyle: () => {\r\n        return { fontSize: \"12px\" };\r\n      },\r\n      formatter: priceFormatter,\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      dataField: \"\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", width: \"70px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n\r\n            {\r\n              row.status == \"Payment Decliend\" ? null :\r\n                <div\r\n                  style={{ cursor: \"pointer\" }}\r\n                  title=\"Pay Amount\"\r\n                  onClick={() => paymentHandler(row)}>\r\n                  <PaymentIcon color=\"primary\" />\r\n                </div>\r\n            }\r\n\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  //accept handler\r\n  const acceptHandler = (key) => {\r\n    console.log(\"acceptHandler\", key);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"id\", key.id);\r\n    formData.append(\"query_no\", key.assign_no);\r\n    formData.append(\"type\", 1);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/draftAccept`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"response-\", response);\r\n        if (response.data.code === 1) {\r\n\r\n          var variable = \"Draft accepted successfully \"\r\n          Alerts.SuccessNormal(variable)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n\r\n  //tl,phone,email\r\n  function priceFormatter(cell, row) {\r\n    console.log(\"row\", row);\r\n    if (row) {\r\n      return (\r\n        <>\r\n          <p style={{ fontSize: \"10px\" }}>{row.tname} </p>\r\n          <p style={{ fontSize: \"10px\" }}>{row.phone}</p>\r\n          <p style={{ fontSize: \"10px\" }}>{row.email}</p>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader>\r\n          <CustomerFilter\r\n            setData={setAssignmentDisplay}\r\n            getData={getAssignmentData}\r\n            id={userId}\r\n            assignment=\"assignment\"\r\n            records={records}\r\n            setRecords={setRecords}\r\n          />\r\n        </CardHeader>\r\n\r\n        <CardBody>\r\n          <Records records={records} />\r\n          <BootstrapTable\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={assignmentDisplay}\r\n            columns={columns}\r\n          />\r\n          <PaymentModal\r\n            paymentHandler={paymentHandler}\r\n            addPaymentModal={addPaymentModal}\r\n            pay={pay}\r\n            getProposalData={getAssignmentData}\r\n          />\r\n\r\n          <RejectedModal\r\n            rejectHandler={rejectHandler}\r\n            rejectModal={rejectModal}\r\n            rejectedItem={rejectedItem}\r\n            getPendingforAcceptance={getAssignmentData}\r\n          />\r\n\r\n          <ViewAllReportModal\r\n            ViewReport={ViewReport}\r\n            reportModal={reportModal}\r\n            report={report}\r\n            getPendingforAcceptance={getAssignmentData}\r\n          />\r\n\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InprogressAssignment;","E:\\Mazars_Pannel\\src\\views\\NewPassword\\ResendOtp.js",["2334","2335"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\n\r\n\r\n\r\nfunction ResendOtp({ id }) {\r\n\r\n    const { handleSubmit, errors, reset } = useForm();\r\n\r\n    const onSubmit = (value) => {\r\n        console.log(\"value :\", value);\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"email\", id);\r\n        // formData.append(\"uid\", JSON.parse(uid));\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/customers/regenrateotp`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n                console.log(\"res-\", response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"erroror - \", error);\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"heading\">\r\n                    <h2>Resend Otp</h2>\r\n                    <button type=\"submit\" class=\"btn btn-success\">RESEND OTP <span className=\"declined\">*</span></button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResendOtp;","E:\\Mazars_Pannel\\src\\views\\PaymentStatus\\AllPayment.js",["2336","2337","2338","2339","2340","2341","2342","2343","2344","2345","2346","2347","2348","2349","2350"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport Records from \"../../components/Records/Records\";\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport PaymentComponent from './PaymentComponent';\r\n\r\n\r\n\r\nfunction Paid() {\r\n  const { id } = useParams();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n\r\n  const [records, setRecords] = useState([]);\r\n  const [count, setCount] = useState(\"\");\r\n  const [payment, setPayment] = useState([]);\r\n\r\n  const [pay, setPay] = useState({\r\n    pay: \"\",\r\n    amount: \"\",\r\n    accepted_amount: \"\",\r\n    paid_amount: \"\",\r\n\r\n    amount_type: \"\",\r\n    amount_fixed: \"\",\r\n    amount_hourly: \"\",\r\n\r\n    payment_terms: \"\",\r\n    no_of_installment: \"\",\r\n    installment_amount: \"\",\r\n    due_date: \"\",\r\n  });\r\n\r\n  const [addPaymentModal, setPaymentModal] = useState(false);\r\n  const paymentHandler = (key) => {\r\n    setPaymentModal(!addPaymentModal);\r\n    setPay({\r\n      amount: key.accepted_amount,\r\n      id: key.id,\r\n      accepted_amount: key.accepted_amount,\r\n      paid_amount: key.paid_amount,\r\n\r\n      amount_type: key.amount_type,\r\n      amount_fixed: key.amount_fixed,\r\n      amount_hourly: key.amount_hourly,\r\n\r\n\r\n      payment_terms: key.payment_terms,\r\n      no_of_installment: key.no_of_installment,\r\n      installment_amount: key.installment_amount,\r\n      due_date: key.due_date,\r\n\r\n    });\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getPaymentStatus();\r\n  }, []);\r\n\r\n  const getPaymentStatus = () => {\r\n    axios.get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setPayment(res.data.result);\r\n        setCount(res.data.result.length);\r\n        setRecords(res.data.result.length);\r\n\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"query_created_date\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.query_created_date);\r\n        var oldDate = row.query_created_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/customer/my-assingment/${row.assign_id}`,\r\n                routes: \"paymentstatus\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of acceptance of Proposal\",\r\n      dataField: \"cust_accept_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.cust_accept_date);\r\n        var oldDate = row.cust_accept_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"accepted_amount\",\r\n      text: \"Accepted Amount \",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#21a3ce\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Amount Paid\",\r\n      dataField: \"paid_amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#064606\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#064606\" };\r\n      },\r\n    },\r\n\r\n    {\r\n      text: \"Amount Outstanding\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"darkred\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"darkred\" };\r\n      },\r\n      formatter: function amountOutstading(cell, row) {\r\n        console.log(\"dt\", row.paid_amount);\r\n        console.log(\"dt\", row.accepted_amount);\r\n        var p = row.paid_amount;\r\n        var a = row.accepted_amount;\r\n        return a - p;\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Payment\",\r\n      dataField: \"cust_paid_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.cust_paid_date);\r\n        var oldDate = row.cust_paid_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Action\",\r\n      dataField: \"\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", width: \"70px\" };\r\n      },\r\n      formatter: function (cell, row) {\r\n        return (\r\n          <>\r\n\r\n            {\r\n              row.paid_status == \"0\" ?\r\n                <div\r\n                  style={{ cursor: \"pointer\" }}\r\n                  title=\"Pay Amount\"\r\n                  onClick={() => paymentHandler(row)}>\r\n                  <PaymentIcon color=\"primary\" />\r\n                </div>\r\n                :\r\n                null\r\n            }\r\n\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <Card>\r\n\r\n          <CardHeader>\r\n            <CustomerFilter\r\n              setData={setPayment}\r\n              getData={getPaymentStatus}\r\n              allPayment=\"allPayment\"\r\n              setRecords={setRecords}\r\n              records={records}\r\n              id={userId}\r\n            />\r\n          </CardHeader>\r\n\r\n          <CardBody>\r\n            <Records records={records} />\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={payment}\r\n              columns={columns}\r\n              classes=\"table-responsive\"\r\n            />\r\n\r\n            <PaymentComponent\r\n              paymentHandler={paymentHandler}\r\n              addPaymentModal={addPaymentModal}\r\n              pay={pay}\r\n              getPaymentStatus={getPaymentStatus}\r\n            />\r\n\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Paid;\r\n","E:\\Mazars_Pannel\\src\\views\\PaymentStatus\\UnPaid.js",["2351","2352","2353","2354","2355","2356","2357","2358","2359","2360"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\nimport Records from \"../../components/Records/Records\";\r\n\r\n\r\nfunction Unpaid() {\r\n    const alert = useAlert();\r\n    const { id } = useParams();\r\n    const userId = window.localStorage.getItem(\"userid\");\r\n    // const cust_id = window.localStorage.getItem(\"userid\");\r\n    const [records, setRecords] = useState([]);\r\n\r\n    const [pay, setPay] = useState([]);\r\n    const [count, setCount] = useState(\"\");\r\n    const [payment, setPayment] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const [assignNo, setAssignNo] = useState(\"\");\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n    // /tl/getUploadedProposals?cid=customer_id\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}&status=2`).then((res) => {\r\n            console.log(res);\r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n    const toggle = (key) => {\r\n        console.log(\"key\", key);\r\n        setModal(!modal);\r\n\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                console.log(response);\r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.query_created_date);\r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/customer/my-assingment/${row.assign_id}`,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_accept_date);\r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#064606\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n        },\r\n\r\n        {\r\n            text: \"Amount Outstanding\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"darkred\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n            formatter: function amountOutstading(cell, row) {\r\n                console.log(\"dt\", row.paid_amount);\r\n                console.log(\"dt\", row.accepted_amount);\r\n                var p = row.paid_amount;\r\n                var a = row.accepted_amount;\r\n                return a - p;\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_paid_date);\r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        }\r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n            <>\r\n                <Card>\r\n                    <CardHeader>\r\n                        <CustomerFilter\r\n                            setData={setPayment}\r\n                            getData={getPaymentStatus}\r\n                            unpaid=\"unpaid\"\r\n                            setRecords={setRecords}\r\n                            records={records}\r\n                            id={userId}\r\n                        />\r\n                    </CardHeader>\r\n\r\n                    <CardBody>\r\n                        <Records records={records} />\r\n                        <BootstrapTable\r\n                            bootstrap4\r\n                            keyField=\"id\"\r\n                            data={payment}\r\n                            columns={columns}\r\n                            classes=\"table-responsive\"\r\n                        />\r\n\r\n                     \r\n\r\n\r\n                        <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                            <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                            <ModalBody>\r\n                                <table class=\"table table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"row\">S.No</th>\r\n                                            <th scope=\"row\">Date</th>\r\n                                            <th scope=\"row\">Amount</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    {pay.length > 0\r\n                                        ? pay.map((p, i) => (\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>{i + 1}</td>\r\n                                                    <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                    <td>{p.paid_amount}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        ))\r\n                                        : null}\r\n                                </table>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color=\"secondary\" onClick={toggle}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n\r\n\r\n                    </CardBody>\r\n                </Card>\r\n            </>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Unpaid;\r\n","E:\\Mazars_Pannel\\src\\views\\PaymentStatus\\Paid.js",["2361","2362","2363","2364","2365","2366","2367","2368","2369","2370"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport CommonServices from \"../../common/common\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport CustomerFilter from \"../../components/Search-Filter/CustomerFilter\";\r\n// import PaymentModal from \"./PaymentModal\";\r\nimport Records from \"../../components/Records/Records\";\r\n\r\n\r\nfunction Paid() {\r\n  const alert = useAlert();\r\n  const { id } = useParams();\r\n  const userId = window.localStorage.getItem(\"userid\");\r\n  // const cust_id = window.localStorage.getItem(\"userid\");\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const [pay, setPay] = useState([]);\r\n  const [count, setCount] = useState(\"\");\r\n  const [payment, setPayment] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [assignNo, setAssignNo] = useState(\"\");\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getPaymentStatus();\r\n  }, []);\r\n  // /tl/getUploadedProposals?cid=customer_id\r\n\r\n  const getPaymentStatus = () => {\r\n    axios.get(`${baseUrl}/tl/getUploadedProposals?cid=${JSON.parse(userId)}&status=1`).then((res) => {\r\n      console.log(res);\r\n      if (res.data.code === 1) {\r\n        setPayment(res.data.result);\r\n        setCount(res.data.result.length);\r\n        setRecords(res.data.result.length);\r\n\r\n      }\r\n    });\r\n  };\r\n\r\n  const toggle = (key) => {\r\n    console.log(\"key\", key);\r\n    setModal(!modal);\r\n\r\n    fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        Accept: \"application/vnd.github.cloak-preview\",\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        console.log(response);\r\n        setPay(response.payment_detail);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"\",\r\n      text: \"S.No\",\r\n      formatter: (cellContent, row, rowIndex) => {\r\n        return rowIndex + 1;\r\n      },\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"query_created_date\",\r\n      text: \"Date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.query_created_date);\r\n        var oldDate = row.query_created_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      dataField: \"assign_no\",\r\n      text: \"Query No\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function nameFormatter(cell, row) {\r\n        console.log(row);\r\n        return (\r\n          <>\r\n            <Link\r\n              to={{\r\n                pathname: `/customer/my-assingment/${row.assign_id}`,\r\n                routes: \"paymentstatus\",\r\n              }}\r\n            >\r\n              {row.assign_no}\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      dataField: \"parent_id\",\r\n      text: \"Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"cat_name\",\r\n      text: \"Sub Category\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of acceptance of Proposal\",\r\n      dataField: \"cust_accept_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.cust_accept_date);\r\n        var oldDate = row.cust_accept_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n    {\r\n      text: \"Status\",\r\n      dataField: \"status\",\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"accepted_amount\",\r\n      text: \"Accepted Amount \",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#21a3ce\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n      },\r\n    },\r\n    {\r\n      text: \"Amount Paid\",\r\n      dataField: \"paid_amount\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"#064606\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"#064606\" };\r\n      },\r\n    },\r\n\r\n    {\r\n      text: \"Amount Outstanding\",\r\n      dataField: \"\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n        color: \"darkred\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\", color: \"darkred\" };\r\n      },\r\n      formatter: function amountOutstading(cell, row) {\r\n        console.log(\"dt\", row.paid_amount);\r\n        console.log(\"dt\", row.accepted_amount);\r\n        var p = row.paid_amount;\r\n        var a = row.accepted_amount;\r\n        return a - p;\r\n      },\r\n    },\r\n    {\r\n      text: \"Date of Payment\",\r\n      dataField: \"cust_paid_date\",\r\n      sort: true,\r\n      style: {\r\n        fontSize: \"11px\",\r\n      },\r\n      headerStyle: () => {\r\n        return { fontSize: \"11px\" };\r\n      },\r\n      formatter: function dateFormat(cell, row) {\r\n        console.log(\"dt\", row.cust_paid_date);\r\n        var oldDate = row.cust_paid_date;\r\n        if (oldDate == null) {\r\n          return null;\r\n        }\r\n        return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <Card>\r\n    \r\n          <CardHeader>\r\n            <CustomerFilter\r\n              setData={setPayment}\r\n              getData={getPaymentStatus}\r\n              paid=\"paid\"\r\n              setRecords={setRecords}\r\n              records={records}\r\n              id={userId}\r\n            />\r\n          </CardHeader>\r\n\r\n          <CardBody>\r\n            <Records records={records} />\r\n            <BootstrapTable\r\n              bootstrap4\r\n              keyField=\"id\"\r\n              data={payment}\r\n              columns={columns}\r\n              classes=\"table-responsive\"\r\n            />\r\n\r\n          \r\n\r\n\r\n            <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n              <ModalHeader toggle={toggle}>History</ModalHeader>\r\n              <ModalBody>\r\n                <table class=\"table table-bordered\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"row\">S.No</th>\r\n                      <th scope=\"row\">Date</th>\r\n                      <th scope=\"row\">Amount</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {pay.length > 0\r\n                    ? pay.map((p, i) => (\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>{i + 1}</td>\r\n                          <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                          <td>{p.paid_amount}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    ))\r\n                    : null}\r\n                </table>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"secondary\" onClick={toggle}>\r\n                  Cancel\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n\r\n\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Paid;\r\n","E:\\Mazars_Pannel\\src\\views\\PaymentStatus\\PaymentComponent.js",["2371","2372","2373","2374","2375","2376","2377","2378","2379","2380","2381","2382","2383","2384"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alerts from \"../../common/Alerts\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\n\r\n\r\nfunction PaymentModal({\r\n  addPaymentModal,\r\n  paymentHandler,\r\n  pay,\r\n  getPaymentStatus,\r\n}) {\r\n  const { handleSubmit, register } = useForm();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n\r\n  const { id, amount, accepted_amount, paid_amount,\r\n    payment_terms, no_of_installment, installment_amount,\r\n    due_date, amount_type, amount_fixed, amount_hourly\r\n  } = pay;\r\n\r\n\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"id\", id);\r\n    formData.append(\"status\", 8);\r\n    formData.append(\"amount\", value.p_amount);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/customers/PaymentPartialAccept`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n\r\n          var variable = \"Payment Done Successfully \"\r\n          Alerts.SuccessNormal(variable)\r\n\r\n          getPaymentStatus();\r\n          paymentHandler();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  const installAmount = (data) => {\r\n    var item = data.split(',')\r\n    console.log(\"item\", item);\r\n\r\n    const dataItem = item.map((p, i) =>\r\n    (\r\n      <>\r\n        <p>{CommonServices.removeTime(p)}</p>\r\n      </>\r\n    ))\r\n    return dataItem;\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={paymentHandler} size=\"md\">\r\n        <ModalHeader toggle={paymentHandler}>Payment</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <tr>\r\n              <th>Accepted Amount</th>\r\n              <td>{accepted_amount}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Paid Amount</th>\r\n              <td>{paid_amount}</td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">Payment Terms</th>\r\n              {\r\n                payment_terms == \"lumpsum\" ?\r\n                  <td>\r\n                    <tr>\r\n\r\n                      <th>Due Dates</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        {CommonServices.removeTime(due_date)}\r\n                      </td>\r\n                    </tr>\r\n                  </td>\r\n                  :\r\n                  payment_terms == \"installment\" ?\r\n                    <td>\r\n                      <tr>\r\n                        <th>Installment Amount</th>\r\n                        <th>Due Dates</th>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>{installAmount(installment_amount)}</td>\r\n                        <td>{installAmount(due_date)}</td>\r\n                      </tr>\r\n                    </td>\r\n                    :\r\n                    \"\"\r\n              }\r\n            </tr>\r\n\r\n          </table>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            {+accepted_amount == +paid_amount ? null : (\r\n              <div>\r\n                <div className=\"mb-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"p_amount\"\r\n                    ref={register}\r\n                    className=\"form-control\"\r\n                    defaultValue={accepted_amount - paid_amount}\r\n                    placeholder=\"enter amount\"\r\n                  />\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Pay\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n\r\n{/* <tr>\r\n              <th>{amount_type}</th>\r\n              <td>\r\n                {\r\n                  amount_type == \"fixed\" ?\r\n                    amount\r\n                    :\r\n                    amount_type == \"hourly\" ?\r\n                      amount_hourly\r\n                      :\r\n                      amount_type == \"mixed\" ?\r\n                        <div>\r\n                          <p>Fixed : {amount}</p>\r\n                          <p>Hourly : {amount_hourly}</p>\r\n                        </div>\r\n                        :\r\n                        \"\"\r\n                }\r\n              </td>\r\n            </tr> */}","E:\\Mazars_Pannel\\src\\pages\\TL\\PaymentStatus\\RejectedModal.js",["2385","2386","2387","2388"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Schema = yup.object().shape({\r\n  p_chat: yup.string().required(\"required discussion\"),\r\n});\r\n\r\nfunction RejectedModal({\r\n  addPaymentModal,\r\n  rejectHandler,\r\n  assignNo,\r\n  getPaymentStatus,\r\n}) {\r\n\r\n  const userId = window.localStorage.getItem(\"tlkey\");\r\n  const { handleSubmit, register, reset, errors } = useForm({\r\n    resolver: yupResolver(Schema),\r\n  });\r\n  const alert = useAlert();\r\n\r\n  const onSubmit = (value) => {\r\n    console.log(\"value :\", value);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"uid\", JSON.parse(userId));\r\n    formData.append(\"assign_no\", assignNo);\r\n    formData.append(\"notes\", value.p_chat);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `${baseUrl}/tl/declinePayment`,\r\n      data: formData,\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"res-\", response);\r\n        if (response.data.code === 1) {\r\n          alert.success(\"Query rejected !\");\r\n          getPaymentStatus();\r\n          rejectHandler();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"erroror - \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={addPaymentModal} toggle={rejectHandler} size=\"sm\">\r\n        <ModalHeader toggle={rejectHandler}>Rejected Reason</ModalHeader>\r\n        <ModalBody>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"mb-3\">\r\n              <textarea\r\n                className={classNames(\"form-control\", {\r\n                  \"is-invalid\": errors.p_chat,\r\n                })}\r\n                id=\"textarea\"\r\n                rows=\"4\"\r\n                name=\"p_chat\"\r\n                ref={register}\r\n                placeholder=\"enter text\"\r\n              ></textarea>\r\n\r\n              {errors.p_chat && (\r\n                <div className=\"invalid-feedback\">{errors.p_chat.message}</div>\r\n              )}\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RejectedModal;\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\PaymentStatusTab\\Paid.js",["2389","2390","2391","2392","2393","2394"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Records from \"../../../components/Records/Records\";\r\n\r\n\r\n\r\nfunction Paid() {\r\n\r\n    const [payment, setPayment] = useState([]);\r\n\r\n    const [paymentcount, setPaymentCount] = useState(\"\");\r\n    const [pay, setPay] = useState([]);\r\n    const [records, setRecords] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?status=1`).then((res) => {\r\n            console.log(res);\r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setPaymentCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = (key) => {\r\n        console.log(\"key\", key);\r\n        setModal(!modal);\r\n\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                console.log(response);\r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.query_created_date);\r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/admin/queries/${row.assign_id}`,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_accept_date);\r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#064606\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n        },\r\n\r\n        {\r\n            text: \"Amount Outstanding\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"darkred\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n            formatter: function amountOutstading(cell, row) {\r\n                console.log(\"dt\", row.paid_amount);\r\n                console.log(\"dt\", row.accepted_amount);\r\n                var p = row.paid_amount;\r\n                var a = row.accepted_amount;\r\n                return a - p;\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_paid_date);\r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"tl_name\",\r\n            text: \"TL name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\" }}>\r\n\r\n\r\n                            <div style={{ cursor: \"pointer\" }} title=\"Payment History\">\r\n                                <i\r\n                                    class=\"fa fa-credit-card\"\r\n                                    style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                    onClick={() => toggle(row.assign_id)}\r\n                                ></i>\r\n                            </div>\r\n\r\n                            {/* <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.id}`,\r\n                    obj: {\r\n                      message_type: \"5\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.id,\r\n                      routes: `/admin/paymentstatus`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div> */}\r\n\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n\r\n\r\n                <CardHeader>\r\n                    <AdminFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        paid=\"paid\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paid;\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\PaymentStatusTab\\Unpaid.js",["2395","2396","2397","2398","2399","2400"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Records from \"../../../components/Records/Records\";\r\n\r\n\r\n\r\nfunction Unpaid() {\r\n\r\n    const [payment, setPayment] = useState([]);\r\n\r\n    const [paymentcount, setPaymentCount] = useState(\"\");\r\n    const [pay, setPay] = useState([]);\r\n    const [records, setRecords] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals?status=2`).then((res) => {\r\n            console.log(res);\r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setPaymentCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = (key) => {\r\n        console.log(\"key\", key);\r\n        setModal(!modal);\r\n\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                console.log(response);\r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.query_created_date);\r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/admin/queries/${row.assign_id}`,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_accept_date);\r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#064606\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n        },\r\n\r\n        {\r\n            text: \"Amount Outstanding\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"darkred\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n            formatter: function amountOutstading(cell, row) {\r\n                console.log(\"dt\", row.paid_amount);\r\n                console.log(\"dt\", row.accepted_amount);\r\n                var p = row.paid_amount;\r\n                var a = row.accepted_amount;\r\n                return a - p;\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_paid_date);\r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"tl_name\",\r\n            text: \"TL name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\" }}>\r\n\r\n\r\n                            <div style={{ cursor: \"pointer\" }} title=\"Payment History\">\r\n                                <i\r\n                                    class=\"fa fa-credit-card\"\r\n                                    style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                    onClick={() => toggle(row.assign_id)}\r\n                                ></i>\r\n                            </div>\r\n\r\n                            {/* <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.id}`,\r\n                    obj: {\r\n                      message_type: \"5\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.id,\r\n                      routes: `/admin/paymentstatus`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div> */}\r\n\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n\r\n                <CardHeader>\r\n                    <AdminFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        unpaid=\"unpaid\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Unpaid;\r\n","E:\\Mazars_Pannel\\src\\pages\\Admin\\PaymentStatusTab\\AllPayment.js",["2401","2402","2403","2404","2405","2406"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../../config/config\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AdminFilter from \"../../../components/Search-Filter/AdminFilter\";\r\nimport CommonServices from \"../../../common/common\";\r\nimport Records from \"../../../components/Records/Records\";\r\n\r\n\r\n\r\nfunction AllPayment() {\r\n\r\n    const [payment, setPayment] = useState([]);\r\n\r\n    const [paymentcount, setPaymentCount] = useState(\"\");\r\n    const [pay, setPay] = useState([]);\r\n    const [records, setRecords] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getPaymentStatus();\r\n    }, []);\r\n\r\n    const getPaymentStatus = () => {\r\n        axios.get(`${baseUrl}/tl/getUploadedProposals`).then((res) => {\r\n            console.log(res);\r\n            if (res.data.code === 1) {\r\n                setPayment(res.data.result);\r\n                setPaymentCount(res.data.result.length);\r\n                setRecords(res.data.result.length);\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = (key) => {\r\n        console.log(\"key\", key);\r\n        setModal(!modal);\r\n\r\n        fetch(`${baseUrl}//admin/getPaymentDetail?id=${key}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                Accept: \"application/vnd.github.cloak-preview\",\r\n            }),\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                console.log(response);\r\n                setPay(response.payment_detail);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"\",\r\n            text: \"S.No\",\r\n            formatter: (cellContent, row, rowIndex) => {\r\n                return rowIndex + 1;\r\n            },\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"query_created_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.query_created_date);\r\n                var oldDate = row.query_created_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"assign_no\",\r\n            text: \"Query No\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function nameFormatter(cell, row) {\r\n                console.log(row);\r\n                return (\r\n                    <>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/admin/queries/${row.assign_id}`,\r\n                                routes: \"paymentstatus\",\r\n                            }}\r\n                        >\r\n                            {row.assign_no}\r\n                        </Link>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField: \"parent_id\",\r\n            text: \"Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"cat_name\",\r\n            text: \"Sub Category\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of acceptance of Proposal\",\r\n            dataField: \"cust_accept_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_accept_date);\r\n                var oldDate = row.cust_accept_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            text: \"Status\",\r\n            dataField: \"status\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            dataField: \"accepted_amount\",\r\n            text: \"Accepted Amount \",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#21a3ce\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#21a3ce\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Amount Paid\",\r\n            dataField: \"paid_amount\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"#064606\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"#064606\" };\r\n            },\r\n        },\r\n\r\n        {\r\n            text: \"Amount Outstanding\",\r\n            dataField: \"\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n                color: \"darkred\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\", color: \"darkred\" };\r\n            },\r\n            formatter: function amountOutstading(cell, row) {\r\n                console.log(\"dt\", row.paid_amount);\r\n                console.log(\"dt\", row.accepted_amount);\r\n                var p = row.paid_amount;\r\n                var a = row.accepted_amount;\r\n                return a - p;\r\n            },\r\n        },\r\n        {\r\n            text: \"Date of Payment\",\r\n            dataField: \"cust_paid_date\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function dateFormat(cell, row) {\r\n                console.log(\"dt\", row.cust_paid_date);\r\n                var oldDate = row.cust_paid_date;\r\n                if (oldDate == null) {\r\n                    return null;\r\n                }\r\n                return oldDate.slice(0, 10).toString().split(\"-\").reverse().join(\"-\");\r\n            },\r\n        },\r\n        {\r\n            dataField: \"tl_name\",\r\n            text: \"TL name\",\r\n            sort: true,\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n        },\r\n        {\r\n            text: \"Action\",\r\n            style: {\r\n                fontSize: \"11px\",\r\n            },\r\n            headerStyle: () => {\r\n                return { fontSize: \"11px\" };\r\n            },\r\n            formatter: function (cell, row) {\r\n                return (\r\n                    <>\r\n                        <div style={{ display: \"flex\" }}>\r\n\r\n\r\n                            <div style={{ cursor: \"pointer\" }} title=\"Payment History\">\r\n                                <i\r\n                                    class=\"fa fa-credit-card\"\r\n                                    style={{ color: \"green\", fontSize: \"16px\" }}\r\n                                    onClick={() => toggle(row.assign_id)}\r\n                                ></i>\r\n                            </div>\r\n\r\n                            {/* <div title=\"Send Message\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/admin/chatting/${row.id}`,\r\n                    obj: {\r\n                      message_type: \"5\",\r\n                      query_No: row.assign_no,\r\n                      query_id: row.id,\r\n                      routes: `/admin/paymentstatus`\r\n                    }\r\n                  }}\r\n                >\r\n                  <i\r\n                    class=\"fa fa-comments-o\"\r\n                    style={{\r\n                      fontSize: 16,\r\n                      cursor: \"pointer\",\r\n                      marginLeft: \"8px\",\r\n                      color: \"blue\"\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </div> */}\r\n\r\n                        </div>\r\n                    </>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n\r\n                <CardHeader>\r\n                    <AdminFilter\r\n                        setData={setPayment}\r\n                        getData={getPaymentStatus}\r\n                        AllPayment=\"AllPayment\"\r\n                        setRecords={setRecords}\r\n                        records={records}\r\n                    />\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Records records={records} />\r\n                    <BootstrapTable\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={payment}\r\n                        columns={columns}\r\n                        classes=\"table-responsive\"\r\n                    />\r\n\r\n                    <Modal isOpen={modal} fade={false} toggle={toggle}>\r\n                        <ModalHeader toggle={toggle}>History</ModalHeader>\r\n                        <ModalBody>\r\n                            <table class=\"table table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"row\">S.No</th>\r\n                                        <th scope=\"row\">Date</th>\r\n                                        <th scope=\"row\">Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {pay.length > 0\r\n                                    ? pay.map((p, i) => (\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{CommonServices.removeTime(p.payment_date)}</td>\r\n                                                <td>{p.paid_amount}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))\r\n                                    : null}\r\n                            </table>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"secondary\" onClick={toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllPayment;\r\n","E:\\Mazars_Pannel\\src\\views\\AddFressAssignment\\data.js",[],"E:\\Mazars_Pannel\\src\\views\\SignUpForm\\data.js",[],"E:\\Mazars_Pannel\\src\\pages\\Admin\\ViewProposal\\ViewComponent.js",["2407","2408","2409","2410","2411","2412"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport CommonServices from \"../../../common/common\";\r\n\r\n\r\nfunction ViewComponent({ viewModal, ViewHandler, getProposalData, viewData }) {\r\n\r\n  console.log(\"viewData\", viewData)\r\n  return (\r\n    <div>\r\n      <Modal isOpen={viewModal} toggle={ViewHandler} size=\"md\">\r\n        <ModalHeader toggle={ViewHandler}>View Proposal</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Query No</th>\r\n                <td>{viewData.assign_no}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Name of Team Leader</th>\r\n                <td>{viewData.tl_name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date of Allocation</th>\r\n                <td>{CommonServices.removeTime(viewData.DateofProposal)}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Proposed Amount</th>\r\n                <td>{viewData.ProposedAmount}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Status</th>\r\n                <td>\r\n                  {\r\n                    viewData.status == \"Inprogress\" ?\r\n                      <div>\r\n                        {viewData.status}/\r\n                        <p className=\"inprogress\">\r\n                          {viewData.statusdescription}\r\n                        </p>\r\n                      </div>\r\n                      :\r\n                      viewData.status == \"Declined; Proposal\" ?\r\n                        <div>\r\n                          {viewData.status}\r\n                          <p className=\"declined\">\r\n                            {viewData.statusdescription}\r\n                          </p>\r\n                        </div> :\r\n                        viewData.status == \"Accepted; Proposal\" ?\r\n                          <div>\r\n                            {viewData.status}\r\n                            <p className=\".completed{\">\r\n                              {viewData.statusdescription}\r\n                            </p>\r\n                          </div> :\r\n                          null\r\n                  }\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewComponent;\r\n","E:\\Mazars_Pannel\\src\\views\\SignUpForm\\city.js",[],"E:\\Mazars_Pannel\\src\\views\\ProposalTab\\ViewComponent.js",["2413","2414","2415","2416","2417","2418"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport CommonServices from \"../../common/common\";\r\n\r\n\r\nfunction ViewComponent({ viewModal, ViewHandler, getProposalData, viewData }) {\r\n\r\n  console.log(\"viewData\", viewData)\r\n  return (\r\n    <div>\r\n      <Modal isOpen={viewModal} toggle={ViewHandler} size=\"md\">\r\n        <ModalHeader toggle={ViewHandler}>View Proposal</ModalHeader>\r\n        <ModalBody>\r\n          <table class=\"table table-bordered\">\r\n            <tbody>\r\n              <tr>\r\n                <th scope=\"row\">Query No</th>\r\n                <td>{viewData.assign_no}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Name of Team Leader</th>\r\n                <td>{viewData.tl_name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Date of Allocation</th>\r\n                <td>{CommonServices.removeTime(viewData.DateofProposal)}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Proposed Amount</th>\r\n                <td>{viewData.ProposedAmount}</td>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"row\">Status</th>\r\n                <td>\r\n                  {\r\n                    viewData.status == \"Inprogress\" ?\r\n                      <div>\r\n                        {viewData.status}/\r\n                        <p className=\"inprogress\">\r\n                          {viewData.statusdescription}\r\n                        </p>\r\n                      </div>\r\n                      :\r\n                      viewData.status == \"Declined; Proposal\" ?\r\n                        <div>\r\n                          {viewData.status}\r\n                          <p className=\"declined\">\r\n                            {viewData.statusdescription}\r\n                          </p>\r\n                        </div> :\r\n                        viewData.status == \"Accepted; Proposal\" ?\r\n                          <div>\r\n                            {viewData.status}\r\n                            <p className=\".completed{\">\r\n                              {viewData.statusdescription}\r\n                            </p>\r\n                          </div> :\r\n                          null\r\n                  }\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewComponent;\r\n","E:\\Mazars_Pannel\\src\\components\\Common\\Mandatory.js",[],"E:\\Mazars_Pannel\\src\\views\\SignUpForm\\ResendOtp.js",["2419","2420"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../../config/config\";\r\nimport Alerts from \"../../common/Alerts\";\r\n\r\n\r\n\r\nfunction ResendOtp({ email, phone, setDisabled, getTime,setLoad }) {\r\n\r\n    const { handleSubmit, errors, reset } = useForm();\r\n\r\n    const onSubmit = (value) => {\r\n        let formData = new FormData();\r\n        formData.append(\"email\", email);\r\n        formData.append(\"phone\", phone);\r\n        formData.append(\"p\", \"registration\");\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${baseUrl}/customers/forgototp`,\r\n            data: formData,\r\n        })\r\n            .then(function (response) {\r\n                console.log(\"res-\", response);\r\n                if (response.data.code === 1) {\r\n                    Alerts.SuccessNormal(\"OTP sent to your email address.\")\r\n                    setDisabled(false)\r\n                    getTime();\r\n                    setLoad(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"erroror - \", error);\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div style={{ paddingTop: \"10px\" }}>\r\n                    <button type=\"submit\" class=\"btn btn-success\">RESEND OTP</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResendOtp;","E:\\Mazars_Pannel\\src\\views\\SignUpForm\\GetOTP.js",["2421","2422","2423","2424","2425","2426","2427","2428","2429"],"E:\\Mazars_Pannel\\src\\views\\VerifyOtp\\VerifyOtp.js",["2430","2431","2432"],"E:\\Mazars_Pannel\\src\\views\\VrerifyOtpLogin\\VerifyOtpLogin.js",["2433","2434","2435"],"E:\\Mazars_Pannel\\src\\views\\Start\\Start.js",[],"E:\\Mazars_Pannel\\src\\views\\RegisterYourSelf\\RegisterYourSelf.js",["2436"],"E:\\Mazars_Pannel\\src\\views\\SignInForm\\SignIn.js",["2437","2438","2439"],"E:\\Mazars_Pannel\\src\\views\\RegisterYourSelf\\VerifyOTP.js",["2440"],{"ruleId":"2441","replacedBy":"2442"},{"ruleId":"2443","replacedBy":"2444"},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":26},{"ruleId":"2445","severity":1,"message":"2449","line":13,"column":8,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2450","line":18,"column":8,"nodeType":"2447","messageId":"2448","endLine":18,"endColumn":13},{"ruleId":"2451","severity":1,"message":"2452","line":280,"column":1,"nodeType":"2453","messageId":"2454","endLine":294,"endColumn":78},{"ruleId":"2451","severity":1,"message":"2452","line":295,"column":1,"nodeType":"2453","messageId":"2454","endLine":295,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2455","line":7,"column":11,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2455","line":7,"column":11,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2456","line":4,"column":10,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2457","line":5,"column":13,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2458","line":12,"column":8,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2459","line":13,"column":10,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2460","line":18,"column":8,"nodeType":"2447","messageId":"2448","endLine":18,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2461","line":27,"column":9,"nodeType":"2447","messageId":"2448","endLine":27,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2462","line":32,"column":10,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2463","line":32,"column":18,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":27},{"ruleId":"2445","severity":1,"message":"2464","line":34,"column":10,"nodeType":"2447","messageId":"2448","endLine":34,"endColumn":15},{"ruleId":"2445","severity":1,"message":"2465","line":34,"column":17,"nodeType":"2447","messageId":"2448","endLine":34,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2466","line":50,"column":23,"nodeType":"2447","messageId":"2448","endLine":50,"endColumn":37},{"ruleId":"2445","severity":1,"message":"2467","line":59,"column":10,"nodeType":"2447","messageId":"2448","endLine":59,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2468","line":59,"column":22,"nodeType":"2447","messageId":"2448","endLine":59,"endColumn":35},{"ruleId":"2445","severity":1,"message":"2469","line":60,"column":10,"nodeType":"2447","messageId":"2448","endLine":60,"endColumn":15},{"ruleId":"2445","severity":1,"message":"2470","line":60,"column":17,"nodeType":"2447","messageId":"2448","endLine":60,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2471","line":61,"column":9,"nodeType":"2447","messageId":"2448","endLine":61,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2472","line":65,"column":10,"nodeType":"2447","messageId":"2448","endLine":65,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2473","line":68,"column":10,"nodeType":"2447","messageId":"2448","endLine":68,"endColumn":25},{"ruleId":"2474","severity":1,"message":"2475","line":87,"column":6,"nodeType":"2476","endLine":87,"endColumn":12,"suggestions":"2477"},{"ruleId":"2478","severity":1,"message":"2479","line":117,"column":8,"nodeType":"2480","messageId":"2481","endLine":117,"endColumn":10},{"ruleId":"2482","severity":1,"message":"2483","line":125,"column":26,"nodeType":"2484","messageId":"2485","endLine":125,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":126,"column":27,"nodeType":"2480","messageId":"2481","endLine":126,"endColumn":29},{"ruleId":"2482","severity":1,"message":"2483","line":132,"column":27,"nodeType":"2484","messageId":"2485","endLine":132,"endColumn":29},{"ruleId":"2478","severity":1,"message":"2479","line":133,"column":15,"nodeType":"2480","messageId":"2481","endLine":133,"endColumn":17},{"ruleId":"2482","severity":1,"message":"2483","line":144,"column":23,"nodeType":"2484","messageId":"2485","endLine":144,"endColumn":25},{"ruleId":"2478","severity":1,"message":"2479","line":145,"column":16,"nodeType":"2480","messageId":"2481","endLine":145,"endColumn":18},{"ruleId":"2482","severity":1,"message":"2483","line":151,"column":26,"nodeType":"2484","messageId":"2485","endLine":151,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":313,"column":26,"nodeType":"2480","messageId":"2481","endLine":313,"endColumn":28},{"ruleId":"2445","severity":1,"message":"2486","line":346,"column":7,"nodeType":"2447","messageId":"2448","endLine":346,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2487","line":3,"column":10,"nodeType":"2447","messageId":"2448","endLine":3,"endColumn":14},{"ruleId":"2474","severity":1,"message":"2488","line":129,"column":6,"nodeType":"2476","endLine":129,"endColumn":16,"suggestions":"2489"},{"ruleId":"2445","severity":1,"message":"2446","line":2,"column":27,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2456","line":3,"column":10,"nodeType":"2447","messageId":"2448","endLine":3,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2457","line":4,"column":13,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2490","line":7,"column":10,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":15},{"ruleId":"2445","severity":1,"message":"2491","line":7,"column":17,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":28},{"ruleId":"2445","severity":1,"message":"2492","line":7,"column":30,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":39},{"ruleId":"2445","severity":1,"message":"2493","line":7,"column":41,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":52},{"ruleId":"2445","severity":1,"message":"2494","line":11,"column":8,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2495","line":18,"column":3,"nodeType":"2447","messageId":"2448","endLine":18,"endColumn":11},{"ruleId":"2445","severity":1,"message":"2496","line":19,"column":3,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":22,"column":3,"nodeType":"2447","messageId":"2448","endLine":22,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2498","line":25,"column":10,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":30},{"ruleId":"2445","severity":1,"message":"2461","line":30,"column":9,"nodeType":"2447","messageId":"2448","endLine":30,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2499","line":32,"column":35,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":41},{"ruleId":"2445","severity":1,"message":"2500","line":44,"column":9,"nodeType":"2447","messageId":"2448","endLine":44,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2501","line":53,"column":10,"nodeType":"2447","messageId":"2448","endLine":53,"endColumn":18},{"ruleId":"2478","severity":1,"message":"2479","line":72,"column":11,"nodeType":"2480","messageId":"2481","endLine":72,"endColumn":13},{"ruleId":"2478","severity":1,"message":"2479","line":126,"column":25,"nodeType":"2480","messageId":"2481","endLine":126,"endColumn":27},{"ruleId":"2445","severity":1,"message":"2487","line":4,"column":10,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2502","line":56,"column":5,"nodeType":"2447","messageId":"2448","endLine":56,"endColumn":26},{"ruleId":"2474","severity":1,"message":"2503","line":113,"column":6,"nodeType":"2476","endLine":113,"endColumn":8,"suggestions":"2504"},{"ruleId":"2445","severity":1,"message":"2446","line":2,"column":27,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2456","line":3,"column":10,"nodeType":"2447","messageId":"2448","endLine":3,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2457","line":4,"column":13,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2490","line":9,"column":10,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":15},{"ruleId":"2445","severity":1,"message":"2491","line":9,"column":17,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":28},{"ruleId":"2445","severity":1,"message":"2492","line":9,"column":30,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":39},{"ruleId":"2445","severity":1,"message":"2493","line":9,"column":41,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":52},{"ruleId":"2445","severity":1,"message":"2494","line":13,"column":8,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2461","line":20,"column":9,"nodeType":"2447","messageId":"2448","endLine":20,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2499","line":21,"column":35,"nodeType":"2447","messageId":"2448","endLine":21,"endColumn":41},{"ruleId":"2478","severity":1,"message":"2479","line":55,"column":26,"nodeType":"2480","messageId":"2481","endLine":55,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":58,"column":24,"nodeType":"2480","messageId":"2481","endLine":58,"endColumn":26},{"ruleId":"2445","severity":1,"message":"2505","line":65,"column":11,"nodeType":"2447","messageId":"2448","endLine":65,"endColumn":12},{"ruleId":"2478","severity":1,"message":"2479","line":66,"column":11,"nodeType":"2480","messageId":"2481","endLine":66,"endColumn":13},{"ruleId":"2478","severity":1,"message":"2479","line":116,"column":25,"nodeType":"2480","messageId":"2481","endLine":116,"endColumn":27},{"ruleId":"2451","severity":1,"message":"2452","line":910,"column":1,"nodeType":"2453","messageId":"2454","endLine":931,"endColumn":2},{"ruleId":"2445","severity":1,"message":"2495","line":6,"column":3,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":11},{"ruleId":"2445","severity":1,"message":"2496","line":7,"column":3,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2496","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":13,"column":3,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2487","line":15,"column":33,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":37},{"ruleId":"2445","severity":1,"message":"2506","line":24,"column":35,"nodeType":"2447","messageId":"2448","endLine":24,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2499","line":24,"column":42,"nodeType":"2447","messageId":"2448","endLine":24,"endColumn":48},{"ruleId":"2445","severity":1,"message":"2461","line":25,"column":9,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2507","line":50,"column":18,"nodeType":"2447","messageId":"2448","endLine":50,"endColumn":30},{"ruleId":"2474","severity":1,"message":"2508","line":91,"column":6,"nodeType":"2476","endLine":91,"endColumn":8,"suggestions":"2509"},{"ruleId":"2478","severity":1,"message":"2479","line":189,"column":37,"nodeType":"2480","messageId":"2481","endLine":189,"endColumn":39},{"ruleId":"2478","severity":1,"message":"2479","line":192,"column":39,"nodeType":"2480","messageId":"2481","endLine":192,"endColumn":41},{"ruleId":"2478","severity":1,"message":"2479","line":195,"column":41,"nodeType":"2480","messageId":"2481","endLine":195,"endColumn":43},{"ruleId":"2478","severity":1,"message":"2479","line":211,"column":33,"nodeType":"2480","messageId":"2481","endLine":211,"endColumn":35},{"ruleId":"2478","severity":1,"message":"2479","line":225,"column":35,"nodeType":"2480","messageId":"2481","endLine":225,"endColumn":37},{"ruleId":"2478","severity":1,"message":"2479","line":249,"column":32,"nodeType":"2480","messageId":"2481","endLine":249,"endColumn":34},{"ruleId":"2478","severity":1,"message":"2479","line":250,"column":32,"nodeType":"2480","messageId":"2481","endLine":250,"endColumn":34},{"ruleId":"2478","severity":1,"message":"2479","line":251,"column":33,"nodeType":"2480","messageId":"2481","endLine":251,"endColumn":35},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2511","line":5,"column":10,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":18},{"ruleId":"2474","severity":1,"message":"2512","line":38,"column":6,"nodeType":"2476","endLine":38,"endColumn":8,"suggestions":"2513"},{"ruleId":"2478","severity":1,"message":"2479","line":108,"column":34,"nodeType":"2480","messageId":"2481","endLine":108,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":111,"column":34,"nodeType":"2480","messageId":"2481","endLine":111,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":114,"column":34,"nodeType":"2480","messageId":"2481","endLine":114,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":118,"column":34,"nodeType":"2480","messageId":"2481","endLine":118,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2446","line":2,"column":27,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2461","line":24,"column":9,"nodeType":"2447","messageId":"2448","endLine":24,"endColumn":14},{"ruleId":"2474","severity":1,"message":"2514","line":36,"column":6,"nodeType":"2476","endLine":36,"endColumn":8,"suggestions":"2515"},{"ruleId":"2478","severity":1,"message":"2479","line":118,"column":34,"nodeType":"2480","messageId":"2481","endLine":118,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":121,"column":34,"nodeType":"2480","messageId":"2481","endLine":121,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":125,"column":34,"nodeType":"2480","messageId":"2481","endLine":125,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":129,"column":34,"nodeType":"2480","messageId":"2481","endLine":129,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2510","line":2,"column":17,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":2,"column":27,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2487","line":15,"column":10,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2461","line":27,"column":9,"nodeType":"2447","messageId":"2448","endLine":27,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2506","line":28,"column":35,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":40},{"ruleId":"2478","severity":1,"message":"2479","line":64,"column":14,"nodeType":"2480","messageId":"2481","endLine":64,"endColumn":16},{"ruleId":"2451","severity":1,"message":"2452","line":112,"column":1,"nodeType":"2453","messageId":"2454","endLine":119,"endColumn":2},{"ruleId":"2445","severity":1,"message":"2456","line":5,"column":10,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2457","line":8,"column":13,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2494","line":14,"column":8,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2461","line":21,"column":9,"nodeType":"2447","messageId":"2448","endLine":21,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2499","line":25,"column":35,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":41},{"ruleId":"2474","severity":1,"message":"2516","line":47,"column":6,"nodeType":"2476","endLine":47,"endColumn":8,"suggestions":"2517"},{"ruleId":"2478","severity":1,"message":"2479","line":63,"column":22,"nodeType":"2480","messageId":"2481","endLine":63,"endColumn":24},{"ruleId":"2478","severity":1,"message":"2479","line":145,"column":23,"nodeType":"2480","messageId":"2481","endLine":145,"endColumn":25},{"ruleId":"2518","severity":1,"message":"2519","line":379,"column":33,"nodeType":"2520","endLine":382,"endColumn":34},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2521","line":3,"column":8,"nodeType":"2447","messageId":"2448","endLine":3,"endColumn":13},{"ruleId":"2445","severity":1,"message":"2522","line":4,"column":10,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2497","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2511","line":6,"column":10,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2496","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":14,"column":3,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2523","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":10},{"ruleId":"2474","severity":1,"message":"2524","line":28,"column":6,"nodeType":"2476","endLine":28,"endColumn":10,"suggestions":"2525"},{"ruleId":"2478","severity":1,"message":"2479","line":96,"column":30,"nodeType":"2480","messageId":"2481","endLine":96,"endColumn":32},{"ruleId":"2478","severity":1,"message":"2479","line":98,"column":33,"nodeType":"2480","messageId":"2481","endLine":98,"endColumn":35},{"ruleId":"2478","severity":1,"message":"2479","line":100,"column":35,"nodeType":"2480","messageId":"2481","endLine":100,"endColumn":37},{"ruleId":"2445","severity":1,"message":"2511","line":5,"column":10,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2497","line":13,"column":5,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2487","line":15,"column":10,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":14},{"ruleId":"2474","severity":1,"message":"2526","line":29,"column":8,"nodeType":"2476","endLine":29,"endColumn":10,"suggestions":"2527"},{"ruleId":"2445","severity":1,"message":"2511","line":5,"column":10,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2497","line":13,"column":5,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2528","line":26,"column":12,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2529","line":26,"column":18,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":25},{"ruleId":"2474","severity":1,"message":"2526","line":42,"column":8,"nodeType":"2476","endLine":42,"endColumn":10,"suggestions":"2530"},{"ruleId":"2478","severity":1,"message":"2479","line":118,"column":45,"nodeType":"2480","messageId":"2481","endLine":118,"endColumn":47},{"ruleId":"2451","severity":1,"message":"2452","line":203,"column":1,"nodeType":"2453","messageId":"2454","endLine":218,"endColumn":35},{"ruleId":"2451","severity":1,"message":"2452","line":220,"column":1,"nodeType":"2453","messageId":"2454","endLine":239,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2511","line":8,"column":10,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":18},{"ruleId":"2451","severity":1,"message":"2452","line":145,"column":1,"nodeType":"2453","messageId":"2454","endLine":157,"endColumn":34},{"ruleId":"2445","severity":1,"message":"2446","line":2,"column":27,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2456","line":10,"column":10,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2457","line":11,"column":13,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2461","line":20,"column":9,"nodeType":"2447","messageId":"2448","endLine":20,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2531","line":27,"column":16,"nodeType":"2447","messageId":"2448","endLine":27,"endColumn":23},{"ruleId":"2445","severity":1,"message":"2532","line":28,"column":10,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2533","line":28,"column":20,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":31},{"ruleId":"2445","severity":1,"message":"2496","line":13,"column":3,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":16,"column":3,"nodeType":"2447","messageId":"2448","endLine":16,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2523","line":17,"column":3,"nodeType":"2447","messageId":"2448","endLine":17,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2534","line":43,"column":11,"nodeType":"2447","messageId":"2448","endLine":43,"endColumn":23},{"ruleId":"2474","severity":1,"message":"2535","line":57,"column":6,"nodeType":"2476","endLine":57,"endColumn":12,"suggestions":"2536"},{"ruleId":"2451","severity":1,"message":"2452","line":191,"column":1,"nodeType":"2453","messageId":"2454","endLine":201,"endColumn":32},{"ruleId":"2474","severity":1,"message":"2537","line":40,"column":6,"nodeType":"2476","endLine":40,"endColumn":8,"suggestions":"2538"},{"ruleId":"2478","severity":1,"message":"2479","line":122,"column":34,"nodeType":"2480","messageId":"2481","endLine":122,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":125,"column":34,"nodeType":"2480","messageId":"2481","endLine":125,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":129,"column":34,"nodeType":"2480","messageId":"2481","endLine":129,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":133,"column":34,"nodeType":"2480","messageId":"2481","endLine":133,"endColumn":36},{"ruleId":"2451","severity":1,"message":"2452","line":166,"column":1,"nodeType":"2453","messageId":"2454","endLine":184,"endColumn":30},{"ruleId":"2451","severity":1,"message":"2452","line":187,"column":1,"nodeType":"2453","messageId":"2454","endLine":197,"endColumn":28},{"ruleId":"2451","severity":1,"message":"2452","line":199,"column":1,"nodeType":"2453","messageId":"2454","endLine":227,"endColumn":25},{"ruleId":"2474","severity":1,"message":"2539","line":32,"column":6,"nodeType":"2476","endLine":32,"endColumn":8,"suggestions":"2540"},{"ruleId":"2478","severity":1,"message":"2479","line":103,"column":34,"nodeType":"2480","messageId":"2481","endLine":103,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":106,"column":34,"nodeType":"2480","messageId":"2481","endLine":106,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":109,"column":34,"nodeType":"2480","messageId":"2481","endLine":109,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2495","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":11},{"ruleId":"2445","severity":1,"message":"2496","line":13,"column":3,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":14,"column":3,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":16,"column":3,"nodeType":"2447","messageId":"2448","endLine":16,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2523","line":17,"column":3,"nodeType":"2447","messageId":"2448","endLine":17,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2461","line":38,"column":9,"nodeType":"2447","messageId":"2448","endLine":38,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2506","line":39,"column":35,"nodeType":"2447","messageId":"2448","endLine":39,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2543","line":51,"column":10,"nodeType":"2447","messageId":"2448","endLine":51,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2506","line":31,"column":35,"nodeType":"2447","messageId":"2448","endLine":31,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2544","line":44,"column":7,"nodeType":"2447","messageId":"2448","endLine":44,"endColumn":8},{"ruleId":"2482","severity":1,"message":"2545","line":118,"column":41,"nodeType":"2484","messageId":"2485","endLine":118,"endColumn":43},{"ruleId":"2482","severity":1,"message":"2545","line":131,"column":17,"nodeType":"2484","messageId":"2485","endLine":131,"endColumn":19},{"ruleId":"2482","severity":1,"message":"2545","line":137,"column":17,"nodeType":"2484","messageId":"2485","endLine":137,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2487","line":6,"column":10,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":14},{"ruleId":"2451","severity":1,"message":"2452","line":392,"column":1,"nodeType":"2453","messageId":"2454","endLine":602,"endColumn":5},{"ruleId":"2478","severity":1,"message":"2479","line":121,"column":34,"nodeType":"2480","messageId":"2481","endLine":121,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":124,"column":34,"nodeType":"2480","messageId":"2481","endLine":124,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":128,"column":34,"nodeType":"2480","messageId":"2481","endLine":128,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":132,"column":34,"nodeType":"2480","messageId":"2481","endLine":132,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2546","line":8,"column":3,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":7},{"ruleId":"2445","severity":1,"message":"2547","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":13},{"ruleId":"2445","severity":1,"message":"2495","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":11},{"ruleId":"2445","severity":1,"message":"2496","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":13,"column":3,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":14,"column":3,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2548","line":22,"column":9,"nodeType":"2447","messageId":"2448","endLine":22,"endColumn":16},{"ruleId":"2474","severity":1,"message":"2488","line":160,"column":6,"nodeType":"2476","endLine":160,"endColumn":16,"suggestions":"2549"},{"ruleId":"2451","severity":1,"message":"2452","line":229,"column":1,"nodeType":"2453","messageId":"2454","endLine":387,"endColumn":2},{"ruleId":"2451","severity":1,"message":"2452","line":406,"column":1,"nodeType":"2453","messageId":"2454","endLine":413,"endColumn":2},{"ruleId":"2445","severity":1,"message":"2550","line":3,"column":10,"nodeType":"2447","messageId":"2448","endLine":3,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2456","line":4,"column":10,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2457","line":5,"column":13,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2495","line":13,"column":3,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":11},{"ruleId":"2445","severity":1,"message":"2496","line":14,"column":3,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":16,"column":3,"nodeType":"2447","messageId":"2448","endLine":16,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":17,"column":3,"nodeType":"2447","messageId":"2448","endLine":17,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2523","line":18,"column":3,"nodeType":"2447","messageId":"2448","endLine":18,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2461","line":29,"column":9,"nodeType":"2447","messageId":"2448","endLine":29,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2543","line":37,"column":10,"nodeType":"2447","messageId":"2448","endLine":37,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2551","line":37,"column":18,"nodeType":"2447","messageId":"2448","endLine":37,"endColumn":27},{"ruleId":"2478","severity":1,"message":"2479","line":94,"column":34,"nodeType":"2480","messageId":"2481","endLine":94,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":97,"column":34,"nodeType":"2480","messageId":"2481","endLine":97,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":100,"column":34,"nodeType":"2480","messageId":"2481","endLine":100,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2552","line":6,"column":27,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":35},{"ruleId":"2445","severity":1,"message":"2495","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":11},{"ruleId":"2445","severity":1,"message":"2496","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2523","line":16,"column":3,"nodeType":"2447","messageId":"2448","endLine":16,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2461","line":32,"column":9,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2506","line":33,"column":43,"nodeType":"2447","messageId":"2448","endLine":33,"endColumn":48},{"ruleId":"2445","severity":1,"message":"2553","line":53,"column":9,"nodeType":"2447","messageId":"2448","endLine":53,"endColumn":14},{"ruleId":"2474","severity":1,"message":"2554","line":71,"column":6,"nodeType":"2476","endLine":71,"endColumn":8,"suggestions":"2555"},{"ruleId":"2474","severity":1,"message":"2516","line":98,"column":6,"nodeType":"2476","endLine":98,"endColumn":15,"suggestions":"2556"},{"ruleId":"2478","severity":1,"message":"2479","line":121,"column":22,"nodeType":"2480","messageId":"2481","endLine":121,"endColumn":24},{"ruleId":"2445","severity":1,"message":"2557","line":129,"column":9,"nodeType":"2447","messageId":"2448","endLine":129,"endColumn":24},{"ruleId":"2445","severity":1,"message":"2558","line":170,"column":9,"nodeType":"2447","messageId":"2448","endLine":170,"endColumn":29},{"ruleId":"2478","severity":1,"message":"2479","line":175,"column":13,"nodeType":"2480","messageId":"2481","endLine":175,"endColumn":15},{"ruleId":"2478","severity":1,"message":"2479","line":183,"column":20,"nodeType":"2480","messageId":"2481","endLine":183,"endColumn":22},{"ruleId":"2478","severity":1,"message":"2479","line":90,"column":46,"nodeType":"2480","messageId":"2481","endLine":90,"endColumn":48},{"ruleId":"2478","severity":1,"message":"2479","line":93,"column":46,"nodeType":"2480","messageId":"2481","endLine":93,"endColumn":48},{"ruleId":"2478","severity":1,"message":"2479","line":96,"column":46,"nodeType":"2480","messageId":"2481","endLine":96,"endColumn":48},{"ruleId":"2445","severity":1,"message":"2458","line":11,"column":8,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2461","line":26,"column":9,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2506","line":28,"column":35,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2497","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2461","line":21,"column":9,"nodeType":"2447","messageId":"2448","endLine":21,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2497","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2461","line":21,"column":9,"nodeType":"2447","messageId":"2448","endLine":21,"endColumn":14},{"ruleId":"2478","severity":1,"message":"2479","line":95,"column":32,"nodeType":"2480","messageId":"2481","endLine":95,"endColumn":34},{"ruleId":"2445","severity":1,"message":"2497","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2461","line":20,"column":9,"nodeType":"2447","messageId":"2448","endLine":20,"endColumn":14},{"ruleId":"2474","severity":1,"message":"2559","line":161,"column":6,"nodeType":"2476","endLine":161,"endColumn":8,"suggestions":"2560"},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2552","line":6,"column":27,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":35},{"ruleId":"2445","severity":1,"message":"2511","line":7,"column":10,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2495","line":11,"column":5,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":13},{"ruleId":"2445","severity":1,"message":"2496","line":12,"column":5,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2497","line":15,"column":5,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2523","line":16,"column":5,"nodeType":"2447","messageId":"2448","endLine":16,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2506","line":31,"column":45,"nodeType":"2447","messageId":"2448","endLine":31,"endColumn":50},{"ruleId":"2445","severity":1,"message":"2510","line":2,"column":17,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":2,"column":27,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2521","line":5,"column":8,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":13},{"ruleId":"2445","severity":1,"message":"2522","line":6,"column":10,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2458","line":12,"column":8,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2461","line":21,"column":9,"nodeType":"2447","messageId":"2448","endLine":21,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2506","line":23,"column":35,"nodeType":"2447","messageId":"2448","endLine":23,"endColumn":40},{"ruleId":"2478","severity":1,"message":"2479","line":56,"column":14,"nodeType":"2480","messageId":"2481","endLine":56,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2496","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":14,"column":3,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":8},{"ruleId":"2474","severity":1,"message":"2488","line":42,"column":6,"nodeType":"2476","endLine":42,"endColumn":16,"suggestions":"2561"},{"ruleId":"2478","severity":1,"message":"2479","line":186,"column":42,"nodeType":"2480","messageId":"2481","endLine":186,"endColumn":44},{"ruleId":"2478","severity":1,"message":"2479","line":186,"column":72,"nodeType":"2480","messageId":"2481","endLine":186,"endColumn":74},{"ruleId":"2478","severity":1,"message":"2479","line":218,"column":39,"nodeType":"2480","messageId":"2481","endLine":218,"endColumn":41},{"ruleId":"2445","severity":1,"message":"2511","line":5,"column":10,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2497","line":13,"column":5,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2528","line":26,"column":12,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2529","line":26,"column":18,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":25},{"ruleId":"2474","severity":1,"message":"2526","line":31,"column":8,"nodeType":"2476","endLine":31,"endColumn":10,"suggestions":"2562"},{"ruleId":"2478","severity":1,"message":"2479","line":105,"column":45,"nodeType":"2480","messageId":"2481","endLine":105,"endColumn":47},{"ruleId":"2451","severity":1,"message":"2452","line":175,"column":1,"nodeType":"2453","messageId":"2454","endLine":190,"endColumn":35},{"ruleId":"2445","severity":1,"message":"2511","line":6,"column":10,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2496","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":14,"column":3,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2523","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":10},{"ruleId":"2474","severity":1,"message":"2524","line":28,"column":6,"nodeType":"2476","endLine":28,"endColumn":10,"suggestions":"2563"},{"ruleId":"2478","severity":1,"message":"2479","line":96,"column":30,"nodeType":"2480","messageId":"2481","endLine":96,"endColumn":32},{"ruleId":"2478","severity":1,"message":"2479","line":98,"column":33,"nodeType":"2480","messageId":"2481","endLine":98,"endColumn":35},{"ruleId":"2478","severity":1,"message":"2479","line":100,"column":35,"nodeType":"2480","messageId":"2481","endLine":100,"endColumn":37},{"ruleId":"2478","severity":1,"message":"2479","line":102,"column":37,"nodeType":"2480","messageId":"2481","endLine":102,"endColumn":39},{"ruleId":"2478","severity":1,"message":"2479","line":105,"column":37,"nodeType":"2480","messageId":"2481","endLine":105,"endColumn":39},{"ruleId":"2478","severity":1,"message":"2479","line":105,"column":34,"nodeType":"2480","messageId":"2481","endLine":105,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":108,"column":34,"nodeType":"2480","messageId":"2481","endLine":108,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":111,"column":34,"nodeType":"2480","messageId":"2481","endLine":111,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":115,"column":34,"nodeType":"2480","messageId":"2481","endLine":115,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2550","line":3,"column":10,"nodeType":"2447","messageId":"2448","endLine":3,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2456","line":4,"column":10,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2457","line":5,"column":13,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2495","line":13,"column":3,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":11},{"ruleId":"2445","severity":1,"message":"2496","line":14,"column":3,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":16,"column":3,"nodeType":"2447","messageId":"2448","endLine":16,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":17,"column":3,"nodeType":"2447","messageId":"2448","endLine":17,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2523","line":18,"column":3,"nodeType":"2447","messageId":"2448","endLine":18,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2564","line":20,"column":8,"nodeType":"2447","messageId":"2448","endLine":20,"endColumn":13},{"ruleId":"2445","severity":1,"message":"2461","line":28,"column":9,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2543","line":36,"column":10,"nodeType":"2447","messageId":"2448","endLine":36,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2551","line":36,"column":18,"nodeType":"2447","messageId":"2448","endLine":36,"endColumn":27},{"ruleId":"2474","severity":1,"message":"2559","line":46,"column":6,"nodeType":"2476","endLine":46,"endColumn":10,"suggestions":"2565"},{"ruleId":"2451","severity":1,"message":"2452","line":269,"column":1,"nodeType":"2453","messageId":"2454","endLine":362,"endColumn":2},{"ruleId":"2445","severity":1,"message":"2495","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":11},{"ruleId":"2445","severity":1,"message":"2496","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2523","line":16,"column":3,"nodeType":"2447","messageId":"2448","endLine":16,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2499","line":21,"column":35,"nodeType":"2447","messageId":"2448","endLine":21,"endColumn":41},{"ruleId":"2474","severity":1,"message":"2566","line":31,"column":6,"nodeType":"2476","endLine":31,"endColumn":8,"suggestions":"2567"},{"ruleId":"2478","severity":1,"message":"2479","line":114,"column":38,"nodeType":"2480","messageId":"2481","endLine":114,"endColumn":40},{"ruleId":"2478","severity":1,"message":"2479","line":115,"column":35,"nodeType":"2480","messageId":"2481","endLine":115,"endColumn":37},{"ruleId":"2478","severity":1,"message":"2479","line":116,"column":32,"nodeType":"2480","messageId":"2481","endLine":116,"endColumn":34},{"ruleId":"2478","severity":1,"message":"2479","line":117,"column":36,"nodeType":"2480","messageId":"2481","endLine":117,"endColumn":38},{"ruleId":"2478","severity":1,"message":"2479","line":118,"column":31,"nodeType":"2480","messageId":"2481","endLine":118,"endColumn":33},{"ruleId":"2445","severity":1,"message":"2456","line":5,"column":10,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2457","line":6,"column":13,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2499","line":27,"column":35,"nodeType":"2447","messageId":"2448","endLine":27,"endColumn":41},{"ruleId":"2445","severity":1,"message":"2487","line":4,"column":10,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2497","line":14,"column":3,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":8},{"ruleId":"2474","severity":1,"message":"2568","line":27,"column":6,"nodeType":"2476","endLine":27,"endColumn":8,"suggestions":"2569"},{"ruleId":"2445","severity":1,"message":"2570","line":78,"column":9,"nodeType":"2447","messageId":"2448","endLine":78,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2487","line":6,"column":10,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2571","line":53,"column":23,"nodeType":"2447","messageId":"2448","endLine":53,"endColumn":43},{"ruleId":"2445","severity":1,"message":"2572","line":54,"column":5,"nodeType":"2447","messageId":"2448","endLine":54,"endColumn":28},{"ruleId":"2474","severity":1,"message":"2573","line":153,"column":6,"nodeType":"2476","endLine":153,"endColumn":8,"suggestions":"2574"},{"ruleId":"2445","severity":1,"message":"2499","line":13,"column":35,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":41},{"ruleId":"2445","severity":1,"message":"2506","line":13,"column":43,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":48},{"ruleId":"2445","severity":1,"message":"2548","line":11,"column":9,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":16},{"ruleId":"2474","severity":1,"message":"2488","line":146,"column":6,"nodeType":"2476","endLine":146,"endColumn":16,"suggestions":"2575"},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2495","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":11},{"ruleId":"2445","severity":1,"message":"2496","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2523","line":16,"column":3,"nodeType":"2447","messageId":"2448","endLine":16,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2461","line":31,"column":9,"nodeType":"2447","messageId":"2448","endLine":31,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2548","line":37,"column":9,"nodeType":"2447","messageId":"2448","endLine":37,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2576","line":52,"column":9,"nodeType":"2447","messageId":"2448","endLine":52,"endColumn":14},{"ruleId":"2474","severity":1,"message":"2577","line":71,"column":6,"nodeType":"2476","endLine":71,"endColumn":8,"suggestions":"2578"},{"ruleId":"2474","severity":1,"message":"2516","line":100,"column":6,"nodeType":"2476","endLine":100,"endColumn":15,"suggestions":"2579"},{"ruleId":"2478","severity":1,"message":"2479","line":124,"column":22,"nodeType":"2480","messageId":"2481","endLine":124,"endColumn":24},{"ruleId":"2445","severity":1,"message":"2461","line":31,"column":9,"nodeType":"2447","messageId":"2448","endLine":31,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2580","line":32,"column":11,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":13},{"ruleId":"2445","severity":1,"message":"2581","line":34,"column":9,"nodeType":"2447","messageId":"2448","endLine":34,"endColumn":16},{"ruleId":"2474","severity":1,"message":"2582","line":55,"column":6,"nodeType":"2476","endLine":55,"endColumn":8,"suggestions":"2583"},{"ruleId":"2478","severity":1,"message":"2479","line":279,"column":33,"nodeType":"2480","messageId":"2481","endLine":279,"endColumn":35},{"ruleId":"2478","severity":1,"message":"2479","line":289,"column":34,"nodeType":"2480","messageId":"2481","endLine":289,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2497","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2461","line":19,"column":9,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":14},{"ruleId":"2474","severity":1,"message":"2584","line":26,"column":6,"nodeType":"2476","endLine":26,"endColumn":8,"suggestions":"2585"},{"ruleId":"2478","severity":1,"message":"2479","line":85,"column":29,"nodeType":"2480","messageId":"2481","endLine":85,"endColumn":31},{"ruleId":"2474","severity":1,"message":"2573","line":115,"column":6,"nodeType":"2476","endLine":115,"endColumn":8,"suggestions":"2586"},{"ruleId":"2478","severity":1,"message":"2479","line":132,"column":34,"nodeType":"2480","messageId":"2481","endLine":132,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":135,"column":34,"nodeType":"2480","messageId":"2481","endLine":135,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":138,"column":34,"nodeType":"2480","messageId":"2481","endLine":138,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":141,"column":34,"nodeType":"2480","messageId":"2481","endLine":141,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":144,"column":34,"nodeType":"2480","messageId":"2481","endLine":144,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2496","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2461","line":25,"column":9,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2464","line":30,"column":10,"nodeType":"2447","messageId":"2448","endLine":30,"endColumn":15},{"ruleId":"2445","severity":1,"message":"2587","line":36,"column":10,"nodeType":"2447","messageId":"2448","endLine":36,"endColumn":15},{"ruleId":"2445","severity":1,"message":"2588","line":36,"column":17,"nodeType":"2447","messageId":"2448","endLine":36,"endColumn":25},{"ruleId":"2474","severity":1,"message":"2516","line":57,"column":6,"nodeType":"2476","endLine":57,"endColumn":8,"suggestions":"2589"},{"ruleId":"2478","severity":1,"message":"2479","line":130,"column":19,"nodeType":"2480","messageId":"2481","endLine":130,"endColumn":21},{"ruleId":"2478","severity":1,"message":"2479","line":134,"column":23,"nodeType":"2480","messageId":"2481","endLine":134,"endColumn":25},{"ruleId":"2478","severity":1,"message":"2590","line":139,"column":25,"nodeType":"2480","messageId":"2481","endLine":139,"endColumn":27},{"ruleId":"2482","severity":1,"message":"2545","line":203,"column":45,"nodeType":"2484","messageId":"2485","endLine":203,"endColumn":47},{"ruleId":"2482","severity":1,"message":"2545","line":216,"column":45,"nodeType":"2484","messageId":"2485","endLine":216,"endColumn":47},{"ruleId":"2478","severity":1,"message":"2479","line":334,"column":32,"nodeType":"2480","messageId":"2481","endLine":334,"endColumn":34},{"ruleId":"2478","severity":1,"message":"2479","line":347,"column":33,"nodeType":"2480","messageId":"2481","endLine":347,"endColumn":35},{"ruleId":"2478","severity":1,"message":"2479","line":363,"column":33,"nodeType":"2480","messageId":"2481","endLine":363,"endColumn":35},{"ruleId":"2445","severity":1,"message":"2458","line":11,"column":8,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2461","line":25,"column":9,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2506","line":26,"column":35,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2497","line":13,"column":5,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2461","line":22,"column":11,"nodeType":"2447","messageId":"2448","endLine":22,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2528","line":26,"column":12,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2529","line":26,"column":18,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":25},{"ruleId":"2474","severity":1,"message":"2526","line":36,"column":8,"nodeType":"2476","endLine":36,"endColumn":10,"suggestions":"2591"},{"ruleId":"2478","severity":1,"message":"2479","line":112,"column":45,"nodeType":"2480","messageId":"2481","endLine":112,"endColumn":47},{"ruleId":"2445","severity":1,"message":"2496","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":14,"column":3,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2523","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2499","line":23,"column":35,"nodeType":"2447","messageId":"2448","endLine":23,"endColumn":41},{"ruleId":"2445","severity":1,"message":"2470","line":23,"column":50,"nodeType":"2447","messageId":"2448","endLine":23,"endColumn":58},{"ruleId":"2474","severity":1,"message":"2566","line":34,"column":6,"nodeType":"2476","endLine":34,"endColumn":8,"suggestions":"2592"},{"ruleId":"2474","severity":1,"message":"2593","line":50,"column":6,"nodeType":"2476","endLine":50,"endColumn":16,"suggestions":"2594"},{"ruleId":"2478","severity":1,"message":"2479","line":138,"column":35,"nodeType":"2480","messageId":"2481","endLine":138,"endColumn":37},{"ruleId":"2478","severity":1,"message":"2479","line":311,"column":26,"nodeType":"2480","messageId":"2481","endLine":311,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":325,"column":26,"nodeType":"2480","messageId":"2481","endLine":325,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":338,"column":26,"nodeType":"2480","messageId":"2481","endLine":338,"endColumn":28},{"ruleId":"2518","severity":1,"message":"2519","line":400,"column":29,"nodeType":"2520","endLine":403,"endColumn":30},{"ruleId":"2445","severity":1,"message":"2496","line":13,"column":3,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":16,"column":3,"nodeType":"2447","messageId":"2448","endLine":16,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2523","line":17,"column":3,"nodeType":"2447","messageId":"2448","endLine":17,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2461","line":31,"column":9,"nodeType":"2447","messageId":"2448","endLine":31,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2534","line":41,"column":11,"nodeType":"2447","messageId":"2448","endLine":41,"endColumn":23},{"ruleId":"2474","severity":1,"message":"2535","line":56,"column":6,"nodeType":"2476","endLine":56,"endColumn":8,"suggestions":"2595"},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2510","line":2,"column":17,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":2,"column":27,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2456","line":8,"column":10,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2457","line":9,"column":13,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2511","line":6,"column":10,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2496","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":14,"column":3,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2523","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":10},{"ruleId":"2474","severity":1,"message":"2524","line":28,"column":6,"nodeType":"2476","endLine":28,"endColumn":10,"suggestions":"2596"},{"ruleId":"2478","severity":1,"message":"2479","line":102,"column":30,"nodeType":"2480","messageId":"2481","endLine":102,"endColumn":32},{"ruleId":"2478","severity":1,"message":"2479","line":104,"column":33,"nodeType":"2480","messageId":"2481","endLine":104,"endColumn":35},{"ruleId":"2478","severity":1,"message":"2479","line":106,"column":35,"nodeType":"2480","messageId":"2481","endLine":106,"endColumn":37},{"ruleId":"2478","severity":1,"message":"2479","line":108,"column":37,"nodeType":"2480","messageId":"2481","endLine":108,"endColumn":39},{"ruleId":"2478","severity":1,"message":"2479","line":111,"column":37,"nodeType":"2480","messageId":"2481","endLine":111,"endColumn":39},{"ruleId":"2474","severity":1,"message":"2573","line":104,"column":8,"nodeType":"2476","endLine":104,"endColumn":10,"suggestions":"2597"},{"ruleId":"2478","severity":1,"message":"2479","line":119,"column":46,"nodeType":"2480","messageId":"2481","endLine":119,"endColumn":48},{"ruleId":"2478","severity":1,"message":"2479","line":122,"column":46,"nodeType":"2480","messageId":"2481","endLine":122,"endColumn":48},{"ruleId":"2478","severity":1,"message":"2479","line":125,"column":46,"nodeType":"2480","messageId":"2481","endLine":125,"endColumn":48},{"ruleId":"2478","severity":1,"message":"2479","line":128,"column":46,"nodeType":"2480","messageId":"2481","endLine":128,"endColumn":48},{"ruleId":"2445","severity":1,"message":"2511","line":6,"column":10,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2496","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":14,"column":3,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2523","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":10},{"ruleId":"2474","severity":1,"message":"2598","line":26,"column":6,"nodeType":"2476","endLine":26,"endColumn":8,"suggestions":"2599"},{"ruleId":"2518","severity":1,"message":"2519","line":86,"column":29,"nodeType":"2520","endLine":89,"endColumn":30},{"ruleId":"2445","severity":1,"message":"2510","line":2,"column":17,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":2,"column":27,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2456","line":8,"column":10,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2457","line":9,"column":13,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2487","line":6,"column":10,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":14,"column":3,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":8},{"ruleId":"2474","severity":1,"message":"2600","line":32,"column":6,"nodeType":"2476","endLine":32,"endColumn":16,"suggestions":"2601"},{"ruleId":"2478","severity":1,"message":"2479","line":290,"column":39,"nodeType":"2480","messageId":"2481","endLine":290,"endColumn":41},{"ruleId":"2445","severity":1,"message":"2510","line":2,"column":17,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":2,"column":27,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2506","line":23,"column":35,"nodeType":"2447","messageId":"2448","endLine":23,"endColumn":40},{"ruleId":"2478","severity":1,"message":"2479","line":59,"column":14,"nodeType":"2480","messageId":"2481","endLine":59,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2458","line":11,"column":8,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2461","line":25,"column":9,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2506","line":26,"column":35,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2496","line":14,"column":3,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":17,"column":3,"nodeType":"2447","messageId":"2448","endLine":17,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2523","line":18,"column":3,"nodeType":"2447","messageId":"2448","endLine":18,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2461","line":36,"column":9,"nodeType":"2447","messageId":"2448","endLine":36,"endColumn":14},{"ruleId":"2474","severity":1,"message":"2535","line":63,"column":6,"nodeType":"2476","endLine":63,"endColumn":12,"suggestions":"2602"},{"ruleId":"2451","severity":1,"message":"2452","line":216,"column":1,"nodeType":"2453","messageId":"2454","endLine":226,"endColumn":32},{"ruleId":"2445","severity":1,"message":"2487","line":6,"column":21,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":25},{"ruleId":"2474","severity":1,"message":"2488","line":125,"column":6,"nodeType":"2476","endLine":125,"endColumn":16,"suggestions":"2603"},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2521","line":4,"column":8,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":13},{"ruleId":"2445","severity":1,"message":"2522","line":5,"column":10,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2487","line":6,"column":10,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2511","line":7,"column":10,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":18},{"ruleId":"2474","severity":1,"message":"2573","line":89,"column":6,"nodeType":"2476","endLine":89,"endColumn":8,"suggestions":"2604"},{"ruleId":"2478","severity":1,"message":"2479","line":104,"column":34,"nodeType":"2480","messageId":"2481","endLine":104,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":107,"column":34,"nodeType":"2480","messageId":"2481","endLine":107,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":110,"column":34,"nodeType":"2480","messageId":"2481","endLine":110,"endColumn":36},{"ruleId":"2605","severity":1,"message":"2606","line":135,"column":1,"nodeType":"2607","endLine":145,"endColumn":3},{"ruleId":"2445","severity":1,"message":"2608","line":3,"column":8,"nodeType":"2447","messageId":"2448","endLine":3,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2523","line":13,"column":3,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2610","line":22,"column":8,"nodeType":"2447","messageId":"2448","endLine":22,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2499","line":32,"column":35,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":41},{"ruleId":"2445","severity":1,"message":"2611","line":33,"column":19,"nodeType":"2447","messageId":"2448","endLine":33,"endColumn":27},{"ruleId":"2445","severity":1,"message":"2612","line":34,"column":10,"nodeType":"2447","messageId":"2448","endLine":34,"endColumn":15},{"ruleId":"2445","severity":1,"message":"2613","line":50,"column":20,"nodeType":"2447","messageId":"2448","endLine":50,"endColumn":31},{"ruleId":"2445","severity":1,"message":"2614","line":51,"column":21,"nodeType":"2447","messageId":"2448","endLine":51,"endColumn":33},{"ruleId":"2445","severity":1,"message":"2615","line":52,"column":24,"nodeType":"2447","messageId":"2448","endLine":52,"endColumn":39},{"ruleId":"2445","severity":1,"message":"2616","line":53,"column":24,"nodeType":"2447","messageId":"2448","endLine":53,"endColumn":39},{"ruleId":"2474","severity":1,"message":"2566","line":57,"column":6,"nodeType":"2476","endLine":57,"endColumn":8,"suggestions":"2617"},{"ruleId":"2478","severity":1,"message":"2479","line":255,"column":40,"nodeType":"2480","messageId":"2481","endLine":255,"endColumn":42},{"ruleId":"2478","severity":1,"message":"2479","line":270,"column":32,"nodeType":"2480","messageId":"2481","endLine":270,"endColumn":34},{"ruleId":"2518","severity":1,"message":"2519","line":272,"column":17,"nodeType":"2520","endLine":275,"endColumn":18},{"ruleId":"2518","severity":1,"message":"2519","line":282,"column":17,"nodeType":"2520","endLine":285,"endColumn":18},{"ruleId":"2478","severity":1,"message":"2479","line":330,"column":36,"nodeType":"2480","messageId":"2481","endLine":330,"endColumn":38},{"ruleId":"2478","severity":1,"message":"2479","line":331,"column":60,"nodeType":"2480","messageId":"2481","endLine":331,"endColumn":62},{"ruleId":"2478","severity":1,"message":"2479","line":333,"column":39,"nodeType":"2480","messageId":"2481","endLine":333,"endColumn":41},{"ruleId":"2478","severity":1,"message":"2479","line":334,"column":36,"nodeType":"2480","messageId":"2481","endLine":334,"endColumn":38},{"ruleId":"2478","severity":1,"message":"2479","line":335,"column":40,"nodeType":"2480","messageId":"2481","endLine":335,"endColumn":42},{"ruleId":"2478","severity":1,"message":"2479","line":355,"column":44,"nodeType":"2480","messageId":"2481","endLine":355,"endColumn":46},{"ruleId":"2478","severity":1,"message":"2479","line":356,"column":43,"nodeType":"2480","messageId":"2481","endLine":356,"endColumn":45},{"ruleId":"2478","severity":1,"message":"2479","line":357,"column":40,"nodeType":"2480","messageId":"2481","endLine":357,"endColumn":42},{"ruleId":"2478","severity":1,"message":"2479","line":358,"column":44,"nodeType":"2480","messageId":"2481","endLine":358,"endColumn":46},{"ruleId":"2478","severity":1,"message":"2479","line":359,"column":34,"nodeType":"2480","messageId":"2481","endLine":359,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":589,"column":22,"nodeType":"2480","messageId":"2481","endLine":589,"endColumn":24},{"ruleId":"2445","severity":1,"message":"2548","line":20,"column":11,"nodeType":"2447","messageId":"2448","endLine":20,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2499","line":23,"column":37,"nodeType":"2447","messageId":"2448","endLine":23,"endColumn":43},{"ruleId":"2445","severity":1,"message":"2611","line":24,"column":21,"nodeType":"2447","messageId":"2448","endLine":24,"endColumn":29},{"ruleId":"2445","severity":1,"message":"2612","line":25,"column":12,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2580","line":27,"column":12,"nodeType":"2447","messageId":"2448","endLine":27,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2618","line":27,"column":16,"nodeType":"2447","messageId":"2448","endLine":27,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2619","line":28,"column":12,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2620","line":28,"column":21,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":31},{"ruleId":"2445","severity":1,"message":"2621","line":32,"column":12,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2622","line":35,"column":12,"nodeType":"2447","messageId":"2448","endLine":35,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2623","line":35,"column":18,"nodeType":"2447","messageId":"2448","endLine":35,"endColumn":25},{"ruleId":"2474","severity":1,"message":"2566","line":44,"column":8,"nodeType":"2476","endLine":44,"endColumn":10,"suggestions":"2624"},{"ruleId":"2445","severity":1,"message":"2625","line":106,"column":11,"nodeType":"2447","messageId":"2448","endLine":106,"endColumn":27},{"ruleId":"2478","severity":1,"message":"2479","line":242,"column":48,"nodeType":"2480","messageId":"2481","endLine":242,"endColumn":50},{"ruleId":"2445","severity":1,"message":"2548","line":18,"column":11,"nodeType":"2447","messageId":"2448","endLine":18,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2499","line":21,"column":37,"nodeType":"2447","messageId":"2448","endLine":21,"endColumn":43},{"ruleId":"2445","severity":1,"message":"2611","line":22,"column":21,"nodeType":"2447","messageId":"2448","endLine":22,"endColumn":29},{"ruleId":"2445","severity":1,"message":"2612","line":23,"column":12,"nodeType":"2447","messageId":"2448","endLine":23,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2580","line":25,"column":12,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2618","line":25,"column":16,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2619","line":26,"column":12,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2620","line":26,"column":21,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":31},{"ruleId":"2445","severity":1,"message":"2622","line":33,"column":12,"nodeType":"2447","messageId":"2448","endLine":33,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2623","line":33,"column":18,"nodeType":"2447","messageId":"2448","endLine":33,"endColumn":25},{"ruleId":"2474","severity":1,"message":"2566","line":42,"column":8,"nodeType":"2476","endLine":42,"endColumn":10,"suggestions":"2626"},{"ruleId":"2445","severity":1,"message":"2625","line":104,"column":11,"nodeType":"2447","messageId":"2448","endLine":104,"endColumn":27},{"ruleId":"2478","severity":1,"message":"2479","line":240,"column":48,"nodeType":"2480","messageId":"2481","endLine":240,"endColumn":50},{"ruleId":"2445","severity":1,"message":"2496","line":6,"column":3,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":7,"column":3,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":8,"column":3,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":8},{"ruleId":"2474","severity":1,"message":"2627","line":23,"column":6,"nodeType":"2476","endLine":23,"endColumn":8,"suggestions":"2628"},{"ruleId":"2445","severity":1,"message":"2496","line":6,"column":3,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":7,"column":3,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":8,"column":3,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":8},{"ruleId":"2474","severity":1,"message":"2629","line":23,"column":6,"nodeType":"2476","endLine":23,"endColumn":8,"suggestions":"2630"},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2631","line":2,"column":10,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2487","line":2,"column":22,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":26},{"ruleId":"2445","severity":1,"message":"2632","line":6,"column":8,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":23},{"ruleId":"2445","severity":1,"message":"2633","line":7,"column":8,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":26},{"ruleId":"2445","severity":1,"message":"2634","line":8,"column":8,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2635","line":9,"column":8,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":22},{"ruleId":"2451","severity":1,"message":"2452","line":205,"column":1,"nodeType":"2453","messageId":"2454","endLine":227,"endColumn":2},{"ruleId":"2451","severity":1,"message":"2452","line":229,"column":1,"nodeType":"2453","messageId":"2454","endLine":275,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":5,"column":38,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":47},{"ruleId":"2445","severity":1,"message":"2541","line":5,"column":49,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":52},{"ruleId":"2445","severity":1,"message":"2542","line":5,"column":54,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":57},{"ruleId":"2445","severity":1,"message":"2612","line":18,"column":12,"nodeType":"2447","messageId":"2448","endLine":18,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2580","line":19,"column":12,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2636","line":22,"column":11,"nodeType":"2447","messageId":"2448","endLine":22,"endColumn":22},{"ruleId":"2474","severity":1,"message":"2637","line":30,"column":8,"nodeType":"2476","endLine":30,"endColumn":10,"suggestions":"2638"},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":5,"column":38,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":47},{"ruleId":"2445","severity":1,"message":"2541","line":5,"column":49,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":52},{"ruleId":"2445","severity":1,"message":"2542","line":5,"column":54,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":57},{"ruleId":"2445","severity":1,"message":"2612","line":17,"column":12,"nodeType":"2447","messageId":"2448","endLine":17,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2580","line":18,"column":12,"nodeType":"2447","messageId":"2448","endLine":18,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2636","line":21,"column":11,"nodeType":"2447","messageId":"2448","endLine":21,"endColumn":22},{"ruleId":"2474","severity":1,"message":"2637","line":29,"column":8,"nodeType":"2476","endLine":29,"endColumn":10,"suggestions":"2639"},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":5,"column":38,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":47},{"ruleId":"2445","severity":1,"message":"2541","line":5,"column":49,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":52},{"ruleId":"2445","severity":1,"message":"2542","line":5,"column":54,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":57},{"ruleId":"2445","severity":1,"message":"2612","line":18,"column":12,"nodeType":"2447","messageId":"2448","endLine":18,"endColumn":17},{"ruleId":"2474","severity":1,"message":"2637","line":30,"column":8,"nodeType":"2476","endLine":30,"endColumn":10,"suggestions":"2640"},{"ruleId":"2478","severity":1,"message":"2479","line":136,"column":50,"nodeType":"2480","messageId":"2481","endLine":136,"endColumn":52},{"ruleId":"2478","severity":1,"message":"2479","line":147,"column":53,"nodeType":"2480","messageId":"2481","endLine":147,"endColumn":55},{"ruleId":"2478","severity":1,"message":"2479","line":160,"column":44,"nodeType":"2480","messageId":"2481","endLine":160,"endColumn":46},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":5,"column":38,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":47},{"ruleId":"2445","severity":1,"message":"2541","line":5,"column":49,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":52},{"ruleId":"2445","severity":1,"message":"2542","line":5,"column":54,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":57},{"ruleId":"2445","severity":1,"message":"2612","line":20,"column":12,"nodeType":"2447","messageId":"2448","endLine":20,"endColumn":17},{"ruleId":"2474","severity":1,"message":"2637","line":32,"column":8,"nodeType":"2476","endLine":32,"endColumn":10,"suggestions":"2641"},{"ruleId":"2478","severity":1,"message":"2479","line":130,"column":44,"nodeType":"2480","messageId":"2481","endLine":130,"endColumn":46},{"ruleId":"2478","severity":1,"message":"2479","line":136,"column":48,"nodeType":"2480","messageId":"2481","endLine":136,"endColumn":50},{"ruleId":"2478","severity":1,"message":"2479","line":141,"column":52,"nodeType":"2480","messageId":"2481","endLine":141,"endColumn":54},{"ruleId":"2478","severity":1,"message":"2479","line":165,"column":50,"nodeType":"2480","messageId":"2481","endLine":165,"endColumn":52},{"ruleId":"2478","severity":1,"message":"2479","line":176,"column":53,"nodeType":"2480","messageId":"2481","endLine":176,"endColumn":55},{"ruleId":"2478","severity":1,"message":"2479","line":189,"column":44,"nodeType":"2480","messageId":"2481","endLine":189,"endColumn":46},{"ruleId":"2451","severity":1,"message":"2452","line":261,"column":1,"nodeType":"2453","messageId":"2454","endLine":271,"endColumn":39},{"ruleId":"2445","severity":1,"message":"2487","line":4,"column":10,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2642","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2643","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2613","line":38,"column":20,"nodeType":"2447","messageId":"2448","endLine":38,"endColumn":31},{"ruleId":"2445","severity":1,"message":"2614","line":39,"column":21,"nodeType":"2447","messageId":"2448","endLine":39,"endColumn":33},{"ruleId":"2445","severity":1,"message":"2615","line":40,"column":24,"nodeType":"2447","messageId":"2448","endLine":40,"endColumn":39},{"ruleId":"2445","severity":1,"message":"2616","line":41,"column":24,"nodeType":"2447","messageId":"2448","endLine":41,"endColumn":39},{"ruleId":"2445","severity":1,"message":"2644","line":50,"column":23,"nodeType":"2447","messageId":"2448","endLine":50,"endColumn":37},{"ruleId":"2474","severity":1,"message":"2645","line":56,"column":6,"nodeType":"2476","endLine":56,"endColumn":8,"suggestions":"2646"},{"ruleId":"2647","severity":1,"message":"2648","line":243,"column":17,"nodeType":"2447","messageId":"2649","endLine":243,"endColumn":20},{"ruleId":"2647","severity":1,"message":"2648","line":308,"column":17,"nodeType":"2447","messageId":"2649","endLine":308,"endColumn":20},{"ruleId":"2482","severity":1,"message":"2483","line":322,"column":26,"nodeType":"2484","messageId":"2485","endLine":322,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":323,"column":21,"nodeType":"2480","messageId":"2481","endLine":323,"endColumn":23},{"ruleId":"2647","severity":1,"message":"2650","line":331,"column":13,"nodeType":"2447","messageId":"2649","endLine":331,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2651","line":35,"column":9,"nodeType":"2447","messageId":"2448","endLine":35,"endColumn":10},{"ruleId":"2605","severity":1,"message":"2606","line":48,"column":1,"nodeType":"2607","endLine":53,"endColumn":3},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2493","line":2,"column":41,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":52},{"ruleId":"2445","severity":1,"message":"2461","line":11,"column":9,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2506","line":12,"column":35,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2493","line":2,"column":41,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":52},{"ruleId":"2445","severity":1,"message":"2461","line":14,"column":9,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2506","line":15,"column":35,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2487","line":3,"column":10,"nodeType":"2447","messageId":"2448","endLine":3,"endColumn":14},{"ruleId":"2652","severity":1,"message":"2653","line":35,"column":15,"nodeType":"2447","messageId":"2654","endLine":35,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2655","line":3,"column":10,"nodeType":"2447","messageId":"2448","endLine":3,"endColumn":15},{"ruleId":"2656","severity":1,"message":"2657","line":33,"column":15,"nodeType":"2520","endLine":33,"endColumn":48},{"ruleId":"2445","severity":1,"message":"2499","line":9,"column":35,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":41},{"ruleId":"2445","severity":1,"message":"2658","line":11,"column":11,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":18},{"ruleId":"2478","severity":1,"message":"2479","line":86,"column":15,"nodeType":"2480","messageId":"2481","endLine":86,"endColumn":17},{"ruleId":"2478","severity":1,"message":"2479","line":105,"column":30,"nodeType":"2480","messageId":"2481","endLine":105,"endColumn":32},{"ruleId":"2478","severity":1,"message":"2479","line":124,"column":33,"nodeType":"2480","messageId":"2481","endLine":124,"endColumn":35},{"ruleId":"2478","severity":1,"message":"2479","line":142,"column":23,"nodeType":"2480","messageId":"2481","endLine":142,"endColumn":25},{"ruleId":"2478","severity":1,"message":"2479","line":162,"column":18,"nodeType":"2480","messageId":"2481","endLine":162,"endColumn":20},{"ruleId":"2478","severity":1,"message":"2479","line":182,"column":28,"nodeType":"2480","messageId":"2481","endLine":182,"endColumn":30},{"ruleId":"2478","severity":1,"message":"2479","line":201,"column":26,"nodeType":"2480","messageId":"2481","endLine":201,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":220,"column":26,"nodeType":"2480","messageId":"2481","endLine":220,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":240,"column":20,"nodeType":"2480","messageId":"2481","endLine":240,"endColumn":22},{"ruleId":"2478","severity":1,"message":"2479","line":259,"column":20,"nodeType":"2480","messageId":"2481","endLine":259,"endColumn":22},{"ruleId":"2478","severity":1,"message":"2479","line":274,"column":14,"nodeType":"2480","messageId":"2481","endLine":274,"endColumn":16},{"ruleId":"2478","severity":1,"message":"2479","line":289,"column":16,"nodeType":"2480","messageId":"2481","endLine":289,"endColumn":18},{"ruleId":"2478","severity":1,"message":"2479","line":402,"column":26,"nodeType":"2480","messageId":"2481","endLine":402,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":416,"column":41,"nodeType":"2480","messageId":"2481","endLine":416,"endColumn":43},{"ruleId":"2478","severity":1,"message":"2479","line":431,"column":34,"nodeType":"2480","messageId":"2481","endLine":431,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":446,"column":29,"nodeType":"2480","messageId":"2481","endLine":446,"endColumn":31},{"ruleId":"2478","severity":1,"message":"2479","line":460,"column":39,"nodeType":"2480","messageId":"2481","endLine":460,"endColumn":41},{"ruleId":"2478","severity":1,"message":"2479","line":473,"column":31,"nodeType":"2480","messageId":"2481","endLine":473,"endColumn":33},{"ruleId":"2478","severity":1,"message":"2479","line":486,"column":31,"nodeType":"2480","messageId":"2481","endLine":486,"endColumn":33},{"ruleId":"2445","severity":1,"message":"2499","line":9,"column":35,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":41},{"ruleId":"2445","severity":1,"message":"2659","line":25,"column":5,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":15},{"ruleId":"2478","severity":1,"message":"2479","line":89,"column":18,"nodeType":"2480","messageId":"2481","endLine":89,"endColumn":20},{"ruleId":"2478","severity":1,"message":"2479","line":107,"column":30,"nodeType":"2480","messageId":"2481","endLine":107,"endColumn":32},{"ruleId":"2478","severity":1,"message":"2479","line":126,"column":25,"nodeType":"2480","messageId":"2481","endLine":126,"endColumn":27},{"ruleId":"2478","severity":1,"message":"2479","line":144,"column":23,"nodeType":"2480","messageId":"2481","endLine":144,"endColumn":25},{"ruleId":"2478","severity":1,"message":"2479","line":160,"column":28,"nodeType":"2480","messageId":"2481","endLine":160,"endColumn":30},{"ruleId":"2478","severity":1,"message":"2479","line":179,"column":21,"nodeType":"2480","messageId":"2481","endLine":179,"endColumn":23},{"ruleId":"2478","severity":1,"message":"2479","line":198,"column":28,"nodeType":"2480","messageId":"2481","endLine":198,"endColumn":30},{"ruleId":"2478","severity":1,"message":"2479","line":218,"column":23,"nodeType":"2480","messageId":"2481","endLine":218,"endColumn":25},{"ruleId":"2478","severity":1,"message":"2479","line":336,"column":29,"nodeType":"2480","messageId":"2481","endLine":336,"endColumn":31},{"ruleId":"2478","severity":1,"message":"2479","line":350,"column":36,"nodeType":"2480","messageId":"2481","endLine":350,"endColumn":38},{"ruleId":"2478","severity":1,"message":"2479","line":366,"column":34,"nodeType":"2480","messageId":"2481","endLine":366,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":379,"column":32,"nodeType":"2480","messageId":"2481","endLine":379,"endColumn":34},{"ruleId":"2478","severity":1,"message":"2479","line":393,"column":39,"nodeType":"2480","messageId":"2481","endLine":393,"endColumn":41},{"ruleId":"2478","severity":1,"message":"2479","line":406,"column":34,"nodeType":"2480","messageId":"2481","endLine":406,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2461","line":13,"column":9,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2660","line":3,"column":8,"nodeType":"2447","messageId":"2448","endLine":3,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2521","line":4,"column":8,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":13},{"ruleId":"2478","severity":1,"message":"2479","line":122,"column":35,"nodeType":"2480","messageId":"2481","endLine":122,"endColumn":37},{"ruleId":"2478","severity":1,"message":"2479","line":125,"column":37,"nodeType":"2480","messageId":"2481","endLine":125,"endColumn":39},{"ruleId":"2478","severity":1,"message":"2479","line":128,"column":39,"nodeType":"2480","messageId":"2481","endLine":128,"endColumn":41},{"ruleId":"2478","severity":1,"message":"2479","line":144,"column":31,"nodeType":"2480","messageId":"2481","endLine":144,"endColumn":33},{"ruleId":"2478","severity":1,"message":"2479","line":158,"column":33,"nodeType":"2480","messageId":"2481","endLine":158,"endColumn":35},{"ruleId":"2478","severity":1,"message":"2479","line":185,"column":33,"nodeType":"2480","messageId":"2481","endLine":185,"endColumn":35},{"ruleId":"2478","severity":1,"message":"2479","line":186,"column":33,"nodeType":"2480","messageId":"2481","endLine":186,"endColumn":35},{"ruleId":"2478","severity":1,"message":"2479","line":187,"column":34,"nodeType":"2480","messageId":"2481","endLine":187,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":226,"column":29,"nodeType":"2480","messageId":"2481","endLine":226,"endColumn":31},{"ruleId":"2478","severity":1,"message":"2479","line":33,"column":33,"nodeType":"2480","messageId":"2481","endLine":33,"endColumn":35},{"ruleId":"2518","severity":1,"message":"2519","line":37,"column":23,"nodeType":"2520","endLine":40,"endColumn":24},{"ruleId":"2445","severity":1,"message":"2499","line":10,"column":35,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":41},{"ruleId":"2478","severity":1,"message":"2479","line":74,"column":25,"nodeType":"2480","messageId":"2481","endLine":74,"endColumn":27},{"ruleId":"2478","severity":1,"message":"2479","line":91,"column":28,"nodeType":"2480","messageId":"2481","endLine":91,"endColumn":30},{"ruleId":"2478","severity":1,"message":"2479","line":108,"column":18,"nodeType":"2480","messageId":"2481","endLine":108,"endColumn":20},{"ruleId":"2478","severity":1,"message":"2479","line":223,"column":29,"nodeType":"2480","messageId":"2481","endLine":223,"endColumn":31},{"ruleId":"2445","severity":1,"message":"2661","line":10,"column":11,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":17},{"ruleId":"2518","severity":1,"message":"2519","line":61,"column":45,"nodeType":"2520","endLine":64,"endColumn":46},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2550","line":3,"column":10,"nodeType":"2447","messageId":"2448","endLine":3,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2511","line":6,"column":10,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2456","line":7,"column":10,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2662","line":9,"column":8,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2487","line":11,"column":10,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2631","line":11,"column":16,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":26},{"ruleId":"2445","severity":1,"message":"2663","line":15,"column":7,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":13},{"ruleId":"2474","severity":1,"message":"2664","line":40,"column":6,"nodeType":"2476","endLine":40,"endColumn":14,"suggestions":"2665"},{"ruleId":"2445","severity":1,"message":"2666","line":85,"column":15,"nodeType":"2447","messageId":"2448","endLine":85,"endColumn":23},{"ruleId":"2518","severity":1,"message":"2519","line":120,"column":27,"nodeType":"2520","endLine":123,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":131,"column":38,"nodeType":"2480","messageId":"2481","endLine":131,"endColumn":40},{"ruleId":"2667","severity":1,"message":"2668","line":131,"column":43,"nodeType":"2669","messageId":"2670","endLine":131,"endColumn":45},{"ruleId":"2667","severity":1,"message":"2668","line":131,"column":61,"nodeType":"2669","messageId":"2670","endLine":131,"endColumn":63},{"ruleId":"2667","severity":1,"message":"2671","line":131,"column":61,"nodeType":"2669","messageId":"2670","endLine":131,"endColumn":63},{"ruleId":"2478","severity":1,"message":"2479","line":131,"column":78,"nodeType":"2480","messageId":"2481","endLine":131,"endColumn":80},{"ruleId":"2667","severity":1,"message":"2671","line":131,"column":83,"nodeType":"2669","messageId":"2670","endLine":131,"endColumn":85},{"ruleId":"2478","severity":1,"message":"2479","line":134,"column":37,"nodeType":"2480","messageId":"2481","endLine":134,"endColumn":39},{"ruleId":"2478","severity":1,"message":"2479","line":137,"column":38,"nodeType":"2480","messageId":"2481","endLine":137,"endColumn":40},{"ruleId":"2478","severity":1,"message":"2479","line":165,"column":40,"nodeType":"2480","messageId":"2481","endLine":165,"endColumn":42},{"ruleId":"2478","severity":1,"message":"2479","line":175,"column":42,"nodeType":"2480","messageId":"2481","endLine":175,"endColumn":44},{"ruleId":"2445","severity":1,"message":"2672","line":10,"column":5,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2673","line":13,"column":11,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":27},{"ruleId":"2445","severity":1,"message":"2674","line":15,"column":9,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":18},{"ruleId":"2478","severity":1,"message":"2479","line":101,"column":38,"nodeType":"2480","messageId":"2481","endLine":101,"endColumn":40},{"ruleId":"2478","severity":1,"message":"2479","line":102,"column":37,"nodeType":"2480","messageId":"2481","endLine":102,"endColumn":39},{"ruleId":"2478","severity":1,"message":"2479","line":103,"column":34,"nodeType":"2480","messageId":"2481","endLine":103,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":104,"column":38,"nodeType":"2480","messageId":"2481","endLine":104,"endColumn":40},{"ruleId":"2478","severity":1,"message":"2479","line":105,"column":33,"nodeType":"2480","messageId":"2481","endLine":105,"endColumn":35},{"ruleId":"2518","severity":1,"message":"2519","line":120,"column":27,"nodeType":"2520","endLine":123,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":128,"column":42,"nodeType":"2480","messageId":"2481","endLine":128,"endColumn":44},{"ruleId":"2667","severity":1,"message":"2668","line":128,"column":47,"nodeType":"2669","messageId":"2670","endLine":128,"endColumn":49},{"ruleId":"2667","severity":1,"message":"2668","line":128,"column":65,"nodeType":"2669","messageId":"2670","endLine":128,"endColumn":67},{"ruleId":"2667","severity":1,"message":"2671","line":128,"column":65,"nodeType":"2669","messageId":"2670","endLine":128,"endColumn":67},{"ruleId":"2478","severity":1,"message":"2479","line":128,"column":82,"nodeType":"2480","messageId":"2481","endLine":128,"endColumn":84},{"ruleId":"2667","severity":1,"message":"2671","line":128,"column":87,"nodeType":"2669","messageId":"2670","endLine":128,"endColumn":89},{"ruleId":"2451","severity":1,"message":"2452","line":163,"column":1,"nodeType":"2453","messageId":"2454","endLine":174,"endColumn":33},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2493","line":2,"column":41,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":52},{"ruleId":"2445","severity":1,"message":"2461","line":20,"column":9,"nodeType":"2447","messageId":"2448","endLine":20,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2548","line":21,"column":9,"nodeType":"2447","messageId":"2448","endLine":21,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2675","line":23,"column":15,"nodeType":"2447","messageId":"2448","endLine":23,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2676","line":24,"column":20,"nodeType":"2447","messageId":"2448","endLine":24,"endColumn":37},{"ruleId":"2445","severity":1,"message":"2677","line":25,"column":15,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":26},{"ruleId":"2445","severity":1,"message":"2507","line":25,"column":28,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2678","line":25,"column":42,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":55},{"ruleId":"2478","severity":1,"message":"2479","line":90,"column":31,"nodeType":"2480","messageId":"2481","endLine":90,"endColumn":33},{"ruleId":"2478","severity":1,"message":"2479","line":103,"column":33,"nodeType":"2480","messageId":"2481","endLine":103,"endColumn":35},{"ruleId":"2478","severity":1,"message":"2479","line":121,"column":31,"nodeType":"2480","messageId":"2481","endLine":121,"endColumn":33},{"ruleId":"2451","severity":1,"message":"2452","line":149,"column":1,"nodeType":"2453","messageId":"2454","endLine":168,"endColumn":22},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2518","severity":1,"message":"2519","line":70,"column":21,"nodeType":"2520","endLine":73,"endColumn":22},{"ruleId":"2478","severity":1,"message":"2479","line":117,"column":30,"nodeType":"2480","messageId":"2481","endLine":117,"endColumn":32},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2493","line":2,"column":41,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":52},{"ruleId":"2445","severity":1,"message":"2511","line":6,"column":10,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2506","line":23,"column":35,"nodeType":"2447","messageId":"2448","endLine":23,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2493","line":4,"column":41,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":52},{"ruleId":"2474","severity":1,"message":"2679","line":12,"column":6,"nodeType":"2476","endLine":12,"endColumn":11,"suggestions":"2680"},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2493","line":2,"column":41,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":52},{"ruleId":"2445","severity":1,"message":"2548","line":17,"column":9,"nodeType":"2447","messageId":"2448","endLine":17,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2494","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":6,"column":5,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2541","line":7,"column":5,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2542","line":8,"column":5,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2497","line":9,"column":5,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":10},{"ruleId":"2474","severity":1,"message":"2681","line":28,"column":8,"nodeType":"2476","endLine":28,"endColumn":10,"suggestions":"2682"},{"ruleId":"2478","severity":1,"message":"2479","line":136,"column":44,"nodeType":"2480","messageId":"2481","endLine":136,"endColumn":46},{"ruleId":"2478","severity":1,"message":"2479","line":142,"column":48,"nodeType":"2480","messageId":"2481","endLine":142,"endColumn":50},{"ruleId":"2478","severity":1,"message":"2479","line":147,"column":52,"nodeType":"2480","messageId":"2481","endLine":147,"endColumn":54},{"ruleId":"2478","severity":1,"message":"2479","line":176,"column":48,"nodeType":"2480","messageId":"2481","endLine":176,"endColumn":50},{"ruleId":"2445","severity":1,"message":"2683","line":2,"column":19,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":32},{"ruleId":"2445","severity":1,"message":"2496","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":14,"column":3,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2684","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2456","line":17,"column":10,"nodeType":"2447","messageId":"2448","endLine":17,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2662","line":19,"column":8,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2663","line":25,"column":7,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":13},{"ruleId":"2445","severity":1,"message":"2461","line":36,"column":9,"nodeType":"2447","messageId":"2448","endLine":36,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2464","line":47,"column":10,"nodeType":"2447","messageId":"2448","endLine":47,"endColumn":15},{"ruleId":"2445","severity":1,"message":"2588","line":55,"column":17,"nodeType":"2447","messageId":"2448","endLine":55,"endColumn":25},{"ruleId":"2474","severity":1,"message":"2685","line":85,"column":6,"nodeType":"2476","endLine":85,"endColumn":8,"suggestions":"2686"},{"ruleId":"2478","severity":1,"message":"2479","line":123,"column":19,"nodeType":"2480","messageId":"2481","endLine":123,"endColumn":21},{"ruleId":"2478","severity":1,"message":"2479","line":133,"column":23,"nodeType":"2480","messageId":"2481","endLine":133,"endColumn":25},{"ruleId":"2478","severity":1,"message":"2590","line":140,"column":25,"nodeType":"2480","messageId":"2481","endLine":140,"endColumn":27},{"ruleId":"2482","severity":1,"message":"2545","line":197,"column":45,"nodeType":"2484","messageId":"2485","endLine":197,"endColumn":47},{"ruleId":"2482","severity":1,"message":"2545","line":210,"column":45,"nodeType":"2484","messageId":"2485","endLine":210,"endColumn":47},{"ruleId":"2478","severity":1,"message":"2479","line":330,"column":32,"nodeType":"2480","messageId":"2481","endLine":330,"endColumn":34},{"ruleId":"2478","severity":1,"message":"2479","line":343,"column":33,"nodeType":"2480","messageId":"2481","endLine":343,"endColumn":35},{"ruleId":"2478","severity":1,"message":"2479","line":369,"column":33,"nodeType":"2480","messageId":"2481","endLine":369,"endColumn":35},{"ruleId":"2451","severity":1,"message":"2452","line":833,"column":1,"nodeType":"2453","messageId":"2454","endLine":867,"endColumn":23},{"ruleId":"2451","severity":1,"message":"2452","line":874,"column":1,"nodeType":"2453","messageId":"2454","endLine":888,"endColumn":2},{"ruleId":"2445","severity":1,"message":"2687","line":5,"column":10,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2631","line":5,"column":21,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":31},{"ruleId":"2445","severity":1,"message":"2496","line":6,"column":3,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":7,"column":3,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":8,"column":3,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":8},{"ruleId":"2474","severity":1,"message":"2681","line":27,"column":6,"nodeType":"2476","endLine":27,"endColumn":8,"suggestions":"2688"},{"ruleId":"2478","severity":1,"message":"2479","line":135,"column":28,"nodeType":"2480","messageId":"2481","endLine":135,"endColumn":30},{"ruleId":"2445","severity":1,"message":"2496","line":6,"column":3,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":7,"column":3,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":8,"column":3,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":8},{"ruleId":"2474","severity":1,"message":"2681","line":27,"column":6,"nodeType":"2476","endLine":27,"endColumn":8,"suggestions":"2689"},{"ruleId":"2478","severity":1,"message":"2479","line":135,"column":28,"nodeType":"2480","messageId":"2481","endLine":135,"endColumn":30},{"ruleId":"2478","severity":1,"message":"2479","line":140,"column":30,"nodeType":"2480","messageId":"2481","endLine":140,"endColumn":32},{"ruleId":"2478","severity":1,"message":"2479","line":145,"column":32,"nodeType":"2480","messageId":"2481","endLine":145,"endColumn":34},{"ruleId":"2445","severity":1,"message":"2496","line":6,"column":3,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":7,"column":3,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":8,"column":3,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":8},{"ruleId":"2474","severity":1,"message":"2681","line":29,"column":6,"nodeType":"2476","endLine":29,"endColumn":8,"suggestions":"2690"},{"ruleId":"2478","severity":1,"message":"2479","line":137,"column":28,"nodeType":"2480","messageId":"2481","endLine":137,"endColumn":30},{"ruleId":"2478","severity":1,"message":"2479","line":142,"column":30,"nodeType":"2480","messageId":"2481","endLine":142,"endColumn":32},{"ruleId":"2478","severity":1,"message":"2479","line":147,"column":32,"nodeType":"2480","messageId":"2481","endLine":147,"endColumn":34},{"ruleId":"2445","severity":1,"message":"2631","line":4,"column":16,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":26},{"ruleId":"2474","severity":1,"message":"2691","line":40,"column":6,"nodeType":"2476","endLine":40,"endColumn":8,"suggestions":"2692"},{"ruleId":"2451","severity":1,"message":"2452","line":254,"column":1,"nodeType":"2453","messageId":"2454","endLine":256,"endColumn":2},{"ruleId":"2445","severity":1,"message":"2496","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2478","severity":1,"message":"2479","line":125,"column":28,"nodeType":"2480","messageId":"2481","endLine":125,"endColumn":30},{"ruleId":"2478","severity":1,"message":"2479","line":131,"column":30,"nodeType":"2480","messageId":"2481","endLine":131,"endColumn":32},{"ruleId":"2478","severity":1,"message":"2479","line":136,"column":32,"nodeType":"2480","messageId":"2481","endLine":136,"endColumn":34},{"ruleId":"2451","severity":1,"message":"2452","line":218,"column":1,"nodeType":"2453","messageId":"2454","endLine":227,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2496","line":8,"column":3,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2550","line":13,"column":10,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2693","line":15,"column":10,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2687","line":16,"column":16,"nodeType":"2447","messageId":"2448","endLine":16,"endColumn":25},{"ruleId":"2478","severity":1,"message":"2479","line":128,"column":28,"nodeType":"2480","messageId":"2481","endLine":128,"endColumn":30},{"ruleId":"2478","severity":1,"message":"2479","line":133,"column":30,"nodeType":"2480","messageId":"2481","endLine":133,"endColumn":32},{"ruleId":"2478","severity":1,"message":"2479","line":137,"column":32,"nodeType":"2480","messageId":"2481","endLine":137,"endColumn":34},{"ruleId":"2445","severity":1,"message":"2496","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2694","line":28,"column":11,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":23},{"ruleId":"2445","severity":1,"message":"2695","line":28,"column":25,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":33},{"ruleId":"2445","severity":1,"message":"2499","line":28,"column":35,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":41},{"ruleId":"2445","severity":1,"message":"2506","line":28,"column":43,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":48},{"ruleId":"2445","severity":1,"message":"2696","line":29,"column":11,"nodeType":"2447","messageId":"2448","endLine":29,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2611","line":29,"column":19,"nodeType":"2447","messageId":"2448","endLine":29,"endColumn":27},{"ruleId":"2445","severity":1,"message":"2697","line":32,"column":10,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":22},{"ruleId":"2445","severity":1,"message":"2698","line":32,"column":24,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":39},{"ruleId":"2478","severity":1,"message":"2479","line":144,"column":28,"nodeType":"2480","messageId":"2481","endLine":144,"endColumn":30},{"ruleId":"2451","severity":1,"message":"2452","line":258,"column":1,"nodeType":"2453","messageId":"2454","endLine":264,"endColumn":2},{"ruleId":"2445","severity":1,"message":"2487","line":4,"column":10,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2642","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2643","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2699","line":27,"column":10,"nodeType":"2447","messageId":"2448","endLine":27,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2613","line":41,"column":20,"nodeType":"2447","messageId":"2448","endLine":41,"endColumn":31},{"ruleId":"2445","severity":1,"message":"2614","line":42,"column":21,"nodeType":"2447","messageId":"2448","endLine":42,"endColumn":33},{"ruleId":"2445","severity":1,"message":"2615","line":43,"column":24,"nodeType":"2447","messageId":"2448","endLine":43,"endColumn":39},{"ruleId":"2445","severity":1,"message":"2616","line":44,"column":24,"nodeType":"2447","messageId":"2448","endLine":44,"endColumn":39},{"ruleId":"2445","severity":1,"message":"2644","line":54,"column":23,"nodeType":"2447","messageId":"2448","endLine":54,"endColumn":37},{"ruleId":"2474","severity":1,"message":"2700","line":60,"column":6,"nodeType":"2476","endLine":60,"endColumn":8,"suggestions":"2701"},{"ruleId":"2647","severity":1,"message":"2648","line":270,"column":17,"nodeType":"2447","messageId":"2649","endLine":270,"endColumn":20},{"ruleId":"2647","severity":1,"message":"2648","line":335,"column":17,"nodeType":"2447","messageId":"2649","endLine":335,"endColumn":20},{"ruleId":"2482","severity":1,"message":"2483","line":348,"column":26,"nodeType":"2484","messageId":"2485","endLine":348,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":349,"column":21,"nodeType":"2480","messageId":"2481","endLine":349,"endColumn":23},{"ruleId":"2647","severity":1,"message":"2650","line":357,"column":13,"nodeType":"2447","messageId":"2649","endLine":357,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2702","line":19,"column":8,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2703","line":24,"column":9,"nodeType":"2447","messageId":"2448","endLine":24,"endColumn":15},{"ruleId":"2445","severity":1,"message":"2499","line":27,"column":35,"nodeType":"2447","messageId":"2448","endLine":27,"endColumn":41},{"ruleId":"2445","severity":1,"message":"2611","line":28,"column":19,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":27},{"ruleId":"2445","severity":1,"message":"2704","line":29,"column":10,"nodeType":"2447","messageId":"2448","endLine":29,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2621","line":33,"column":10,"nodeType":"2447","messageId":"2448","endLine":33,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2625","line":103,"column":9,"nodeType":"2447","messageId":"2448","endLine":103,"endColumn":25},{"ruleId":"2478","severity":1,"message":"2479","line":238,"column":40,"nodeType":"2480","messageId":"2481","endLine":238,"endColumn":42},{"ruleId":"2445","severity":1,"message":"2496","line":8,"column":3,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2490","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2491","line":13,"column":3,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2492","line":14,"column":3,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2493","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2705","line":16,"column":3,"nodeType":"2447","messageId":"2448","endLine":16,"endColumn":9},{"ruleId":"2445","severity":1,"message":"2550","line":19,"column":10,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2693","line":21,"column":10,"nodeType":"2447","messageId":"2448","endLine":21,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2458","line":25,"column":8,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2697","line":32,"column":10,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":22},{"ruleId":"2445","severity":1,"message":"2698","line":32,"column":24,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":39},{"ruleId":"2478","severity":1,"message":"2479","line":163,"column":28,"nodeType":"2480","messageId":"2481","endLine":163,"endColumn":30},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2702","line":19,"column":8,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2703","line":24,"column":9,"nodeType":"2447","messageId":"2448","endLine":24,"endColumn":15},{"ruleId":"2445","severity":1,"message":"2499","line":27,"column":35,"nodeType":"2447","messageId":"2448","endLine":27,"endColumn":41},{"ruleId":"2445","severity":1,"message":"2611","line":28,"column":19,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":27},{"ruleId":"2445","severity":1,"message":"2704","line":29,"column":10,"nodeType":"2447","messageId":"2448","endLine":29,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2621","line":33,"column":10,"nodeType":"2447","messageId":"2448","endLine":33,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2625","line":103,"column":9,"nodeType":"2447","messageId":"2448","endLine":103,"endColumn":25},{"ruleId":"2478","severity":1,"message":"2479","line":238,"column":40,"nodeType":"2480","messageId":"2481","endLine":238,"endColumn":42},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2702","line":19,"column":8,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2703","line":26,"column":9,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":15},{"ruleId":"2445","severity":1,"message":"2499","line":29,"column":35,"nodeType":"2447","messageId":"2448","endLine":29,"endColumn":41},{"ruleId":"2445","severity":1,"message":"2611","line":30,"column":19,"nodeType":"2447","messageId":"2448","endLine":30,"endColumn":27},{"ruleId":"2445","severity":1,"message":"2704","line":31,"column":10,"nodeType":"2447","messageId":"2448","endLine":31,"endColumn":25},{"ruleId":"2478","severity":1,"message":"2479","line":200,"column":32,"nodeType":"2480","messageId":"2481","endLine":200,"endColumn":34},{"ruleId":"2478","severity":1,"message":"2479","line":256,"column":40,"nodeType":"2480","messageId":"2481","endLine":256,"endColumn":42},{"ruleId":"2478","severity":1,"message":"2479","line":273,"column":31,"nodeType":"2480","messageId":"2481","endLine":273,"endColumn":33},{"ruleId":"2478","severity":1,"message":"2479","line":309,"column":31,"nodeType":"2480","messageId":"2481","endLine":309,"endColumn":33},{"ruleId":"2478","severity":1,"message":"2479","line":474,"column":22,"nodeType":"2480","messageId":"2481","endLine":474,"endColumn":24},{"ruleId":"2451","severity":1,"message":"2452","line":549,"column":1,"nodeType":"2453","messageId":"2454","endLine":555,"endColumn":2},{"ruleId":"2451","severity":1,"message":"2452","line":556,"column":1,"nodeType":"2453","messageId":"2454","endLine":581,"endColumn":2},{"ruleId":"2451","severity":1,"message":"2452","line":600,"column":1,"nodeType":"2453","messageId":"2454","endLine":620,"endColumn":25},{"ruleId":"2605","severity":1,"message":"2606","line":23,"column":1,"nodeType":"2607","endLine":29,"endColumn":3},{"ruleId":"2605","severity":1,"message":"2606","line":7,"column":1,"nodeType":"2607","endLine":9,"endColumn":3},{"ruleId":"2706","severity":1,"message":"2707","line":74,"column":9,"nodeType":"2708","endLine":74,"endColumn":19},{"ruleId":"2482","severity":1,"message":"2545","line":130,"column":47,"nodeType":"2484","messageId":"2485","endLine":130,"endColumn":49},{"ruleId":"2482","severity":1,"message":"2545","line":156,"column":47,"nodeType":"2484","messageId":"2485","endLine":156,"endColumn":49},{"ruleId":"2482","severity":1,"message":"2545","line":258,"column":45,"nodeType":"2484","messageId":"2485","endLine":258,"endColumn":47},{"ruleId":"2482","severity":1,"message":"2545","line":336,"column":21,"nodeType":"2484","messageId":"2485","endLine":336,"endColumn":23},{"ruleId":"2706","severity":1,"message":"2707","line":378,"column":7,"nodeType":"2708","endLine":378,"endColumn":17},{"ruleId":"2706","severity":1,"message":"2707","line":380,"column":7,"nodeType":"2708","endLine":380,"endColumn":17},{"ruleId":"2706","severity":1,"message":"2707","line":390,"column":11,"nodeType":"2708","endLine":390,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2511","line":2,"column":10,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2494","line":3,"column":8,"nodeType":"2447","messageId":"2448","endLine":3,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2709","line":27,"column":13,"nodeType":"2447","messageId":"2448","endLine":27,"endColumn":24},{"ruleId":"2445","severity":1,"message":"2499","line":9,"column":35,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":41},{"ruleId":"2445","severity":1,"message":"2658","line":12,"column":5,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2659","line":23,"column":5,"nodeType":"2447","messageId":"2448","endLine":23,"endColumn":15},{"ruleId":"2478","severity":1,"message":"2479","line":96,"column":26,"nodeType":"2480","messageId":"2481","endLine":96,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":112,"column":33,"nodeType":"2480","messageId":"2481","endLine":112,"endColumn":35},{"ruleId":"2478","severity":1,"message":"2479","line":128,"column":26,"nodeType":"2480","messageId":"2481","endLine":128,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":144,"column":25,"nodeType":"2480","messageId":"2481","endLine":144,"endColumn":27},{"ruleId":"2478","severity":1,"message":"2479","line":160,"column":28,"nodeType":"2480","messageId":"2481","endLine":160,"endColumn":30},{"ruleId":"2478","severity":1,"message":"2479","line":176,"column":20,"nodeType":"2480","messageId":"2481","endLine":176,"endColumn":22},{"ruleId":"2478","severity":1,"message":"2479","line":192,"column":26,"nodeType":"2480","messageId":"2481","endLine":192,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":208,"column":20,"nodeType":"2480","messageId":"2481","endLine":208,"endColumn":22},{"ruleId":"2478","severity":1,"message":"2479","line":224,"column":14,"nodeType":"2480","messageId":"2481","endLine":224,"endColumn":16},{"ruleId":"2478","severity":1,"message":"2479","line":240,"column":16,"nodeType":"2480","messageId":"2481","endLine":240,"endColumn":18},{"ruleId":"2478","severity":1,"message":"2479","line":256,"column":21,"nodeType":"2480","messageId":"2481","endLine":256,"endColumn":23},{"ruleId":"2478","severity":1,"message":"2479","line":369,"column":31,"nodeType":"2480","messageId":"2481","endLine":369,"endColumn":33},{"ruleId":"2478","severity":1,"message":"2479","line":384,"column":44,"nodeType":"2480","messageId":"2481","endLine":384,"endColumn":46},{"ruleId":"2478","severity":1,"message":"2479","line":397,"column":39,"nodeType":"2480","messageId":"2481","endLine":397,"endColumn":41},{"ruleId":"2478","severity":1,"message":"2479","line":410,"column":32,"nodeType":"2480","messageId":"2481","endLine":410,"endColumn":34},{"ruleId":"2478","severity":1,"message":"2479","line":424,"column":36,"nodeType":"2480","messageId":"2481","endLine":424,"endColumn":38},{"ruleId":"2478","severity":1,"message":"2479","line":439,"column":31,"nodeType":"2480","messageId":"2481","endLine":439,"endColumn":33},{"ruleId":"2445","severity":1,"message":"2546","line":3,"column":3,"nodeType":"2447","messageId":"2448","endLine":3,"endColumn":7},{"ruleId":"2445","severity":1,"message":"2547","line":4,"column":3,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":13},{"ruleId":"2445","severity":1,"message":"2495","line":5,"column":3,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":11},{"ruleId":"2445","severity":1,"message":"2496","line":6,"column":3,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":7,"column":3,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":8,"column":3,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2493","line":2,"column":41,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":52},{"ruleId":"2445","severity":1,"message":"2550","line":3,"column":10,"nodeType":"2447","messageId":"2448","endLine":3,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2511","line":6,"column":10,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2456","line":7,"column":10,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2662","line":9,"column":8,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2663","line":12,"column":7,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":13},{"ruleId":"2474","severity":1,"message":"2503","line":49,"column":6,"nodeType":"2476","endLine":49,"endColumn":14,"suggestions":"2710"},{"ruleId":"2518","severity":1,"message":"2519","line":77,"column":27,"nodeType":"2520","endLine":80,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":88,"column":38,"nodeType":"2480","messageId":"2481","endLine":88,"endColumn":40},{"ruleId":"2667","severity":1,"message":"2668","line":88,"column":43,"nodeType":"2669","messageId":"2670","endLine":88,"endColumn":45},{"ruleId":"2667","severity":1,"message":"2668","line":88,"column":61,"nodeType":"2669","messageId":"2670","endLine":88,"endColumn":63},{"ruleId":"2667","severity":1,"message":"2671","line":88,"column":61,"nodeType":"2669","messageId":"2670","endLine":88,"endColumn":63},{"ruleId":"2478","severity":1,"message":"2479","line":88,"column":78,"nodeType":"2480","messageId":"2481","endLine":88,"endColumn":80},{"ruleId":"2667","severity":1,"message":"2671","line":88,"column":83,"nodeType":"2669","messageId":"2670","endLine":88,"endColumn":85},{"ruleId":"2706","severity":1,"message":"2707","line":74,"column":9,"nodeType":"2708","endLine":74,"endColumn":19},{"ruleId":"2482","severity":1,"message":"2545","line":130,"column":47,"nodeType":"2484","messageId":"2485","endLine":130,"endColumn":49},{"ruleId":"2482","severity":1,"message":"2545","line":156,"column":47,"nodeType":"2484","messageId":"2485","endLine":156,"endColumn":49},{"ruleId":"2482","severity":1,"message":"2545","line":258,"column":45,"nodeType":"2484","messageId":"2485","endLine":258,"endColumn":47},{"ruleId":"2482","severity":1,"message":"2545","line":336,"column":21,"nodeType":"2484","messageId":"2485","endLine":336,"endColumn":23},{"ruleId":"2706","severity":1,"message":"2707","line":378,"column":7,"nodeType":"2708","endLine":378,"endColumn":17},{"ruleId":"2706","severity":1,"message":"2707","line":380,"column":7,"nodeType":"2708","endLine":380,"endColumn":17},{"ruleId":"2706","severity":1,"message":"2707","line":390,"column":11,"nodeType":"2708","endLine":390,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2493","line":2,"column":41,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":52},{"ruleId":"2445","severity":1,"message":"2506","line":22,"column":35,"nodeType":"2447","messageId":"2448","endLine":22,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2521","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":13},{"ruleId":"2445","severity":1,"message":"2522","line":3,"column":10,"nodeType":"2447","messageId":"2448","endLine":3,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2548","line":14,"column":9,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":16},{"ruleId":"2656","severity":1,"message":"2711","line":29,"column":17,"nodeType":"2520","endLine":32,"endColumn":18},{"ruleId":"2478","severity":1,"message":"2479","line":66,"column":21,"nodeType":"2480","messageId":"2481","endLine":66,"endColumn":23},{"ruleId":"2478","severity":1,"message":"2479","line":70,"column":21,"nodeType":"2480","messageId":"2481","endLine":70,"endColumn":23},{"ruleId":"2478","severity":1,"message":"2479","line":74,"column":21,"nodeType":"2480","messageId":"2481","endLine":74,"endColumn":23},{"ruleId":"2656","severity":1,"message":"2711","line":80,"column":17,"nodeType":"2520","endLine":85,"endColumn":18},{"ruleId":"2478","severity":1,"message":"2479","line":98,"column":27,"nodeType":"2480","messageId":"2481","endLine":98,"endColumn":29},{"ruleId":"2451","severity":1,"message":"2452","line":130,"column":1,"nodeType":"2453","messageId":"2454","endLine":130,"endColumn":40},{"ruleId":"2451","severity":1,"message":"2452","line":131,"column":1,"nodeType":"2453","messageId":"2454","endLine":131,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2496","line":6,"column":3,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":7,"column":3,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":8,"column":3,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2550","line":13,"column":10,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2693","line":15,"column":10,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2496","line":6,"column":3,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":7,"column":3,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":8,"column":3,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2550","line":13,"column":10,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2693","line":15,"column":10,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2496","line":8,"column":3,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2712","line":14,"column":16,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":23},{"ruleId":"2478","severity":1,"message":"2479","line":182,"column":28,"nodeType":"2480","messageId":"2481","endLine":182,"endColumn":30},{"ruleId":"2478","severity":1,"message":"2479","line":188,"column":30,"nodeType":"2480","messageId":"2481","endLine":188,"endColumn":32},{"ruleId":"2478","severity":1,"message":"2479","line":193,"column":32,"nodeType":"2480","messageId":"2481","endLine":193,"endColumn":34},{"ruleId":"2445","severity":1,"message":"2496","line":6,"column":3,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":7,"column":3,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":8,"column":3,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2550","line":13,"column":10,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2693","line":15,"column":10,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":16},{"ruleId":"2478","severity":1,"message":"2479","line":179,"column":28,"nodeType":"2480","messageId":"2481","endLine":179,"endColumn":30},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2493","line":2,"column":41,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":52},{"ruleId":"2445","severity":1,"message":"2548","line":17,"column":9,"nodeType":"2447","messageId":"2448","endLine":17,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2713","line":6,"column":3,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2487","line":25,"column":10,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2714","line":33,"column":10,"nodeType":"2447","messageId":"2448","endLine":33,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2715","line":34,"column":10,"nodeType":"2447","messageId":"2448","endLine":34,"endColumn":15},{"ruleId":"2445","severity":1,"message":"2613","line":37,"column":20,"nodeType":"2447","messageId":"2448","endLine":37,"endColumn":31},{"ruleId":"2445","severity":1,"message":"2614","line":38,"column":21,"nodeType":"2447","messageId":"2448","endLine":38,"endColumn":33},{"ruleId":"2445","severity":1,"message":"2615","line":39,"column":24,"nodeType":"2447","messageId":"2448","endLine":39,"endColumn":39},{"ruleId":"2445","severity":1,"message":"2616","line":40,"column":24,"nodeType":"2447","messageId":"2448","endLine":40,"endColumn":39},{"ruleId":"2474","severity":1,"message":"2645","line":56,"column":6,"nodeType":"2476","endLine":56,"endColumn":8,"suggestions":"2716"},{"ruleId":"2445","severity":1,"message":"2717","line":293,"column":9,"nodeType":"2447","messageId":"2448","endLine":293,"endColumn":14},{"ruleId":"2451","severity":1,"message":"2452","line":339,"column":1,"nodeType":"2453","messageId":"2454","endLine":339,"endColumn":70},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2451","severity":1,"message":"2452","line":67,"column":1,"nodeType":"2453","messageId":"2454","endLine":76,"endColumn":2},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":10,"column":5,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2541","line":11,"column":5,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2542","line":12,"column":5,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2497","line":13,"column":5,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2718","line":19,"column":8,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2494","line":21,"column":8,"nodeType":"2447","messageId":"2448","endLine":21,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2461","line":28,"column":11,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2719","line":32,"column":12,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2720","line":35,"column":12,"nodeType":"2447","messageId":"2448","endLine":35,"endColumn":18},{"ruleId":"2474","severity":1,"message":"2721","line":48,"column":8,"nodeType":"2476","endLine":48,"endColumn":10,"suggestions":"2722"},{"ruleId":"2478","severity":1,"message":"2479","line":192,"column":44,"nodeType":"2480","messageId":"2481","endLine":192,"endColumn":46},{"ruleId":"2478","severity":1,"message":"2479","line":200,"column":48,"nodeType":"2480","messageId":"2481","endLine":200,"endColumn":50},{"ruleId":"2478","severity":1,"message":"2479","line":206,"column":52,"nodeType":"2480","messageId":"2481","endLine":206,"endColumn":54},{"ruleId":"2451","severity":1,"message":"2452","line":448,"column":1,"nodeType":"2453","messageId":"2454","endLine":454,"endColumn":51},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":10,"column":5,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2541","line":11,"column":5,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2542","line":12,"column":5,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2497","line":13,"column":5,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2718","line":20,"column":8,"nodeType":"2447","messageId":"2448","endLine":20,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2461","line":26,"column":11,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2719","line":30,"column":12,"nodeType":"2447","messageId":"2448","endLine":30,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2580","line":33,"column":12,"nodeType":"2447","messageId":"2448","endLine":33,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2618","line":33,"column":16,"nodeType":"2447","messageId":"2448","endLine":33,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2720","line":34,"column":12,"nodeType":"2447","messageId":"2448","endLine":34,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2723","line":34,"column":20,"nodeType":"2447","messageId":"2448","endLine":34,"endColumn":31},{"ruleId":"2474","severity":1,"message":"2721","line":45,"column":8,"nodeType":"2476","endLine":45,"endColumn":10,"suggestions":"2724"},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":10,"column":5,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2541","line":11,"column":5,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2542","line":12,"column":5,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2497","line":13,"column":5,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2718","line":19,"column":8,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2461","line":24,"column":11,"nodeType":"2447","messageId":"2448","endLine":24,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2719","line":28,"column":12,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2580","line":31,"column":12,"nodeType":"2447","messageId":"2448","endLine":31,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2618","line":31,"column":16,"nodeType":"2447","messageId":"2448","endLine":31,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2720","line":32,"column":12,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2723","line":32,"column":20,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":31},{"ruleId":"2474","severity":1,"message":"2721","line":38,"column":8,"nodeType":"2476","endLine":38,"endColumn":10,"suggestions":"2725"},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":10,"column":5,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2541","line":11,"column":5,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2542","line":12,"column":5,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2497","line":13,"column":5,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2718","line":19,"column":8,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2461","line":27,"column":11,"nodeType":"2447","messageId":"2448","endLine":27,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2719","line":31,"column":12,"nodeType":"2447","messageId":"2448","endLine":31,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2580","line":34,"column":12,"nodeType":"2447","messageId":"2448","endLine":34,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2618","line":34,"column":16,"nodeType":"2447","messageId":"2448","endLine":34,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2720","line":35,"column":12,"nodeType":"2447","messageId":"2448","endLine":35,"endColumn":18},{"ruleId":"2474","severity":1,"message":"2721","line":40,"column":8,"nodeType":"2476","endLine":40,"endColumn":10,"suggestions":"2726"},{"ruleId":"2478","severity":1,"message":"2479","line":211,"column":44,"nodeType":"2480","messageId":"2481","endLine":211,"endColumn":46},{"ruleId":"2478","severity":1,"message":"2479","line":219,"column":48,"nodeType":"2480","messageId":"2481","endLine":219,"endColumn":50},{"ruleId":"2478","severity":1,"message":"2479","line":226,"column":52,"nodeType":"2480","messageId":"2481","endLine":226,"endColumn":54},{"ruleId":"2445","severity":1,"message":"2727","line":2,"column":13,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":20},{"ruleId":"2656","severity":1,"message":"2657","line":87,"column":15,"nodeType":"2520","endLine":90,"endColumn":16},{"ruleId":"2451","severity":1,"message":"2452","line":130,"column":1,"nodeType":"2453","messageId":"2454","endLine":132,"endColumn":2},{"ruleId":"2451","severity":1,"message":"2452","line":146,"column":1,"nodeType":"2453","messageId":"2454","endLine":178,"endColumn":2},{"ruleId":"2451","severity":1,"message":"2452","line":179,"column":1,"nodeType":"2453","messageId":"2454","endLine":195,"endColumn":2},{"ruleId":"2445","severity":1,"message":"2728","line":1,"column":38,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":45},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":13,"column":3,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2461","line":23,"column":9,"nodeType":"2447","messageId":"2448","endLine":23,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2729","line":26,"column":10,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":22},{"ruleId":"2474","severity":1,"message":"2730","line":32,"column":6,"nodeType":"2476","endLine":32,"endColumn":8,"suggestions":"2731"},{"ruleId":"2478","severity":1,"message":"2479","line":123,"column":28,"nodeType":"2480","messageId":"2481","endLine":123,"endColumn":30},{"ruleId":"2445","severity":1,"message":"2728","line":1,"column":38,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":45},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":13,"column":3,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2461","line":27,"column":9,"nodeType":"2447","messageId":"2448","endLine":27,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2729","line":30,"column":10,"nodeType":"2447","messageId":"2448","endLine":30,"endColumn":22},{"ruleId":"2474","severity":1,"message":"2730","line":43,"column":6,"nodeType":"2476","endLine":43,"endColumn":8,"suggestions":"2732"},{"ruleId":"2478","severity":1,"message":"2479","line":141,"column":28,"nodeType":"2480","messageId":"2481","endLine":141,"endColumn":30},{"ruleId":"2478","severity":1,"message":"2479","line":149,"column":30,"nodeType":"2480","messageId":"2481","endLine":149,"endColumn":32},{"ruleId":"2478","severity":1,"message":"2479","line":154,"column":32,"nodeType":"2480","messageId":"2481","endLine":154,"endColumn":34},{"ruleId":"2478","severity":1,"message":"2479","line":159,"column":34,"nodeType":"2480","messageId":"2481","endLine":159,"endColumn":36},{"ruleId":"2478","severity":1,"message":"2479","line":196,"column":26,"nodeType":"2480","messageId":"2481","endLine":196,"endColumn":28},{"ruleId":"2445","severity":1,"message":"2728","line":1,"column":38,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":45},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":13,"column":3,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2461","line":23,"column":9,"nodeType":"2447","messageId":"2448","endLine":23,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2729","line":26,"column":10,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":22},{"ruleId":"2474","severity":1,"message":"2730","line":32,"column":6,"nodeType":"2476","endLine":32,"endColumn":8,"suggestions":"2733"},{"ruleId":"2478","severity":1,"message":"2479","line":122,"column":28,"nodeType":"2480","messageId":"2481","endLine":122,"endColumn":30},{"ruleId":"2478","severity":1,"message":"2479","line":127,"column":30,"nodeType":"2480","messageId":"2481","endLine":127,"endColumn":32},{"ruleId":"2478","severity":1,"message":"2479","line":132,"column":32,"nodeType":"2480","messageId":"2481","endLine":132,"endColumn":34},{"ruleId":"2445","severity":1,"message":"2728","line":1,"column":38,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":45},{"ruleId":"2445","severity":1,"message":"2496","line":9,"column":5,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2497","line":12,"column":5,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2461","line":27,"column":11,"nodeType":"2447","messageId":"2448","endLine":27,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2729","line":30,"column":12,"nodeType":"2447","messageId":"2448","endLine":30,"endColumn":24},{"ruleId":"2474","severity":1,"message":"2730","line":42,"column":8,"nodeType":"2476","endLine":42,"endColumn":10,"suggestions":"2734"},{"ruleId":"2478","severity":1,"message":"2479","line":137,"column":44,"nodeType":"2480","messageId":"2481","endLine":137,"endColumn":46},{"ruleId":"2478","severity":1,"message":"2479","line":142,"column":48,"nodeType":"2480","messageId":"2481","endLine":142,"endColumn":50},{"ruleId":"2478","severity":1,"message":"2479","line":147,"column":52,"nodeType":"2480","messageId":"2481","endLine":147,"endColumn":54},{"ruleId":"2478","severity":1,"message":"2479","line":190,"column":40,"nodeType":"2480","messageId":"2481","endLine":190,"endColumn":42},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2631","line":4,"column":16,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":26},{"ruleId":"2474","severity":1,"message":"2679","line":16,"column":8,"nodeType":"2476","endLine":16,"endColumn":18,"suggestions":"2735"},{"ruleId":"2656","severity":1,"message":"2711","line":52,"column":29,"nodeType":"2520","endLine":56,"endColumn":30},{"ruleId":"2656","severity":1,"message":"2711","line":57,"column":33,"nodeType":"2520","endLine":57,"endColumn":66},{"ruleId":"2736","severity":1,"message":"2737","line":101,"column":17,"nodeType":"2738","endLine":103,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2510","line":2,"column":17,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":2,"column":27,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2456","line":8,"column":10,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2457","line":9,"column":13,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2446","line":2,"column":27,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2521","line":5,"column":8,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":13},{"ruleId":"2445","severity":1,"message":"2522","line":6,"column":10,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2458","line":10,"column":8,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2461","line":21,"column":9,"nodeType":"2447","messageId":"2448","endLine":21,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2506","line":26,"column":54,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":59},{"ruleId":"2445","severity":1,"message":"2587","line":28,"column":10,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":15},{"ruleId":"2445","severity":1,"message":"2588","line":28,"column":17,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2496","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2506","line":23,"column":35,"nodeType":"2447","messageId":"2448","endLine":23,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2739","line":26,"column":10,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2740","line":27,"column":10,"nodeType":"2447","messageId":"2448","endLine":27,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2741","line":27,"column":20,"nodeType":"2447","messageId":"2448","endLine":27,"endColumn":31},{"ruleId":"2445","severity":1,"message":"2742","line":28,"column":20,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":31},{"ruleId":"2445","severity":1,"message":"2743","line":29,"column":10,"nodeType":"2447","messageId":"2448","endLine":29,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2744","line":29,"column":20,"nodeType":"2447","messageId":"2448","endLine":29,"endColumn":31},{"ruleId":"2474","severity":1,"message":"2516","line":47,"column":6,"nodeType":"2476","endLine":47,"endColumn":8,"suggestions":"2745"},{"ruleId":"2445","severity":1,"message":"2746","line":81,"column":9,"nodeType":"2447","messageId":"2448","endLine":81,"endColumn":19},{"ruleId":"2474","severity":1,"message":"2637","line":18,"column":6,"nodeType":"2476","endLine":18,"endColumn":8,"suggestions":"2747"},{"ruleId":"2478","severity":1,"message":"2479","line":115,"column":25,"nodeType":"2480","messageId":"2481","endLine":115,"endColumn":27},{"ruleId":"2478","severity":1,"message":"2479","line":115,"column":58,"nodeType":"2480","messageId":"2481","endLine":115,"endColumn":60},{"ruleId":"2478","severity":1,"message":"2479","line":127,"column":28,"nodeType":"2480","messageId":"2481","endLine":127,"endColumn":30},{"ruleId":"2445","severity":1,"message":"2748","line":5,"column":10,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":13},{"ruleId":"2445","severity":1,"message":"2749","line":5,"column":15,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2750","line":5,"column":21,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":28},{"ruleId":"2445","severity":1,"message":"2751","line":5,"column":30,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":38},{"ruleId":"2474","severity":1,"message":"2573","line":40,"column":6,"nodeType":"2476","endLine":40,"endColumn":8,"suggestions":"2752"},{"ruleId":"2451","severity":1,"message":"2452","line":110,"column":1,"nodeType":"2453","messageId":"2454","endLine":139,"endColumn":2},{"ruleId":"2445","severity":1,"message":"2510","line":2,"column":17,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":2,"column":27,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2506","line":23,"column":35,"nodeType":"2447","messageId":"2448","endLine":23,"endColumn":40},{"ruleId":"2478","severity":1,"message":"2479","line":57,"column":14,"nodeType":"2480","messageId":"2481","endLine":57,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2493","line":2,"column":41,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":52},{"ruleId":"2445","severity":1,"message":"2511","line":6,"column":10,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2631","line":7,"column":10,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2494","line":8,"column":8,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2635","line":9,"column":8,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":22},{"ruleId":"2445","severity":1,"message":"2496","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2497","line":14,"column":3,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":8},{"ruleId":"2474","severity":1,"message":"2685","line":51,"column":6,"nodeType":"2476","endLine":51,"endColumn":8,"suggestions":"2753"},{"ruleId":"2451","severity":1,"message":"2452","line":259,"column":1,"nodeType":"2453","messageId":"2454","endLine":269,"endColumn":2},{"ruleId":"2451","severity":1,"message":"2452","line":302,"column":1,"nodeType":"2453","messageId":"2454","endLine":316,"endColumn":2},{"ruleId":"2706","severity":1,"message":"2707","line":74,"column":9,"nodeType":"2708","endLine":74,"endColumn":19},{"ruleId":"2482","severity":1,"message":"2545","line":130,"column":47,"nodeType":"2484","messageId":"2485","endLine":130,"endColumn":49},{"ruleId":"2482","severity":1,"message":"2545","line":156,"column":47,"nodeType":"2484","messageId":"2485","endLine":156,"endColumn":49},{"ruleId":"2482","severity":1,"message":"2545","line":258,"column":45,"nodeType":"2484","messageId":"2485","endLine":258,"endColumn":47},{"ruleId":"2482","severity":1,"message":"2545","line":336,"column":21,"nodeType":"2484","messageId":"2485","endLine":336,"endColumn":23},{"ruleId":"2706","severity":1,"message":"2707","line":378,"column":7,"nodeType":"2708","endLine":378,"endColumn":17},{"ruleId":"2706","severity":1,"message":"2707","line":380,"column":7,"nodeType":"2708","endLine":380,"endColumn":17},{"ruleId":"2706","severity":1,"message":"2707","line":390,"column":11,"nodeType":"2708","endLine":390,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2754","line":4,"column":19,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":28},{"ruleId":"2445","severity":1,"message":"2496","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2718","line":19,"column":8,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2494","line":23,"column":8,"nodeType":"2447","messageId":"2448","endLine":23,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2461","line":29,"column":9,"nodeType":"2447","messageId":"2448","endLine":29,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2704","line":32,"column":10,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2613","line":35,"column":20,"nodeType":"2447","messageId":"2448","endLine":35,"endColumn":31},{"ruleId":"2445","severity":1,"message":"2614","line":36,"column":21,"nodeType":"2447","messageId":"2448","endLine":36,"endColumn":33},{"ruleId":"2445","severity":1,"message":"2615","line":37,"column":24,"nodeType":"2447","messageId":"2448","endLine":37,"endColumn":39},{"ruleId":"2445","severity":1,"message":"2616","line":38,"column":24,"nodeType":"2447","messageId":"2448","endLine":38,"endColumn":39},{"ruleId":"2445","severity":1,"message":"2755","line":40,"column":10,"nodeType":"2447","messageId":"2448","endLine":40,"endColumn":22},{"ruleId":"2445","severity":1,"message":"2756","line":47,"column":9,"nodeType":"2447","messageId":"2448","endLine":47,"endColumn":22},{"ruleId":"2474","severity":1,"message":"2757","line":65,"column":6,"nodeType":"2476","endLine":65,"endColumn":8,"suggestions":"2758"},{"ruleId":"2478","severity":1,"message":"2479","line":178,"column":40,"nodeType":"2480","messageId":"2481","endLine":178,"endColumn":42},{"ruleId":"2478","severity":1,"message":"2479","line":196,"column":26,"nodeType":"2480","messageId":"2481","endLine":196,"endColumn":28},{"ruleId":"2445","severity":1,"message":"2759","line":243,"column":9,"nodeType":"2447","messageId":"2448","endLine":243,"endColumn":19},{"ruleId":"2451","severity":1,"message":"2452","line":368,"column":1,"nodeType":"2453","messageId":"2454","endLine":409,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2754","line":4,"column":18,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":27},{"ruleId":"2445","severity":1,"message":"2496","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2727","line":17,"column":13,"nodeType":"2447","messageId":"2448","endLine":17,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2718","line":19,"column":8,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2760","line":20,"column":8,"nodeType":"2447","messageId":"2448","endLine":20,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2761","line":21,"column":8,"nodeType":"2447","messageId":"2448","endLine":21,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2762","line":26,"column":8,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2548","line":31,"column":9,"nodeType":"2447","messageId":"2448","endLine":31,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2461","line":32,"column":9,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2704","line":35,"column":10,"nodeType":"2447","messageId":"2448","endLine":35,"endColumn":25},{"ruleId":"2474","severity":1,"message":"2757","line":52,"column":6,"nodeType":"2476","endLine":52,"endColumn":8,"suggestions":"2763"},{"ruleId":"2478","severity":1,"message":"2479","line":163,"column":40,"nodeType":"2480","messageId":"2481","endLine":163,"endColumn":42},{"ruleId":"2478","severity":1,"message":"2479","line":181,"column":26,"nodeType":"2480","messageId":"2481","endLine":181,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":195,"column":38,"nodeType":"2480","messageId":"2481","endLine":195,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2754","line":4,"column":19,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":28},{"ruleId":"2445","severity":1,"message":"2496","line":9,"column":5,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2541","line":10,"column":5,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2542","line":11,"column":5,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2497","line":12,"column":5,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":10},{"ruleId":"2445","severity":1,"message":"2727","line":17,"column":13,"nodeType":"2447","messageId":"2448","endLine":17,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2718","line":19,"column":8,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2760","line":20,"column":8,"nodeType":"2447","messageId":"2448","endLine":20,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2761","line":21,"column":8,"nodeType":"2447","messageId":"2448","endLine":21,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2762","line":26,"column":8,"nodeType":"2447","messageId":"2448","endLine":26,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2548","line":31,"column":11,"nodeType":"2447","messageId":"2448","endLine":31,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2461","line":32,"column":11,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2704","line":35,"column":12,"nodeType":"2447","messageId":"2448","endLine":35,"endColumn":27},{"ruleId":"2474","severity":1,"message":"2757","line":55,"column":8,"nodeType":"2476","endLine":55,"endColumn":10,"suggestions":"2764"},{"ruleId":"2478","severity":1,"message":"2479","line":166,"column":48,"nodeType":"2480","messageId":"2481","endLine":166,"endColumn":50},{"ruleId":"2478","severity":1,"message":"2479","line":184,"column":40,"nodeType":"2480","messageId":"2481","endLine":184,"endColumn":42},{"ruleId":"2478","severity":1,"message":"2479","line":198,"column":58,"nodeType":"2480","messageId":"2481","endLine":198,"endColumn":60},{"ruleId":"2445","severity":1,"message":"2609","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2754","line":4,"column":18,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":27},{"ruleId":"2445","severity":1,"message":"2496","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2497","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2727","line":17,"column":13,"nodeType":"2447","messageId":"2448","endLine":17,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2718","line":19,"column":8,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2548","line":31,"column":9,"nodeType":"2447","messageId":"2448","endLine":31,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2461","line":32,"column":9,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2704","line":35,"column":10,"nodeType":"2447","messageId":"2448","endLine":35,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2765","line":38,"column":10,"nodeType":"2447","messageId":"2448","endLine":38,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2613","line":38,"column":20,"nodeType":"2447","messageId":"2448","endLine":38,"endColumn":31},{"ruleId":"2445","severity":1,"message":"2766","line":39,"column":10,"nodeType":"2447","messageId":"2448","endLine":39,"endColumn":19},{"ruleId":"2445","severity":1,"message":"2614","line":39,"column":21,"nodeType":"2447","messageId":"2448","endLine":39,"endColumn":33},{"ruleId":"2445","severity":1,"message":"2767","line":40,"column":10,"nodeType":"2447","messageId":"2448","endLine":40,"endColumn":22},{"ruleId":"2445","severity":1,"message":"2615","line":40,"column":24,"nodeType":"2447","messageId":"2448","endLine":40,"endColumn":39},{"ruleId":"2445","severity":1,"message":"2768","line":41,"column":10,"nodeType":"2447","messageId":"2448","endLine":41,"endColumn":22},{"ruleId":"2445","severity":1,"message":"2616","line":41,"column":24,"nodeType":"2447","messageId":"2448","endLine":41,"endColumn":39},{"ruleId":"2474","severity":1,"message":"2757","line":104,"column":6,"nodeType":"2476","endLine":104,"endColumn":8,"suggestions":"2769"},{"ruleId":"2478","severity":1,"message":"2479","line":215,"column":40,"nodeType":"2480","messageId":"2481","endLine":215,"endColumn":42},{"ruleId":"2478","severity":1,"message":"2479","line":233,"column":26,"nodeType":"2480","messageId":"2481","endLine":233,"endColumn":28},{"ruleId":"2478","severity":1,"message":"2479","line":247,"column":38,"nodeType":"2480","messageId":"2481","endLine":247,"endColumn":40},{"ruleId":"2478","severity":1,"message":"2479","line":319,"column":26,"nodeType":"2480","messageId":"2481","endLine":319,"endColumn":28},{"ruleId":"2445","severity":1,"message":"2499","line":10,"column":27,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":33},{"ruleId":"2445","severity":1,"message":"2506","line":10,"column":35,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2609","line":4,"column":8,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2490","line":12,"column":3,"nodeType":"2447","messageId":"2448","endLine":12,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2491","line":13,"column":3,"nodeType":"2447","messageId":"2448","endLine":13,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2492","line":14,"column":3,"nodeType":"2447","messageId":"2448","endLine":14,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2493","line":15,"column":3,"nodeType":"2447","messageId":"2448","endLine":15,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2705","line":16,"column":3,"nodeType":"2447","messageId":"2448","endLine":16,"endColumn":9},{"ruleId":"2445","severity":1,"message":"2511","line":18,"column":10,"nodeType":"2447","messageId":"2448","endLine":18,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2635","line":20,"column":8,"nodeType":"2447","messageId":"2448","endLine":20,"endColumn":22},{"ruleId":"2445","severity":1,"message":"2580","line":30,"column":11,"nodeType":"2447","messageId":"2448","endLine":30,"endColumn":13},{"ruleId":"2445","severity":1,"message":"2612","line":34,"column":10,"nodeType":"2447","messageId":"2448","endLine":34,"endColumn":15},{"ruleId":"2474","severity":1,"message":"2582","line":79,"column":6,"nodeType":"2476","endLine":79,"endColumn":8,"suggestions":"2770"},{"ruleId":"2478","severity":1,"message":"2479","line":282,"column":31,"nodeType":"2480","messageId":"2481","endLine":282,"endColumn":33},{"ruleId":"2445","severity":1,"message":"2609","line":4,"column":8,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":9,"column":5,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2541","line":10,"column":5,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2542","line":11,"column":5,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2461","line":27,"column":11,"nodeType":"2447","messageId":"2448","endLine":27,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2580","line":28,"column":13,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":15},{"ruleId":"2445","severity":1,"message":"2612","line":34,"column":12,"nodeType":"2447","messageId":"2448","endLine":34,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2771","line":38,"column":12,"nodeType":"2447","messageId":"2448","endLine":38,"endColumn":20},{"ruleId":"2445","severity":1,"message":"2772","line":38,"column":22,"nodeType":"2447","messageId":"2448","endLine":38,"endColumn":33},{"ruleId":"2474","severity":1,"message":"2582","line":44,"column":8,"nodeType":"2476","endLine":44,"endColumn":10,"suggestions":"2773"},{"ruleId":"2445","severity":1,"message":"2609","line":4,"column":8,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2496","line":9,"column":3,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":12},{"ruleId":"2445","severity":1,"message":"2541","line":10,"column":3,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2542","line":11,"column":3,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":6},{"ruleId":"2445","severity":1,"message":"2461","line":28,"column":9,"nodeType":"2447","messageId":"2448","endLine":28,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2580","line":29,"column":11,"nodeType":"2447","messageId":"2448","endLine":29,"endColumn":13},{"ruleId":"2445","severity":1,"message":"2612","line":35,"column":10,"nodeType":"2447","messageId":"2448","endLine":35,"endColumn":15},{"ruleId":"2445","severity":1,"message":"2771","line":39,"column":10,"nodeType":"2447","messageId":"2448","endLine":39,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2772","line":39,"column":20,"nodeType":"2447","messageId":"2448","endLine":39,"endColumn":31},{"ruleId":"2474","severity":1,"message":"2582","line":45,"column":6,"nodeType":"2476","endLine":45,"endColumn":8,"suggestions":"2774"},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2493","line":2,"column":41,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":52},{"ruleId":"2445","severity":1,"message":"2461","line":20,"column":9,"nodeType":"2447","messageId":"2448","endLine":20,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2548","line":21,"column":9,"nodeType":"2447","messageId":"2448","endLine":21,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2675","line":23,"column":15,"nodeType":"2447","messageId":"2448","endLine":23,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2676","line":24,"column":20,"nodeType":"2447","messageId":"2448","endLine":24,"endColumn":37},{"ruleId":"2445","severity":1,"message":"2677","line":25,"column":15,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":26},{"ruleId":"2445","severity":1,"message":"2507","line":25,"column":28,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2678","line":25,"column":42,"nodeType":"2447","messageId":"2448","endLine":25,"endColumn":55},{"ruleId":"2478","severity":1,"message":"2479","line":90,"column":31,"nodeType":"2480","messageId":"2481","endLine":90,"endColumn":33},{"ruleId":"2478","severity":1,"message":"2479","line":103,"column":33,"nodeType":"2480","messageId":"2481","endLine":103,"endColumn":35},{"ruleId":"2478","severity":1,"message":"2479","line":121,"column":31,"nodeType":"2480","messageId":"2481","endLine":121,"endColumn":33},{"ruleId":"2451","severity":1,"message":"2452","line":149,"column":1,"nodeType":"2453","messageId":"2454","endLine":168,"endColumn":22},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2493","line":2,"column":41,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":52},{"ruleId":"2445","severity":1,"message":"2506","line":23,"column":35,"nodeType":"2447","messageId":"2448","endLine":23,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2496","line":8,"column":5,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2541","line":9,"column":5,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2542","line":10,"column":5,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2550","line":17,"column":10,"nodeType":"2447","messageId":"2448","endLine":17,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2693","line":19,"column":10,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2775","line":32,"column":12,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":24},{"ruleId":"2445","severity":1,"message":"2496","line":8,"column":5,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2541","line":9,"column":5,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2542","line":10,"column":5,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2550","line":17,"column":10,"nodeType":"2447","messageId":"2448","endLine":17,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2693","line":19,"column":10,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2775","line":32,"column":12,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":24},{"ruleId":"2445","severity":1,"message":"2496","line":8,"column":5,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2541","line":9,"column":5,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2542","line":10,"column":5,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":8},{"ruleId":"2445","severity":1,"message":"2550","line":17,"column":10,"nodeType":"2447","messageId":"2448","endLine":17,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2693","line":19,"column":10,"nodeType":"2447","messageId":"2448","endLine":19,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2775","line":32,"column":12,"nodeType":"2447","messageId":"2448","endLine":32,"endColumn":24},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2493","line":2,"column":41,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":52},{"ruleId":"2478","severity":1,"message":"2479","line":36,"column":37,"nodeType":"2480","messageId":"2481","endLine":36,"endColumn":39},{"ruleId":"2478","severity":1,"message":"2479","line":44,"column":39,"nodeType":"2480","messageId":"2481","endLine":44,"endColumn":41},{"ruleId":"2478","severity":1,"message":"2479","line":51,"column":41,"nodeType":"2480","messageId":"2481","endLine":51,"endColumn":43},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2493","line":2,"column":41,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":52},{"ruleId":"2478","severity":1,"message":"2479","line":36,"column":37,"nodeType":"2480","messageId":"2481","endLine":36,"endColumn":39},{"ruleId":"2478","severity":1,"message":"2479","line":44,"column":39,"nodeType":"2480","messageId":"2481","endLine":44,"endColumn":41},{"ruleId":"2478","severity":1,"message":"2479","line":51,"column":41,"nodeType":"2480","messageId":"2481","endLine":51,"endColumn":43},{"ruleId":"2445","severity":1,"message":"2499","line":11,"column":27,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":33},{"ruleId":"2445","severity":1,"message":"2506","line":11,"column":35,"nodeType":"2447","messageId":"2448","endLine":11,"endColumn":40},{"ruleId":"2445","severity":1,"message":"2510","line":1,"column":17,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":25},{"ruleId":"2445","severity":1,"message":"2446","line":1,"column":27,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2550","line":2,"column":10,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":17},{"ruleId":"2445","severity":1,"message":"2456","line":3,"column":10,"nodeType":"2447","messageId":"2448","endLine":3,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2457","line":4,"column":13,"nodeType":"2447","messageId":"2448","endLine":4,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2776","line":5,"column":8,"nodeType":"2447","messageId":"2448","endLine":5,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2608","line":6,"column":8,"nodeType":"2447","messageId":"2448","endLine":6,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2511","line":9,"column":10,"nodeType":"2447","messageId":"2448","endLine":9,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2662","line":10,"column":8,"nodeType":"2447","messageId":"2448","endLine":10,"endColumn":18},{"ruleId":"2445","severity":1,"message":"2456","line":7,"column":10,"nodeType":"2447","messageId":"2448","endLine":7,"endColumn":21},{"ruleId":"2445","severity":1,"message":"2457","line":8,"column":13,"nodeType":"2447","messageId":"2448","endLine":8,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2499","line":18,"column":35,"nodeType":"2447","messageId":"2448","endLine":18,"endColumn":41},{"ruleId":"2445","severity":1,"message":"2776","line":2,"column":8,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":14},{"ruleId":"2445","severity":1,"message":"2608","line":3,"column":8,"nodeType":"2447","messageId":"2448","endLine":3,"endColumn":14},{"ruleId":"2478","severity":1,"message":"2479","line":71,"column":32,"nodeType":"2480","messageId":"2481","endLine":71,"endColumn":34},{"ruleId":"2445","severity":1,"message":"2777","line":1,"column":10,"nodeType":"2447","messageId":"2448","endLine":1,"endColumn":16},{"ruleId":"2445","severity":1,"message":"2446","line":2,"column":27,"nodeType":"2447","messageId":"2448","endLine":2,"endColumn":36},{"ruleId":"2445","severity":1,"message":"2461","line":27,"column":9,"nodeType":"2447","messageId":"2448","endLine":27,"endColumn":14},{"ruleId":"2451","severity":1,"message":"2452","line":196,"column":1,"nodeType":"2453","messageId":"2454","endLine":200,"endColumn":2},{"ruleId":"2478","severity":1,"message":"2479","line":89,"column":40,"nodeType":"2480","messageId":"2481","endLine":89,"endColumn":42},"no-native-reassign",["2778"],"no-negated-in-lhs",["2779"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Signin' is defined but never used.","'Start' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'location' is assigned a value but never used.","'yupResolver' is defined but never used.","'yup' is defined but never used.","'Swal' is defined but never used.","'Spinner' is defined but never used.","'GetOTP' is defined but never used.","'alert' is assigned a value but never used.","'otpMsg' is assigned a value but never used.","'setOtpMsg' is assigned a value but never used.","'store' is assigned a value but never used.","'setStore' is assigned a value but never used.","'setCountryName' is assigned a value but never used.","'goNumError' is assigned a value but never used.","'setgoNumError' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'noPassMatch' is assigned a value but never used.","'passMatch' is assigned a value but never used.","'CountryNumStyle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTime'. Either include it or remove the dependency array.","ArrayExpression",["2780"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'conPass' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'getQuery' and 'id'. Either include them or remove the dependency array.",["2781"],"'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'Alerts' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Table' is defined but never used.","'SettingsApplications' is defined but never used.","'errors' is assigned a value but never used.","'userNameId' is assigned a value but never used.","'specific' is assigned a value but never used.","'customer_declined_Pay' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["2782"],"'b' is assigned a value but never used.","'reset' is assigned a value but never used.","'amount_fixed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["2783"],"'useState' is defined but never used.","'useAlert' is defined but never used.","React Hook useEffect has missing dependencies: 'CountAllQuery', 'CountDeclined', 'CountInprogressAllocation', and 'CountInprogressProposal'. Either include them or remove the dependency array.",["2784"],"React Hook useEffect has missing dependencies: 'getAcceptedProposal', 'getAllProposal', 'getDeclinedProposal', and 'getInprogressProposal'. Either include them or remove the dependency array.",["2785"],"React Hook useEffect has a missing dependency: 'getQuery'. Either include it or remove the dependency array.",["2786"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'axios' is defined but never used.","'baseUrl' is defined but never used.","'Tooltip' is defined but never used.","React Hook useEffect has a missing dependency: 'getChatting'. Either include it or remove the dependency array.",["2787"],"React Hook useEffect has a missing dependency: 'getMessage'. Either include it or remove the dependency array.",["2788"],"'data' is assigned a value but never used.","'setData' is assigned a value but never used.",["2789"],"'setTime' is assigned a value but never used.","'disabled' is assigned a value but never used.","'setDisabled' is assigned a value but never used.","'message_type' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["2790"],"React Hook useEffect has missing dependencies: 'getAllAssignment', 'getCompletedAssignment', 'getCustomerDeclinedPayment', and 'getInprogressAssignment'. Either include them or remove the dependency array.",["2791"],"React Hook useEffect has missing dependencies: 'getAllPaid', 'getPaid', and 'getUnpaid'. Either include them or remove the dependency array.",["2792"],"'Row' is defined but never used.","'Col' is defined but never used.","'store2' is assigned a value but never used.","'a' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'history' is assigned a value but never used.",["2793"],"'useForm' is defined but never used.","'setStore2' is assigned a value but never used.","'Redirect' is defined but never used.","'tlkey' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQueryData'. Either include it or remove the dependency array.",["2794"],["2795"],"'expdeliverydate' is assigned a value but never used.","'expectedDeliveryDate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTeamLeader'. Either include it or remove the dependency array.",["2796"],["2797"],["2798"],["2799"],"'Reset' is defined but never used.",["2800"],"React Hook useEffect has a missing dependency: 'getAssignmentList'. Either include it or remove the dependency array.",["2801"],"React Hook useEffect has a missing dependency: 'getTaxProf'. Either include it or remove the dependency array.",["2802"],"'del' is assigned a value but never used.","'admin_declined_query' is assigned a value but never used.","'customer_declined_Query' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["2803"],["2804"],"'tpkey' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getQueryData' and 'getTaxProfession'. Either include them or remove the dependency array.",["2805"],["2806"],"'id' is assigned a value but never used.","'cust_id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPaymentStatus'. Either include it or remove the dependency array.",["2807"],"React Hook useEffect has a missing dependency: 'getFeedback'. Either include it or remove the dependency array.",["2808"],["2809"],"'error' is assigned a value but never used.","'setError' is assigned a value but never used.",["2810"],"Expected '!==' and instead saw '!='.",["2811"],["2812"],"React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.",["2813"],["2814"],["2815"],["2816"],"React Hook useEffect has a missing dependency: 'getReport'. Either include it or remove the dependency array.",["2817"],"React Hook useEffect has missing dependencies: 'getAdditionalQuery' and 'getQueryDetails'. Either include them or remove the dependency array.",["2818"],["2819"],["2820"],["2821"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Footer' is defined but never used.","'Layout' is defined but never used.","'TeamFilter' is defined but never used.","'OptGroup' is assigned a value but never used.","'count' is assigned a value but never used.","'SetbaseMode' is assigned a value but never used.","'SetTranscode' is assigned a value but never used.","'SetAttendeeMode' is assigned a value but never used.","'SetVideoProfile' is assigned a value but never used.",["2822"],"'setId' is assigned a value but never used.","'finalId' is assigned a value but never used.","'setFinalId' is assigned a value but never used.","'status' is assigned a value but never used.","'hide' is assigned a value but never used.","'setHide' is assigned a value but never used.",["2823"],"'assingmentStatus' is assigned a value but never used.",["2824"],"React Hook useEffect has a missing dependency: 'getComplete'. Either include it or remove the dependency array.",["2825"],"React Hook useEffect has a missing dependency: 'getIncomplete'. Either include it or remove the dependency array.",["2826"],"'useHistory' is defined but never used.","'AdditionalQuery' is defined but never used.","'AddAdditionalQuery' is defined but never used.","'DraftReports' is defined but never used.","'CommonServices' is defined but never used.","'chatHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalList'. Either include it or remove the dependency array.",["2827"],["2828"],["2829"],["2830"],"'MonthView' is defined but never used.","'DragDropProvider' is defined but never used.","'setCurrentDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAssignmentNo', 'getData', and 'getUsers'. Either include them or remove the dependency array.",["2831"],"no-redeclare","'msg' is already defined.","redeclared","'variable' is already defined.","'a' is assigned a value but never used.","no-use-before-define","'name' was used before it was defined.","usedBeforeDefined","'Badge' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'records' is assigned a value but never used.","'assignment' is assigned a value but never used.","'DownloadLink' is defined but never used.","'userId' is assigned a value but never used.","'classNames' is defined but never used.","'Schema' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["2832"],"'variable' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'date_of_delivery' is assigned a value but never used.","'cust_accept_date' is assigned a value but never used.","'timeTaken' is assigned a value but never used.","'amount' is assigned a value but never used.","'no_of_installment' is assigned a value but never used.","'amount_type' is assigned a value but never used.","'amount_hourly' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getNotification'. Either include it or remove the dependency array.",["2833"],"React Hook useEffect has a missing dependency: 'getInCompleteAssingment'. Either include it or remove the dependency array.",["2834"],"'useFieldArray' is defined but never used.","'Alert' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'userid'. Either include them or remove the dependency array.",["2835"],"'useParams' is defined but never used.",["2836"],["2837"],["2838"],"React Hook useEffect has a missing dependency: 'getPendingforAcceptance'. Either include it or remove the dependency array.",["2839"],"'Select' is defined but never used.","'handleSubmit' is assigned a value but never used.","'register' is assigned a value but never used.","'Option' is assigned a value but never used.","'selectedData' is assigned a value but never used.","'setSelectedData' is assigned a value but never used.","'values' is defined but never used.","React Hook useEffect has missing dependencies: 'getData' and 'getUsers'. Either include them or remove the dependency array.",["2840"],"'AdminFilter' is defined but never used.","'userid' is assigned a value but never used.","'assignmentCount' is assigned a value but never used.","'Button' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'totalAmount' is assigned a value but never used.",["2841"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'NavLink' is defined but never used.","'IntegratedEditing' is defined but never used.","'loading' is assigned a value but never used.","'owner' is assigned a value but never used.",["2842"],"'Label' is assigned a value but never used.","'FeedbackIcon' is defined but never used.","'proposalCount' is assigned a value but never used.","'reject' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProposalData'. Either include it or remove the dependency array.",["2843"],"'setRejected' is assigned a value but never used.",["2844"],["2845"],["2846"],"'Cookies' is defined but never used.","'useMemo' is defined but never used.","'queriesCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQueriesData'. Either include it or remove the dependency array.",["2847"],["2848"],["2849"],["2850"],["2851"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'custId' is assigned a value but never used.","'custname' is assigned a value but never used.","'setCustName' is assigned a value but never used.","'setAssignID' is assigned a value but never used.","'assingNo' is assigned a value but never used.","'setAssingNo' is assigned a value but never used.",["2852"],"'todaysDate' is assigned a value but never used.",["2853"],"'Tab' is defined but never used.","'Tabs' is defined but never used.","'TabList' is defined but never used.","'TabPanel' is defined but never used.",["2854"],["2855"],"'ReportUrl' is defined but never used.","'rejectedItem' is assigned a value but never used.","'rejectHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAssignmentData'. Either include it or remove the dependency array.",["2856"],"'handleJoin' is assigned a value but never used.","'PaymentModal' is defined but never used.","'RejectedModal' is defined but never used.","'PaymentIcon' is defined but never used.",["2857"],["2858"],"'baseMode' is assigned a value but never used.","'transcode' is assigned a value but never used.","'attendeeMode' is assigned a value but never used.","'videoProfile' is assigned a value but never used.",["2859"],["2860"],"'assignNo' is assigned a value but never used.","'setAssignNo' is assigned a value but never used.",["2861"],["2862"],"'paymentcount' is assigned a value but never used.","'Header' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"2863","fix":"2864"},{"desc":"2865","fix":"2866"},{"desc":"2867","fix":"2868"},{"desc":"2869","fix":"2870"},{"desc":"2871","fix":"2872"},{"desc":"2873","fix":"2874"},{"desc":"2875","fix":"2876"},{"desc":"2877","fix":"2878"},{"desc":"2879","fix":"2880"},{"desc":"2879","fix":"2881"},{"desc":"2882","fix":"2883"},{"desc":"2884","fix":"2885"},{"desc":"2886","fix":"2887"},{"desc":"2865","fix":"2888"},{"desc":"2889","fix":"2890"},{"desc":"2891","fix":"2892"},{"desc":"2893","fix":"2894"},{"desc":"2865","fix":"2895"},{"desc":"2879","fix":"2896"},{"desc":"2877","fix":"2897"},{"desc":"2898","fix":"2899"},{"desc":"2900","fix":"2901"},{"desc":"2902","fix":"2903"},{"desc":"2904","fix":"2905"},{"desc":"2865","fix":"2906"},{"desc":"2907","fix":"2908"},{"desc":"2891","fix":"2909"},{"desc":"2910","fix":"2911"},{"desc":"2912","fix":"2913"},{"desc":"2904","fix":"2914"},{"desc":"2875","fix":"2915"},{"desc":"2879","fix":"2916"},{"desc":"2900","fix":"2917"},{"desc":"2918","fix":"2919"},{"desc":"2920","fix":"2921"},{"desc":"2877","fix":"2922"},{"desc":"2904","fix":"2923"},{"desc":"2924","fix":"2925"},{"desc":"2926","fix":"2927"},{"desc":"2882","fix":"2928"},{"desc":"2865","fix":"2929"},{"desc":"2904","fix":"2930"},{"desc":"2900","fix":"2931"},{"desc":"2900","fix":"2932"},{"desc":"2900","fix":"2933"},{"desc":"2934","fix":"2935"},{"desc":"2936","fix":"2937"},{"desc":"2938","fix":"2939"},{"desc":"2938","fix":"2940"},{"desc":"2938","fix":"2941"},{"desc":"2938","fix":"2942"},{"desc":"2943","fix":"2944"},{"desc":"2945","fix":"2946"},{"desc":"2947","fix":"2948"},{"desc":"2949","fix":"2950"},{"desc":"2951","fix":"2952"},{"desc":"2949","fix":"2953"},{"desc":"2949","fix":"2954"},{"desc":"2949","fix":"2955"},{"desc":"2956","fix":"2957"},{"desc":"2958","fix":"2959"},{"desc":"2960","fix":"2961"},{"desc":"2943","fix":"2962"},{"desc":"2963","fix":"2964"},{"desc":"2963","fix":"2965"},{"desc":"2963","fix":"2966"},{"desc":"2963","fix":"2967"},{"desc":"2968","fix":"2969"},{"desc":"2968","fix":"2970"},{"desc":"2968","fix":"2971"},{"desc":"2968","fix":"2972"},{"desc":"2973","fix":"2974"},{"desc":"2875","fix":"2975"},{"desc":"2938","fix":"2976"},{"desc":"2904","fix":"2977"},{"desc":"2951","fix":"2978"},{"desc":"2979","fix":"2980"},{"desc":"2979","fix":"2981"},{"desc":"2979","fix":"2982"},{"desc":"2979","fix":"2983"},{"desc":"2910","fix":"2984"},{"desc":"2910","fix":"2985"},{"desc":"2910","fix":"2986"},"Update the dependencies array to be: [getTime, load]",{"range":"2987","text":"2988"},"Update the dependencies array to be: [assingNo, getQuery, id]",{"range":"2989","text":"2990"},"Update the dependencies array to be: [userId]",{"range":"2991","text":"2992"},"Update the dependencies array to be: [id]",{"range":"2993","text":"2994"},"Update the dependencies array to be: [CountAllQuery, CountDeclined, CountInprogressAllocation, CountInprogressProposal]",{"range":"2995","text":"2996"},"Update the dependencies array to be: [getAcceptedProposal, getAllProposal, getDeclinedProposal, getInprogressProposal]",{"range":"2997","text":"2998"},"Update the dependencies array to be: [getQuery]",{"range":"2999","text":"3000"},"Update the dependencies array to be: [getChatting, id]",{"range":"3001","text":"3002"},"Update the dependencies array to be: [getMessage]",{"range":"3003","text":"3004"},{"range":"3005","text":"3004"},"Update the dependencies array to be: [item, props]",{"range":"3006","text":"3007"},"Update the dependencies array to be: [getAllAssignment, getCompletedAssignment, getCustomerDeclinedPayment, getInprogressAssignment]",{"range":"3008","text":"3009"},"Update the dependencies array to be: [getAllPaid, getPaid, getUnpaid]",{"range":"3010","text":"3011"},{"range":"3012","text":"2990"},"Update the dependencies array to be: [getQueryData]",{"range":"3013","text":"3014"},"Update the dependencies array to be: [getQuery, queryNo]",{"range":"3015","text":"3016"},"Update the dependencies array to be: [getTeamLeader]",{"range":"3017","text":"3018"},{"range":"3019","text":"2990"},{"range":"3020","text":"3004"},{"range":"3021","text":"3002"},"Update the dependencies array to be: [getTeamLeader, id]",{"range":"3022","text":"3023"},"Update the dependencies array to be: [getAssignmentList]",{"range":"3024","text":"3025"},"Update the dependencies array to be: [getTaxProf]",{"range":"3026","text":"3027"},"Update the dependencies array to be: [userid]",{"range":"3028","text":"3029"},{"range":"3030","text":"2990"},"Update the dependencies array to be: [getQueryData, getTaxProfession]",{"range":"3031","text":"3032"},{"range":"3033","text":"3016"},"Update the dependencies array to be: [getPaymentStatus]",{"range":"3034","text":"3035"},"Update the dependencies array to be: [getFeedback]",{"range":"3036","text":"3037"},{"range":"3038","text":"3029"},{"range":"3039","text":"3000"},{"range":"3040","text":"3004"},{"range":"3041","text":"3025"},"Update the dependencies array to be: [assignNo, getDetails]",{"range":"3042","text":"3043"},"Update the dependencies array to be: [props]",{"range":"3044","text":"3045"},{"range":"3046","text":"3002"},{"range":"3047","text":"3029"},"Update the dependencies array to be: [getReport]",{"range":"3048","text":"3049"},"Update the dependencies array to be: [assingNo, getAdditionalQuery, getQueryDetails]",{"range":"3050","text":"3051"},{"range":"3052","text":"3007"},{"range":"3053","text":"2990"},{"range":"3054","text":"3029"},{"range":"3055","text":"3025"},{"range":"3056","text":"3025"},{"range":"3057","text":"3025"},"Update the dependencies array to be: [getComplete]",{"range":"3058","text":"3059"},"Update the dependencies array to be: [getIncomplete]",{"range":"3060","text":"3061"},"Update the dependencies array to be: [getProposalList]",{"range":"3062","text":"3063"},{"range":"3064","text":"3063"},{"range":"3065","text":"3063"},{"range":"3066","text":"3063"},"Update the dependencies array to be: [getAssignmentNo, getData, getUsers]",{"range":"3067","text":"3068"},"Update the dependencies array to be: [getData, report]",{"range":"3069","text":"3070"},"Update the dependencies array to be: [getNotification, qno]",{"range":"3071","text":"3072"},"Update the dependencies array to be: [getInCompleteAssingment]",{"range":"3073","text":"3074"},"Update the dependencies array to be: [id, userid]",{"range":"3075","text":"3076"},{"range":"3077","text":"3074"},{"range":"3078","text":"3074"},{"range":"3079","text":"3074"},"Update the dependencies array to be: [getPendingforAcceptance]",{"range":"3080","text":"3081"},"Update the dependencies array to be: [getData, getUsers]",{"range":"3082","text":"3083"},"Update the dependencies array to be: [report, userId]",{"range":"3084","text":"3085"},{"range":"3086","text":"3068"},"Update the dependencies array to be: [getProposalData]",{"range":"3087","text":"3088"},{"range":"3089","text":"3088"},{"range":"3090","text":"3088"},{"range":"3091","text":"3088"},"Update the dependencies array to be: [getQueriesData]",{"range":"3092","text":"3093"},{"range":"3094","text":"3093"},{"range":"3095","text":"3093"},{"range":"3096","text":"3093"},"Update the dependencies array to be: [getNotification, tokenKey]",{"range":"3097","text":"3098"},{"range":"3099","text":"3000"},{"range":"3100","text":"3063"},{"range":"3101","text":"3029"},{"range":"3102","text":"3076"},"Update the dependencies array to be: [getAssignmentData]",{"range":"3103","text":"3104"},{"range":"3105","text":"3104"},{"range":"3106","text":"3104"},{"range":"3107","text":"3104"},{"range":"3108","text":"3035"},{"range":"3109","text":"3035"},{"range":"3110","text":"3035"},[2824,2830],"[getTime, load]",[4607,4617],"[assingNo, getQuery, id]",[3889,3891],"[userId]",[2860,2862],"[id]",[1167,1169],"[CountAllQuery, CountDeclined, CountInprogressAllocation, CountInprogressProposal]",[1149,1151],"[getAcceptedProposal, getAllProposal, getDeclinedProposal, getInprogressProposal]",[1540,1542],"[getQuery]",[700,704],"[getChatting, id]",[743,745],"[getMessage]",[1156,1158],[1491,1497],"[item, props]",[1190,1192],"[getAllAssignment, getCompletedAssignment, getCustomerDeclinedPayment, getInprogressAssignment]",[839,841],"[getAllPaid, getPaid, getUnpaid]",[5282,5292],[2018,2020],"[getQueryData]",[2738,2747],"[getQuery, queryNo]",[3574,3576],"[getTeamLeader]",[1223,1233],[841,843],[711,715],[1248,1252],"[getTeamLeader, id]",[897,899],"[getAssignmentList]",[706,708],"[getTaxProf]",[5311,5313],"[userid]",[5108,5118],[2027,2029],"[getQueryData, getTaxProfession]",[2810,2819],[1550,1552],"[getPaymentStatus]",[671,673],"[getFeedback]",[3166,3168],[1513,1515],[1054,1056],[1008,1010],[1385,1395],"[assignNo, getDetails]",[1526,1528],"[props]",[708,712],[3311,3313],[655,657],"[getReport]",[916,926],"[assingNo, getAdditionalQuery, getQueryDetails]",[1613,1619],[4626,4636],[2339,2341],[1962,1964],[1452,1454],[1448,1450],[595,597],"[getComplete]",[603,605],"[getIncomplete]",[1024,1026],"[getProposalList]",[1022,1024],[1066,1068],[1119,1121],[1717,1719],"[getAssignmentNo, getData, getUsers]",[1144,1152],"[getData, report]",[436,441],"[getNotification, qno]",[696,698],"[getInCompleteAssingment]",[2475,2477],"[id, userid]",[690,692],[691,693],[676,678],[1140,1142],"[getPendingforAcceptance]",[1761,1763],"[getData, getUsers]",[1356,1364],"[report, userId]",[1622,1624],[1439,1441],"[getProposalData]",[1394,1396],[1121,1123],[1168,1170],[903,905],"[getQueriesData]",[1338,1340],[900,902],[1375,1377],[494,504],"[getNotification, tokenKey]",[1228,1230],[663,665],[1218,1220],[1355,1357],[2027,2029],"[getAssignmentData]",[1633,1635],[1699,1701],[2997,2999],[2004,2006],[1271,1273],[1266,1268]]